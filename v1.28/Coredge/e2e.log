  I0129 20:56:53.380390      23 e2e.go:117] Starting e2e run "49806411-f3fa-4688-a28f-4a30d2c0e24c" on Ginkgo node 1
  Jan 29 20:56:53.424: INFO: Enabling in-tree volume drivers
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1706561813 - will randomize all specs

Will run 380 of 7387 specs
------------------------------
[ReportBeforeSuite] 
test/e2e/e2e_test.go:153
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
test/e2e/e2e.go:77
  Jan 29 20:56:53.708: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  Jan 29 20:56:53.711: INFO: Waiting up to 30m0s for all (but 0) nodes to be schedulable
  Jan 29 20:56:53.765: INFO: Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  Jan 29 20:56:53.769: INFO: 3 / 3 pods ready in namespace 'kube-system' in daemonset 'kube-proxy' (0 seconds elapsed)
  Jan 29 20:56:53.769: INFO: e2e test version: v1.28.3
  Jan 29 20:56:53.771: INFO: kube-apiserver version: v1.28.3-ckp
  Jan 29 20:56:53.772: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  Jan 29 20:56:53.777: INFO: Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.070 seconds]
------------------------------
SS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance]
test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 01/29/24 20:56:54.327
  Jan 29 20:56:54.327: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename secrets @ 01/29/24 20:56:54.328
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 20:56:54.374
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 20:56:54.379
  Jan 29 20:56:54.424: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9186" for this suite. @ 01/29/24 20:56:54.429
• [0.110 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance]
test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 01/29/24 20:56:54.437
  Jan 29 20:56:54.437: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename watch @ 01/29/24 20:56:54.439
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 20:56:54.453
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 20:56:54.457
  STEP: creating a watch on configmaps with label A @ 01/29/24 20:56:54.462
  STEP: creating a watch on configmaps with label B @ 01/29/24 20:56:54.464
  STEP: creating a watch on configmaps with label A or B @ 01/29/24 20:56:54.466
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 01/29/24 20:56:54.468
  Jan 29 20:56:54.473: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9979  6f6717f7-466e-4038-83fd-9a03b81022c5 1136 0 2024-01-29 20:56:54 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-01-29 20:56:54 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Jan 29 20:56:54.474: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9979  6f6717f7-466e-4038-83fd-9a03b81022c5 1136 0 2024-01-29 20:56:54 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-01-29 20:56:54 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 01/29/24 20:56:54.474
  Jan 29 20:56:54.481: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9979  6f6717f7-466e-4038-83fd-9a03b81022c5 1137 0 2024-01-29 20:56:54 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-01-29 20:56:54 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jan 29 20:56:54.482: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9979  6f6717f7-466e-4038-83fd-9a03b81022c5 1137 0 2024-01-29 20:56:54 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-01-29 20:56:54 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 01/29/24 20:56:54.482
  Jan 29 20:56:54.490: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9979  6f6717f7-466e-4038-83fd-9a03b81022c5 1138 0 2024-01-29 20:56:54 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-01-29 20:56:54 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jan 29 20:56:54.490: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9979  6f6717f7-466e-4038-83fd-9a03b81022c5 1138 0 2024-01-29 20:56:54 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-01-29 20:56:54 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 01/29/24 20:56:54.49
  Jan 29 20:56:54.497: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9979  6f6717f7-466e-4038-83fd-9a03b81022c5 1139 0 2024-01-29 20:56:54 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-01-29 20:56:54 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jan 29 20:56:54.497: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9979  6f6717f7-466e-4038-83fd-9a03b81022c5 1139 0 2024-01-29 20:56:54 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-01-29 20:56:54 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 01/29/24 20:56:54.497
  Jan 29 20:56:54.505: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-9979  2a0c6ce1-af97-40dc-a49a-85e9b0f79cfe 1140 0 2024-01-29 20:56:54 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-01-29 20:56:54 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Jan 29 20:56:54.506: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-9979  2a0c6ce1-af97-40dc-a49a-85e9b0f79cfe 1140 0 2024-01-29 20:56:54 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-01-29 20:56:54 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 01/29/24 20:57:04.507
  Jan 29 20:57:04.518: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-9979  2a0c6ce1-af97-40dc-a49a-85e9b0f79cfe 1161 0 2024-01-29 20:56:54 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-01-29 20:56:54 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Jan 29 20:57:04.518: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-9979  2a0c6ce1-af97-40dc-a49a-85e9b0f79cfe 1161 0 2024-01-29 20:56:54 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-01-29 20:56:54 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Jan 29 20:57:14.520: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-9979" for this suite. @ 01/29/24 20:57:14.528
• [20.099 seconds]
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path  [Conformance]
test/e2e/kubectl/kubectl.go:1806
  STEP: Creating a kubernetes client @ 01/29/24 20:57:14.537
  Jan 29 20:57:14.537: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename kubectl @ 01/29/24 20:57:14.538
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 20:57:14.558
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 20:57:14.562
  STEP: Starting the proxy @ 01/29/24 20:57:14.567
  Jan 29 20:57:14.567: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=kubectl-3009 proxy --unix-socket=/tmp/kubectl-proxy-unix1217680529/test'
  STEP: retrieving proxy /api/ output @ 01/29/24 20:57:14.673
  Jan 29 20:57:14.675: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3009" for this suite. @ 01/29/24 20:57:14.68
• [0.150 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance]
test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 01/29/24 20:57:14.689
  Jan 29 20:57:14.689: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename subpath @ 01/29/24 20:57:14.69
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 20:57:14.705
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 20:57:14.709
  STEP: Setting up data @ 01/29/24 20:57:14.714
  STEP: Creating pod pod-subpath-test-configmap-9kwx @ 01/29/24 20:57:14.723
  STEP: Creating a pod to test atomic-volume-subpath @ 01/29/24 20:57:14.723
  STEP: Saw pod success @ 01/29/24 20:58:00.882
  Jan 29 20:58:00.886: INFO: Trying to get logs from node nodeb14 pod pod-subpath-test-configmap-9kwx container test-container-subpath-configmap-9kwx: <nil>
  STEP: delete the pod @ 01/29/24 20:58:00.92
  STEP: Deleting pod pod-subpath-test-configmap-9kwx @ 01/29/24 20:58:00.936
  Jan 29 20:58:00.936: INFO: Deleting pod "pod-subpath-test-configmap-9kwx" in namespace "subpath-329"
  Jan 29 20:58:00.939: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-329" for this suite. @ 01/29/24 20:58:00.944
• [46.263 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:309
  STEP: Creating a kubernetes client @ 01/29/24 20:58:00.953
  Jan 29 20:58:00.953: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename crd-publish-openapi @ 01/29/24 20:58:00.955
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 20:58:00.969
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 20:58:00.972
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 01/29/24 20:58:00.976
  Jan 29 20:58:00.978: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 01/29/24 20:58:06.972
  Jan 29 20:58:06.973: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  Jan 29 20:58:08.349: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  Jan 29 20:58:14.077: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4733" for this suite. @ 01/29/24 20:58:14.09
• [13.146 seconds]
------------------------------
SS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance]
test/e2e/apps/statefulset.go:703
  STEP: Creating a kubernetes client @ 01/29/24 20:58:14.099
  Jan 29 20:58:14.099: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename statefulset @ 01/29/24 20:58:14.101
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 20:58:14.113
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 20:58:14.117
  STEP: Creating service test in namespace statefulset-6789 @ 01/29/24 20:58:14.121
  STEP: Creating stateful set ss in namespace statefulset-6789 @ 01/29/24 20:58:14.126
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-6789 @ 01/29/24 20:58:14.135
  Jan 29 20:58:14.138: INFO: Found 0 stateful pods, waiting for 1
  Jan 29 20:58:24.145: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Pending - Ready=false
  Jan 29 20:58:34.144: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 01/29/24 20:58:34.144
  Jan 29 20:58:34.150: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=statefulset-6789 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jan 29 20:58:34.432: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jan 29 20:58:34.433: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jan 29 20:58:34.433: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jan 29 20:58:34.436: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  Jan 29 20:58:44.443: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Jan 29 20:58:44.443: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Jan 29 20:58:44.463: INFO: POD   NODE     PHASE    GRACE  CONDITIONS
  Jan 29 20:58:44.463: INFO: ss-0  nodeb14  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-01-29 20:58:14 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-01-29 20:58:34 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-01-29 20:58:34 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-01-29 20:58:14 +0000 UTC  }]
  Jan 29 20:58:44.463: INFO: 
  Jan 29 20:58:44.463: INFO: StatefulSet ss has not reached scale 3, at 1
  Jan 29 20:58:45.470: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.995938454s
  Jan 29 20:58:46.476: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.988690037s
  Jan 29 20:58:47.482: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.982930822s
  Jan 29 20:58:48.488: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.97674259s
  Jan 29 20:58:49.495: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.971260295s
  Jan 29 20:58:50.501: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.964122215s
  Jan 29 20:58:51.506: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.957718554s
  Jan 29 20:58:52.512: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.952574678s
  Jan 29 20:58:53.525: INFO: Verifying statefulset ss doesn't scale past 3 for another 946.501806ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-6789 @ 01/29/24 20:58:54.525
  Jan 29 20:58:54.530: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=statefulset-6789 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jan 29 20:58:54.772: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jan 29 20:58:54.772: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jan 29 20:58:54.772: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jan 29 20:58:54.773: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=statefulset-6789 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jan 29 20:58:54.976: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  Jan 29 20:58:54.976: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jan 29 20:58:54.976: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jan 29 20:58:54.976: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=statefulset-6789 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jan 29 20:58:55.227: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  Jan 29 20:58:55.227: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jan 29 20:58:55.227: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jan 29 20:58:55.235: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=false
  Jan 29 20:59:05.243: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Jan 29 20:59:05.243: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Jan 29 20:59:05.243: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 01/29/24 20:59:05.243
  Jan 29 20:59:05.248: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=statefulset-6789 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jan 29 20:59:05.481: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jan 29 20:59:05.481: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jan 29 20:59:05.481: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jan 29 20:59:05.481: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=statefulset-6789 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jan 29 20:59:05.705: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jan 29 20:59:05.705: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jan 29 20:59:05.705: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jan 29 20:59:05.705: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=statefulset-6789 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jan 29 20:59:05.959: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jan 29 20:59:05.959: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jan 29 20:59:05.960: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jan 29 20:59:05.960: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Jan 29 20:59:05.964: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 1
  Jan 29 20:59:15.977: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Jan 29 20:59:15.977: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  Jan 29 20:59:15.977: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  Jan 29 20:59:15.992: INFO: POD   NODE     PHASE    GRACE  CONDITIONS
  Jan 29 20:59:15.992: INFO: ss-0  nodeb14  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-01-29 20:58:14 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-01-29 20:59:05 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-01-29 20:59:05 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-01-29 20:58:14 +0000 UTC  }]
  Jan 29 20:59:15.992: INFO: ss-1  nodeb14  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-01-29 20:58:44 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-01-29 20:59:05 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-01-29 20:59:05 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-01-29 20:58:44 +0000 UTC  }]
  Jan 29 20:59:15.992: INFO: ss-2  nodec03  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-01-29 20:58:44 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-01-29 20:59:06 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-01-29 20:59:06 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-01-29 20:58:44 +0000 UTC  }]
  Jan 29 20:59:15.992: INFO: 
  Jan 29 20:59:15.992: INFO: StatefulSet ss has not reached scale 0, at 3
  Jan 29 20:59:16.997: INFO: POD   NODE     PHASE      GRACE  CONDITIONS
  Jan 29 20:59:16.997: INFO: ss-2  nodec03  Succeeded  30s    [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-01-29 20:58:44 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-01-29 20:59:06 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-01-29 20:59:06 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-01-29 20:58:44 +0000 UTC  }]
  Jan 29 20:59:16.997: INFO: 
  Jan 29 20:59:16.997: INFO: StatefulSet ss has not reached scale 0, at 1
  Jan 29 20:59:18.002: INFO: Verifying statefulset ss doesn't scale past 0 for another 7.990907398s
  Jan 29 20:59:19.006: INFO: Verifying statefulset ss doesn't scale past 0 for another 6.986303861s
  Jan 29 20:59:20.011: INFO: Verifying statefulset ss doesn't scale past 0 for another 5.981571296s
  Jan 29 20:59:21.016: INFO: Verifying statefulset ss doesn't scale past 0 for another 4.976986657s
  Jan 29 20:59:22.021: INFO: Verifying statefulset ss doesn't scale past 0 for another 3.972089406s
  Jan 29 20:59:23.025: INFO: Verifying statefulset ss doesn't scale past 0 for another 2.967138719s
  Jan 29 20:59:24.032: INFO: Verifying statefulset ss doesn't scale past 0 for another 1.961513327s
  Jan 29 20:59:25.037: INFO: Verifying statefulset ss doesn't scale past 0 for another 955.828958ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-6789 @ 01/29/24 20:59:26.037
  Jan 29 20:59:26.044: INFO: Scaling statefulset ss to 0
  Jan 29 20:59:26.059: INFO: Waiting for statefulset status.replicas updated to 0
  Jan 29 20:59:26.062: INFO: Deleting all statefulset in ns statefulset-6789
  Jan 29 20:59:26.066: INFO: Scaling statefulset ss to 0
  Jan 29 20:59:26.080: INFO: Waiting for statefulset status.replicas updated to 0
  Jan 29 20:59:26.084: INFO: Deleting statefulset ss
  Jan 29 20:59:26.098: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6789" for this suite. @ 01/29/24 20:59:26.104
• [72.011 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:236
  STEP: Creating a kubernetes client @ 01/29/24 20:59:26.113
  Jan 29 20:59:26.113: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename downward-api @ 01/29/24 20:59:26.115
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 20:59:26.13
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 20:59:26.134
  STEP: Creating a pod to test downward API volume plugin @ 01/29/24 20:59:26.139
  STEP: Saw pod success @ 01/29/24 20:59:30.167
  Jan 29 20:59:30.170: INFO: Trying to get logs from node nodeb14 pod downwardapi-volume-fc62f475-4eda-4ae8-838a-034e618c38dd container client-container: <nil>
  STEP: delete the pod @ 01/29/24 20:59:30.18
  Jan 29 20:59:30.199: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9769" for this suite. @ 01/29/24 20:59:30.203
• [4.095 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance]
test/e2e/apimachinery/webhook.go:315
  STEP: Creating a kubernetes client @ 01/29/24 20:59:30.209
  Jan 29 20:59:30.209: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename webhook @ 01/29/24 20:59:30.21
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 20:59:30.222
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 20:59:30.226
  STEP: Setting up server cert @ 01/29/24 20:59:30.25
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/29/24 20:59:30.768
  STEP: Deploying the webhook pod @ 01/29/24 20:59:30.778
  STEP: Wait for the deployment to be ready @ 01/29/24 20:59:30.807
  Jan 29 20:59:30.820: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 01/29/24 20:59:32.834
  STEP: Verifying the service has paired with the endpoint @ 01/29/24 20:59:32.853
  Jan 29 20:59:33.854: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Jan 29 20:59:33.863: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-836-crds.webhook.example.com via the AdmissionRegistration API @ 01/29/24 20:59:34.378
  STEP: Creating a custom resource while v1 is storage version @ 01/29/24 20:59:34.41
  STEP: Patching Custom Resource Definition to set v2 as storage @ 01/29/24 20:59:36.478
  STEP: Patching the custom resource while v2 is storage version @ 01/29/24 20:59:36.505
  Jan 29 20:59:36.558: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3161" for this suite. @ 01/29/24 20:59:37.123
  STEP: Destroying namespace "webhook-markers-9912" for this suite. @ 01/29/24 20:59:37.131
• [6.929 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance]
test/e2e/apimachinery/namespace.go:252
  STEP: Creating a kubernetes client @ 01/29/24 20:59:37.138
  Jan 29 20:59:37.138: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename namespaces @ 01/29/24 20:59:37.14
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 20:59:37.154
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 20:59:37.159
  STEP: Creating a test namespace @ 01/29/24 20:59:37.163
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 20:59:37.175
  STEP: Creating a service in the namespace @ 01/29/24 20:59:37.18
  STEP: Deleting the namespace @ 01/29/24 20:59:37.195
  STEP: Waiting for the namespace to be removed. @ 01/29/24 20:59:37.202
  STEP: Recreating the namespace @ 01/29/24 20:59:43.208
  STEP: Verifying there is no service in the namespace @ 01/29/24 20:59:43.223
  Jan 29 20:59:43.227: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-7320" for this suite. @ 01/29/24 20:59:43.234
  STEP: Destroying namespace "nsdeletetest-752" for this suite. @ 01/29/24 20:59:43.24
  Jan 29 20:59:43.243: INFO: Namespace nsdeletetest-752 was already deleted
  STEP: Destroying namespace "nsdeletetest-844" for this suite. @ 01/29/24 20:59:43.243
• [6.112 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance]
test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 01/29/24 20:59:43.252
  Jan 29 20:59:43.252: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename pods @ 01/29/24 20:59:43.254
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 20:59:43.267
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 20:59:43.271
  STEP: Create set of pods @ 01/29/24 20:59:43.276
  Jan 29 20:59:43.286: INFO: created test-pod-1
  Jan 29 20:59:43.292: INFO: created test-pod-2
  Jan 29 20:59:43.302: INFO: created test-pod-3
  STEP: waiting for all 3 pods to be running @ 01/29/24 20:59:43.302
  STEP: waiting for all pods to be deleted @ 01/29/24 20:59:45.339
  Jan 29 20:59:45.346: INFO: Pod quantity 3 is different from expected quantity 0
  Jan 29 20:59:46.352: INFO: Pod quantity 3 is different from expected quantity 0
  Jan 29 20:59:47.354: INFO: Pod quantity 3 is different from expected quantity 0
  Jan 29 20:59:48.350: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-957" for this suite. @ 01/29/24 20:59:48.355
• [5.107 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:527
  STEP: Creating a kubernetes client @ 01/29/24 20:59:48.361
  Jan 29 20:59:48.361: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename container-probe @ 01/29/24 20:59:48.362
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 20:59:48.376
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 20:59:48.379
  STEP: Creating pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601 @ 01/29/24 20:59:48.384
  STEP: checking the pod's current state and verifying that restartCount is present @ 01/29/24 20:59:50.402
  Jan 29 20:59:50.406: INFO: Initial restart count of pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 is 0
  Jan 29 20:59:50.409: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 20:59:52.416: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 20:59:54.421: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 20:59:56.427: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 20:59:58.432: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:00:00.438: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:00:02.444: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:00:04.450: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:00:06.456: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:00:08.463: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:00:10.469: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:00:12.478: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:00:14.485: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:00:16.491: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:00:18.497: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:00:20.503: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:00:22.509: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:00:24.516: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:00:26.522: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:00:28.528: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:00:30.534: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:00:32.539: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:00:34.545: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:00:36.551: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:00:38.558: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:00:40.564: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:00:42.570: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:00:44.576: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:00:46.582: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:00:48.587: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:00:50.595: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:00:52.602: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:00:54.607: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:00:56.613: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:00:58.619: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:01:00.624: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:01:02.630: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:01:04.635: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:01:06.641: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:01:08.648: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:01:10.654: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:01:12.666: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:01:14.671: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:01:16.677: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:01:18.684: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:01:20.692: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:01:22.698: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:01:24.702: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:01:26.708: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:01:28.715: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:01:30.722: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:01:32.727: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:01:34.735: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:01:36.741: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:01:38.746: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:01:40.752: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:01:42.758: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:01:44.765: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:01:46.771: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:01:48.779: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:01:50.785: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:01:52.792: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:01:54.797: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:01:56.802: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:01:58.807: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:02:00.813: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:02:02.818: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:02:04.823: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:02:06.829: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:02:08.836: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:02:10.842: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:02:12.849: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:02:14.855: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:02:16.862: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:02:18.869: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:02:20.875: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:02:22.881: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:02:24.887: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:02:26.892: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:02:28.898: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:02:30.904: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:02:32.910: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:02:34.914: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:02:36.921: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:02:38.928: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:02:40.934: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:02:42.940: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:02:44.946: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:02:46.953: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:02:48.959: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:02:50.965: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:02:52.972: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:02:54.977: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:02:56.984: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:02:58.992: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:03:00.998: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:03:03.004: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:03:05.009: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:03:07.015: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:03:09.022: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:03:11.028: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:03:13.038: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:03:15.045: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:03:17.051: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:03:19.057: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:03:21.063: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:03:23.069: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:03:25.076: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:03:27.083: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:03:29.089: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:03:31.095: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:03:33.102: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:03:35.108: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:03:37.114: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:03:39.119: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:03:41.124: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:03:43.130: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:03:45.135: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:03:47.141: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:03:49.148: INFO: Get pod test-grpc-a8749793-7d8e-4272-a72f-03fff8b91f75 in namespace container-probe-2601
  Jan 29 21:03:51.150: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 01/29/24 21:03:51.156
  STEP: Destroying namespace "container-probe-2601" for this suite. @ 01/29/24 21:03:51.166
• [242.813 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:85
  STEP: Creating a kubernetes client @ 01/29/24 21:03:51.174
  Jan 29 21:03:51.174: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename projected @ 01/29/24 21:03:51.176
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:03:51.193
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:03:51.198
  STEP: Creating a pod to test downward API volume plugin @ 01/29/24 21:03:51.202
  STEP: Saw pod success @ 01/29/24 21:03:55.224
  Jan 29 21:03:55.228: INFO: Trying to get logs from node nodeb14 pod downwardapi-volume-b7860590-cb32-4b24-ac88-ed8045160d74 container client-container: <nil>
  STEP: delete the pod @ 01/29/24 21:03:55.256
  Jan 29 21:03:55.272: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6449" for this suite. @ 01/29/24 21:03:55.276
• [4.107 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance]
test/e2e/instrumentation/core_events.go:175
  STEP: Creating a kubernetes client @ 01/29/24 21:03:55.281
  Jan 29 21:03:55.281: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename events @ 01/29/24 21:03:55.283
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:03:55.294
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:03:55.298
  STEP: Create set of events @ 01/29/24 21:03:55.302
  Jan 29 21:03:55.306: INFO: created test-event-1
  Jan 29 21:03:55.310: INFO: created test-event-2
  Jan 29 21:03:55.314: INFO: created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 01/29/24 21:03:55.314
  STEP: delete collection of events @ 01/29/24 21:03:55.318
  Jan 29 21:03:55.318: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 01/29/24 21:03:55.336
  Jan 29 21:03:55.336: INFO: requesting list of events to confirm quantity
  Jan 29 21:03:55.339: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-7051" for this suite. @ 01/29/24 21:03:55.344
• [0.068 seconds]
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance]
test/e2e/auth/service_accounts.go:275
  STEP: Creating a kubernetes client @ 01/29/24 21:03:55.35
  Jan 29 21:03:55.350: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename svcaccounts @ 01/29/24 21:03:55.353
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:03:55.367
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:03:55.371
  STEP: Creating a pod to test service account token:  @ 01/29/24 21:03:55.376
  STEP: Saw pod success @ 01/29/24 21:03:59.401
  Jan 29 21:03:59.403: INFO: Trying to get logs from node nodeb14 pod test-pod-fc2c8466-bd70-4738-896c-64e03c7dc5a7 container agnhost-container: <nil>
  STEP: delete the pod @ 01/29/24 21:03:59.412
  Jan 29 21:03:59.429: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-113" for this suite. @ 01/29/24 21:03:59.436
• [4.091 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs  [Conformance]
test/e2e/kubectl/logs.go:114
  STEP: Creating a kubernetes client @ 01/29/24 21:03:59.442
  Jan 29 21:03:59.442: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename kubectl-logs @ 01/29/24 21:03:59.444
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:03:59.457
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:03:59.461
  STEP: creating an pod @ 01/29/24 21:03:59.465
  Jan 29 21:03:59.466: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=kubectl-logs-1362 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.45 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  Jan 29 21:03:59.576: INFO: stderr: ""
  Jan 29 21:03:59.576: INFO: stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 01/29/24 21:03:59.576
  Jan 29 21:03:59.576: INFO: Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  Jan 29 21:04:01.585: INFO: Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 01/29/24 21:04:01.585
  Jan 29 21:04:01.585: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=kubectl-logs-1362 logs logs-generator logs-generator'
  Jan 29 21:04:01.704: INFO: stderr: ""
  Jan 29 21:04:01.705: INFO: stdout: "I0129 21:04:00.255003       1 logs_generator.go:76] 0 POST /api/v1/namespaces/default/pods/zs8l 464\nI0129 21:04:00.455356       1 logs_generator.go:76] 1 GET /api/v1/namespaces/default/pods/sz5 436\nI0129 21:04:00.656151       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/kube-system/pods/fqc 385\nI0129 21:04:00.855716       1 logs_generator.go:76] 3 PUT /api/v1/namespaces/default/pods/fgp 282\nI0129 21:04:01.055180       1 logs_generator.go:76] 4 PUT /api/v1/namespaces/ns/pods/rfj 381\nI0129 21:04:01.255786       1 logs_generator.go:76] 5 PUT /api/v1/namespaces/ns/pods/kqn 211\nI0129 21:04:01.455230       1 logs_generator.go:76] 6 POST /api/v1/namespaces/kube-system/pods/nc7 535\nI0129 21:04:01.655761       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/ns/pods/bp7n 241\n"
  STEP: limiting log lines @ 01/29/24 21:04:01.705
  Jan 29 21:04:01.705: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=kubectl-logs-1362 logs logs-generator logs-generator --tail=1'
  Jan 29 21:04:01.817: INFO: stderr: ""
  Jan 29 21:04:01.817: INFO: stdout: "I0129 21:04:01.655761       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/ns/pods/bp7n 241\n"
  Jan 29 21:04:01.817: INFO: got output "I0129 21:04:01.655761       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/ns/pods/bp7n 241\n"
  STEP: limiting log bytes @ 01/29/24 21:04:01.817
  Jan 29 21:04:01.818: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=kubectl-logs-1362 logs logs-generator logs-generator --limit-bytes=1'
  Jan 29 21:04:01.924: INFO: stderr: ""
  Jan 29 21:04:01.924: INFO: stdout: "I"
  Jan 29 21:04:01.924: INFO: got output "I"
  STEP: exposing timestamps @ 01/29/24 21:04:01.924
  Jan 29 21:04:01.924: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=kubectl-logs-1362 logs logs-generator logs-generator --tail=1 --timestamps'
  Jan 29 21:04:02.038: INFO: stderr: ""
  Jan 29 21:04:02.038: INFO: stdout: "2024-01-29T21:04:01.855300351Z I0129 21:04:01.855121       1 logs_generator.go:76] 8 GET /api/v1/namespaces/kube-system/pods/5x5 447\n"
  Jan 29 21:04:02.038: INFO: got output "2024-01-29T21:04:01.855300351Z I0129 21:04:01.855121       1 logs_generator.go:76] 8 GET /api/v1/namespaces/kube-system/pods/5x5 447\n"
  STEP: restricting to a time range @ 01/29/24 21:04:02.038
  Jan 29 21:04:04.540: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=kubectl-logs-1362 logs logs-generator logs-generator --since=1s'
  Jan 29 21:04:04.661: INFO: stderr: ""
  Jan 29 21:04:04.661: INFO: stdout: "I0129 21:04:03.655882       1 logs_generator.go:76] 17 POST /api/v1/namespaces/default/pods/x874 516\nI0129 21:04:03.855266       1 logs_generator.go:76] 18 GET /api/v1/namespaces/default/pods/m7rb 534\nI0129 21:04:04.055871       1 logs_generator.go:76] 19 POST /api/v1/namespaces/default/pods/f8p 227\nI0129 21:04:04.255316       1 logs_generator.go:76] 20 POST /api/v1/namespaces/kube-system/pods/spwm 275\nI0129 21:04:04.455912       1 logs_generator.go:76] 21 POST /api/v1/namespaces/kube-system/pods/r4t2 385\nI0129 21:04:04.655302       1 logs_generator.go:76] 22 POST /api/v1/namespaces/kube-system/pods/jj8n 260\n"
  Jan 29 21:04:04.661: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=kubectl-logs-1362 logs logs-generator logs-generator --since=24h'
  Jan 29 21:04:04.772: INFO: stderr: ""
  Jan 29 21:04:04.772: INFO: stdout: "I0129 21:04:00.255003       1 logs_generator.go:76] 0 POST /api/v1/namespaces/default/pods/zs8l 464\nI0129 21:04:00.455356       1 logs_generator.go:76] 1 GET /api/v1/namespaces/default/pods/sz5 436\nI0129 21:04:00.656151       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/kube-system/pods/fqc 385\nI0129 21:04:00.855716       1 logs_generator.go:76] 3 PUT /api/v1/namespaces/default/pods/fgp 282\nI0129 21:04:01.055180       1 logs_generator.go:76] 4 PUT /api/v1/namespaces/ns/pods/rfj 381\nI0129 21:04:01.255786       1 logs_generator.go:76] 5 PUT /api/v1/namespaces/ns/pods/kqn 211\nI0129 21:04:01.455230       1 logs_generator.go:76] 6 POST /api/v1/namespaces/kube-system/pods/nc7 535\nI0129 21:04:01.655761       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/ns/pods/bp7n 241\nI0129 21:04:01.855121       1 logs_generator.go:76] 8 GET /api/v1/namespaces/kube-system/pods/5x5 447\nI0129 21:04:02.055745       1 logs_generator.go:76] 9 GET /api/v1/namespaces/default/pods/gpdn 243\nI0129 21:04:02.255139       1 logs_generator.go:76] 10 GET /api/v1/namespaces/ns/pods/xdtd 559\nI0129 21:04:02.455734       1 logs_generator.go:76] 11 POST /api/v1/namespaces/default/pods/s8j 237\nI0129 21:04:02.655179       1 logs_generator.go:76] 12 PUT /api/v1/namespaces/ns/pods/w59 215\nI0129 21:04:02.855794       1 logs_generator.go:76] 13 PUT /api/v1/namespaces/default/pods/llff 251\nI0129 21:04:03.055232       1 logs_generator.go:76] 14 POST /api/v1/namespaces/default/pods/c7wk 238\nI0129 21:04:03.255860       1 logs_generator.go:76] 15 PUT /api/v1/namespaces/kube-system/pods/t8r2 381\nI0129 21:04:03.455284       1 logs_generator.go:76] 16 GET /api/v1/namespaces/default/pods/lst 391\nI0129 21:04:03.655882       1 logs_generator.go:76] 17 POST /api/v1/namespaces/default/pods/x874 516\nI0129 21:04:03.855266       1 logs_generator.go:76] 18 GET /api/v1/namespaces/default/pods/m7rb 534\nI0129 21:04:04.055871       1 logs_generator.go:76] 19 POST /api/v1/namespaces/default/pods/f8p 227\nI0129 21:04:04.255316       1 logs_generator.go:76] 20 POST /api/v1/namespaces/kube-system/pods/spwm 275\nI0129 21:04:04.455912       1 logs_generator.go:76] 21 POST /api/v1/namespaces/kube-system/pods/r4t2 385\nI0129 21:04:04.655302       1 logs_generator.go:76] 22 POST /api/v1/namespaces/kube-system/pods/jj8n 260\n"
  Jan 29 21:04:04.772: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=kubectl-logs-1362 delete pod logs-generator'
  Jan 29 21:04:05.949: INFO: stderr: ""
  Jan 29 21:04:05.949: INFO: stdout: "pod \"logs-generator\" deleted\n"
  Jan 29 21:04:05.949: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-1362" for this suite. @ 01/29/24 21:04:05.955
• [6.518 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 01/29/24 21:04:05.961
  Jan 29 21:04:05.961: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename secrets @ 01/29/24 21:04:05.963
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:04:05.977
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:04:05.982
  STEP: Creating secret with name secret-test-b8889aad-fc3c-4ec7-9c16-0cdb917ba759 @ 01/29/24 21:04:05.987
  STEP: Creating a pod to test consume secrets @ 01/29/24 21:04:05.992
  STEP: Saw pod success @ 01/29/24 21:04:10.021
  Jan 29 21:04:10.024: INFO: Trying to get logs from node nodeb14 pod pod-secrets-8994805d-d477-483b-9984-515c358817bb container secret-volume-test: <nil>
  STEP: delete the pod @ 01/29/24 21:04:10.033
  Jan 29 21:04:10.047: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7648" for this suite. @ 01/29/24 21:04:10.053
• [4.099 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] RuntimeClass  should support RuntimeClasses API operations [Conformance]
test/e2e/common/node/runtimeclass.go:189
  STEP: Creating a kubernetes client @ 01/29/24 21:04:10.061
  Jan 29 21:04:10.061: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename runtimeclass @ 01/29/24 21:04:10.064
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:04:10.077
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:04:10.081
  STEP: getting /apis @ 01/29/24 21:04:10.086
  STEP: getting /apis/node.k8s.io @ 01/29/24 21:04:10.093
  STEP: getting /apis/node.k8s.io/v1 @ 01/29/24 21:04:10.095
  STEP: creating @ 01/29/24 21:04:10.097
  STEP: watching @ 01/29/24 21:04:10.113
  Jan 29 21:04:10.113: INFO: starting watch
  STEP: getting @ 01/29/24 21:04:10.12
  STEP: listing @ 01/29/24 21:04:10.123
  STEP: patching @ 01/29/24 21:04:10.126
  STEP: updating @ 01/29/24 21:04:10.136
  Jan 29 21:04:10.140: INFO: waiting for watch events with expected annotations
  STEP: deleting @ 01/29/24 21:04:10.141
  STEP: deleting a collection @ 01/29/24 21:04:10.15
  Jan 29 21:04:10.167: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-9411" for this suite. @ 01/29/24 21:04:10.172
• [0.117 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance]
test/e2e/apps/job.go:430
  STEP: Creating a kubernetes client @ 01/29/24 21:04:10.179
  Jan 29 21:04:10.179: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename job @ 01/29/24 21:04:10.181
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:04:10.194
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:04:10.198
  STEP: Creating a job @ 01/29/24 21:04:10.202
  STEP: Ensuring job reaches completions @ 01/29/24 21:04:10.208
  Jan 29 21:04:20.216: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9474" for this suite. @ 01/29/24 21:04:20.222
• [10.051 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance]
test/e2e/common/node/configmap.go:93
  STEP: Creating a kubernetes client @ 01/29/24 21:04:20.231
  Jan 29 21:04:20.231: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename configmap @ 01/29/24 21:04:20.233
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:04:20.247
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:04:20.252
  STEP: Creating configMap configmap-7619/configmap-test-79dbced5-be56-4437-a6e2-69cd615aaaaf @ 01/29/24 21:04:20.257
  STEP: Creating a pod to test consume configMaps @ 01/29/24 21:04:20.262
  STEP: Saw pod success @ 01/29/24 21:04:24.287
  Jan 29 21:04:24.296: INFO: Trying to get logs from node nodeb14 pod pod-configmaps-4fbb875f-160d-400a-8981-a3646a0929e2 container env-test: <nil>
  STEP: delete the pod @ 01/29/24 21:04:24.306
  Jan 29 21:04:24.322: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7619" for this suite. @ 01/29/24 21:04:24.327
• [4.107 seconds]
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance]
test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 01/29/24 21:04:24.338
  Jan 29 21:04:24.338: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename cronjob @ 01/29/24 21:04:24.34
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:04:24.353
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:04:24.358
  STEP: Creating a cronjob @ 01/29/24 21:04:24.362
  STEP: Ensuring more than one job is running at a time @ 01/29/24 21:04:24.37
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 01/29/24 21:06:00.377
  STEP: Removing cronjob @ 01/29/24 21:06:00.381
  Jan 29 21:06:00.387: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-9355" for this suite. @ 01/29/24 21:06:00.392
• [96.062 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance]
test/e2e/network/endpointslice.go:68
  STEP: Creating a kubernetes client @ 01/29/24 21:06:00.401
  Jan 29 21:06:00.401: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename endpointslice @ 01/29/24 21:06:00.403
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:06:00.415
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:06:00.42
  Jan 29 21:06:00.436: INFO: Endpoints addresses: [192.168.100.108] , ports: [6443]
  Jan 29 21:06:00.436: INFO: EndpointSlices addresses: [192.168.100.108] , ports: [6443]
  Jan 29 21:06:00.436: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-3467" for this suite. @ 01/29/24 21:06:00.441
• [0.047 seconds]
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image  [Conformance]
test/e2e/kubectl/kubectl.go:1741
  STEP: Creating a kubernetes client @ 01/29/24 21:06:00.449
  Jan 29 21:06:00.449: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename kubectl @ 01/29/24 21:06:00.45
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:06:00.461
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:06:00.464
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 01/29/24 21:06:00.468
  Jan 29 21:06:00.468: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=kubectl-6755 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  Jan 29 21:06:00.578: INFO: stderr: ""
  Jan 29 21:06:00.579: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 01/29/24 21:06:00.579
  STEP: verifying the pod e2e-test-httpd-pod was created @ 01/29/24 21:06:05.632
  Jan 29 21:06:05.632: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=kubectl-6755 get pod e2e-test-httpd-pod -o json'
  Jan 29 21:06:05.735: INFO: stderr: ""
  Jan 29 21:06:05.735: INFO: stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2024-01-29T21:06:00Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-6755\",\n        \"resourceVersion\": \"2803\",\n        \"uid\": \"6a9bfa84-6657-4a46-ad58-4a398a182e49\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-zdd6c\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"nodeb14\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-zdd6c\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-01-29T21:06:00Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-01-29T21:06:01Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-01-29T21:06:01Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-01-29T21:06:00Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://76ae034e94761227971b3a5d8568406e51dc4838e3626a2dc05af6cb6ed59e18\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2024-01-29T21:06:01Z\"\n                    }\n                }\n            }\n        ],\n        \"hostIP\": \"192.168.100.114\",\n        \"phase\": \"Running\",\n        \"podIP\": \"10.244.2.24\",\n        \"podIPs\": [\n            {\n                \"ip\": \"10.244.2.24\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2024-01-29T21:06:00Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 01/29/24 21:06:05.735
  Jan 29 21:06:05.735: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=kubectl-6755 replace -f -'
  Jan 29 21:06:06.384: INFO: stderr: ""
  Jan 29 21:06:06.384: INFO: stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.29-4 @ 01/29/24 21:06:06.384
  Jan 29 21:06:06.387: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=kubectl-6755 delete pods e2e-test-httpd-pod'
  Jan 29 21:06:08.466: INFO: stderr: ""
  Jan 29 21:06:08.467: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Jan 29 21:06:08.467: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6755" for this suite. @ 01/29/24 21:06:08.474
• [8.035 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance]
test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 01/29/24 21:06:08.486
  Jan 29 21:06:08.486: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename csiinlinevolumes @ 01/29/24 21:06:08.487
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:06:08.5
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:06:08.508
  STEP: creating @ 01/29/24 21:06:08.514
  STEP: getting @ 01/29/24 21:06:08.531
  STEP: listing in namespace @ 01/29/24 21:06:08.534
  STEP: patching @ 01/29/24 21:06:08.537
  STEP: deleting @ 01/29/24 21:06:08.546
  Jan 29 21:06:08.554: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-5260" for this suite. @ 01/29/24 21:06:08.558
• [0.078 seconds]
------------------------------
SS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:124
  STEP: Creating a kubernetes client @ 01/29/24 21:06:08.564
  Jan 29 21:06:08.564: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename configmap @ 01/29/24 21:06:08.566
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:06:08.577
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:06:08.581
  STEP: Creating configMap with name configmap-test-upd-11cfa2cf-96e2-405b-b826-1f3feedc0f94 @ 01/29/24 21:06:08.59
  STEP: Creating the pod @ 01/29/24 21:06:08.595
  STEP: Updating configmap configmap-test-upd-11cfa2cf-96e2-405b-b826-1f3feedc0f94 @ 01/29/24 21:06:10.644
  STEP: waiting to observe update in volume @ 01/29/24 21:06:10.65
  Jan 29 21:07:41.258: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4067" for this suite. @ 01/29/24 21:07:41.264
• [92.707 seconds]
------------------------------
SSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance]
test/e2e/apps/replica_set.go:143
  STEP: Creating a kubernetes client @ 01/29/24 21:07:41.272
  Jan 29 21:07:41.272: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename replicaset @ 01/29/24 21:07:41.274
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:07:41.288
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:07:41.291
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 01/29/24 21:07:41.295
  Jan 29 21:07:41.305: INFO: Pod name sample-pod: Found 0 pods out of 1
  Jan 29 21:07:46.311: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 01/29/24 21:07:46.311
  STEP: getting scale subresource @ 01/29/24 21:07:46.311
  STEP: updating a scale subresource @ 01/29/24 21:07:46.318
  STEP: verifying the replicaset Spec.Replicas was modified @ 01/29/24 21:07:46.324
  STEP: Patch a scale subresource @ 01/29/24 21:07:46.327
  Jan 29 21:07:46.346: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-5167" for this suite. @ 01/29/24 21:07:46.351
• [5.086 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance]
test/e2e/apimachinery/crd_conversion_webhook.go:176
  STEP: Creating a kubernetes client @ 01/29/24 21:07:46.362
  Jan 29 21:07:46.363: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename crd-webhook @ 01/29/24 21:07:46.365
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:07:46.379
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:07:46.383
  STEP: Setting up server cert @ 01/29/24 21:07:46.387
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 01/29/24 21:07:46.832
  STEP: Deploying the custom resource conversion webhook pod @ 01/29/24 21:07:46.843
  STEP: Wait for the deployment to be ready @ 01/29/24 21:07:46.856
  Jan 29 21:07:46.861: INFO: new replicaset for deployment "sample-crd-conversion-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 01/29/24 21:07:48.877
  STEP: Verifying the service has paired with the endpoint @ 01/29/24 21:07:48.894
  Jan 29 21:07:49.895: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Jan 29 21:07:49.905: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Creating a v1 custom resource @ 01/29/24 21:07:52.51
  STEP: Create a v2 custom resource @ 01/29/24 21:07:52.53
  STEP: List CRs in v1 @ 01/29/24 21:07:52.581
  STEP: List CRs in v2 @ 01/29/24 21:07:52.589
  Jan 29 21:07:52.595: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-2063" for this suite. @ 01/29/24 21:07:53.152
• [6.795 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance]
test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 01/29/24 21:07:53.163
  Jan 29 21:07:53.163: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename proxy @ 01/29/24 21:07:53.166
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:07:53.178
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:07:53.183
  Jan 29 21:07:53.187: INFO: Creating pod...
  Jan 29 21:07:55.208: INFO: Creating service...
  Jan 29 21:07:55.240: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8638/pods/agnhost/proxy?method=DELETE
  Jan 29 21:07:55.246: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Jan 29 21:07:55.246: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8638/pods/agnhost/proxy?method=OPTIONS
  Jan 29 21:07:55.250: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Jan 29 21:07:55.250: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8638/pods/agnhost/proxy?method=PATCH
  Jan 29 21:07:55.254: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Jan 29 21:07:55.254: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8638/pods/agnhost/proxy?method=POST
  Jan 29 21:07:55.257: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Jan 29 21:07:55.257: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8638/pods/agnhost/proxy?method=PUT
  Jan 29 21:07:55.260: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Jan 29 21:07:55.261: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8638/services/e2e-proxy-test-service/proxy?method=DELETE
  Jan 29 21:07:55.265: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Jan 29 21:07:55.265: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8638/services/e2e-proxy-test-service/proxy?method=OPTIONS
  Jan 29 21:07:55.273: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Jan 29 21:07:55.274: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8638/services/e2e-proxy-test-service/proxy?method=PATCH
  Jan 29 21:07:55.278: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Jan 29 21:07:55.278: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8638/services/e2e-proxy-test-service/proxy?method=POST
  Jan 29 21:07:55.283: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Jan 29 21:07:55.284: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8638/services/e2e-proxy-test-service/proxy?method=PUT
  Jan 29 21:07:55.289: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Jan 29 21:07:55.290: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8638/pods/agnhost/proxy?method=GET
  Jan 29 21:07:55.294: INFO: http.Client request:GET StatusCode:301
  Jan 29 21:07:55.294: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8638/services/e2e-proxy-test-service/proxy?method=GET
  Jan 29 21:07:55.297: INFO: http.Client request:GET StatusCode:301
  Jan 29 21:07:55.297: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8638/pods/agnhost/proxy?method=HEAD
  Jan 29 21:07:55.300: INFO: http.Client request:HEAD StatusCode:301
  Jan 29 21:07:55.301: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8638/services/e2e-proxy-test-service/proxy?method=HEAD
  Jan 29 21:07:55.306: INFO: http.Client request:HEAD StatusCode:301
  Jan 29 21:07:55.306: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-8638" for this suite. @ 01/29/24 21:07:55.311
• [2.154 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:262
  STEP: Creating a kubernetes client @ 01/29/24 21:07:55.318
  Jan 29 21:07:55.318: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename projected @ 01/29/24 21:07:55.32
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:07:55.334
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:07:55.338
  STEP: Creating a pod to test downward API volume plugin @ 01/29/24 21:07:55.343
  STEP: Saw pod success @ 01/29/24 21:07:59.368
  Jan 29 21:07:59.374: INFO: Trying to get logs from node nodeb14 pod downwardapi-volume-3a6b7ff2-6996-4cf0-a851-ac056e55470a container client-container: <nil>
  STEP: delete the pod @ 01/29/24 21:07:59.383
  Jan 29 21:07:59.402: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3834" for this suite. @ 01/29/24 21:07:59.408
• [4.095 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance]
test/e2e/apps/statefulset.go:914
  STEP: Creating a kubernetes client @ 01/29/24 21:07:59.414
  Jan 29 21:07:59.415: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename statefulset @ 01/29/24 21:07:59.417
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:07:59.43
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:07:59.435
  STEP: Creating service test in namespace statefulset-6017 @ 01/29/24 21:07:59.44
  Jan 29 21:07:59.455: INFO: Found 0 stateful pods, waiting for 1
  Jan 29 21:08:09.461: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 01/29/24 21:08:09.468
  W0129 21:08:09.483882      23 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
  Jan 29 21:08:09.493: INFO: Found 1 stateful pods, waiting for 2
  Jan 29 21:08:19.499: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Jan 29 21:08:19.499: INFO: Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 01/29/24 21:08:19.506
  STEP: Delete all of the StatefulSets @ 01/29/24 21:08:19.509
  STEP: Verify that StatefulSets have been deleted @ 01/29/24 21:08:19.517
  Jan 29 21:08:19.521: INFO: Deleting all statefulset in ns statefulset-6017
  Jan 29 21:08:19.531: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6017" for this suite. @ 01/29/24 21:08:19.539
• [20.131 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:177
  STEP: Creating a kubernetes client @ 01/29/24 21:08:19.546
  Jan 29 21:08:19.546: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename emptydir @ 01/29/24 21:08:19.548
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:08:19.559
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:08:19.564
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 01/29/24 21:08:19.568
  STEP: Saw pod success @ 01/29/24 21:08:23.589
  Jan 29 21:08:23.593: INFO: Trying to get logs from node nodeb14 pod pod-62e42ca1-dc79-4a53-bf4d-5d4898b9d7fc container test-container: <nil>
  STEP: delete the pod @ 01/29/24 21:08:23.602
  Jan 29 21:08:23.619: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9127" for this suite. @ 01/29/24 21:08:23.624
• [4.083 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance]
test/e2e/network/dns.go:286
  STEP: Creating a kubernetes client @ 01/29/24 21:08:23.63
  Jan 29 21:08:23.630: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename dns @ 01/29/24 21:08:23.632
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:08:23.648
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:08:23.652
  STEP: Creating a test headless service @ 01/29/24 21:08:23.658
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-3504.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-3504.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-3504.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-3504.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-3504.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-3504.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-3504.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-3504.svc.cluster.local;sleep 1; done
   @ 01/29/24 21:08:23.663
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-3504.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-3504.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-3504.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-3504.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-3504.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-3504.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-3504.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-3504.svc.cluster.local;sleep 1; done
   @ 01/29/24 21:08:23.663
  STEP: creating a pod to probe DNS @ 01/29/24 21:08:23.663
  STEP: submitting the pod to kubernetes @ 01/29/24 21:08:23.663
  STEP: retrieving the pod @ 01/29/24 21:08:41.728
  STEP: looking for the results for each expected name from probers @ 01/29/24 21:08:41.737
  Jan 29 21:08:41.743: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-3504.svc.cluster.local from pod dns-3504/dns-test-a56a771e-c467-4981-834f-4e3a0a0aa048: the server could not find the requested resource (get pods dns-test-a56a771e-c467-4981-834f-4e3a0a0aa048)
  Jan 29 21:08:41.749: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-3504.svc.cluster.local from pod dns-3504/dns-test-a56a771e-c467-4981-834f-4e3a0a0aa048: the server could not find the requested resource (get pods dns-test-a56a771e-c467-4981-834f-4e3a0a0aa048)
  Jan 29 21:08:41.754: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-3504.svc.cluster.local from pod dns-3504/dns-test-a56a771e-c467-4981-834f-4e3a0a0aa048: the server could not find the requested resource (get pods dns-test-a56a771e-c467-4981-834f-4e3a0a0aa048)
  Jan 29 21:08:41.759: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-3504.svc.cluster.local from pod dns-3504/dns-test-a56a771e-c467-4981-834f-4e3a0a0aa048: the server could not find the requested resource (get pods dns-test-a56a771e-c467-4981-834f-4e3a0a0aa048)
  Jan 29 21:08:41.764: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-3504.svc.cluster.local from pod dns-3504/dns-test-a56a771e-c467-4981-834f-4e3a0a0aa048: the server could not find the requested resource (get pods dns-test-a56a771e-c467-4981-834f-4e3a0a0aa048)
  Jan 29 21:08:41.768: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-3504.svc.cluster.local from pod dns-3504/dns-test-a56a771e-c467-4981-834f-4e3a0a0aa048: the server could not find the requested resource (get pods dns-test-a56a771e-c467-4981-834f-4e3a0a0aa048)
  Jan 29 21:08:41.773: INFO: Unable to read jessie_udp@dns-test-service-2.dns-3504.svc.cluster.local from pod dns-3504/dns-test-a56a771e-c467-4981-834f-4e3a0a0aa048: the server could not find the requested resource (get pods dns-test-a56a771e-c467-4981-834f-4e3a0a0aa048)
  Jan 29 21:08:41.778: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-3504.svc.cluster.local from pod dns-3504/dns-test-a56a771e-c467-4981-834f-4e3a0a0aa048: the server could not find the requested resource (get pods dns-test-a56a771e-c467-4981-834f-4e3a0a0aa048)
  Jan 29 21:08:41.778: INFO: Lookups using dns-3504/dns-test-a56a771e-c467-4981-834f-4e3a0a0aa048 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-3504.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-3504.svc.cluster.local wheezy_udp@dns-test-service-2.dns-3504.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-3504.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-3504.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-3504.svc.cluster.local jessie_udp@dns-test-service-2.dns-3504.svc.cluster.local jessie_tcp@dns-test-service-2.dns-3504.svc.cluster.local]

  Jan 29 21:08:41.786: INFO: Pod client logs for webserver: 
  Jan 29 21:08:41.794: INFO: Pod client logs for querier: 
  Jan 29 21:08:41.802: INFO: Pod client logs for jessie-querier: 
  Jan 29 21:08:46.811: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-3504.svc.cluster.local from pod dns-3504/dns-test-a56a771e-c467-4981-834f-4e3a0a0aa048: the server could not find the requested resource (get pods dns-test-a56a771e-c467-4981-834f-4e3a0a0aa048)
  Jan 29 21:08:46.815: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-3504.svc.cluster.local from pod dns-3504/dns-test-a56a771e-c467-4981-834f-4e3a0a0aa048: the server could not find the requested resource (get pods dns-test-a56a771e-c467-4981-834f-4e3a0a0aa048)
  Jan 29 21:08:46.818: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-3504.svc.cluster.local from pod dns-3504/dns-test-a56a771e-c467-4981-834f-4e3a0a0aa048: the server could not find the requested resource (get pods dns-test-a56a771e-c467-4981-834f-4e3a0a0aa048)
  Jan 29 21:08:46.822: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-3504.svc.cluster.local from pod dns-3504/dns-test-a56a771e-c467-4981-834f-4e3a0a0aa048: the server could not find the requested resource (get pods dns-test-a56a771e-c467-4981-834f-4e3a0a0aa048)
  Jan 29 21:08:46.826: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-3504.svc.cluster.local from pod dns-3504/dns-test-a56a771e-c467-4981-834f-4e3a0a0aa048: the server could not find the requested resource (get pods dns-test-a56a771e-c467-4981-834f-4e3a0a0aa048)
  Jan 29 21:08:46.831: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-3504.svc.cluster.local from pod dns-3504/dns-test-a56a771e-c467-4981-834f-4e3a0a0aa048: the server could not find the requested resource (get pods dns-test-a56a771e-c467-4981-834f-4e3a0a0aa048)
  Jan 29 21:08:46.838: INFO: Unable to read jessie_udp@dns-test-service-2.dns-3504.svc.cluster.local from pod dns-3504/dns-test-a56a771e-c467-4981-834f-4e3a0a0aa048: the server could not find the requested resource (get pods dns-test-a56a771e-c467-4981-834f-4e3a0a0aa048)
  Jan 29 21:08:46.842: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-3504.svc.cluster.local from pod dns-3504/dns-test-a56a771e-c467-4981-834f-4e3a0a0aa048: the server could not find the requested resource (get pods dns-test-a56a771e-c467-4981-834f-4e3a0a0aa048)
  Jan 29 21:08:46.843: INFO: Lookups using dns-3504/dns-test-a56a771e-c467-4981-834f-4e3a0a0aa048 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-3504.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-3504.svc.cluster.local wheezy_udp@dns-test-service-2.dns-3504.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-3504.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-3504.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-3504.svc.cluster.local jessie_udp@dns-test-service-2.dns-3504.svc.cluster.local jessie_tcp@dns-test-service-2.dns-3504.svc.cluster.local]

  Jan 29 21:08:46.850: INFO: Pod client logs for webserver: 
  Jan 29 21:08:46.857: INFO: Pod client logs for querier: 
  Jan 29 21:08:46.863: INFO: Pod client logs for jessie-querier: 
  Jan 29 21:08:51.811: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-3504.svc.cluster.local from pod dns-3504/dns-test-a56a771e-c467-4981-834f-4e3a0a0aa048: the server could not find the requested resource (get pods dns-test-a56a771e-c467-4981-834f-4e3a0a0aa048)
  Jan 29 21:08:51.816: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-3504.svc.cluster.local from pod dns-3504/dns-test-a56a771e-c467-4981-834f-4e3a0a0aa048: the server could not find the requested resource (get pods dns-test-a56a771e-c467-4981-834f-4e3a0a0aa048)
  Jan 29 21:08:51.821: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-3504.svc.cluster.local from pod dns-3504/dns-test-a56a771e-c467-4981-834f-4e3a0a0aa048: the server could not find the requested resource (get pods dns-test-a56a771e-c467-4981-834f-4e3a0a0aa048)
  Jan 29 21:08:51.825: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-3504.svc.cluster.local from pod dns-3504/dns-test-a56a771e-c467-4981-834f-4e3a0a0aa048: the server could not find the requested resource (get pods dns-test-a56a771e-c467-4981-834f-4e3a0a0aa048)
  Jan 29 21:08:51.830: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-3504.svc.cluster.local from pod dns-3504/dns-test-a56a771e-c467-4981-834f-4e3a0a0aa048: the server could not find the requested resource (get pods dns-test-a56a771e-c467-4981-834f-4e3a0a0aa048)
  Jan 29 21:08:51.834: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-3504.svc.cluster.local from pod dns-3504/dns-test-a56a771e-c467-4981-834f-4e3a0a0aa048: the server could not find the requested resource (get pods dns-test-a56a771e-c467-4981-834f-4e3a0a0aa048)
  Jan 29 21:08:51.839: INFO: Unable to read jessie_udp@dns-test-service-2.dns-3504.svc.cluster.local from pod dns-3504/dns-test-a56a771e-c467-4981-834f-4e3a0a0aa048: the server could not find the requested resource (get pods dns-test-a56a771e-c467-4981-834f-4e3a0a0aa048)
  Jan 29 21:08:51.843: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-3504.svc.cluster.local from pod dns-3504/dns-test-a56a771e-c467-4981-834f-4e3a0a0aa048: the server could not find the requested resource (get pods dns-test-a56a771e-c467-4981-834f-4e3a0a0aa048)
  Jan 29 21:08:51.843: INFO: Lookups using dns-3504/dns-test-a56a771e-c467-4981-834f-4e3a0a0aa048 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-3504.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-3504.svc.cluster.local wheezy_udp@dns-test-service-2.dns-3504.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-3504.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-3504.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-3504.svc.cluster.local jessie_udp@dns-test-service-2.dns-3504.svc.cluster.local jessie_tcp@dns-test-service-2.dns-3504.svc.cluster.local]

  Jan 29 21:08:51.851: INFO: Pod client logs for webserver: 
  Jan 29 21:08:51.859: INFO: Pod client logs for querier: 
  Jan 29 21:08:51.868: INFO: Pod client logs for jessie-querier: 
  Jan 29 21:08:56.846: INFO: DNS probes using dns-3504/dns-test-a56a771e-c467-4981-834f-4e3a0a0aa048 succeeded

  Jan 29 21:08:56.846: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 01/29/24 21:08:56.851
  STEP: deleting the test headless service @ 01/29/24 21:08:56.869
  STEP: Destroying namespace "dns-3504" for this suite. @ 01/29/24 21:08:56.881
• [33.256 seconds]
------------------------------
SSSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance]
test/e2e/scheduling/limit_range.go:61
  STEP: Creating a kubernetes client @ 01/29/24 21:08:56.887
  Jan 29 21:08:56.887: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename limitrange @ 01/29/24 21:08:56.888
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:08:56.902
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:08:56.906
  STEP: Creating a LimitRange @ 01/29/24 21:08:56.912
  STEP: Setting up watch @ 01/29/24 21:08:56.913
  STEP: Submitting a LimitRange @ 01/29/24 21:08:57.016
  STEP: Verifying LimitRange creation was observed @ 01/29/24 21:08:57.023
  STEP: Fetching the LimitRange to ensure it has proper values @ 01/29/24 21:08:57.024
  Jan 29 21:08:57.027: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  Jan 29 21:08:57.027: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 01/29/24 21:08:57.027
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 01/29/24 21:08:57.032
  Jan 29 21:08:57.036: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  Jan 29 21:08:57.036: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 01/29/24 21:08:57.036
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 01/29/24 21:08:57.048
  Jan 29 21:08:57.052: INFO: Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  Jan 29 21:08:57.052: INFO: Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 01/29/24 21:08:57.052
  STEP: Failing to create a Pod with more than max resources @ 01/29/24 21:08:57.054
  STEP: Updating a LimitRange @ 01/29/24 21:08:57.057
  STEP: Verifying LimitRange updating is effective @ 01/29/24 21:08:57.064
  STEP: Creating a Pod with less than former min resources @ 01/29/24 21:08:59.069
  STEP: Failing to create a Pod with more than max resources @ 01/29/24 21:08:59.076
  STEP: Deleting a LimitRange @ 01/29/24 21:08:59.081
  STEP: Verifying the LimitRange was deleted @ 01/29/24 21:08:59.089
  Jan 29 21:09:04.094: INFO: limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 01/29/24 21:09:04.094
  Jan 29 21:09:04.104: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-1527" for this suite. @ 01/29/24 21:09:04.11
• [7.229 seconds]
------------------------------
SSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:107
  STEP: Creating a kubernetes client @ 01/29/24 21:09:04.116
  Jan 29 21:09:04.116: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename container-probe @ 01/29/24 21:09:04.118
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:09:04.132
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:09:04.136
  Jan 29 21:10:04.156: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-275" for this suite. @ 01/29/24 21:10:04.162
• [60.051 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:153
  STEP: Creating a kubernetes client @ 01/29/24 21:10:04.173
  Jan 29 21:10:04.173: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename crd-publish-openapi @ 01/29/24 21:10:04.174
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:10:04.189
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:10:04.192
  Jan 29 21:10:04.197: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 01/29/24 21:10:05.644
  Jan 29 21:10:05.644: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=crd-publish-openapi-3426 --namespace=crd-publish-openapi-3426 create -f -'
  Jan 29 21:10:06.323: INFO: stderr: ""
  Jan 29 21:10:06.323: INFO: stdout: "e2e-test-crd-publish-openapi-8488-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  Jan 29 21:10:06.323: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=crd-publish-openapi-3426 --namespace=crd-publish-openapi-3426 delete e2e-test-crd-publish-openapi-8488-crds test-cr'
  Jan 29 21:10:06.431: INFO: stderr: ""
  Jan 29 21:10:06.431: INFO: stdout: "e2e-test-crd-publish-openapi-8488-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  Jan 29 21:10:06.431: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=crd-publish-openapi-3426 --namespace=crd-publish-openapi-3426 apply -f -'
  Jan 29 21:10:06.662: INFO: stderr: ""
  Jan 29 21:10:06.662: INFO: stdout: "e2e-test-crd-publish-openapi-8488-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  Jan 29 21:10:06.662: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=crd-publish-openapi-3426 --namespace=crd-publish-openapi-3426 delete e2e-test-crd-publish-openapi-8488-crds test-cr'
  Jan 29 21:10:06.767: INFO: stderr: ""
  Jan 29 21:10:06.767: INFO: stdout: "e2e-test-crd-publish-openapi-8488-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 01/29/24 21:10:06.767
  Jan 29 21:10:06.768: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=crd-publish-openapi-3426 explain e2e-test-crd-publish-openapi-8488-crds'
  Jan 29 21:10:06.964: INFO: stderr: ""
  Jan 29 21:10:06.964: INFO: stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-8488-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  Jan 29 21:10:08.341: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3426" for this suite. @ 01/29/24 21:10:08.354
• [4.189 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 01/29/24 21:10:08.377
  Jan 29 21:10:08.377: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename secrets @ 01/29/24 21:10:08.378
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:10:08.397
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:10:08.401
  STEP: Creating secret with name secret-test-104aeed0-6ef5-4d0d-8320-864153a6bd91 @ 01/29/24 21:10:08.406
  STEP: Creating a pod to test consume secrets @ 01/29/24 21:10:08.411
  STEP: Saw pod success @ 01/29/24 21:10:12.433
  Jan 29 21:10:12.437: INFO: Trying to get logs from node nodeb14 pod pod-secrets-37aa44a4-2188-4a3b-aec4-5379a8b48cf4 container secret-volume-test: <nil>
  STEP: delete the pod @ 01/29/24 21:10:12.45
  Jan 29 21:10:12.465: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7033" for this suite. @ 01/29/24 21:10:12.471
• [4.101 seconds]
------------------------------
S
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance]
test/e2e/network/dns.go:191
  STEP: Creating a kubernetes client @ 01/29/24 21:10:12.478
  Jan 29 21:10:12.479: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename dns @ 01/29/24 21:10:12.48
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:10:12.495
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:10:12.499
  STEP: Creating a test headless service @ 01/29/24 21:10:12.503
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-2809 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-2809;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-2809 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-2809;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-2809.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-2809.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-2809.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-2809.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-2809.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-2809.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-2809.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-2809.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-2809.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-2809.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-2809.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-2809.svc;check="$$(dig +notcp +noall +answer +search 244.195.107.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.107.195.244_udp@PTR;check="$$(dig +tcp +noall +answer +search 244.195.107.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.107.195.244_tcp@PTR;sleep 1; done
   @ 01/29/24 21:10:12.522
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-2809 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-2809;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-2809 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-2809;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-2809.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-2809.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-2809.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-2809.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-2809.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-2809.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-2809.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-2809.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-2809.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-2809.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-2809.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-2809.svc;check="$$(dig +notcp +noall +answer +search 244.195.107.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.107.195.244_udp@PTR;check="$$(dig +tcp +noall +answer +search 244.195.107.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.107.195.244_tcp@PTR;sleep 1; done
   @ 01/29/24 21:10:12.522
  STEP: creating a pod to probe DNS @ 01/29/24 21:10:12.522
  STEP: submitting the pod to kubernetes @ 01/29/24 21:10:12.522
  STEP: retrieving the pod @ 01/29/24 21:10:14.542
  STEP: looking for the results for each expected name from probers @ 01/29/24 21:10:14.545
  Jan 29 21:10:14.552: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-2809/dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5: the server could not find the requested resource (get pods dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5)
  Jan 29 21:10:14.556: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-2809/dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5: the server could not find the requested resource (get pods dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5)
  Jan 29 21:10:14.561: INFO: Unable to read wheezy_udp@dns-test-service.dns-2809 from pod dns-2809/dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5: the server could not find the requested resource (get pods dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5)
  Jan 29 21:10:14.566: INFO: Unable to read wheezy_tcp@dns-test-service.dns-2809 from pod dns-2809/dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5: the server could not find the requested resource (get pods dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5)
  Jan 29 21:10:14.571: INFO: Unable to read wheezy_udp@dns-test-service.dns-2809.svc from pod dns-2809/dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5: the server could not find the requested resource (get pods dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5)
  Jan 29 21:10:14.575: INFO: Unable to read wheezy_tcp@dns-test-service.dns-2809.svc from pod dns-2809/dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5: the server could not find the requested resource (get pods dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5)
  Jan 29 21:10:14.579: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-2809.svc from pod dns-2809/dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5: the server could not find the requested resource (get pods dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5)
  Jan 29 21:10:14.584: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-2809.svc from pod dns-2809/dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5: the server could not find the requested resource (get pods dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5)
  Jan 29 21:10:14.607: INFO: Unable to read jessie_udp@dns-test-service from pod dns-2809/dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5: the server could not find the requested resource (get pods dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5)
  Jan 29 21:10:14.611: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-2809/dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5: the server could not find the requested resource (get pods dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5)
  Jan 29 21:10:14.616: INFO: Unable to read jessie_udp@dns-test-service.dns-2809 from pod dns-2809/dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5: the server could not find the requested resource (get pods dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5)
  Jan 29 21:10:14.620: INFO: Unable to read jessie_tcp@dns-test-service.dns-2809 from pod dns-2809/dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5: the server could not find the requested resource (get pods dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5)
  Jan 29 21:10:14.625: INFO: Unable to read jessie_udp@dns-test-service.dns-2809.svc from pod dns-2809/dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5: the server could not find the requested resource (get pods dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5)
  Jan 29 21:10:14.629: INFO: Unable to read jessie_tcp@dns-test-service.dns-2809.svc from pod dns-2809/dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5: the server could not find the requested resource (get pods dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5)
  Jan 29 21:10:14.637: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-2809.svc from pod dns-2809/dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5: the server could not find the requested resource (get pods dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5)
  Jan 29 21:10:14.642: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-2809.svc from pod dns-2809/dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5: the server could not find the requested resource (get pods dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5)
  Jan 29 21:10:14.660: INFO: Lookups using dns-2809/dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-2809 wheezy_tcp@dns-test-service.dns-2809 wheezy_udp@dns-test-service.dns-2809.svc wheezy_tcp@dns-test-service.dns-2809.svc wheezy_udp@_http._tcp.dns-test-service.dns-2809.svc wheezy_tcp@_http._tcp.dns-test-service.dns-2809.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-2809 jessie_tcp@dns-test-service.dns-2809 jessie_udp@dns-test-service.dns-2809.svc jessie_tcp@dns-test-service.dns-2809.svc jessie_udp@_http._tcp.dns-test-service.dns-2809.svc jessie_tcp@_http._tcp.dns-test-service.dns-2809.svc]

  Jan 29 21:10:14.669: INFO: Pod client logs for webserver: 
  Jan 29 21:10:14.678: INFO: Pod client logs for querier: 
  Jan 29 21:10:14.685: INFO: Pod client logs for jessie-querier: 
  Jan 29 21:10:19.692: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-2809/dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5: the server could not find the requested resource (get pods dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5)
  Jan 29 21:10:19.697: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-2809/dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5: the server could not find the requested resource (get pods dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5)
  Jan 29 21:10:19.704: INFO: Unable to read wheezy_udp@dns-test-service.dns-2809 from pod dns-2809/dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5: the server could not find the requested resource (get pods dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5)
  Jan 29 21:10:19.709: INFO: Unable to read wheezy_tcp@dns-test-service.dns-2809 from pod dns-2809/dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5: the server could not find the requested resource (get pods dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5)
  Jan 29 21:10:19.714: INFO: Unable to read wheezy_udp@dns-test-service.dns-2809.svc from pod dns-2809/dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5: the server could not find the requested resource (get pods dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5)
  Jan 29 21:10:19.719: INFO: Unable to read wheezy_tcp@dns-test-service.dns-2809.svc from pod dns-2809/dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5: the server could not find the requested resource (get pods dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5)
  Jan 29 21:10:19.725: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-2809.svc from pod dns-2809/dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5: the server could not find the requested resource (get pods dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5)
  Jan 29 21:10:19.732: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-2809.svc from pod dns-2809/dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5: the server could not find the requested resource (get pods dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5)
  Jan 29 21:10:19.756: INFO: Unable to read jessie_udp@dns-test-service from pod dns-2809/dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5: the server could not find the requested resource (get pods dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5)
  Jan 29 21:10:19.762: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-2809/dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5: the server could not find the requested resource (get pods dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5)
  Jan 29 21:10:19.767: INFO: Unable to read jessie_udp@dns-test-service.dns-2809 from pod dns-2809/dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5: the server could not find the requested resource (get pods dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5)
  Jan 29 21:10:19.773: INFO: Unable to read jessie_tcp@dns-test-service.dns-2809 from pod dns-2809/dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5: the server could not find the requested resource (get pods dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5)
  Jan 29 21:10:19.778: INFO: Unable to read jessie_udp@dns-test-service.dns-2809.svc from pod dns-2809/dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5: the server could not find the requested resource (get pods dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5)
  Jan 29 21:10:19.783: INFO: Unable to read jessie_tcp@dns-test-service.dns-2809.svc from pod dns-2809/dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5: the server could not find the requested resource (get pods dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5)
  Jan 29 21:10:19.788: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-2809.svc from pod dns-2809/dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5: the server could not find the requested resource (get pods dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5)
  Jan 29 21:10:19.796: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-2809.svc from pod dns-2809/dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5: the server could not find the requested resource (get pods dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5)
  Jan 29 21:10:19.814: INFO: Lookups using dns-2809/dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-2809 wheezy_tcp@dns-test-service.dns-2809 wheezy_udp@dns-test-service.dns-2809.svc wheezy_tcp@dns-test-service.dns-2809.svc wheezy_udp@_http._tcp.dns-test-service.dns-2809.svc wheezy_tcp@_http._tcp.dns-test-service.dns-2809.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-2809 jessie_tcp@dns-test-service.dns-2809 jessie_udp@dns-test-service.dns-2809.svc jessie_tcp@dns-test-service.dns-2809.svc jessie_udp@_http._tcp.dns-test-service.dns-2809.svc jessie_tcp@_http._tcp.dns-test-service.dns-2809.svc]

  Jan 29 21:10:19.824: INFO: Pod client logs for webserver: 
  Jan 29 21:10:19.834: INFO: Pod client logs for querier: 
  Jan 29 21:10:19.842: INFO: Pod client logs for jessie-querier: 
  Jan 29 21:10:24.695: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-2809/dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5: the server could not find the requested resource (get pods dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5)
  Jan 29 21:10:24.701: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-2809/dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5: the server could not find the requested resource (get pods dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5)
  Jan 29 21:10:24.706: INFO: Unable to read wheezy_udp@dns-test-service.dns-2809 from pod dns-2809/dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5: the server could not find the requested resource (get pods dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5)
  Jan 29 21:10:24.711: INFO: Unable to read wheezy_tcp@dns-test-service.dns-2809 from pod dns-2809/dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5: the server could not find the requested resource (get pods dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5)
  Jan 29 21:10:24.715: INFO: Unable to read wheezy_udp@dns-test-service.dns-2809.svc from pod dns-2809/dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5: the server could not find the requested resource (get pods dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5)
  Jan 29 21:10:24.720: INFO: Unable to read wheezy_tcp@dns-test-service.dns-2809.svc from pod dns-2809/dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5: the server could not find the requested resource (get pods dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5)
  Jan 29 21:10:24.724: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-2809.svc from pod dns-2809/dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5: the server could not find the requested resource (get pods dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5)
  Jan 29 21:10:24.730: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-2809.svc from pod dns-2809/dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5: the server could not find the requested resource (get pods dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5)
  Jan 29 21:10:24.761: INFO: Unable to read jessie_udp@dns-test-service from pod dns-2809/dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5: the server could not find the requested resource (get pods dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5)
  Jan 29 21:10:24.767: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-2809/dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5: the server could not find the requested resource (get pods dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5)
  Jan 29 21:10:24.773: INFO: Unable to read jessie_udp@dns-test-service.dns-2809 from pod dns-2809/dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5: the server could not find the requested resource (get pods dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5)
  Jan 29 21:10:24.778: INFO: Unable to read jessie_tcp@dns-test-service.dns-2809 from pod dns-2809/dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5: the server could not find the requested resource (get pods dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5)
  Jan 29 21:10:24.783: INFO: Unable to read jessie_udp@dns-test-service.dns-2809.svc from pod dns-2809/dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5: the server could not find the requested resource (get pods dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5)
  Jan 29 21:10:24.789: INFO: Unable to read jessie_tcp@dns-test-service.dns-2809.svc from pod dns-2809/dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5: the server could not find the requested resource (get pods dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5)
  Jan 29 21:10:24.797: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-2809.svc from pod dns-2809/dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5: the server could not find the requested resource (get pods dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5)
  Jan 29 21:10:24.806: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-2809.svc from pod dns-2809/dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5: the server could not find the requested resource (get pods dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5)
  Jan 29 21:10:24.824: INFO: Lookups using dns-2809/dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-2809 wheezy_tcp@dns-test-service.dns-2809 wheezy_udp@dns-test-service.dns-2809.svc wheezy_tcp@dns-test-service.dns-2809.svc wheezy_udp@_http._tcp.dns-test-service.dns-2809.svc wheezy_tcp@_http._tcp.dns-test-service.dns-2809.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-2809 jessie_tcp@dns-test-service.dns-2809 jessie_udp@dns-test-service.dns-2809.svc jessie_tcp@dns-test-service.dns-2809.svc jessie_udp@_http._tcp.dns-test-service.dns-2809.svc jessie_tcp@_http._tcp.dns-test-service.dns-2809.svc]

  Jan 29 21:10:24.833: INFO: Pod client logs for webserver: 
  Jan 29 21:10:24.842: INFO: Pod client logs for querier: 
  Jan 29 21:10:24.849: INFO: Pod client logs for jessie-querier: 
  Jan 29 21:10:29.692: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-2809/dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5: the server could not find the requested resource (get pods dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5)
  Jan 29 21:10:29.697: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-2809/dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5: the server could not find the requested resource (get pods dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5)
  Jan 29 21:10:29.702: INFO: Unable to read wheezy_udp@dns-test-service.dns-2809 from pod dns-2809/dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5: the server could not find the requested resource (get pods dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5)
  Jan 29 21:10:29.706: INFO: Unable to read wheezy_tcp@dns-test-service.dns-2809 from pod dns-2809/dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5: the server could not find the requested resource (get pods dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5)
  Jan 29 21:10:29.710: INFO: Unable to read wheezy_udp@dns-test-service.dns-2809.svc from pod dns-2809/dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5: the server could not find the requested resource (get pods dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5)
  Jan 29 21:10:29.715: INFO: Unable to read wheezy_tcp@dns-test-service.dns-2809.svc from pod dns-2809/dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5: the server could not find the requested resource (get pods dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5)
  Jan 29 21:10:29.720: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-2809.svc from pod dns-2809/dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5: the server could not find the requested resource (get pods dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5)
  Jan 29 21:10:29.725: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-2809.svc from pod dns-2809/dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5: the server could not find the requested resource (get pods dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5)
  Jan 29 21:10:29.748: INFO: Unable to read jessie_udp@dns-test-service from pod dns-2809/dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5: the server could not find the requested resource (get pods dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5)
  Jan 29 21:10:29.753: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-2809/dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5: the server could not find the requested resource (get pods dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5)
  Jan 29 21:10:29.759: INFO: Unable to read jessie_udp@dns-test-service.dns-2809 from pod dns-2809/dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5: the server could not find the requested resource (get pods dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5)
  Jan 29 21:10:29.765: INFO: Unable to read jessie_tcp@dns-test-service.dns-2809 from pod dns-2809/dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5: the server could not find the requested resource (get pods dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5)
  Jan 29 21:10:29.770: INFO: Unable to read jessie_udp@dns-test-service.dns-2809.svc from pod dns-2809/dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5: the server could not find the requested resource (get pods dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5)
  Jan 29 21:10:29.774: INFO: Unable to read jessie_tcp@dns-test-service.dns-2809.svc from pod dns-2809/dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5: the server could not find the requested resource (get pods dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5)
  Jan 29 21:10:29.781: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-2809.svc from pod dns-2809/dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5: the server could not find the requested resource (get pods dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5)
  Jan 29 21:10:29.786: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-2809.svc from pod dns-2809/dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5: the server could not find the requested resource (get pods dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5)
  Jan 29 21:10:29.808: INFO: Lookups using dns-2809/dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-2809 wheezy_tcp@dns-test-service.dns-2809 wheezy_udp@dns-test-service.dns-2809.svc wheezy_tcp@dns-test-service.dns-2809.svc wheezy_udp@_http._tcp.dns-test-service.dns-2809.svc wheezy_tcp@_http._tcp.dns-test-service.dns-2809.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-2809 jessie_tcp@dns-test-service.dns-2809 jessie_udp@dns-test-service.dns-2809.svc jessie_tcp@dns-test-service.dns-2809.svc jessie_udp@_http._tcp.dns-test-service.dns-2809.svc jessie_tcp@_http._tcp.dns-test-service.dns-2809.svc]

  Jan 29 21:10:29.816: INFO: Pod client logs for webserver: 
  Jan 29 21:10:29.824: INFO: Pod client logs for querier: 
  Jan 29 21:10:29.832: INFO: Pod client logs for jessie-querier: 
  Jan 29 21:10:34.691: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-2809/dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5: the server could not find the requested resource (get pods dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5)
  Jan 29 21:10:34.695: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-2809/dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5: the server could not find the requested resource (get pods dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5)
  Jan 29 21:10:34.699: INFO: Unable to read wheezy_udp@dns-test-service.dns-2809 from pod dns-2809/dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5: the server could not find the requested resource (get pods dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5)
  Jan 29 21:10:34.703: INFO: Unable to read wheezy_tcp@dns-test-service.dns-2809 from pod dns-2809/dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5: the server could not find the requested resource (get pods dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5)
  Jan 29 21:10:34.708: INFO: Unable to read wheezy_udp@dns-test-service.dns-2809.svc from pod dns-2809/dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5: the server could not find the requested resource (get pods dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5)
  Jan 29 21:10:34.712: INFO: Unable to read wheezy_tcp@dns-test-service.dns-2809.svc from pod dns-2809/dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5: the server could not find the requested resource (get pods dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5)
  Jan 29 21:10:34.716: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-2809.svc from pod dns-2809/dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5: the server could not find the requested resource (get pods dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5)
  Jan 29 21:10:34.720: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-2809.svc from pod dns-2809/dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5: the server could not find the requested resource (get pods dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5)
  Jan 29 21:10:34.753: INFO: Unable to read jessie_udp@dns-test-service from pod dns-2809/dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5: the server could not find the requested resource (get pods dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5)
  Jan 29 21:10:34.757: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-2809/dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5: the server could not find the requested resource (get pods dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5)
  Jan 29 21:10:34.761: INFO: Unable to read jessie_udp@dns-test-service.dns-2809 from pod dns-2809/dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5: the server could not find the requested resource (get pods dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5)
  Jan 29 21:10:34.764: INFO: Unable to read jessie_tcp@dns-test-service.dns-2809 from pod dns-2809/dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5: the server could not find the requested resource (get pods dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5)
  Jan 29 21:10:34.768: INFO: Unable to read jessie_udp@dns-test-service.dns-2809.svc from pod dns-2809/dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5: the server could not find the requested resource (get pods dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5)
  Jan 29 21:10:34.772: INFO: Unable to read jessie_tcp@dns-test-service.dns-2809.svc from pod dns-2809/dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5: the server could not find the requested resource (get pods dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5)
  Jan 29 21:10:34.777: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-2809.svc from pod dns-2809/dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5: the server could not find the requested resource (get pods dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5)
  Jan 29 21:10:34.781: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-2809.svc from pod dns-2809/dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5: the server could not find the requested resource (get pods dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5)
  Jan 29 21:10:34.798: INFO: Lookups using dns-2809/dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-2809 wheezy_tcp@dns-test-service.dns-2809 wheezy_udp@dns-test-service.dns-2809.svc wheezy_tcp@dns-test-service.dns-2809.svc wheezy_udp@_http._tcp.dns-test-service.dns-2809.svc wheezy_tcp@_http._tcp.dns-test-service.dns-2809.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-2809 jessie_tcp@dns-test-service.dns-2809 jessie_udp@dns-test-service.dns-2809.svc jessie_tcp@dns-test-service.dns-2809.svc jessie_udp@_http._tcp.dns-test-service.dns-2809.svc jessie_tcp@_http._tcp.dns-test-service.dns-2809.svc]

  Jan 29 21:10:34.807: INFO: Pod client logs for webserver: 
  Jan 29 21:10:34.814: INFO: Pod client logs for querier: 
  Jan 29 21:10:34.820: INFO: Pod client logs for jessie-querier: 
  Jan 29 21:10:39.691: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-2809/dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5: the server could not find the requested resource (get pods dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5)
  Jan 29 21:10:39.699: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-2809/dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5: the server could not find the requested resource (get pods dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5)
  Jan 29 21:10:39.703: INFO: Unable to read wheezy_udp@dns-test-service.dns-2809 from pod dns-2809/dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5: the server could not find the requested resource (get pods dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5)
  Jan 29 21:10:39.708: INFO: Unable to read wheezy_tcp@dns-test-service.dns-2809 from pod dns-2809/dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5: the server could not find the requested resource (get pods dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5)
  Jan 29 21:10:39.713: INFO: Unable to read wheezy_udp@dns-test-service.dns-2809.svc from pod dns-2809/dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5: the server could not find the requested resource (get pods dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5)
  Jan 29 21:10:39.717: INFO: Unable to read wheezy_tcp@dns-test-service.dns-2809.svc from pod dns-2809/dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5: the server could not find the requested resource (get pods dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5)
  Jan 29 21:10:39.722: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-2809.svc from pod dns-2809/dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5: the server could not find the requested resource (get pods dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5)
  Jan 29 21:10:39.726: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-2809.svc from pod dns-2809/dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5: the server could not find the requested resource (get pods dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5)
  Jan 29 21:10:39.746: INFO: Unable to read jessie_udp@dns-test-service from pod dns-2809/dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5: the server could not find the requested resource (get pods dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5)
  Jan 29 21:10:39.751: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-2809/dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5: the server could not find the requested resource (get pods dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5)
  Jan 29 21:10:39.761: INFO: Unable to read jessie_udp@dns-test-service.dns-2809 from pod dns-2809/dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5: the server could not find the requested resource (get pods dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5)
  Jan 29 21:10:39.765: INFO: Unable to read jessie_tcp@dns-test-service.dns-2809 from pod dns-2809/dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5: the server could not find the requested resource (get pods dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5)
  Jan 29 21:10:39.770: INFO: Unable to read jessie_udp@dns-test-service.dns-2809.svc from pod dns-2809/dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5: the server could not find the requested resource (get pods dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5)
  Jan 29 21:10:39.777: INFO: Unable to read jessie_tcp@dns-test-service.dns-2809.svc from pod dns-2809/dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5: the server could not find the requested resource (get pods dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5)
  Jan 29 21:10:39.784: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-2809.svc from pod dns-2809/dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5: the server could not find the requested resource (get pods dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5)
  Jan 29 21:10:39.789: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-2809.svc from pod dns-2809/dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5: the server could not find the requested resource (get pods dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5)
  Jan 29 21:10:39.809: INFO: Lookups using dns-2809/dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-2809 wheezy_tcp@dns-test-service.dns-2809 wheezy_udp@dns-test-service.dns-2809.svc wheezy_tcp@dns-test-service.dns-2809.svc wheezy_udp@_http._tcp.dns-test-service.dns-2809.svc wheezy_tcp@_http._tcp.dns-test-service.dns-2809.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-2809 jessie_tcp@dns-test-service.dns-2809 jessie_udp@dns-test-service.dns-2809.svc jessie_tcp@dns-test-service.dns-2809.svc jessie_udp@_http._tcp.dns-test-service.dns-2809.svc jessie_tcp@_http._tcp.dns-test-service.dns-2809.svc]

  Jan 29 21:10:39.817: INFO: Pod client logs for webserver: 
  Jan 29 21:10:39.824: INFO: Pod client logs for querier: 
  Jan 29 21:10:39.833: INFO: Pod client logs for jessie-querier: 
  Jan 29 21:10:44.719: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-2809.svc from pod dns-2809/dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5: the server could not find the requested resource (get pods dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5)
  Jan 29 21:10:44.796: INFO: Lookups using dns-2809/dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5 failed for: [wheezy_udp@_http._tcp.dns-test-service.dns-2809.svc]

  Jan 29 21:10:44.806: INFO: Pod client logs for webserver: 
  Jan 29 21:10:44.813: INFO: Pod client logs for querier: 
  Jan 29 21:10:44.820: INFO: Pod client logs for jessie-querier: 
  Jan 29 21:10:49.798: INFO: DNS probes using dns-2809/dns-test-7a5b9cd2-71b2-4d8b-9933-93e22946c2e5 succeeded

  Jan 29 21:10:49.798: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 01/29/24 21:10:49.804
  STEP: deleting the test service @ 01/29/24 21:10:49.817
  STEP: deleting the test headless service @ 01/29/24 21:10:49.841
  STEP: Destroying namespace "dns-2809" for this suite. @ 01/29/24 21:10:49.85
• [37.376 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance]
test/e2e/apimachinery/resource_quota.go:1013
  STEP: Creating a kubernetes client @ 01/29/24 21:10:49.855
  Jan 29 21:10:49.855: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename resourcequota @ 01/29/24 21:10:49.857
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:10:49.871
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:10:49.875
  STEP: Creating resourceQuota "e2e-rq-status-w2hp4" @ 01/29/24 21:10:49.894
  Jan 29 21:10:49.908: INFO: Resource quota "e2e-rq-status-w2hp4" reports spec: hard cpu limit of 500m
  Jan 29 21:10:49.909: INFO: Resource quota "e2e-rq-status-w2hp4" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-w2hp4" /status @ 01/29/24 21:10:49.909
  STEP: Confirm /status for "e2e-rq-status-w2hp4" resourceQuota via watch @ 01/29/24 21:10:49.919
  Jan 29 21:10:49.922: INFO: observed resourceQuota "e2e-rq-status-w2hp4" in namespace "resourcequota-7291" with hard status: v1.ResourceList(nil)
  Jan 29 21:10:49.922: INFO: Found resourceQuota "e2e-rq-status-w2hp4" in namespace "resourcequota-7291" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  Jan 29 21:10:49.922: INFO: ResourceQuota "e2e-rq-status-w2hp4" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 01/29/24 21:10:49.925
  Jan 29 21:10:49.934: INFO: Resource quota "e2e-rq-status-w2hp4" reports spec: hard cpu limit of 1
  Jan 29 21:10:49.934: INFO: Resource quota "e2e-rq-status-w2hp4" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-w2hp4" /status @ 01/29/24 21:10:49.934
  STEP: Confirm /status for "e2e-rq-status-w2hp4" resourceQuota via watch @ 01/29/24 21:10:49.94
  Jan 29 21:10:49.943: INFO: observed resourceQuota "e2e-rq-status-w2hp4" in namespace "resourcequota-7291" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  Jan 29 21:10:49.943: INFO: Found resourceQuota "e2e-rq-status-w2hp4" in namespace "resourcequota-7291" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  Jan 29 21:10:49.943: INFO: ResourceQuota "e2e-rq-status-w2hp4" /status was patched
  STEP: Get "e2e-rq-status-w2hp4" /status @ 01/29/24 21:10:49.943
  Jan 29 21:10:49.948: INFO: Resourcequota "e2e-rq-status-w2hp4" reports status: hard cpu of 1
  Jan 29 21:10:49.948: INFO: Resourcequota "e2e-rq-status-w2hp4" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-w2hp4" /status before checking Spec is unchanged @ 01/29/24 21:10:49.952
  Jan 29 21:10:49.959: INFO: Resourcequota "e2e-rq-status-w2hp4" reports status: hard cpu of 2
  Jan 29 21:10:49.959: INFO: Resourcequota "e2e-rq-status-w2hp4" reports status: hard memory of 2Gi
  Jan 29 21:10:49.962: INFO: Found resourceQuota "e2e-rq-status-w2hp4" in namespace "resourcequota-7291" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  Jan 29 21:11:29.972: INFO: ResourceQuota "e2e-rq-status-w2hp4" Spec was unchanged and /status reset
  Jan 29 21:11:29.972: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7291" for this suite. @ 01/29/24 21:11:29.977
• [40.130 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance]
test/e2e/common/node/containers.go:41
  STEP: Creating a kubernetes client @ 01/29/24 21:11:29.987
  Jan 29 21:11:29.987: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename containers @ 01/29/24 21:11:29.989
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:11:30.006
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:11:30.01
  Jan 29 21:11:32.037: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-9182" for this suite. @ 01/29/24 21:11:32.042
• [2.061 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:54
  STEP: Creating a kubernetes client @ 01/29/24 21:11:32.049
  Jan 29 21:11:32.049: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename downward-api @ 01/29/24 21:11:32.05
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:11:32.063
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:11:32.067
  STEP: Creating a pod to test downward API volume plugin @ 01/29/24 21:11:32.071
  STEP: Saw pod success @ 01/29/24 21:11:36.096
  Jan 29 21:11:36.100: INFO: Trying to get logs from node nodeb14 pod downwardapi-volume-28aab927-8d02-4d43-b5b7-da3e553774c5 container client-container: <nil>
  STEP: delete the pod @ 01/29/24 21:11:36.108
  Jan 29 21:11:36.119: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-314" for this suite. @ 01/29/24 21:11:36.125
• [4.083 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:207
  STEP: Creating a kubernetes client @ 01/29/24 21:11:36.136
  Jan 29 21:11:36.136: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename emptydir @ 01/29/24 21:11:36.138
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:11:36.151
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:11:36.156
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 01/29/24 21:11:36.161
  STEP: Saw pod success @ 01/29/24 21:11:40.187
  Jan 29 21:11:40.194: INFO: Trying to get logs from node nodeb14 pod pod-83a44702-dc0a-4af6-82b0-761431204a55 container test-container: <nil>
  STEP: delete the pod @ 01/29/24 21:11:40.202
  Jan 29 21:11:40.216: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8812" for this suite. @ 01/29/24 21:11:40.221
• [4.090 seconds]
------------------------------
SSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster  [Conformance]
test/e2e/network/dns.go:50
  STEP: Creating a kubernetes client @ 01/29/24 21:11:40.229
  Jan 29 21:11:40.229: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename dns @ 01/29/24 21:11:40.231
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:11:40.247
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:11:40.251
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 01/29/24 21:11:40.255
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 01/29/24 21:11:40.255
  STEP: creating a pod to probe DNS @ 01/29/24 21:11:40.255
  STEP: submitting the pod to kubernetes @ 01/29/24 21:11:40.255
  STEP: retrieving the pod @ 01/29/24 21:11:42.275
  STEP: looking for the results for each expected name from probers @ 01/29/24 21:11:42.279
  Jan 29 21:11:42.303: INFO: DNS probes using dns-8543/dns-test-6205ae33-58f3-4c7d-9cd7-057bb8510829 succeeded

  Jan 29 21:11:42.304: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 01/29/24 21:11:42.308
  STEP: Destroying namespace "dns-8543" for this suite. @ 01/29/24 21:11:42.32
• [2.096 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance]
test/e2e/apimachinery/field_validation.go:64
  STEP: Creating a kubernetes client @ 01/29/24 21:11:42.325
  Jan 29 21:11:42.325: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename field-validation @ 01/29/24 21:11:42.326
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:11:42.338
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:11:42.342
  STEP: apply creating a deployment @ 01/29/24 21:11:42.347
  Jan 29 21:11:42.349: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-5241" for this suite. @ 01/29/24 21:11:42.364
• [0.046 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance]
test/e2e/apimachinery/garbage_collector.go:479
  STEP: Creating a kubernetes client @ 01/29/24 21:11:42.383
  Jan 29 21:11:42.383: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename gc @ 01/29/24 21:11:42.385
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:11:42.401
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:11:42.405
  STEP: create the deployment @ 01/29/24 21:11:42.409
  W0129 21:11:42.416242      23 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 01/29/24 21:11:42.416
  STEP: delete the deployment @ 01/29/24 21:11:42.924
  STEP: wait for all rs to be garbage collected @ 01/29/24 21:11:42.93
  STEP: expected 0 rs, got 1 rs @ 01/29/24 21:11:42.936
  STEP: expected 0 pods, got 2 pods @ 01/29/24 21:11:42.94
  STEP: Gathering metrics @ 01/29/24 21:11:43.454
  Jan 29 21:11:43.600: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Jan 29 21:11:43.600: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-87" for this suite. @ 01/29/24 21:11:43.605
• [1.227 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance]
test/e2e/apimachinery/resource_quota.go:101
  STEP: Creating a kubernetes client @ 01/29/24 21:11:43.611
  Jan 29 21:11:43.611: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename resourcequota @ 01/29/24 21:11:43.612
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:11:43.627
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:11:43.631
  STEP: Counting existing ResourceQuota @ 01/29/24 21:11:43.635
  STEP: Creating a ResourceQuota @ 01/29/24 21:11:48.639
  STEP: Ensuring resource quota status is calculated @ 01/29/24 21:11:48.644
  STEP: Creating a Service @ 01/29/24 21:11:50.649
  STEP: Creating a NodePort Service @ 01/29/24 21:11:50.681
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 01/29/24 21:11:50.709
  STEP: Ensuring resource quota status captures service creation @ 01/29/24 21:11:50.732
  STEP: Deleting Services @ 01/29/24 21:11:52.741
  STEP: Ensuring resource quota status released usage @ 01/29/24 21:11:52.774
  Jan 29 21:11:54.781: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9338" for this suite. @ 01/29/24 21:11:54.787
• [11.183 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance]
test/e2e/common/node/containers.go:61
  STEP: Creating a kubernetes client @ 01/29/24 21:11:54.794
  Jan 29 21:11:54.794: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename containers @ 01/29/24 21:11:54.796
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:11:54.811
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:11:54.816
  STEP: Creating a pod to test override arguments @ 01/29/24 21:11:54.821
  STEP: Saw pod success @ 01/29/24 21:11:58.849
  Jan 29 21:11:58.853: INFO: Trying to get logs from node nodeb14 pod client-containers-2a520623-38ac-4fe0-aba0-c6221724bf12 container agnhost-container: <nil>
  STEP: delete the pod @ 01/29/24 21:11:58.863
  Jan 29 21:11:58.878: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-6283" for this suite. @ 01/29/24 21:11:58.885
• [4.097 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance]
test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 01/29/24 21:11:58.894
  Jan 29 21:11:58.894: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename cronjob @ 01/29/24 21:11:58.896
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:11:58.909
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:11:58.913
  STEP: Creating a ForbidConcurrent cronjob @ 01/29/24 21:11:58.917
  STEP: Ensuring a job is scheduled @ 01/29/24 21:11:58.922
  STEP: Ensuring exactly one is scheduled @ 01/29/24 21:12:00.928
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 01/29/24 21:12:00.934
  STEP: Ensuring no more jobs are scheduled @ 01/29/24 21:12:00.937
  STEP: Removing cronjob @ 01/29/24 21:17:00.949
  Jan 29 21:17:00.955: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-6365" for this suite. @ 01/29/24 21:17:00.96
• [302.074 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:442
  STEP: Creating a kubernetes client @ 01/29/24 21:17:00.973
  Jan 29 21:17:00.973: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename crd-publish-openapi @ 01/29/24 21:17:00.976
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:17:00.988
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:17:00.992
  STEP: set up a multi version CRD @ 01/29/24 21:17:00.996
  Jan 29 21:17:00.997: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: mark a version not serverd @ 01/29/24 21:17:04.727
  STEP: check the unserved version gets removed @ 01/29/24 21:17:04.752
  STEP: check the other version is not changed @ 01/29/24 21:17:05.643
  Jan 29 21:17:08.594: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-975" for this suite. @ 01/29/24 21:17:08.606
• [7.639 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:198
  STEP: Creating a kubernetes client @ 01/29/24 21:17:08.614
  Jan 29 21:17:08.614: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename container-probe @ 01/29/24 21:17:08.616
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:17:08.631
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:17:08.635
  STEP: Creating pod liveness-b3e46bbc-1047-4a7d-86ff-fd6521744e25 in namespace container-probe-8859 @ 01/29/24 21:17:08.64
  STEP: checking the pod's current state and verifying that restartCount is present @ 01/29/24 21:17:10.667
  Jan 29 21:17:10.670: INFO: Initial restart count of pod liveness-b3e46bbc-1047-4a7d-86ff-fd6521744e25 is 0
  Jan 29 21:17:10.674: INFO: Get pod liveness-b3e46bbc-1047-4a7d-86ff-fd6521744e25 in namespace container-probe-8859
  Jan 29 21:17:12.681: INFO: Get pod liveness-b3e46bbc-1047-4a7d-86ff-fd6521744e25 in namespace container-probe-8859
  Jan 29 21:17:14.686: INFO: Get pod liveness-b3e46bbc-1047-4a7d-86ff-fd6521744e25 in namespace container-probe-8859
  Jan 29 21:17:16.693: INFO: Get pod liveness-b3e46bbc-1047-4a7d-86ff-fd6521744e25 in namespace container-probe-8859
  Jan 29 21:17:18.698: INFO: Get pod liveness-b3e46bbc-1047-4a7d-86ff-fd6521744e25 in namespace container-probe-8859
  Jan 29 21:17:20.704: INFO: Get pod liveness-b3e46bbc-1047-4a7d-86ff-fd6521744e25 in namespace container-probe-8859
  Jan 29 21:17:22.712: INFO: Get pod liveness-b3e46bbc-1047-4a7d-86ff-fd6521744e25 in namespace container-probe-8859
  Jan 29 21:17:24.717: INFO: Get pod liveness-b3e46bbc-1047-4a7d-86ff-fd6521744e25 in namespace container-probe-8859
  Jan 29 21:17:26.723: INFO: Get pod liveness-b3e46bbc-1047-4a7d-86ff-fd6521744e25 in namespace container-probe-8859
  Jan 29 21:17:28.728: INFO: Get pod liveness-b3e46bbc-1047-4a7d-86ff-fd6521744e25 in namespace container-probe-8859
  Jan 29 21:17:30.734: INFO: Get pod liveness-b3e46bbc-1047-4a7d-86ff-fd6521744e25 in namespace container-probe-8859
  Jan 29 21:17:30.735: INFO: Restart count of pod container-probe-8859/liveness-b3e46bbc-1047-4a7d-86ff-fd6521744e25 is now 1 (20.064381014s elapsed)
  Jan 29 21:17:32.742: INFO: Get pod liveness-b3e46bbc-1047-4a7d-86ff-fd6521744e25 in namespace container-probe-8859
  Jan 29 21:17:34.747: INFO: Get pod liveness-b3e46bbc-1047-4a7d-86ff-fd6521744e25 in namespace container-probe-8859
  Jan 29 21:17:36.753: INFO: Get pod liveness-b3e46bbc-1047-4a7d-86ff-fd6521744e25 in namespace container-probe-8859
  Jan 29 21:17:38.758: INFO: Get pod liveness-b3e46bbc-1047-4a7d-86ff-fd6521744e25 in namespace container-probe-8859
  Jan 29 21:17:40.764: INFO: Get pod liveness-b3e46bbc-1047-4a7d-86ff-fd6521744e25 in namespace container-probe-8859
  Jan 29 21:17:42.771: INFO: Get pod liveness-b3e46bbc-1047-4a7d-86ff-fd6521744e25 in namespace container-probe-8859
  Jan 29 21:17:44.776: INFO: Get pod liveness-b3e46bbc-1047-4a7d-86ff-fd6521744e25 in namespace container-probe-8859
  Jan 29 21:17:46.783: INFO: Get pod liveness-b3e46bbc-1047-4a7d-86ff-fd6521744e25 in namespace container-probe-8859
  Jan 29 21:17:48.788: INFO: Get pod liveness-b3e46bbc-1047-4a7d-86ff-fd6521744e25 in namespace container-probe-8859
  Jan 29 21:17:50.795: INFO: Get pod liveness-b3e46bbc-1047-4a7d-86ff-fd6521744e25 in namespace container-probe-8859
  Jan 29 21:17:50.795: INFO: Restart count of pod container-probe-8859/liveness-b3e46bbc-1047-4a7d-86ff-fd6521744e25 is now 2 (40.124787361s elapsed)
  Jan 29 21:17:52.802: INFO: Get pod liveness-b3e46bbc-1047-4a7d-86ff-fd6521744e25 in namespace container-probe-8859
  Jan 29 21:17:54.807: INFO: Get pod liveness-b3e46bbc-1047-4a7d-86ff-fd6521744e25 in namespace container-probe-8859
  Jan 29 21:17:56.813: INFO: Get pod liveness-b3e46bbc-1047-4a7d-86ff-fd6521744e25 in namespace container-probe-8859
  Jan 29 21:17:58.819: INFO: Get pod liveness-b3e46bbc-1047-4a7d-86ff-fd6521744e25 in namespace container-probe-8859
  Jan 29 21:18:00.825: INFO: Get pod liveness-b3e46bbc-1047-4a7d-86ff-fd6521744e25 in namespace container-probe-8859
  Jan 29 21:18:02.831: INFO: Get pod liveness-b3e46bbc-1047-4a7d-86ff-fd6521744e25 in namespace container-probe-8859
  Jan 29 21:18:04.838: INFO: Get pod liveness-b3e46bbc-1047-4a7d-86ff-fd6521744e25 in namespace container-probe-8859
  Jan 29 21:18:06.844: INFO: Get pod liveness-b3e46bbc-1047-4a7d-86ff-fd6521744e25 in namespace container-probe-8859
  Jan 29 21:18:08.849: INFO: Get pod liveness-b3e46bbc-1047-4a7d-86ff-fd6521744e25 in namespace container-probe-8859
  Jan 29 21:18:10.855: INFO: Get pod liveness-b3e46bbc-1047-4a7d-86ff-fd6521744e25 in namespace container-probe-8859
  Jan 29 21:18:10.855: INFO: Restart count of pod container-probe-8859/liveness-b3e46bbc-1047-4a7d-86ff-fd6521744e25 is now 3 (1m0.185036824s elapsed)
  Jan 29 21:18:12.862: INFO: Get pod liveness-b3e46bbc-1047-4a7d-86ff-fd6521744e25 in namespace container-probe-8859
  Jan 29 21:18:14.868: INFO: Get pod liveness-b3e46bbc-1047-4a7d-86ff-fd6521744e25 in namespace container-probe-8859
  Jan 29 21:18:16.875: INFO: Get pod liveness-b3e46bbc-1047-4a7d-86ff-fd6521744e25 in namespace container-probe-8859
  Jan 29 21:18:18.879: INFO: Get pod liveness-b3e46bbc-1047-4a7d-86ff-fd6521744e25 in namespace container-probe-8859
  Jan 29 21:18:20.885: INFO: Get pod liveness-b3e46bbc-1047-4a7d-86ff-fd6521744e25 in namespace container-probe-8859
  Jan 29 21:18:22.892: INFO: Get pod liveness-b3e46bbc-1047-4a7d-86ff-fd6521744e25 in namespace container-probe-8859
  Jan 29 21:18:24.897: INFO: Get pod liveness-b3e46bbc-1047-4a7d-86ff-fd6521744e25 in namespace container-probe-8859
  Jan 29 21:18:26.904: INFO: Get pod liveness-b3e46bbc-1047-4a7d-86ff-fd6521744e25 in namespace container-probe-8859
  Jan 29 21:18:28.909: INFO: Get pod liveness-b3e46bbc-1047-4a7d-86ff-fd6521744e25 in namespace container-probe-8859
  Jan 29 21:18:30.916: INFO: Get pod liveness-b3e46bbc-1047-4a7d-86ff-fd6521744e25 in namespace container-probe-8859
  Jan 29 21:18:30.916: INFO: Restart count of pod container-probe-8859/liveness-b3e46bbc-1047-4a7d-86ff-fd6521744e25 is now 4 (1m20.245429154s elapsed)
  Jan 29 21:18:32.925: INFO: Get pod liveness-b3e46bbc-1047-4a7d-86ff-fd6521744e25 in namespace container-probe-8859
  Jan 29 21:18:34.932: INFO: Get pod liveness-b3e46bbc-1047-4a7d-86ff-fd6521744e25 in namespace container-probe-8859
  Jan 29 21:18:36.938: INFO: Get pod liveness-b3e46bbc-1047-4a7d-86ff-fd6521744e25 in namespace container-probe-8859
  Jan 29 21:18:38.943: INFO: Get pod liveness-b3e46bbc-1047-4a7d-86ff-fd6521744e25 in namespace container-probe-8859
  Jan 29 21:18:40.949: INFO: Get pod liveness-b3e46bbc-1047-4a7d-86ff-fd6521744e25 in namespace container-probe-8859
  Jan 29 21:18:42.956: INFO: Get pod liveness-b3e46bbc-1047-4a7d-86ff-fd6521744e25 in namespace container-probe-8859
  Jan 29 21:18:44.962: INFO: Get pod liveness-b3e46bbc-1047-4a7d-86ff-fd6521744e25 in namespace container-probe-8859
  Jan 29 21:18:46.968: INFO: Get pod liveness-b3e46bbc-1047-4a7d-86ff-fd6521744e25 in namespace container-probe-8859
  Jan 29 21:18:48.974: INFO: Get pod liveness-b3e46bbc-1047-4a7d-86ff-fd6521744e25 in namespace container-probe-8859
  Jan 29 21:18:50.980: INFO: Get pod liveness-b3e46bbc-1047-4a7d-86ff-fd6521744e25 in namespace container-probe-8859
  Jan 29 21:18:52.992: INFO: Get pod liveness-b3e46bbc-1047-4a7d-86ff-fd6521744e25 in namespace container-probe-8859
  Jan 29 21:18:54.998: INFO: Get pod liveness-b3e46bbc-1047-4a7d-86ff-fd6521744e25 in namespace container-probe-8859
  Jan 29 21:18:57.005: INFO: Get pod liveness-b3e46bbc-1047-4a7d-86ff-fd6521744e25 in namespace container-probe-8859
  Jan 29 21:18:59.010: INFO: Get pod liveness-b3e46bbc-1047-4a7d-86ff-fd6521744e25 in namespace container-probe-8859
  Jan 29 21:19:01.016: INFO: Get pod liveness-b3e46bbc-1047-4a7d-86ff-fd6521744e25 in namespace container-probe-8859
  Jan 29 21:19:03.023: INFO: Get pod liveness-b3e46bbc-1047-4a7d-86ff-fd6521744e25 in namespace container-probe-8859
  Jan 29 21:19:05.030: INFO: Get pod liveness-b3e46bbc-1047-4a7d-86ff-fd6521744e25 in namespace container-probe-8859
  Jan 29 21:19:07.036: INFO: Get pod liveness-b3e46bbc-1047-4a7d-86ff-fd6521744e25 in namespace container-probe-8859
  Jan 29 21:19:09.041: INFO: Get pod liveness-b3e46bbc-1047-4a7d-86ff-fd6521744e25 in namespace container-probe-8859
  Jan 29 21:19:11.047: INFO: Get pod liveness-b3e46bbc-1047-4a7d-86ff-fd6521744e25 in namespace container-probe-8859
  Jan 29 21:19:13.054: INFO: Get pod liveness-b3e46bbc-1047-4a7d-86ff-fd6521744e25 in namespace container-probe-8859
  Jan 29 21:19:15.061: INFO: Get pod liveness-b3e46bbc-1047-4a7d-86ff-fd6521744e25 in namespace container-probe-8859
  Jan 29 21:19:17.068: INFO: Get pod liveness-b3e46bbc-1047-4a7d-86ff-fd6521744e25 in namespace container-probe-8859
  Jan 29 21:19:19.075: INFO: Get pod liveness-b3e46bbc-1047-4a7d-86ff-fd6521744e25 in namespace container-probe-8859
  Jan 29 21:19:21.081: INFO: Get pod liveness-b3e46bbc-1047-4a7d-86ff-fd6521744e25 in namespace container-probe-8859
  Jan 29 21:19:23.088: INFO: Get pod liveness-b3e46bbc-1047-4a7d-86ff-fd6521744e25 in namespace container-probe-8859
  Jan 29 21:19:25.098: INFO: Get pod liveness-b3e46bbc-1047-4a7d-86ff-fd6521744e25 in namespace container-probe-8859
  Jan 29 21:19:27.107: INFO: Get pod liveness-b3e46bbc-1047-4a7d-86ff-fd6521744e25 in namespace container-probe-8859
  Jan 29 21:19:29.113: INFO: Get pod liveness-b3e46bbc-1047-4a7d-86ff-fd6521744e25 in namespace container-probe-8859
  Jan 29 21:19:31.120: INFO: Get pod liveness-b3e46bbc-1047-4a7d-86ff-fd6521744e25 in namespace container-probe-8859
  Jan 29 21:19:33.132: INFO: Get pod liveness-b3e46bbc-1047-4a7d-86ff-fd6521744e25 in namespace container-probe-8859
  Jan 29 21:19:35.139: INFO: Get pod liveness-b3e46bbc-1047-4a7d-86ff-fd6521744e25 in namespace container-probe-8859
  Jan 29 21:19:37.145: INFO: Get pod liveness-b3e46bbc-1047-4a7d-86ff-fd6521744e25 in namespace container-probe-8859
  Jan 29 21:19:39.150: INFO: Get pod liveness-b3e46bbc-1047-4a7d-86ff-fd6521744e25 in namespace container-probe-8859
  Jan 29 21:19:41.157: INFO: Get pod liveness-b3e46bbc-1047-4a7d-86ff-fd6521744e25 in namespace container-probe-8859
  Jan 29 21:19:43.165: INFO: Get pod liveness-b3e46bbc-1047-4a7d-86ff-fd6521744e25 in namespace container-probe-8859
  Jan 29 21:19:43.165: INFO: Restart count of pod container-probe-8859/liveness-b3e46bbc-1047-4a7d-86ff-fd6521744e25 is now 5 (2m32.49512252s elapsed)
  Jan 29 21:19:43.166: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 01/29/24 21:19:43.171
  STEP: Destroying namespace "container-probe-8859" for this suite. @ 01/29/24 21:19:43.187
• [154.579 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:194
  STEP: Creating a kubernetes client @ 01/29/24 21:19:43.195
  Jan 29 21:19:43.195: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename projected @ 01/29/24 21:19:43.196
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:19:43.21
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:19:43.214
  STEP: Creating a pod to test downward API volume plugin @ 01/29/24 21:19:43.218
  STEP: Saw pod success @ 01/29/24 21:19:47.249
  Jan 29 21:19:47.253: INFO: Trying to get logs from node nodeb14 pod downwardapi-volume-6e8e362f-2c0f-4ae7-b175-a158c550f07c container client-container: <nil>
  STEP: delete the pod @ 01/29/24 21:19:47.285
  Jan 29 21:19:47.304: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-538" for this suite. @ 01/29/24 21:19:47.31
• [4.121 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance]
test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 01/29/24 21:19:47.318
  Jan 29 21:19:47.318: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename pods @ 01/29/24 21:19:47.32
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:19:47.335
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:19:47.34
  STEP: Create a pod @ 01/29/24 21:19:47.344
  STEP: patching /status @ 01/29/24 21:19:49.366
  Jan 29 21:19:49.377: INFO: Status Message: "Patched by e2e test" and Reason: "E2E"
  Jan 29 21:19:49.377: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7656" for this suite. @ 01/29/24 21:19:49.383
• [2.074 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance]
test/e2e/apimachinery/webhook.go:250
  STEP: Creating a kubernetes client @ 01/29/24 21:19:49.394
  Jan 29 21:19:49.394: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename webhook @ 01/29/24 21:19:49.396
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:19:49.409
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:19:49.413
  STEP: Setting up server cert @ 01/29/24 21:19:49.437
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/29/24 21:19:49.742
  STEP: Deploying the webhook pod @ 01/29/24 21:19:49.753
  STEP: Wait for the deployment to be ready @ 01/29/24 21:19:49.767
  Jan 29 21:19:49.773: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 01/29/24 21:19:51.786
  STEP: Verifying the service has paired with the endpoint @ 01/29/24 21:19:51.801
  Jan 29 21:19:52.801: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 01/29/24 21:19:52.81
  STEP: create a configmap that should be updated by the webhook @ 01/29/24 21:19:52.836
  Jan 29 21:19:52.856: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2386" for this suite. @ 01/29/24 21:19:52.902
  STEP: Destroying namespace "webhook-markers-7259" for this suite. @ 01/29/24 21:19:52.907
• [3.519 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance]
test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 01/29/24 21:19:52.914
  Jan 29 21:19:52.914: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename deployment @ 01/29/24 21:19:52.916
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:19:52.928
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:19:52.933
  Jan 29 21:19:52.938: INFO: Creating deployment "test-recreate-deployment"
  Jan 29 21:19:52.945: INFO: Waiting deployment "test-recreate-deployment" to be updated to revision 1
  Jan 29 21:19:52.963: INFO: deployment "test-recreate-deployment" doesn't have the required revision set
  Jan 29 21:19:54.972: INFO: Waiting deployment "test-recreate-deployment" to complete
  Jan 29 21:19:54.975: INFO: Triggering a new rollout for deployment "test-recreate-deployment"
  Jan 29 21:19:54.985: INFO: Updating deployment test-recreate-deployment
  Jan 29 21:19:54.985: INFO: Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  Jan 29 21:19:55.059: INFO: Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8280",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "61101c8f-a4ff-46d2-90dc-0b3b9a514fb0",
      ResourceVersion: (string) (len=4) "5175",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842159992,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842159994,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842159995,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842159995,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842159995,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842159995,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842159992,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=63) "ReplicaSet \"test-recreate-deployment-76fb77d45\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jan 29 21:19:55.067: INFO: New ReplicaSet "test-recreate-deployment-76fb77d45" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8280",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "43f6831c-ad77-4669-8193-df86939250b1",
      ResourceVersion: (string) (len=4) "5174",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842159995,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "61101c8f-a4ff-46d2-90dc-0b3b9a514fb0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842159995,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 36 31 31 30 31 63  38 66 2d 61 34 66 66 2d  |\"61101c8f-a4ff-|
              00000120  34 36 64 32 2d 39 30 64  63 2d 30 62 33 62 39 61  |46d2-90dc-0b3b9a|
              00000130  35 31 34 66 62 30 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |514fb0\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842159995,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45",
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45",
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jan 29 21:19:55.069: INFO: All old ReplicaSets of Deployment "test-recreate-deployment":
  Jan 29 21:19:55.070: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-dd4bc9d6d",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8280",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "be7bcff3-e66c-41b5-a4c6-84d1a8244803",
      ResourceVersion: (string) (len=4) "5164",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842159992,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "dd4bc9d6d"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "61101c8f-a4ff-46d2-90dc-0b3b9a514fb0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842159994,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 36 31 31 30 31 63  38 66 2d 61 34 66 66 2d  |\"61101c8f-a4ff-|
              00000120  34 36 64 32 2d 39 30 64  63 2d 30 62 33 62 39 61  |46d2-90dc-0b3b9a|
              00000130  35 31 34 66 62 30 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |514fb0\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842159995,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "dd4bc9d6d"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "dd4bc9d6d"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jan 29 21:19:55.076: INFO: Pod "test-recreate-deployment-76fb77d45-47zch" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-recreate-deployment-76fb77d45-47zch",
      GenerateName: (string) (len=35) "test-recreate-deployment-76fb77d45-",
      Namespace: (string) (len=15) "deployment-8280",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "435f9d9f-b984-4fd1-a9a6-aa0f7e930ab5",
      ResourceVersion: (string) (len=4) "5176",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842159995,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
          UID: (types.UID) (len=36) "43f6831c-ad77-4669-8193-df86939250b1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842159995,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 33  66 36 38 33 31 63 2d 61  |d\":\"43f6831c-a|
              00000090  64 37 37 2d 34 36 36 39  2d 38 31 39 33 2d 64 66  |d77-4669-8193-df|
              000000a0  38 36 39 33 39 32 35 30  62 31 5c 22 7d 22 3a 7b  |86939250b1\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842159995,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dmrfv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dmrfv",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodeb14",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842159995,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842159995,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842159995,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842159995,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.100.114",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842159995,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan 29 21:19:55.080: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-8280" for this suite. @ 01/29/24 21:19:55.084
• [2.177 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance]
test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 01/29/24 21:19:55.093
  Jan 29 21:19:55.093: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename cronjob @ 01/29/24 21:19:55.095
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:19:55.107
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:19:55.11
  STEP: Creating a suspended cronjob @ 01/29/24 21:19:55.114
  STEP: Ensuring no jobs are scheduled @ 01/29/24 21:19:55.119
  STEP: Ensuring no job exists by listing jobs explicitly @ 01/29/24 21:24:55.128
  STEP: Removing cronjob @ 01/29/24 21:24:55.133
  Jan 29 21:24:55.140: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-3924" for this suite. @ 01/29/24 21:24:55.147
• [300.061 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 01/29/24 21:24:55.164
  Jan 29 21:24:55.164: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename projected @ 01/29/24 21:24:55.166
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:24:55.185
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:24:55.19
  STEP: Creating projection with secret that has name projected-secret-test-11dfafae-c360-4a4d-a479-43bd92007226 @ 01/29/24 21:24:55.195
  STEP: Creating a pod to test consume secrets @ 01/29/24 21:24:55.2
  STEP: Saw pod success @ 01/29/24 21:24:59.23
  Jan 29 21:24:59.234: INFO: Trying to get logs from node nodeb14 pod pod-projected-secrets-1433998b-9bc5-4997-80a1-3a99ae477ea8 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 01/29/24 21:24:59.264
  Jan 29 21:24:59.282: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8157" for this suite. @ 01/29/24 21:24:59.286
• [4.128 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance]
test/e2e/apimachinery/namespace.go:398
  STEP: Creating a kubernetes client @ 01/29/24 21:24:59.293
  Jan 29 21:24:59.293: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename namespaces @ 01/29/24 21:24:59.295
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:24:59.307
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:24:59.311
  STEP: Creating namespace "e2e-ns-wxrth" @ 01/29/24 21:24:59.316
  Jan 29 21:24:59.327: INFO: Namespace "e2e-ns-wxrth-7980" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-wxrth-7980" @ 01/29/24 21:24:59.327
  Jan 29 21:24:59.335: INFO: Namespace "e2e-ns-wxrth-7980" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-wxrth-7980" @ 01/29/24 21:24:59.335
  Jan 29 21:24:59.344: INFO: Namespace "e2e-ns-wxrth-7980" has []v1.FinalizerName{"kubernetes"}
  Jan 29 21:24:59.344: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-9046" for this suite. @ 01/29/24 21:24:59.348
  STEP: Destroying namespace "e2e-ns-wxrth-7980" for this suite. @ 01/29/24 21:24:59.354
• [0.067 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance]
test/e2e/network/service.go:1493
  STEP: Creating a kubernetes client @ 01/29/24 21:24:59.361
  Jan 29 21:24:59.361: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename services @ 01/29/24 21:24:59.363
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:24:59.375
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:24:59.379
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-3118 @ 01/29/24 21:24:59.384
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 01/29/24 21:24:59.404
  STEP: creating service externalsvc in namespace services-3118 @ 01/29/24 21:24:59.404
  STEP: creating replication controller externalsvc in namespace services-3118 @ 01/29/24 21:24:59.416
  I0129 21:24:59.422344      23 runners.go:197] Created replication controller with name: externalsvc, namespace: services-3118, replica count: 2
  I0129 21:25:02.474237      23 runners.go:197] externalsvc Pods: 2 out of 2 created, 1 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0129 21:25:05.476150      23 runners.go:197] externalsvc Pods: 2 out of 2 created, 1 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0129 21:25:08.476453      23 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 01/29/24 21:25:08.481
  Jan 29 21:25:08.501: INFO: Creating new exec pod
  Jan 29 21:25:10.515: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=services-3118 exec execpodbx42j -- /bin/sh -x -c nslookup clusterip-service.services-3118.svc.cluster.local'
  Jan 29 21:25:10.796: INFO: stderr: "+ nslookup clusterip-service.services-3118.svc.cluster.local\n"
  Jan 29 21:25:10.796: INFO: stdout: "Server:\t\t10.96.0.10\nAddress:\t10.96.0.10#53\n\nclusterip-service.services-3118.svc.cluster.local\tcanonical name = externalsvc.services-3118.svc.cluster.local.\nName:\texternalsvc.services-3118.svc.cluster.local\nAddress: 10.97.240.136\n\n"
  Jan 29 21:25:10.796: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController externalsvc in namespace services-3118, will wait for the garbage collector to delete the pods @ 01/29/24 21:25:10.802
  Jan 29 21:25:10.864: INFO: Deleting ReplicationController externalsvc took: 7.354003ms
  Jan 29 21:25:10.964: INFO: Terminating ReplicationController externalsvc pods took: 100.900465ms
  Jan 29 21:25:14.087: INFO: Cleaning up the ClusterIP to ExternalName test service
  STEP: Destroying namespace "services-3118" for this suite. @ 01/29/24 21:25:14.096
• [14.742 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance]
test/e2e/apimachinery/resource_quota.go:946
  STEP: Creating a kubernetes client @ 01/29/24 21:25:14.105
  Jan 29 21:25:14.105: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename resourcequota @ 01/29/24 21:25:14.107
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:25:14.12
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:25:14.125
  STEP: Creating a ResourceQuota @ 01/29/24 21:25:14.13
  STEP: Getting a ResourceQuota @ 01/29/24 21:25:14.134
  STEP: Listing all ResourceQuotas with LabelSelector @ 01/29/24 21:25:14.137
  STEP: Patching the ResourceQuota @ 01/29/24 21:25:14.14
  STEP: Deleting a Collection of ResourceQuotas @ 01/29/24 21:25:14.145
  STEP: Verifying the deleted ResourceQuota @ 01/29/24 21:25:14.154
  Jan 29 21:25:14.157: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6695" for this suite. @ 01/29/24 21:25:14.161
• [0.062 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance]
test/e2e/apimachinery/resource_quota.go:232
  STEP: Creating a kubernetes client @ 01/29/24 21:25:14.167
  Jan 29 21:25:14.168: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename resourcequota @ 01/29/24 21:25:14.17
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:25:14.186
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:25:14.191
  STEP: Counting existing ResourceQuota @ 01/29/24 21:25:14.195
  STEP: Creating a ResourceQuota @ 01/29/24 21:25:19.199
  STEP: Ensuring resource quota status is calculated @ 01/29/24 21:25:19.206
  STEP: Creating a Pod that fits quota @ 01/29/24 21:25:21.213
  STEP: Ensuring ResourceQuota status captures the pod usage @ 01/29/24 21:25:21.229
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 01/29/24 21:25:23.235
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 01/29/24 21:25:23.24
  STEP: Ensuring a pod cannot update its resource requirements @ 01/29/24 21:25:23.243
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 01/29/24 21:25:23.248
  STEP: Deleting the pod @ 01/29/24 21:25:25.254
  STEP: Ensuring resource quota status released the pod usage @ 01/29/24 21:25:25.267
  Jan 29 21:25:27.273: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4474" for this suite. @ 01/29/24 21:25:27.278
• [13.119 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance]
test/e2e/network/service.go:3552
  STEP: Creating a kubernetes client @ 01/29/24 21:25:27.287
  Jan 29 21:25:27.287: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename services @ 01/29/24 21:25:27.289
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:25:27.306
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:25:27.311
  STEP: creating a collection of services @ 01/29/24 21:25:27.315
  Jan 29 21:25:27.315: INFO: Creating e2e-svc-a-t7qw5
  Jan 29 21:25:27.332: INFO: Creating e2e-svc-b-2gdjv
  Jan 29 21:25:27.346: INFO: Creating e2e-svc-c-rtsxq
  STEP: deleting service collection @ 01/29/24 21:25:27.367
  Jan 29 21:25:27.406: INFO: Collection of services has been deleted
  Jan 29 21:25:27.406: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5404" for this suite. @ 01/29/24 21:25:27.411
• [0.129 seconds]
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:222
  STEP: Creating a kubernetes client @ 01/29/24 21:25:27.417
  Jan 29 21:25:27.417: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename downward-api @ 01/29/24 21:25:27.419
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:25:27.434
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:25:27.439
  STEP: Creating a pod to test downward API volume plugin @ 01/29/24 21:25:27.443
  STEP: Saw pod success @ 01/29/24 21:25:31.467
  Jan 29 21:25:31.471: INFO: Trying to get logs from node nodeb14 pod downwardapi-volume-7247c473-d040-49e5-9fef-da16eb454944 container client-container: <nil>
  STEP: delete the pod @ 01/29/24 21:25:31.477
  Jan 29 21:25:31.496: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1097" for this suite. @ 01/29/24 21:25:31.501
• [4.090 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance]
test/e2e/apps/disruption.go:141
  STEP: Creating a kubernetes client @ 01/29/24 21:25:31.507
  Jan 29 21:25:31.507: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename disruption @ 01/29/24 21:25:31.509
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:25:31.524
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:25:31.529
  STEP: Waiting for the pdb to be processed @ 01/29/24 21:25:31.54
  STEP: Waiting for all pods to be running @ 01/29/24 21:25:33.579
  Jan 29 21:25:33.585: INFO: running pods: 0 < 3
  Jan 29 21:25:35.594: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-1644" for this suite. @ 01/29/24 21:25:35.599
• [4.099 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance]
test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 01/29/24 21:25:35.607
  Jan 29 21:25:35.607: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename deployment @ 01/29/24 21:25:35.609
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:25:35.622
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:25:35.627
  Jan 29 21:25:35.631: INFO: Creating deployment "webserver-deployment"
  Jan 29 21:25:35.639: INFO: Waiting for observed generation 1
  Jan 29 21:25:37.648: INFO: Waiting for all required pods to come up
  Jan 29 21:25:37.655: INFO: Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 01/29/24 21:25:37.655
  Jan 29 21:25:37.655: INFO: Waiting for deployment "webserver-deployment" to complete
  Jan 29 21:25:37.663: INFO: Updating deployment "webserver-deployment" with a non-existent image
  Jan 29 21:25:37.674: INFO: Updating deployment webserver-deployment
  Jan 29 21:25:37.674: INFO: Waiting for observed generation 2
  Jan 29 21:25:39.682: INFO: Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  Jan 29 21:25:39.685: INFO: Waiting for the first rollout's replicaset to have .spec.replicas = 8
  Jan 29 21:25:39.688: INFO: Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  Jan 29 21:25:39.697: INFO: Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  Jan 29 21:25:39.697: INFO: Waiting for the second rollout's replicaset to have .spec.replicas = 5
  Jan 29 21:25:39.700: INFO: Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  Jan 29 21:25:39.706: INFO: Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  Jan 29 21:25:39.706: INFO: Scaling up the deployment "webserver-deployment" from 10 to 30
  Jan 29 21:25:39.717: INFO: Updating deployment webserver-deployment
  Jan 29 21:25:39.717: INFO: Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  Jan 29 21:25:39.724: INFO: Verifying that first rollout's replicaset has .spec.replicas = 20
  Jan 29 21:25:39.728: INFO: Verifying that second rollout's replicaset has .spec.replicas = 13
  Jan 29 21:25:39.740: INFO: Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2497",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f7071f05-c04c-4eb1-bd59-7572869d398b",
      ResourceVersion: (string) (len=4) "6209",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842160335,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 13,
      UpdatedReplicas: (int32) 5,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      UnavailableReplicas: (int32) 5,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160337,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160335,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=59) "ReplicaSet \"webserver-deployment-9b4f5bf69\" is progressing."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jan 29 21:25:39.765: INFO: New ReplicaSet "webserver-deployment-9b4f5bf69" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2497",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "490a14aa-031d-487f-b6e3-a98d96b7b65c",
      ResourceVersion: (string) (len=4) "6202",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842160337,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "f7071f05-c04c-4eb1-bd59-7572869d398b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160337,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 66 37 30 37 31 66  30 35 2d 63 30 34 63 2d  |\"f7071f05-c04c-|
              00000120  34 65 62 31 2d 62 64 35  39 2d 37 35 37 32 38 36  |4eb1-bd59-757286|
              00000130  39 64 33 39 38 62 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |9d398b\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 5,
      FullyLabeledReplicas: (int32) 5,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jan 29 21:25:39.775: INFO: All old ReplicaSets of Deployment "webserver-deployment":
  Jan 29 21:25:39.775: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2497",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "54ebeede-14ad-404d-b9d6-9a286ba09197",
      ResourceVersion: (string) (len=4) "6199",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842160335,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "f7071f05-c04c-4eb1-bd59-7572869d398b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160337,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 66 37 30 37 31 66  30 35 2d 63 30 34 63 2d  |\"f7071f05-c04c-|
              00000120  34 65 62 31 2d 62 64 35  39 2d 37 35 37 32 38 36  |4eb1-bd59-757286|
              00000130  39 64 33 39 38 62 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |9d398b\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 8,
      FullyLabeledReplicas: (int32) 8,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jan 29 21:25:39.794: INFO: Pod "webserver-deployment-557759b7c7-2lpb9" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-2lpb9",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2497",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "07dbdbe3-7841-4611-9d8d-00c0cada7766",
      ResourceVersion: (string) (len=4) "6249",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842160339,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "54ebeede-14ad-404d-b9d6-9a286ba09197",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 34  65 62 65 65 64 65 2d 31  |d\":\"54ebeede-1|
              00000090  34 61 64 2d 34 30 34 64  2d 62 39 64 36 2d 39 61  |4ad-404d-b9d6-9a|
              000000a0  32 38 36 62 61 30 39 31  39 37 5c 22 7d 22 3a 7b  |286ba09197\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-sqrbs",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-sqrbs",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodeb14",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.100.114",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842160339,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan 29 21:25:39.797: INFO: Pod "webserver-deployment-557759b7c7-2whdd" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-2whdd",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2497",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "74abb415-b302-463a-90ab-652e550b8a8a",
      ResourceVersion: (string) (len=4) "6241",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842160339,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "54ebeede-14ad-404d-b9d6-9a286ba09197",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 34  65 62 65 65 64 65 2d 31  |d\":\"54ebeede-1|
              00000090  34 61 64 2d 34 30 34 64  2d 62 39 64 36 2d 39 61  |4ad-404d-b9d6-9a|
              000000a0  32 38 36 62 61 30 39 31  39 37 5c 22 7d 22 3a 7b  |286ba09197\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-96ms8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-96ms8",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodeb14",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan 29 21:25:39.800: INFO: Pod "webserver-deployment-557759b7c7-446pf" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-446pf",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2497",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4e239c79-4c2f-4992-b176-12dd99adf98a",
      ResourceVersion: (string) (len=4) "6252",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842160339,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "54ebeede-14ad-404d-b9d6-9a286ba09197",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 34  65 62 65 65 64 65 2d 31  |d\":\"54ebeede-1|
              00000090  34 61 64 2d 34 30 34 64  2d 62 39 64 36 2d 39 61  |4ad-404d-b9d6-9a|
              000000a0  32 38 36 62 61 30 39 31  39 37 5c 22 7d 22 3a 7b  |286ba09197\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wns7w",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wns7w",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodec03",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan 29 21:25:39.802: INFO: Pod "webserver-deployment-557759b7c7-5zcdw" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-5zcdw",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2497",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5cfdfd4b-e0b1-4f7a-8627-17f5bcb8ef4f",
      ResourceVersion: (string) (len=4) "6228",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842160339,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "54ebeede-14ad-404d-b9d6-9a286ba09197",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 34  65 62 65 65 64 65 2d 31  |d\":\"54ebeede-1|
              00000090  34 61 64 2d 34 30 34 64  2d 62 39 64 36 2d 39 61  |4ad-404d-b9d6-9a|
              000000a0  32 38 36 62 61 30 39 31  39 37 5c 22 7d 22 3a 7b  |286ba09197\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4cmjv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4cmjv",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodec03",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan 29 21:25:39.805: INFO: Pod "webserver-deployment-557759b7c7-6jf9v" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-6jf9v",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2497",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c1c56bf9-20b5-4c77-a671-81fa34f3f120",
      ResourceVersion: (string) (len=4) "6256",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842160339,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "54ebeede-14ad-404d-b9d6-9a286ba09197",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 34  65 62 65 65 64 65 2d 31  |d\":\"54ebeede-1|
              00000090  34 61 64 2d 34 30 34 64  2d 62 39 64 36 2d 39 61  |4ad-404d-b9d6-9a|
              000000a0  32 38 36 62 61 30 39 31  39 37 5c 22 7d 22 3a 7b  |286ba09197\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fppz8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fppz8",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodec03",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.100.173",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842160339,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan 29 21:25:39.809: INFO: Pod "webserver-deployment-557759b7c7-6nwgp" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-6nwgp",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2497",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b5952f83-d2da-477d-915f-dc3de1edeb00",
      ResourceVersion: (string) (len=4) "6251",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842160339,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "54ebeede-14ad-404d-b9d6-9a286ba09197",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 34  65 62 65 65 64 65 2d 31  |d\":\"54ebeede-1|
              00000090  34 61 64 2d 34 30 34 64  2d 62 39 64 36 2d 39 61  |4ad-404d-b9d6-9a|
              000000a0  32 38 36 62 61 30 39 31  39 37 5c 22 7d 22 3a 7b  |286ba09197\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rtk65",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rtk65",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodec03",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan 29 21:25:39.812: INFO: Pod "webserver-deployment-557759b7c7-c4pzn" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-c4pzn",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2497",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "dd5d4ffa-6238-4f77-8fad-eb6be96b0673",
      ResourceVersion: (string) (len=4) "6099",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842160335,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "54ebeede-14ad-404d-b9d6-9a286ba09197",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160335,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 34  65 62 65 65 64 65 2d 31  |d\":\"54ebeede-1|
              00000090  34 61 64 2d 34 30 34 64  2d 62 39 64 36 2d 39 61  |4ad-404d-b9d6-9a|
              000000a0  32 38 36 62 61 30 39 31  39 37 5c 22 7d 22 3a 7b  |286ba09197\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160336,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=518) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 34 34 2e 32  2e 35 38 5c 22 7d 22 3a  |10.244.2.58\"}":|
              000001e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              000001f0  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000200  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nrpgb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nrpgb",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodeb14",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160335,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160336,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160336,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160335,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.100.114",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=11) "10.244.2.58",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.2.58"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842160335,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63842160336,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://92656ca7b3775f9d0da760dcfa46935e57711e401c241740225d9841018545e1",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan 29 21:25:39.816: INFO: Pod "webserver-deployment-557759b7c7-f7xk5" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-f7xk5",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2497",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1c96a7d0-7f0f-4534-9c51-0be65a5854cf",
      ResourceVersion: (string) (len=4) "6109",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842160335,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "54ebeede-14ad-404d-b9d6-9a286ba09197",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160335,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 34  65 62 65 65 64 65 2d 31  |d\":\"54ebeede-1|
              00000090  34 61 64 2d 34 30 34 64  2d 62 39 64 36 2d 39 61  |4ad-404d-b9d6-9a|
              000000a0  32 38 36 62 61 30 39 31  39 37 5c 22 7d 22 3a 7b  |286ba09197\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160337,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=517) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 34 34 2e 31  2e 38 5c 22 7d 22 3a 7b  |10.244.1.8\"}":{|
              000001e0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000001f0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000200  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lj9mk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lj9mk",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodec03",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160335,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160337,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160337,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160335,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.100.173",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=10) "10.244.1.8",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.244.1.8"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842160335,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63842160336,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://637076a634038458c0636d22eecc270af5c1e4288e687b89c548b9a55a04da2a",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan 29 21:25:39.820: INFO: Pod "webserver-deployment-557759b7c7-gjz9b" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-gjz9b",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2497",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "54c00315-1bb9-4ca5-85c9-84f360fa0743",
      ResourceVersion: (string) (len=4) "6092",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842160335,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "54ebeede-14ad-404d-b9d6-9a286ba09197",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160335,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 34  65 62 65 65 64 65 2d 31  |d\":\"54ebeede-1|
              00000090  34 61 64 2d 34 30 34 64  2d 62 39 64 36 2d 39 61  |4ad-404d-b9d6-9a|
              000000a0  32 38 36 62 61 30 39 31  39 37 5c 22 7d 22 3a 7b  |286ba09197\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160336,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=518) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 34 34 2e 32  2e 35 39 5c 22 7d 22 3a  |10.244.2.59\"}":|
              000001e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              000001f0  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000200  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-k68lb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-k68lb",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodeb14",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160335,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160336,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160336,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160335,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.100.114",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=11) "10.244.2.59",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.2.59"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842160335,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63842160336,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://babcadc938373d63cbd9ec77c44b11f912db454ebf73d7eb01f4795784f967b0",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan 29 21:25:39.824: INFO: Pod "webserver-deployment-557759b7c7-h9c9k" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-h9c9k",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2497",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "dda3613d-276e-450d-80fe-9c1d973f0aed",
      ResourceVersion: (string) (len=4) "6114",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842160335,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "54ebeede-14ad-404d-b9d6-9a286ba09197",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160335,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 34  65 62 65 65 64 65 2d 31  |d\":\"54ebeede-1|
              00000090  34 61 64 2d 34 30 34 64  2d 62 39 64 36 2d 39 61  |4ad-404d-b9d6-9a|
              000000a0  32 38 36 62 61 30 39 31  39 37 5c 22 7d 22 3a 7b  |286ba09197\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160337,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=518) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 34 34 2e 31  2e 31 30 5c 22 7d 22 3a  |10.244.1.10\"}":|
              000001e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              000001f0  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000200  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dtggs",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dtggs",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodec03",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160335,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160337,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160337,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160335,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.100.173",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=11) "10.244.1.10",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.1.10"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842160335,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63842160336,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://51f807daf9d7273a9c8b210f594317378429d9d353a30dfbafff853ab983a5bd",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan 29 21:25:39.828: INFO: Pod "webserver-deployment-557759b7c7-kv9sj" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-kv9sj",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2497",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2c91e64a-6aa3-48c6-b640-647eea87b048",
      ResourceVersion: (string) (len=4) "6223",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842160339,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "54ebeede-14ad-404d-b9d6-9a286ba09197",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 34  65 62 65 65 64 65 2d 31  |d\":\"54ebeede-1|
              00000090  34 61 64 2d 34 30 34 64  2d 62 39 64 36 2d 39 61  |4ad-404d-b9d6-9a|
              000000a0  32 38 36 62 61 30 39 31  39 37 5c 22 7d 22 3a 7b  |286ba09197\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bvjvq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bvjvq",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodec03",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan 29 21:25:39.831: INFO: Pod "webserver-deployment-557759b7c7-l5rqm" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-l5rqm",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2497",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6c17cbef-f459-4f76-b43a-13b108b81722",
      ResourceVersion: (string) (len=4) "6231",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842160339,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "54ebeede-14ad-404d-b9d6-9a286ba09197",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 34  65 62 65 65 64 65 2d 31  |d\":\"54ebeede-1|
              00000090  34 61 64 2d 34 30 34 64  2d 62 39 64 36 2d 39 61  |4ad-404d-b9d6-9a|
              000000a0  32 38 36 62 61 30 39 31  39 37 5c 22 7d 22 3a 7b  |286ba09197\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rdwhx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rdwhx",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodeb14",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan 29 21:25:39.833: INFO: Pod "webserver-deployment-557759b7c7-lnx5d" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-lnx5d",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2497",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bbf8d34e-abb3-4b13-ab05-b6d7df164d97",
      ResourceVersion: (string) (len=4) "6090",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842160335,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "54ebeede-14ad-404d-b9d6-9a286ba09197",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160335,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 34  65 62 65 65 64 65 2d 31  |d\":\"54ebeede-1|
              00000090  34 61 64 2d 34 30 34 64  2d 62 39 64 36 2d 39 61  |4ad-404d-b9d6-9a|
              000000a0  32 38 36 62 61 30 39 31  39 37 5c 22 7d 22 3a 7b  |286ba09197\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160336,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=518) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 34 34 2e 32  2e 35 37 5c 22 7d 22 3a  |10.244.2.57\"}":|
              000001e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              000001f0  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000200  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wx9nm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wx9nm",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodeb14",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160335,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160336,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160336,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160335,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.100.114",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=11) "10.244.2.57",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.2.57"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842160335,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63842160336,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://3a0daa6805575381d62ffe5b8f9bd406e4d4454a2eedbc8d69b534988ddb6ad9",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan 29 21:25:39.837: INFO: Pod "webserver-deployment-557759b7c7-nr89l" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-nr89l",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2497",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5a66fae8-df40-4c7b-921c-4b3422cd72e3",
      ResourceVersion: (string) (len=4) "6224",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842160339,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "54ebeede-14ad-404d-b9d6-9a286ba09197",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 34  65 62 65 65 64 65 2d 31  |d\":\"54ebeede-1|
              00000090  34 61 64 2d 34 30 34 64  2d 62 39 64 36 2d 39 61  |4ad-404d-b9d6-9a|
              000000a0  32 38 36 62 61 30 39 31  39 37 5c 22 7d 22 3a 7b  |286ba09197\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qdjj5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qdjj5",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodec03",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.100.173",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842160339,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan 29 21:25:39.840: INFO: Pod "webserver-deployment-557759b7c7-plgld" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-plgld",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2497",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ec9d6703-e49f-4719-b149-561566eccb74",
      ResourceVersion: (string) (len=4) "6095",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842160335,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "54ebeede-14ad-404d-b9d6-9a286ba09197",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160335,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 34  65 62 65 65 64 65 2d 31  |d\":\"54ebeede-1|
              00000090  34 61 64 2d 34 30 34 64  2d 62 39 64 36 2d 39 61  |4ad-404d-b9d6-9a|
              000000a0  32 38 36 62 61 30 39 31  39 37 5c 22 7d 22 3a 7b  |286ba09197\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160336,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=518) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 34 34 2e 32  2e 36 31 5c 22 7d 22 3a  |10.244.2.61\"}":|
              000001e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              000001f0  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000200  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jmbfc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jmbfc",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodeb14",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160335,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160336,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160336,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160335,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.100.114",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=11) "10.244.2.61",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.2.61"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842160335,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63842160336,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://24ccfffd88d04c2b29a32b8be20a6072f3ae4f7c7651f24158907a95c2d5877f",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan 29 21:25:39.844: INFO: Pod "webserver-deployment-557759b7c7-pqhlk" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-pqhlk",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2497",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7e85bae2-feed-43c1-9c95-4f6b91a6148f",
      ResourceVersion: (string) (len=4) "6103",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842160335,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "54ebeede-14ad-404d-b9d6-9a286ba09197",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160335,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 34  65 62 65 65 64 65 2d 31  |d\":\"54ebeede-1|
              00000090  34 61 64 2d 34 30 34 64  2d 62 39 64 36 2d 39 61  |4ad-404d-b9d6-9a|
              000000a0  32 38 36 62 61 30 39 31  39 37 5c 22 7d 22 3a 7b  |286ba09197\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160336,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=518) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 34 34 2e 32  2e 36 30 5c 22 7d 22 3a  |10.244.2.60\"}":|
              000001e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              000001f0  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000200  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hrr7m",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hrr7m",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodeb14",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160335,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160336,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160336,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160335,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.100.114",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=11) "10.244.2.60",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.2.60"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842160335,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63842160336,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://3c532d47ae6bc87333742ae9613feb2761663ea0be6d45f1abe80d7941e445fc",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan 29 21:25:39.848: INFO: Pod "webserver-deployment-557759b7c7-sd2vk" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-sd2vk",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2497",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "47303ce8-56ec-4b57-b360-f53330d932b8",
      ResourceVersion: (string) (len=4) "6238",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842160339,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "54ebeede-14ad-404d-b9d6-9a286ba09197",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 34  65 62 65 65 64 65 2d 31  |d\":\"54ebeede-1|
              00000090  34 61 64 2d 34 30 34 64  2d 62 39 64 36 2d 39 61  |4ad-404d-b9d6-9a|
              000000a0  32 38 36 62 61 30 39 31  39 37 5c 22 7d 22 3a 7b  |286ba09197\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2slh7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2slh7",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodeb14",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan 29 21:25:39.850: INFO: Pod "webserver-deployment-557759b7c7-wltrf" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-wltrf",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2497",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2bc558f3-1273-4ffd-ac79-ed1cc86a647d",
      ResourceVersion: (string) (len=4) "6243",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842160339,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "54ebeede-14ad-404d-b9d6-9a286ba09197",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 34  65 62 65 65 64 65 2d 31  |d\":\"54ebeede-1|
              00000090  34 61 64 2d 34 30 34 64  2d 62 39 64 36 2d 39 61  |4ad-404d-b9d6-9a|
              000000a0  32 38 36 62 61 30 39 31  39 37 5c 22 7d 22 3a 7b  |286ba09197\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xtg88",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xtg88",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodec03",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan 29 21:25:39.852: INFO: Pod "webserver-deployment-557759b7c7-wvhq8" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-wvhq8",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2497",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d40352c9-2dfb-44fb-a77f-c3e002564447",
      ResourceVersion: (string) (len=4) "6245",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842160339,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "54ebeede-14ad-404d-b9d6-9a286ba09197",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 34  65 62 65 65 64 65 2d 31  |d\":\"54ebeede-1|
              00000090  34 61 64 2d 34 30 34 64  2d 62 39 64 36 2d 39 61  |4ad-404d-b9d6-9a|
              000000a0  32 38 36 62 61 30 39 31  39 37 5c 22 7d 22 3a 7b  |286ba09197\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-b4fwn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-b4fwn",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodeb14",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan 29 21:25:39.855: INFO: Pod "webserver-deployment-557759b7c7-x8t77" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-x8t77",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2497",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "aa3beab5-4778-4166-a1b1-2df9a770ac72",
      ResourceVersion: (string) (len=4) "6110",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842160335,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "54ebeede-14ad-404d-b9d6-9a286ba09197",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160335,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 34  65 62 65 65 64 65 2d 31  |d\":\"54ebeede-1|
              00000090  34 61 64 2d 34 30 34 64  2d 62 39 64 36 2d 39 61  |4ad-404d-b9d6-9a|
              000000a0  32 38 36 62 61 30 39 31  39 37 5c 22 7d 22 3a 7b  |286ba09197\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160337,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=517) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 34 34 2e 31  2e 36 5c 22 7d 22 3a 7b  |10.244.1.6\"}":{|
              000001e0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000001f0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000200  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fktxr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fktxr",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodec03",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160335,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160337,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160337,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160335,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.100.173",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=10) "10.244.1.6",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.244.1.6"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842160335,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63842160336,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://38cc5a3d6c27f00a03cb53db79cea9ad05aabc1e1c9ae8939ec5982c7d9754eb",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan 29 21:25:39.859: INFO: Pod "webserver-deployment-9b4f5bf69-5kmwh" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-5kmwh",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-2497",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "923c024c-9ac1-4ecd-bbd4-4a0535eda11b",
      ResourceVersion: (string) (len=4) "6244",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842160339,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "490a14aa-031d-487f-b6e3-a98d96b7b65c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 39  30 61 31 34 61 61 2d 30  |d\":\"490a14aa-0|
              00000090  33 31 64 2d 34 38 37 66  2d 62 36 65 33 2d 61 39  |31d-487f-b6e3-a9|
              000000a0  38 64 39 36 62 37 62 36  35 63 5c 22 7d 22 3a 7b  |8d96b7b65c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rkw5d",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rkw5d",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodec03",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan 29 21:25:39.861: INFO: Pod "webserver-deployment-9b4f5bf69-9dpb5" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-9dpb5",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-2497",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "88a2a9fc-0cfd-4122-9340-23665fc889a6",
      ResourceVersion: (string) (len=4) "6247",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842160339,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "490a14aa-031d-487f-b6e3-a98d96b7b65c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 39  30 61 31 34 61 61 2d 30  |d\":\"490a14aa-0|
              00000090  33 31 64 2d 34 38 37 66  2d 62 36 65 33 2d 61 39  |31d-487f-b6e3-a9|
              000000a0  38 64 39 36 62 37 62 36  35 63 5c 22 7d 22 3a 7b  |8d96b7b65c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9gtq9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9gtq9",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodeb14",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan 29 21:25:39.863: INFO: Pod "webserver-deployment-9b4f5bf69-bq84l" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-bq84l",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-2497",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6628232a-6966-4f11-a600-088e584bd0e9",
      ResourceVersion: (string) (len=4) "6214",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842160339,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "490a14aa-031d-487f-b6e3-a98d96b7b65c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 39  30 61 31 34 61 61 2d 30  |d\":\"490a14aa-0|
              00000090  33 31 64 2d 34 38 37 66  2d 62 36 65 33 2d 61 39  |31d-487f-b6e3-a9|
              000000a0  38 64 39 36 62 37 62 36  35 63 5c 22 7d 22 3a 7b  |8d96b7b65c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-b8k9j",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-b8k9j",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodec03",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan 29 21:25:39.865: INFO: Pod "webserver-deployment-9b4f5bf69-dwz8h" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-dwz8h",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-2497",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "11bf7a53-234a-457d-b109-aaaf71cc9d9b",
      ResourceVersion: (string) (len=4) "6255",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842160339,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "490a14aa-031d-487f-b6e3-a98d96b7b65c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 39  30 61 31 34 61 61 2d 30  |d\":\"490a14aa-0|
              00000090  33 31 64 2d 34 38 37 66  2d 62 36 65 33 2d 61 39  |31d-487f-b6e3-a9|
              000000a0  38 64 39 36 62 37 62 36  35 63 5c 22 7d 22 3a 7b  |8d96b7b65c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-29lj8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-29lj8",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodec03",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan 29 21:25:39.868: INFO: Pod "webserver-deployment-9b4f5bf69-fxxlr" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-fxxlr",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-2497",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0abae769-3730-48cc-be24-f90b564b7873",
      ResourceVersion: (string) (len=4) "6194",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842160337,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "490a14aa-031d-487f-b6e3-a98d96b7b65c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160337,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 39  30 61 31 34 61 61 2d 30  |d\":\"490a14aa-0|
              00000090  33 31 64 2d 34 38 37 66  2d 62 36 65 33 2d 61 39  |31d-487f-b6e3-a9|
              000000a0  38 64 39 36 62 37 62 36  35 63 5c 22 7d 22 3a 7b  |8d96b7b65c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=563) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 70 6f 64 49 50  22 3a 7b 7d 2c 22 66 3a  |"f:podIP":{},"f:|
              000001e0  70 6f 64 49 50 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |podIPs":{".":{},|
              000001f0  22 6b 3a 7b 5c 22 69 70  5c 22 3a 5c 22 31 30 2e  |"k:{\"ip\":\"10.|
              00000200  32 34 34 2e 32 2e 36 32  5c 22 7d 22 3a 7b 22 2e  |244.2.62\"}":{".|
              00000210  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000220  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000230  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ndq6l",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ndq6l",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodeb14",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160337,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160337,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160337,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160337,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.100.114",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=11) "10.244.2.62",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.2.62"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842160337,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan 29 21:25:39.870: INFO: Pod "webserver-deployment-9b4f5bf69-hdffr" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-hdffr",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-2497",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "31dfd8c3-aa40-4d8b-a8b1-a271eea5baaf",
      ResourceVersion: (string) (len=4) "6174",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842160337,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "490a14aa-031d-487f-b6e3-a98d96b7b65c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160337,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 39  30 61 31 34 61 61 2d 30  |d\":\"490a14aa-0|
              00000090  33 31 64 2d 34 38 37 66  2d 62 36 65 33 2d 61 39  |31d-487f-b6e3-a9|
              000000a0  38 64 39 36 62 37 62 36  35 63 5c 22 7d 22 3a 7b  |8d96b7b65c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160337,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5t48k",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5t48k",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodeb14",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160337,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160337,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160337,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160337,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.100.114",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842160337,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan 29 21:25:39.873: INFO: Pod "webserver-deployment-9b4f5bf69-lp6zb" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-lp6zb",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-2497",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "133d5d65-b254-44d7-a332-56a48d20a6a8",
      ResourceVersion: (string) (len=4) "6149",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842160337,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "490a14aa-031d-487f-b6e3-a98d96b7b65c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160337,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 39  30 61 31 34 61 61 2d 30  |d\":\"490a14aa-0|
              00000090  33 31 64 2d 34 38 37 66  2d 62 36 65 33 2d 61 39  |31d-487f-b6e3-a9|
              000000a0  38 64 39 36 62 37 62 36  35 63 5c 22 7d 22 3a 7b  |8d96b7b65c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160337,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-p6dp7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-p6dp7",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodeb14",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160337,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160337,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160337,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160337,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.100.114",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842160337,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan 29 21:25:39.877: INFO: Pod "webserver-deployment-9b4f5bf69-ps5st" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-ps5st",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-2497",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0afaf22f-4157-461e-97dc-7f87bcc440e8",
      ResourceVersion: (string) (len=4) "6169",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842160337,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "490a14aa-031d-487f-b6e3-a98d96b7b65c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160337,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 39  30 61 31 34 61 61 2d 30  |d\":\"490a14aa-0|
              00000090  33 31 64 2d 34 38 37 66  2d 62 36 65 33 2d 61 39  |31d-487f-b6e3-a9|
              000000a0  38 64 39 36 62 37 62 36  35 63 5c 22 7d 22 3a 7b  |8d96b7b65c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160337,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-f5699",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-f5699",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodec03",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160337,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160337,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160337,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160337,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.100.173",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842160337,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan 29 21:25:39.881: INFO: Pod "webserver-deployment-9b4f5bf69-q4rzc" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-q4rzc",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-2497",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "213e4f16-6679-4aab-a568-4825148e8272",
      ResourceVersion: (string) (len=4) "6226",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842160339,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "490a14aa-031d-487f-b6e3-a98d96b7b65c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 39  30 61 31 34 61 61 2d 30  |d\":\"490a14aa-0|
              00000090  33 31 64 2d 34 38 37 66  2d 62 36 65 33 2d 61 39  |31d-487f-b6e3-a9|
              000000a0  38 64 39 36 62 37 62 36  35 63 5c 22 7d 22 3a 7b  |8d96b7b65c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-b7jsm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-b7jsm",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodeb14",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan 29 21:25:39.883: INFO: Pod "webserver-deployment-9b4f5bf69-qv764" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-qv764",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-2497",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "48a11b09-eb7d-4765-a6e0-6b6e67da37bd",
      ResourceVersion: (string) (len=4) "6188",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842160337,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "490a14aa-031d-487f-b6e3-a98d96b7b65c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160337,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 39  30 61 31 34 61 61 2d 30  |d\":\"490a14aa-0|
              00000090  33 31 64 2d 34 38 37 66  2d 62 36 65 33 2d 61 39  |31d-487f-b6e3-a9|
              000000a0  38 64 39 36 62 37 62 36  35 63 5c 22 7d 22 3a 7b  |8d96b7b65c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=563) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 70 6f 64 49 50  22 3a 7b 7d 2c 22 66 3a  |"f:podIP":{},"f:|
              000001e0  70 6f 64 49 50 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |podIPs":{".":{},|
              000001f0  22 6b 3a 7b 5c 22 69 70  5c 22 3a 5c 22 31 30 2e  |"k:{\"ip\":\"10.|
              00000200  32 34 34 2e 31 2e 31 32  5c 22 7d 22 3a 7b 22 2e  |244.1.12\"}":{".|
              00000210  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000220  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000230  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kwrmd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kwrmd",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodec03",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160337,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160337,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160337,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160337,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.100.173",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=11) "10.244.1.12",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.1.12"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842160337,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan 29 21:25:39.885: INFO: Pod "webserver-deployment-9b4f5bf69-wcv2m" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-wcv2m",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-2497",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "34347296-17ce-47a0-a219-60fbd7eed17f",
      ResourceVersion: (string) (len=4) "6232",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842160339,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "490a14aa-031d-487f-b6e3-a98d96b7b65c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 39  30 61 31 34 61 61 2d 30  |d\":\"490a14aa-0|
              00000090  33 31 64 2d 34 38 37 66  2d 62 36 65 33 2d 61 39  |31d-487f-b6e3-a9|
              000000a0  38 64 39 36 62 37 62 36  35 63 5c 22 7d 22 3a 7b  |8d96b7b65c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6mbtc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6mbtc",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodec03",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan 29 21:25:39.887: INFO: Pod "webserver-deployment-9b4f5bf69-xzkp6" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-xzkp6",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-2497",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "be0ff6c3-343b-41fb-88da-cfc124109236",
      ResourceVersion: (string) (len=4) "6253",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842160339,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "490a14aa-031d-487f-b6e3-a98d96b7b65c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 39  30 61 31 34 61 61 2d 30  |d\":\"490a14aa-0|
              00000090  33 31 64 2d 34 38 37 66  2d 62 36 65 33 2d 61 39  |31d-487f-b6e3-a9|
              000000a0  38 64 39 36 62 37 62 36  35 63 5c 22 7d 22 3a 7b  |8d96b7b65c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hnqrw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hnqrw",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodeb14",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan 29 21:25:39.889: INFO: Pod "webserver-deployment-9b4f5bf69-zsxn7" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-zsxn7",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-2497",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b7e1f5da-7fd3-4c26-a01a-dde4f7941313",
      ResourceVersion: (string) (len=4) "6246",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842160339,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "490a14aa-031d-487f-b6e3-a98d96b7b65c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 39  30 61 31 34 61 61 2d 30  |d\":\"490a14aa-0|
              00000090  33 31 64 2d 34 38 37 66  2d 62 36 65 33 2d 61 39  |31d-487f-b6e3-a9|
              000000a0  38 64 39 36 62 37 62 36  35 63 5c 22 7d 22 3a 7b  |8d96b7b65c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zz7x4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zz7x4",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodeb14",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842160339,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan 29 21:25:39.891: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-2497" for this suite. @ 01/29/24 21:25:39.898
• [4.297 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:167
  STEP: Creating a kubernetes client @ 01/29/24 21:25:39.907
  Jan 29 21:25:39.907: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename emptydir @ 01/29/24 21:25:39.909
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:25:39.922
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:25:39.926
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 01/29/24 21:25:39.93
  STEP: Saw pod success @ 01/29/24 21:25:43.953
  Jan 29 21:25:43.957: INFO: Trying to get logs from node nodeb14 pod pod-0a6cda04-d1c1-4175-8f96-bbe3155584af container test-container: <nil>
  STEP: delete the pod @ 01/29/24 21:25:43.968
  Jan 29 21:25:43.983: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2290" for this suite. @ 01/29/24 21:25:43.989
• [4.090 seconds]
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance]
test/e2e/common/node/secrets.go:140
  STEP: Creating a kubernetes client @ 01/29/24 21:25:43.998
  Jan 29 21:25:43.998: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename secrets @ 01/29/24 21:25:44
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:25:44.013
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:25:44.018
  STEP: Creating projection with secret that has name secret-emptykey-test-77546f55-53ad-4193-a656-d74a1c4878f3 @ 01/29/24 21:25:44.023
  Jan 29 21:25:44.027: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7235" for this suite. @ 01/29/24 21:25:44.031
• [0.039 seconds]
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance]
test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 01/29/24 21:25:44.037
  Jan 29 21:25:44.037: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename crd-watch @ 01/29/24 21:25:44.039
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:25:44.053
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:25:44.058
  Jan 29 21:25:44.062: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Creating first CR  @ 01/29/24 21:25:46.624
  Jan 29 21:25:46.629: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-01-29T21:25:46Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-01-29T21:25:46Z]] name:name1 resourceVersion:6626 uid:26062802-53d4-4cae-877e-fd47162a0fd3] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Creating second CR @ 01/29/24 21:25:56.632
  Jan 29 21:25:56.640: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-01-29T21:25:56Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-01-29T21:25:56Z]] name:name2 resourceVersion:6654 uid:da9a2d42-4d02-4317-9e3b-9e618f407272] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying first CR @ 01/29/24 21:26:06.641
  Jan 29 21:26:06.650: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-01-29T21:25:46Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-01-29T21:26:06Z]] name:name1 resourceVersion:6670 uid:26062802-53d4-4cae-877e-fd47162a0fd3] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying second CR @ 01/29/24 21:26:16.653
  Jan 29 21:26:16.664: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-01-29T21:25:56Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-01-29T21:26:16Z]] name:name2 resourceVersion:6687 uid:da9a2d42-4d02-4317-9e3b-9e618f407272] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting first CR @ 01/29/24 21:26:26.667
  Jan 29 21:26:26.675: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-01-29T21:25:46Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-01-29T21:26:06Z]] name:name1 resourceVersion:6703 uid:26062802-53d4-4cae-877e-fd47162a0fd3] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting second CR @ 01/29/24 21:26:36.676
  Jan 29 21:26:36.685: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-01-29T21:25:56Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-01-29T21:26:16Z]] name:name2 resourceVersion:6719 uid:da9a2d42-4d02-4317-9e3b-9e618f407272] num:map[num1:9223372036854775807 num2:1000000]]}
  Jan 29 21:26:47.204: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-2151" for this suite. @ 01/29/24 21:26:47.21
• [63.180 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:222
  STEP: Creating a kubernetes client @ 01/29/24 21:26:47.224
  Jan 29 21:26:47.224: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename projected @ 01/29/24 21:26:47.226
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:26:47.242
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:26:47.246
  STEP: Creating a pod to test downward API volume plugin @ 01/29/24 21:26:47.251
  STEP: Saw pod success @ 01/29/24 21:26:51.274
  Jan 29 21:26:51.278: INFO: Trying to get logs from node nodeb14 pod downwardapi-volume-f4c61b79-06f1-4fe6-9068-b78162223d20 container client-container: <nil>
  STEP: delete the pod @ 01/29/24 21:26:51.285
  Jan 29 21:26:51.299: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3060" for this suite. @ 01/29/24 21:26:51.303
• [4.083 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance]
test/e2e/network/service.go:3142
  STEP: Creating a kubernetes client @ 01/29/24 21:26:51.31
  Jan 29 21:26:51.310: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename services @ 01/29/24 21:26:51.312
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:26:51.323
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:26:51.326
  STEP: creating an Endpoint @ 01/29/24 21:26:51.333
  STEP: waiting for available Endpoint @ 01/29/24 21:26:51.337
  STEP: listing all Endpoints @ 01/29/24 21:26:51.339
  STEP: updating the Endpoint @ 01/29/24 21:26:51.342
  STEP: fetching the Endpoint @ 01/29/24 21:26:51.349
  STEP: patching the Endpoint @ 01/29/24 21:26:51.352
  STEP: fetching the Endpoint @ 01/29/24 21:26:51.364
  STEP: deleting the Endpoint by Collection @ 01/29/24 21:26:51.367
  STEP: waiting for Endpoint deletion @ 01/29/24 21:26:51.374
  STEP: fetching the Endpoint @ 01/29/24 21:26:51.377
  Jan 29 21:26:51.380: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3596" for this suite. @ 01/29/24 21:26:51.385
• [0.081 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 01/29/24 21:26:51.393
  Jan 29 21:26:51.393: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename pods @ 01/29/24 21:26:51.394
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:26:51.406
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:26:51.41
  STEP: creating the pod @ 01/29/24 21:26:51.415
  STEP: setting up watch @ 01/29/24 21:26:51.415
  STEP: submitting the pod to kubernetes @ 01/29/24 21:26:51.519
  STEP: verifying the pod is in kubernetes @ 01/29/24 21:26:51.529
  STEP: verifying pod creation was observed @ 01/29/24 21:26:51.532
  STEP: deleting the pod gracefully @ 01/29/24 21:26:53.545
  STEP: verifying pod deletion was observed @ 01/29/24 21:26:53.553
  Jan 29 21:26:55.022: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8662" for this suite. @ 01/29/24 21:26:55.027
• [3.639 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance]
test/e2e/apimachinery/webhook.go:119
  STEP: Creating a kubernetes client @ 01/29/24 21:26:55.034
  Jan 29 21:26:55.034: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename webhook @ 01/29/24 21:26:55.035
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:26:55.047
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:26:55.052
  STEP: Setting up server cert @ 01/29/24 21:26:55.076
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/29/24 21:26:55.681
  STEP: Deploying the webhook pod @ 01/29/24 21:26:55.69
  STEP: Wait for the deployment to be ready @ 01/29/24 21:26:55.7
  Jan 29 21:26:55.707: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 01/29/24 21:26:57.726
  STEP: Verifying the service has paired with the endpoint @ 01/29/24 21:26:57.74
  Jan 29 21:26:58.741: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 01/29/24 21:26:58.75
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 01/29/24 21:26:58.753
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 01/29/24 21:26:58.753
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 01/29/24 21:26:58.753
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 01/29/24 21:26:58.755
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 01/29/24 21:26:58.755
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 01/29/24 21:26:58.757
  Jan 29 21:26:58.758: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2662" for this suite. @ 01/29/24 21:26:58.801
  STEP: Destroying namespace "webhook-markers-337" for this suite. @ 01/29/24 21:26:58.807
• [3.779 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance]
test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 01/29/24 21:26:58.814
  Jan 29 21:26:58.814: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename certificates @ 01/29/24 21:26:58.816
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:26:58.826
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:26:58.831
  STEP: getting /apis @ 01/29/24 21:26:59.526
  STEP: getting /apis/certificates.k8s.io @ 01/29/24 21:26:59.534
  STEP: getting /apis/certificates.k8s.io/v1 @ 01/29/24 21:26:59.536
  STEP: creating @ 01/29/24 21:26:59.538
  STEP: getting @ 01/29/24 21:26:59.559
  STEP: listing @ 01/29/24 21:26:59.563
  STEP: watching @ 01/29/24 21:26:59.567
  Jan 29 21:26:59.567: INFO: starting watch
  STEP: patching @ 01/29/24 21:26:59.568
  STEP: updating @ 01/29/24 21:26:59.574
  Jan 29 21:26:59.580: INFO: waiting for watch events with expected annotations
  Jan 29 21:26:59.580: INFO: saw patched and updated annotations
  STEP: getting /approval @ 01/29/24 21:26:59.58
  STEP: patching /approval @ 01/29/24 21:26:59.584
  STEP: updating /approval @ 01/29/24 21:26:59.591
  STEP: getting /status @ 01/29/24 21:26:59.598
  STEP: patching /status @ 01/29/24 21:26:59.601
  STEP: updating /status @ 01/29/24 21:26:59.61
  STEP: deleting @ 01/29/24 21:26:59.618
  STEP: deleting a collection @ 01/29/24 21:26:59.63
  Jan 29 21:26:59.642: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-3122" for this suite. @ 01/29/24 21:26:59.647
• [0.837 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:194
  STEP: Creating a kubernetes client @ 01/29/24 21:26:59.652
  Jan 29 21:26:59.652: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename crd-publish-openapi @ 01/29/24 21:26:59.654
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:26:59.667
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:26:59.672
  Jan 29 21:26:59.677: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 01/29/24 21:27:01.068
  Jan 29 21:27:01.068: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=crd-publish-openapi-608 --namespace=crd-publish-openapi-608 create -f -'
  Jan 29 21:27:01.667: INFO: stderr: ""
  Jan 29 21:27:01.667: INFO: stdout: "e2e-test-crd-publish-openapi-7327-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  Jan 29 21:27:01.667: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=crd-publish-openapi-608 --namespace=crd-publish-openapi-608 delete e2e-test-crd-publish-openapi-7327-crds test-cr'
  Jan 29 21:27:01.770: INFO: stderr: ""
  Jan 29 21:27:01.770: INFO: stdout: "e2e-test-crd-publish-openapi-7327-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  Jan 29 21:27:01.770: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=crd-publish-openapi-608 --namespace=crd-publish-openapi-608 apply -f -'
  Jan 29 21:27:01.984: INFO: stderr: ""
  Jan 29 21:27:01.984: INFO: stdout: "e2e-test-crd-publish-openapi-7327-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  Jan 29 21:27:01.984: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=crd-publish-openapi-608 --namespace=crd-publish-openapi-608 delete e2e-test-crd-publish-openapi-7327-crds test-cr'
  Jan 29 21:27:02.077: INFO: stderr: ""
  Jan 29 21:27:02.078: INFO: stdout: "e2e-test-crd-publish-openapi-7327-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 01/29/24 21:27:02.078
  Jan 29 21:27:02.078: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=crd-publish-openapi-608 explain e2e-test-crd-publish-openapi-7327-crds'
  Jan 29 21:27:02.279: INFO: stderr: ""
  Jan 29 21:27:02.279: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-7327-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  Jan 29 21:27:03.686: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-608" for this suite. @ 01/29/24 21:27:03.699
• [4.055 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance]
test/e2e/apimachinery/crd_conversion_webhook.go:141
  STEP: Creating a kubernetes client @ 01/29/24 21:27:03.708
  Jan 29 21:27:03.708: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename crd-webhook @ 01/29/24 21:27:03.709
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:27:03.719
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:27:03.723
  STEP: Setting up server cert @ 01/29/24 21:27:03.728
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 01/29/24 21:27:04.149
  STEP: Deploying the custom resource conversion webhook pod @ 01/29/24 21:27:04.155
  STEP: Wait for the deployment to be ready @ 01/29/24 21:27:04.169
  Jan 29 21:27:04.177: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 01/29/24 21:27:06.191
  STEP: Verifying the service has paired with the endpoint @ 01/29/24 21:27:06.206
  Jan 29 21:27:07.206: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Jan 29 21:27:07.215: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Creating a v1 custom resource @ 01/29/24 21:27:09.814
  STEP: v2 custom resource should be converted @ 01/29/24 21:27:09.82
  Jan 29 21:27:09.825: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-2387" for this suite. @ 01/29/24 21:27:10.388
• [6.689 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:151
  STEP: Creating a kubernetes client @ 01/29/24 21:27:10.397
  Jan 29 21:27:10.397: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename container-probe @ 01/29/24 21:27:10.398
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:27:10.411
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:27:10.415
  STEP: Creating pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055 @ 01/29/24 21:27:10.419
  STEP: checking the pod's current state and verifying that restartCount is present @ 01/29/24 21:27:12.441
  Jan 29 21:27:12.445: INFO: Initial restart count of pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 is 0
  Jan 29 21:27:12.448: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:27:14.456: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:27:16.461: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:27:18.467: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:27:20.473: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:27:22.480: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:27:24.488: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:27:26.494: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:27:28.500: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:27:30.505: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:27:32.513: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:27:34.519: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:27:36.525: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:27:38.532: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:27:40.538: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:27:42.545: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:27:44.552: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:27:46.558: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:27:48.565: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:27:50.570: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:27:52.575: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:27:54.582: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:27:56.589: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:27:58.596: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:28:00.603: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:28:02.610: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:28:04.617: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:28:06.626: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:28:08.632: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:28:10.638: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:28:12.644: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:28:14.650: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:28:16.658: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:28:18.665: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:28:20.671: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:28:22.677: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:28:24.684: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:28:26.689: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:28:28.695: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:28:30.701: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:28:32.707: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:28:34.713: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:28:36.719: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:28:38.729: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:28:40.735: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:28:42.740: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:28:44.745: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:28:46.752: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:28:48.759: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:28:50.766: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:28:52.773: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:28:54.779: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:28:56.785: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:28:58.792: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:29:00.798: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:29:02.804: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:29:04.811: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:29:06.816: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:29:08.823: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:29:10.829: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:29:12.838: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:29:14.844: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:29:16.851: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:29:18.858: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:29:20.864: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:29:22.871: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:29:24.876: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:29:26.880: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:29:28.888: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:29:30.893: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:29:32.898: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:29:34.902: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:29:36.907: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:29:38.914: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:29:40.921: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:29:42.928: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:29:44.935: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:29:46.941: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:29:48.951: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:29:50.956: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:29:52.962: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:29:54.968: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:29:56.974: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:29:58.981: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:30:00.987: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:30:02.994: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:30:05.000: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:30:07.006: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:30:09.012: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:30:11.019: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:30:13.023: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:30:15.030: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:30:17.035: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:30:19.041: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:30:21.047: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:30:23.054: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:30:25.061: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:30:27.068: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:30:29.073: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:30:31.079: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:30:33.086: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:30:35.092: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:30:37.097: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:30:39.104: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:30:41.110: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:30:43.116: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:30:45.125: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:30:47.131: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:30:49.138: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:30:51.143: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:30:53.150: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:30:55.157: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:30:57.163: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:30:59.171: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:31:01.176: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:31:03.183: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:31:05.189: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:31:07.196: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:31:09.202: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:31:11.207: INFO: Get pod busybox-11abfe59-86b8-4c9a-8a78-96b8ac779f17 in namespace container-probe-4055
  Jan 29 21:31:13.208: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 01/29/24 21:31:13.214
  STEP: Destroying namespace "container-probe-4055" for this suite. @ 01/29/24 21:31:13.228
• [242.838 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance]
test/e2e/apimachinery/garbage_collector.go:713
  STEP: Creating a kubernetes client @ 01/29/24 21:31:13.236
  Jan 29 21:31:13.236: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename gc @ 01/29/24 21:31:13.239
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:31:13.252
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:31:13.256
  STEP: create the rc1 @ 01/29/24 21:31:13.266
  STEP: create the rc2 @ 01/29/24 21:31:13.277
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 01/29/24 21:31:19.291
  STEP: delete the rc simpletest-rc-to-be-deleted @ 01/29/24 21:31:19.724
  STEP: wait for the rc to be deleted @ 01/29/24 21:31:19.731
  Jan 29 21:31:24.750: INFO: 68 pods remaining
  Jan 29 21:31:24.750: INFO: 68 pods has nil DeletionTimestamp
  Jan 29 21:31:24.750: INFO: 
  STEP: Gathering metrics @ 01/29/24 21:31:29.749
  Jan 29 21:31:29.897: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Jan 29 21:31:29.897: INFO: Deleting pod "simpletest-rc-to-be-deleted-2t7dn" in namespace "gc-3946"
  Jan 29 21:31:29.910: INFO: Deleting pod "simpletest-rc-to-be-deleted-4mkxg" in namespace "gc-3946"
  Jan 29 21:31:29.919: INFO: Deleting pod "simpletest-rc-to-be-deleted-4whw8" in namespace "gc-3946"
  Jan 29 21:31:29.927: INFO: Deleting pod "simpletest-rc-to-be-deleted-5627q" in namespace "gc-3946"
  Jan 29 21:31:29.935: INFO: Deleting pod "simpletest-rc-to-be-deleted-58rql" in namespace "gc-3946"
  Jan 29 21:31:29.945: INFO: Deleting pod "simpletest-rc-to-be-deleted-6dmt4" in namespace "gc-3946"
  Jan 29 21:31:29.955: INFO: Deleting pod "simpletest-rc-to-be-deleted-6wh6g" in namespace "gc-3946"
  Jan 29 21:31:29.964: INFO: Deleting pod "simpletest-rc-to-be-deleted-7czvz" in namespace "gc-3946"
  Jan 29 21:31:29.973: INFO: Deleting pod "simpletest-rc-to-be-deleted-7fgwp" in namespace "gc-3946"
  Jan 29 21:31:29.986: INFO: Deleting pod "simpletest-rc-to-be-deleted-7km6c" in namespace "gc-3946"
  Jan 29 21:31:29.996: INFO: Deleting pod "simpletest-rc-to-be-deleted-8j9qs" in namespace "gc-3946"
  Jan 29 21:31:30.007: INFO: Deleting pod "simpletest-rc-to-be-deleted-8lbn6" in namespace "gc-3946"
  Jan 29 21:31:30.016: INFO: Deleting pod "simpletest-rc-to-be-deleted-8qctw" in namespace "gc-3946"
  Jan 29 21:31:30.025: INFO: Deleting pod "simpletest-rc-to-be-deleted-99b2m" in namespace "gc-3946"
  Jan 29 21:31:30.034: INFO: Deleting pod "simpletest-rc-to-be-deleted-9mm5v" in namespace "gc-3946"
  Jan 29 21:31:30.043: INFO: Deleting pod "simpletest-rc-to-be-deleted-9n4tv" in namespace "gc-3946"
  Jan 29 21:31:30.055: INFO: Deleting pod "simpletest-rc-to-be-deleted-9nn6j" in namespace "gc-3946"
  Jan 29 21:31:30.065: INFO: Deleting pod "simpletest-rc-to-be-deleted-9px8m" in namespace "gc-3946"
  Jan 29 21:31:30.078: INFO: Deleting pod "simpletest-rc-to-be-deleted-9sw86" in namespace "gc-3946"
  Jan 29 21:31:30.088: INFO: Deleting pod "simpletest-rc-to-be-deleted-9xpr2" in namespace "gc-3946"
  Jan 29 21:31:30.098: INFO: Deleting pod "simpletest-rc-to-be-deleted-bhh82" in namespace "gc-3946"
  Jan 29 21:31:30.107: INFO: Deleting pod "simpletest-rc-to-be-deleted-bkqlw" in namespace "gc-3946"
  Jan 29 21:31:30.114: INFO: Deleting pod "simpletest-rc-to-be-deleted-bm2kp" in namespace "gc-3946"
  Jan 29 21:31:30.122: INFO: Deleting pod "simpletest-rc-to-be-deleted-bzwz8" in namespace "gc-3946"
  Jan 29 21:31:30.137: INFO: Deleting pod "simpletest-rc-to-be-deleted-c2265" in namespace "gc-3946"
  Jan 29 21:31:30.147: INFO: Deleting pod "simpletest-rc-to-be-deleted-c4dcw" in namespace "gc-3946"
  Jan 29 21:31:30.164: INFO: Deleting pod "simpletest-rc-to-be-deleted-cj568" in namespace "gc-3946"
  Jan 29 21:31:30.174: INFO: Deleting pod "simpletest-rc-to-be-deleted-cnzsl" in namespace "gc-3946"
  Jan 29 21:31:30.189: INFO: Deleting pod "simpletest-rc-to-be-deleted-crvrp" in namespace "gc-3946"
  Jan 29 21:31:30.213: INFO: Deleting pod "simpletest-rc-to-be-deleted-dg9c2" in namespace "gc-3946"
  Jan 29 21:31:30.225: INFO: Deleting pod "simpletest-rc-to-be-deleted-dj7db" in namespace "gc-3946"
  Jan 29 21:31:30.233: INFO: Deleting pod "simpletest-rc-to-be-deleted-dvczv" in namespace "gc-3946"
  Jan 29 21:31:30.243: INFO: Deleting pod "simpletest-rc-to-be-deleted-f7tkj" in namespace "gc-3946"
  Jan 29 21:31:30.252: INFO: Deleting pod "simpletest-rc-to-be-deleted-fc9cj" in namespace "gc-3946"
  Jan 29 21:31:30.260: INFO: Deleting pod "simpletest-rc-to-be-deleted-fkg4g" in namespace "gc-3946"
  Jan 29 21:31:30.269: INFO: Deleting pod "simpletest-rc-to-be-deleted-fmmw8" in namespace "gc-3946"
  Jan 29 21:31:30.275: INFO: Deleting pod "simpletest-rc-to-be-deleted-fsklk" in namespace "gc-3946"
  Jan 29 21:31:30.283: INFO: Deleting pod "simpletest-rc-to-be-deleted-gfb44" in namespace "gc-3946"
  Jan 29 21:31:30.290: INFO: Deleting pod "simpletest-rc-to-be-deleted-gfgv4" in namespace "gc-3946"
  Jan 29 21:31:30.297: INFO: Deleting pod "simpletest-rc-to-be-deleted-glhlf" in namespace "gc-3946"
  Jan 29 21:31:30.304: INFO: Deleting pod "simpletest-rc-to-be-deleted-gqcm5" in namespace "gc-3946"
  Jan 29 21:31:30.313: INFO: Deleting pod "simpletest-rc-to-be-deleted-gzlf2" in namespace "gc-3946"
  Jan 29 21:31:30.322: INFO: Deleting pod "simpletest-rc-to-be-deleted-h74h2" in namespace "gc-3946"
  Jan 29 21:31:30.330: INFO: Deleting pod "simpletest-rc-to-be-deleted-hdqdh" in namespace "gc-3946"
  Jan 29 21:31:30.338: INFO: Deleting pod "simpletest-rc-to-be-deleted-hgjr8" in namespace "gc-3946"
  Jan 29 21:31:30.347: INFO: Deleting pod "simpletest-rc-to-be-deleted-hjm7r" in namespace "gc-3946"
  Jan 29 21:31:30.354: INFO: Deleting pod "simpletest-rc-to-be-deleted-hkdnh" in namespace "gc-3946"
  Jan 29 21:31:30.363: INFO: Deleting pod "simpletest-rc-to-be-deleted-hxct5" in namespace "gc-3946"
  Jan 29 21:31:30.373: INFO: Deleting pod "simpletest-rc-to-be-deleted-j5v5q" in namespace "gc-3946"
  Jan 29 21:31:30.386: INFO: Deleting pod "simpletest-rc-to-be-deleted-jjp4m" in namespace "gc-3946"
  Jan 29 21:31:30.392: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-3946" for this suite. @ 01/29/24 21:31:30.396
• [17.165 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance]
test/e2e/apps/daemon_set.go:875
  STEP: Creating a kubernetes client @ 01/29/24 21:31:30.405
  Jan 29 21:31:30.405: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename daemonsets @ 01/29/24 21:31:30.406
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:31:30.418
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:31:30.422
  STEP: Creating simple DaemonSet "daemon-set" @ 01/29/24 21:31:30.442
  STEP: Check that daemon pods launch on every node of the cluster. @ 01/29/24 21:31:30.449
  Jan 29 21:31:30.453: INFO: DaemonSet pods can't tolerate node nodeb08 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jan 29 21:31:30.455: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jan 29 21:31:30.455: INFO: Node nodeb14 is running 0 daemon pod, expected 1
  Jan 29 21:31:31.461: INFO: DaemonSet pods can't tolerate node nodeb08 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jan 29 21:31:31.465: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jan 29 21:31:31.465: INFO: Node nodeb14 is running 0 daemon pod, expected 1
  Jan 29 21:31:32.461: INFO: DaemonSet pods can't tolerate node nodeb08 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jan 29 21:31:32.466: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jan 29 21:31:32.466: INFO: Node nodeb14 is running 0 daemon pod, expected 1
  Jan 29 21:31:33.462: INFO: DaemonSet pods can't tolerate node nodeb08 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jan 29 21:31:33.466: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jan 29 21:31:33.466: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Getting /status @ 01/29/24 21:31:33.47
  Jan 29 21:31:33.478: INFO: Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 01/29/24 21:31:33.479
  Jan 29 21:31:33.493: INFO: updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 01/29/24 21:31:33.493
  Jan 29 21:31:33.497: INFO: Observed &DaemonSet event: ADDED
  Jan 29 21:31:33.497: INFO: Observed &DaemonSet event: MODIFIED
  Jan 29 21:31:33.497: INFO: Observed &DaemonSet event: MODIFIED
  Jan 29 21:31:33.498: INFO: Observed &DaemonSet event: MODIFIED
  Jan 29 21:31:33.498: INFO: Found daemon set daemon-set in namespace daemonsets-9834 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Jan 29 21:31:33.498: INFO: Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 01/29/24 21:31:33.498
  STEP: watching for the daemon set status to be patched @ 01/29/24 21:31:33.505
  Jan 29 21:31:33.507: INFO: Observed &DaemonSet event: ADDED
  Jan 29 21:31:33.508: INFO: Observed &DaemonSet event: MODIFIED
  Jan 29 21:31:33.508: INFO: Observed &DaemonSet event: MODIFIED
  Jan 29 21:31:33.508: INFO: Observed &DaemonSet event: MODIFIED
  Jan 29 21:31:33.509: INFO: Observed daemon set daemon-set in namespace daemonsets-9834 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Jan 29 21:31:33.509: INFO: Observed &DaemonSet event: MODIFIED
  Jan 29 21:31:33.509: INFO: Found daemon set daemon-set in namespace daemonsets-9834 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  Jan 29 21:31:33.510: INFO: Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 01/29/24 21:31:33.514
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-9834, will wait for the garbage collector to delete the pods @ 01/29/24 21:31:33.515
  Jan 29 21:31:33.577: INFO: Deleting DaemonSet.extensions daemon-set took: 7.299071ms
  Jan 29 21:31:33.677: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.500821ms
  Jan 29 21:31:35.982: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jan 29 21:31:35.982: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Jan 29 21:31:35.986: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"8984"},"items":null}

  Jan 29 21:31:35.990: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"8984"},"items":null}

  Jan 29 21:31:36.003: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-9834" for this suite. @ 01/29/24 21:31:36.008
• [5.610 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:57
  STEP: Creating a kubernetes client @ 01/29/24 21:31:36.016
  Jan 29 21:31:36.016: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename projected @ 01/29/24 21:31:36.018
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:31:36.032
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:31:36.035
  STEP: Creating configMap with name projected-configmap-test-volume-84eca456-ec88-43b8-9a6a-0e47e17d062c @ 01/29/24 21:31:36.04
  STEP: Creating a pod to test consume configMaps @ 01/29/24 21:31:36.044
  STEP: Saw pod success @ 01/29/24 21:31:40.069
  Jan 29 21:31:40.073: INFO: Trying to get logs from node nodeb14 pod pod-projected-configmaps-bb495aca-ebd6-422d-b624-02ade7050229 container agnhost-container: <nil>
  STEP: delete the pod @ 01/29/24 21:31:40.102
  Jan 29 21:31:40.116: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4223" for this suite. @ 01/29/24 21:31:40.121
• [4.110 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:47
  STEP: Creating a kubernetes client @ 01/29/24 21:31:40.13
  Jan 29 21:31:40.130: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename projected @ 01/29/24 21:31:40.132
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:31:40.146
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:31:40.15
  STEP: Creating configMap with name projected-configmap-test-volume-47688c7d-342b-4527-8323-a3dfe5ca84ae @ 01/29/24 21:31:40.154
  STEP: Creating a pod to test consume configMaps @ 01/29/24 21:31:40.158
  STEP: Saw pod success @ 01/29/24 21:31:42.178
  Jan 29 21:31:42.182: INFO: Trying to get logs from node nodeb14 pod pod-projected-configmaps-c0b28f6f-7f6e-492d-b5da-53ee7db54a0b container agnhost-container: <nil>
  STEP: delete the pod @ 01/29/24 21:31:42.192
  Jan 29 21:31:42.210: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9606" for this suite. @ 01/29/24 21:31:42.219
• [2.096 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance]
test/e2e/common/node/configmap.go:138
  STEP: Creating a kubernetes client @ 01/29/24 21:31:42.228
  Jan 29 21:31:42.228: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename configmap @ 01/29/24 21:31:42.23
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:31:42.245
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:31:42.25
  STEP: Creating configMap that has name configmap-test-emptyKey-6febdeb8-3dda-4a41-b0f5-a218e6a90b84 @ 01/29/24 21:31:42.255
  Jan 29 21:31:42.258: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6695" for this suite. @ 01/29/24 21:31:42.264
• [0.042 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance]
test/e2e/kubectl/kubectl.go:996
  STEP: Creating a kubernetes client @ 01/29/24 21:31:42.271
  Jan 29 21:31:42.271: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename kubectl @ 01/29/24 21:31:42.273
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:31:42.291
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:31:42.296
  STEP: create deployment with httpd image @ 01/29/24 21:31:42.301
  Jan 29 21:31:42.301: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=kubectl-6071 create -f -'
  Jan 29 21:31:42.940: INFO: stderr: ""
  Jan 29 21:31:42.940: INFO: stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 01/29/24 21:31:42.941
  Jan 29 21:31:42.941: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=kubectl-6071 diff -f -'
  Jan 29 21:31:43.168: INFO: rc: 1
  Jan 29 21:31:43.168: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=kubectl-6071 delete -f -'
  Jan 29 21:31:43.272: INFO: stderr: ""
  Jan 29 21:31:43.272: INFO: stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  Jan 29 21:31:43.272: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6071" for this suite. @ 01/29/24 21:31:43.279
• [1.014 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods  [Conformance]
test/e2e/auth/service_accounts.go:78
  STEP: Creating a kubernetes client @ 01/29/24 21:31:43.288
  Jan 29 21:31:43.288: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename svcaccounts @ 01/29/24 21:31:43.29
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:31:43.301
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:31:43.305
  STEP: reading a file in the container @ 01/29/24 21:31:45.333
  Jan 29 21:31:45.333: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-7065 pod-service-account-4bfb06e1-29d2-4c3a-b55a-00688290a4a2 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 01/29/24 21:31:45.555
  Jan 29 21:31:45.555: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-7065 pod-service-account-4bfb06e1-29d2-4c3a-b55a-00688290a4a2 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 01/29/24 21:31:45.757
  Jan 29 21:31:45.758: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-7065 pod-service-account-4bfb06e1-29d2-4c3a-b55a-00688290a4a2 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  Jan 29 21:31:45.971: INFO: Got root ca configmap in namespace "svcaccounts-7065"
  Jan 29 21:31:45.976: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-7065" for this suite. @ 01/29/24 21:31:45.982
• [2.701 seconds]
------------------------------
SS
------------------------------
[sig-network] IngressClass API  should support creating IngressClass API operations [Conformance]
test/e2e/network/ingressclass.go:266
  STEP: Creating a kubernetes client @ 01/29/24 21:31:45.989
  Jan 29 21:31:45.989: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename ingressclass @ 01/29/24 21:31:45.991
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:31:46.002
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:31:46.006
  STEP: getting /apis @ 01/29/24 21:31:46.011
  STEP: getting /apis/networking.k8s.io @ 01/29/24 21:31:46.019
  STEP: getting /apis/networking.k8s.iov1 @ 01/29/24 21:31:46.021
  STEP: creating @ 01/29/24 21:31:46.023
  STEP: getting @ 01/29/24 21:31:46.04
  STEP: listing @ 01/29/24 21:31:46.043
  STEP: watching @ 01/29/24 21:31:46.046
  Jan 29 21:31:46.046: INFO: starting watch
  STEP: patching @ 01/29/24 21:31:46.048
  STEP: updating @ 01/29/24 21:31:46.055
  Jan 29 21:31:46.062: INFO: waiting for watch events with expected annotations
  Jan 29 21:31:46.062: INFO: saw patched and updated annotations
  STEP: deleting @ 01/29/24 21:31:46.062
  STEP: deleting a collection @ 01/29/24 21:31:46.075
  Jan 29 21:31:46.094: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-9649" for this suite. @ 01/29/24 21:31:46.098
• [0.114 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance]
test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 01/29/24 21:31:46.106
  Jan 29 21:31:46.106: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename watch @ 01/29/24 21:31:46.108
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:31:46.122
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:31:46.128
  STEP: creating a new configmap @ 01/29/24 21:31:46.133
  STEP: modifying the configmap once @ 01/29/24 21:31:46.138
  STEP: modifying the configmap a second time @ 01/29/24 21:31:46.151
  STEP: deleting the configmap @ 01/29/24 21:31:46.158
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 01/29/24 21:31:46.163
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 01/29/24 21:31:46.165
  Jan 29 21:31:46.165: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-3560  e21ceb39-db8a-46c1-92f5-a47f3f468dd7 9484 0 2024-01-29 21:31:46 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-01-29 21:31:46 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jan 29 21:31:46.166: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-3560  e21ceb39-db8a-46c1-92f5-a47f3f468dd7 9485 0 2024-01-29 21:31:46 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-01-29 21:31:46 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jan 29 21:31:46.166: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-3560" for this suite. @ 01/29/24 21:31:46.171
• [0.071 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:109
  STEP: Creating a kubernetes client @ 01/29/24 21:31:46.18
  Jan 29 21:31:46.180: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename configmap @ 01/29/24 21:31:46.181
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:31:46.198
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:31:46.203
  STEP: Creating configMap with name configmap-test-volume-map-85bf3861-695d-4c2a-b8e6-84d6d463968f @ 01/29/24 21:31:46.208
  STEP: Creating a pod to test consume configMaps @ 01/29/24 21:31:46.212
  STEP: Saw pod success @ 01/29/24 21:31:48.232
  Jan 29 21:31:48.236: INFO: Trying to get logs from node nodeb14 pod pod-configmaps-35b3a739-a90f-48aa-a6c6-928567775f2c container agnhost-container: <nil>
  STEP: delete the pod @ 01/29/24 21:31:48.244
  Jan 29 21:31:48.260: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2819" for this suite. @ 01/29/24 21:31:48.266
• [2.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance]
test/e2e/apimachinery/namespace.go:303
  STEP: Creating a kubernetes client @ 01/29/24 21:31:48.279
  Jan 29 21:31:48.279: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename namespaces @ 01/29/24 21:31:48.281
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:31:48.294
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:31:48.299
  STEP: Read namespace status @ 01/29/24 21:31:48.304
  Jan 29 21:31:48.308: INFO: Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 01/29/24 21:31:48.308
  Jan 29 21:31:48.314: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 01/29/24 21:31:48.314
  Jan 29 21:31:48.322: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  Jan 29 21:31:48.323: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-6047" for this suite. @ 01/29/24 21:31:48.328
• [0.053 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/network/networking.go:124
  STEP: Creating a kubernetes client @ 01/29/24 21:31:48.342
  Jan 29 21:31:48.342: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename pod-network-test @ 01/29/24 21:31:48.344
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:31:48.355
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:31:48.359
  STEP: Performing setup for networking test in namespace pod-network-test-6997 @ 01/29/24 21:31:48.363
  STEP: creating a selector @ 01/29/24 21:31:48.363
  STEP: Creating the service pods in kubernetes @ 01/29/24 21:31:48.363
  Jan 29 21:31:48.363: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 01/29/24 21:32:10.467
  Jan 29 21:32:12.502: INFO: Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  Jan 29 21:32:12.503: INFO: Going to poll 10.244.2.132 on port 8081 at least 0 times, with a maximum of 34 tries before failing
  Jan 29 21:32:12.506: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.244.2.132 8081 | grep -v '^\s*$'] Namespace:pod-network-test-6997 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jan 29 21:32:12.506: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  Jan 29 21:32:12.508: INFO: ExecWithOptions: Clientset creation
  Jan 29 21:32:12.509: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-6997/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.244.2.132+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Jan 29 21:32:13.623: INFO: Found all 1 expected endpoints: [netserver-0]
  Jan 29 21:32:13.623: INFO: Going to poll 10.244.1.59 on port 8081 at least 0 times, with a maximum of 34 tries before failing
  Jan 29 21:32:13.628: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.244.1.59 8081 | grep -v '^\s*$'] Namespace:pod-network-test-6997 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jan 29 21:32:13.628: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  Jan 29 21:32:13.630: INFO: ExecWithOptions: Clientset creation
  Jan 29 21:32:13.630: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-6997/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.244.1.59+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Jan 29 21:32:14.742: INFO: Found all 1 expected endpoints: [netserver-1]
  Jan 29 21:32:14.742: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-6997" for this suite. @ 01/29/24 21:32:14.749
• [26.416 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:97
  STEP: Creating a kubernetes client @ 01/29/24 21:32:14.76
  Jan 29 21:32:14.760: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename emptydir @ 01/29/24 21:32:14.762
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:32:14.776
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:32:14.78
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 01/29/24 21:32:14.786
  STEP: Saw pod success @ 01/29/24 21:32:18.811
  Jan 29 21:32:18.815: INFO: Trying to get logs from node nodeb14 pod pod-3f6a4967-77cf-4ea4-9470-63f3584aed9f container test-container: <nil>
  STEP: delete the pod @ 01/29/24 21:32:18.824
  Jan 29 21:32:18.836: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9577" for this suite. @ 01/29/24 21:32:18.842
• [4.089 seconds]
------------------------------
SS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance]
test/e2e/apps/cronjob.go:324
  STEP: Creating a kubernetes client @ 01/29/24 21:32:18.85
  Jan 29 21:32:18.850: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename cronjob @ 01/29/24 21:32:18.852
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:32:18.863
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:32:18.868
  STEP: Creating a cronjob @ 01/29/24 21:32:18.872
  STEP: creating @ 01/29/24 21:32:18.872
  STEP: getting @ 01/29/24 21:32:18.882
  STEP: listing @ 01/29/24 21:32:18.885
  STEP: watching @ 01/29/24 21:32:18.889
  Jan 29 21:32:18.889: INFO: starting watch
  STEP: cluster-wide listing @ 01/29/24 21:32:18.89
  STEP: cluster-wide watching @ 01/29/24 21:32:18.894
  Jan 29 21:32:18.894: INFO: starting watch
  STEP: patching @ 01/29/24 21:32:18.896
  STEP: updating @ 01/29/24 21:32:18.903
  Jan 29 21:32:18.912: INFO: waiting for watch events with expected annotations
  Jan 29 21:32:18.912: INFO: saw patched and updated annotations
  STEP: patching /status @ 01/29/24 21:32:18.913
  STEP: updating /status @ 01/29/24 21:32:18.921
  STEP: get /status @ 01/29/24 21:32:18.928
  STEP: deleting @ 01/29/24 21:32:18.933
  STEP: deleting a collection @ 01/29/24 21:32:18.946
  Jan 29 21:32:18.956: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-4845" for this suite. @ 01/29/24 21:32:18.96
• [0.118 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance]
test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 01/29/24 21:32:18.969
  Jan 29 21:32:18.969: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename subpath @ 01/29/24 21:32:18.971
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:32:18.991
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:32:18.994
  STEP: Setting up data @ 01/29/24 21:32:18.998
  STEP: Creating pod pod-subpath-test-downwardapi-p859 @ 01/29/24 21:32:19.01
  STEP: Creating a pod to test atomic-volume-subpath @ 01/29/24 21:32:19.01
  STEP: Saw pod success @ 01/29/24 21:32:43.1
  Jan 29 21:32:43.104: INFO: Trying to get logs from node nodeb14 pod pod-subpath-test-downwardapi-p859 container test-container-subpath-downwardapi-p859: <nil>
  STEP: delete the pod @ 01/29/24 21:32:43.114
  STEP: Deleting pod pod-subpath-test-downwardapi-p859 @ 01/29/24 21:32:43.128
  Jan 29 21:32:43.128: INFO: Deleting pod "pod-subpath-test-downwardapi-p859" in namespace "subpath-1083"
  Jan 29 21:32:43.130: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-1083" for this suite. @ 01/29/24 21:32:43.136
• [24.176 seconds]
------------------------------
SS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 01/29/24 21:32:43.146
  Jan 29 21:32:43.146: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename pods @ 01/29/24 21:32:43.148
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:32:43.164
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:32:43.168
  Jan 29 21:32:43.173: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: creating the pod @ 01/29/24 21:32:43.175
  STEP: submitting the pod to kubernetes @ 01/29/24 21:32:43.175
  Jan 29 21:32:45.337: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7961" for this suite. @ 01/29/24 21:32:45.343
• [2.376 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance]
test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 01/29/24 21:32:45.525
  Jan 29 21:32:45.525: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename proxy @ 01/29/24 21:32:45.527
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:32:45.994
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:32:45.999
  Jan 29 21:32:46.003: INFO: Creating pod...
  Jan 29 21:32:48.019: INFO: Creating service...
  Jan 29 21:32:48.034: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-9242/pods/agnhost/proxy/some/path/with/DELETE
  Jan 29 21:32:48.040: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Jan 29 21:32:48.040: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-9242/pods/agnhost/proxy/some/path/with/GET
  Jan 29 21:32:48.045: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  Jan 29 21:32:48.045: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-9242/pods/agnhost/proxy/some/path/with/HEAD
  Jan 29 21:32:48.048: INFO: http.Client request:HEAD | StatusCode:200
  Jan 29 21:32:48.048: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-9242/pods/agnhost/proxy/some/path/with/OPTIONS
  Jan 29 21:32:48.052: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Jan 29 21:32:48.052: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-9242/pods/agnhost/proxy/some/path/with/PATCH
  Jan 29 21:32:48.056: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Jan 29 21:32:48.056: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-9242/pods/agnhost/proxy/some/path/with/POST
  Jan 29 21:32:48.060: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Jan 29 21:32:48.060: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-9242/pods/agnhost/proxy/some/path/with/PUT
  Jan 29 21:32:48.064: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Jan 29 21:32:48.064: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-9242/services/test-service/proxy/some/path/with/DELETE
  Jan 29 21:32:48.069: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Jan 29 21:32:48.070: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-9242/services/test-service/proxy/some/path/with/GET
  Jan 29 21:32:48.075: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  Jan 29 21:32:48.075: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-9242/services/test-service/proxy/some/path/with/HEAD
  Jan 29 21:32:48.080: INFO: http.Client request:HEAD | StatusCode:200
  Jan 29 21:32:48.080: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-9242/services/test-service/proxy/some/path/with/OPTIONS
  Jan 29 21:32:48.086: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Jan 29 21:32:48.086: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-9242/services/test-service/proxy/some/path/with/PATCH
  Jan 29 21:32:48.090: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Jan 29 21:32:48.091: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-9242/services/test-service/proxy/some/path/with/POST
  Jan 29 21:32:48.095: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Jan 29 21:32:48.095: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-9242/services/test-service/proxy/some/path/with/PUT
  Jan 29 21:32:48.100: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Jan 29 21:32:48.101: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-9242" for this suite. @ 01/29/24 21:32:48.106
• [2.586 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance]
test/e2e/kubectl/kubectl.go:1027
  STEP: Creating a kubernetes client @ 01/29/24 21:32:48.117
  Jan 29 21:32:48.117: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename kubectl @ 01/29/24 21:32:48.119
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:32:48.136
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:32:48.14
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 01/29/24 21:32:48.145
  Jan 29 21:32:48.145: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=kubectl-9158 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  Jan 29 21:32:48.264: INFO: stderr: ""
  Jan 29 21:32:48.265: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 01/29/24 21:32:48.265
  Jan 29 21:32:48.265: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=kubectl-9158 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.29-4"}]}} --dry-run=server'
  Jan 29 21:32:48.379: INFO: stderr: ""
  Jan 29 21:32:48.379: INFO: stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 01/29/24 21:32:48.379
  Jan 29 21:32:48.384: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=kubectl-9158 delete pods e2e-test-httpd-pod'
  Jan 29 21:32:50.367: INFO: stderr: ""
  Jan 29 21:32:50.367: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Jan 29 21:32:50.367: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9158" for this suite. @ 01/29/24 21:32:50.373
• [2.262 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance]
test/e2e/apimachinery/garbage_collector.go:321
  STEP: Creating a kubernetes client @ 01/29/24 21:32:50.38
  Jan 29 21:32:50.380: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename gc @ 01/29/24 21:32:50.381
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:32:50.399
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:32:50.403
  STEP: create the rc @ 01/29/24 21:32:50.408
  W0129 21:32:50.414259      23 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 01/29/24 21:32:55.422
  STEP: wait for all pods to be garbage collected @ 01/29/24 21:32:55.427
  STEP: Gathering metrics @ 01/29/24 21:33:00.436
  Jan 29 21:33:00.572: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Jan 29 21:33:00.577: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-6201" for this suite. @ 01/29/24 21:33:00.583
• [10.211 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:236
  STEP: Creating a kubernetes client @ 01/29/24 21:33:00.602
  Jan 29 21:33:00.602: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename crd-publish-openapi @ 01/29/24 21:33:00.604
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:33:00.62
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:33:00.624
  Jan 29 21:33:00.629: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 01/29/24 21:33:02.034
  Jan 29 21:33:02.034: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=crd-publish-openapi-2551 --namespace=crd-publish-openapi-2551 create -f -'
  Jan 29 21:33:02.698: INFO: stderr: ""
  Jan 29 21:33:02.698: INFO: stdout: "e2e-test-crd-publish-openapi-1087-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  Jan 29 21:33:02.698: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=crd-publish-openapi-2551 --namespace=crd-publish-openapi-2551 delete e2e-test-crd-publish-openapi-1087-crds test-cr'
  Jan 29 21:33:02.813: INFO: stderr: ""
  Jan 29 21:33:02.813: INFO: stdout: "e2e-test-crd-publish-openapi-1087-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  Jan 29 21:33:02.813: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=crd-publish-openapi-2551 --namespace=crd-publish-openapi-2551 apply -f -'
  Jan 29 21:33:03.042: INFO: stderr: ""
  Jan 29 21:33:03.042: INFO: stdout: "e2e-test-crd-publish-openapi-1087-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  Jan 29 21:33:03.042: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=crd-publish-openapi-2551 --namespace=crd-publish-openapi-2551 delete e2e-test-crd-publish-openapi-1087-crds test-cr'
  Jan 29 21:33:03.148: INFO: stderr: ""
  Jan 29 21:33:03.148: INFO: stdout: "e2e-test-crd-publish-openapi-1087-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 01/29/24 21:33:03.148
  Jan 29 21:33:03.148: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=crd-publish-openapi-2551 explain e2e-test-crd-publish-openapi-1087-crds'
  Jan 29 21:33:03.351: INFO: stderr: ""
  Jan 29 21:33:03.351: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-1087-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  Jan 29 21:33:04.751: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2551" for this suite. @ 01/29/24 21:33:04.766
• [4.171 seconds]
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance]
test/e2e/apps/job.go:370
  STEP: Creating a kubernetes client @ 01/29/24 21:33:04.773
  Jan 29 21:33:04.774: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename job @ 01/29/24 21:33:04.775
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:33:04.789
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:33:04.794
  STEP: Creating Indexed job @ 01/29/24 21:33:04.799
  STEP: Ensuring job reaches completions @ 01/29/24 21:33:04.807
  STEP: Ensuring pods with index for job exist @ 01/29/24 21:33:12.813
  Jan 29 21:33:12.819: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6019" for this suite. @ 01/29/24 21:33:12.824
• [8.058 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:250
  STEP: Creating a kubernetes client @ 01/29/24 21:33:12.834
  Jan 29 21:33:12.834: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename downward-api @ 01/29/24 21:33:12.835
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:33:12.848
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:33:12.852
  STEP: Creating a pod to test downward API volume plugin @ 01/29/24 21:33:12.857
  STEP: Saw pod success @ 01/29/24 21:33:16.884
  Jan 29 21:33:16.891: INFO: Trying to get logs from node nodeb14 pod downwardapi-volume-374811bf-bd53-414a-a43a-39ab647a6d73 container client-container: <nil>
  STEP: delete the pod @ 01/29/24 21:33:16.9
  Jan 29 21:33:16.917: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-106" for this suite. @ 01/29/24 21:33:16.922
• [4.096 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:110
  STEP: Creating a kubernetes client @ 01/29/24 21:33:16.931
  Jan 29 21:33:16.931: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename kubelet-test @ 01/29/24 21:33:16.933
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:33:16.948
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:33:16.952
  Jan 29 21:33:20.976: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-2267" for this suite. @ 01/29/24 21:33:20.986
• [4.064 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance]
test/e2e/common/storage/configmap_volume.go:504
  STEP: Creating a kubernetes client @ 01/29/24 21:33:20.995
  Jan 29 21:33:20.995: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename configmap @ 01/29/24 21:33:20.997
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:33:21.014
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:33:21.019
  Jan 29 21:33:21.078: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6978" for this suite. @ 01/29/24 21:33:21.083
• [0.094 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance]
test/e2e/node/taints.go:450
  STEP: Creating a kubernetes client @ 01/29/24 21:33:21.091
  Jan 29 21:33:21.091: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename taint-multiple-pods @ 01/29/24 21:33:21.092
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:33:21.106
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:33:21.111
  Jan 29 21:33:21.117: INFO: Waiting up to 1m0s for all nodes to be ready
  Jan 29 21:34:21.146: INFO: Waiting for terminating namespaces to be deleted...
  Jan 29 21:34:21.150: INFO: Starting informer...
  STEP: Starting pods... @ 01/29/24 21:34:21.15
  Jan 29 21:34:21.371: INFO: Pod1 is running on nodeb14. Tainting Node
  Jan 29 21:34:23.602: INFO: Pod2 is running on nodeb14. Tainting Node
  STEP: Trying to apply a taint on the Node @ 01/29/24 21:34:23.602
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 01/29/24 21:34:23.62
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 01/29/24 21:34:23.624
  Jan 29 21:34:29.786: INFO: Noticed Pod "taint-eviction-b1" gets evicted.
  Jan 29 21:34:49.857: INFO: Noticed Pod "taint-eviction-b2" gets evicted.
  Jan 29 21:34:49.857: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 01/29/24 21:34:49.876
  STEP: Destroying namespace "taint-multiple-pods-41" for this suite. @ 01/29/24 21:34:49.886
• [88.802 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance]
test/e2e/apimachinery/webhook.go:572
  STEP: Creating a kubernetes client @ 01/29/24 21:34:49.893
  Jan 29 21:34:49.893: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename webhook @ 01/29/24 21:34:49.894
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:34:49.908
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:34:49.912
  STEP: Setting up server cert @ 01/29/24 21:34:49.934
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/29/24 21:34:50.875
  STEP: Deploying the webhook pod @ 01/29/24 21:34:50.887
  STEP: Wait for the deployment to be ready @ 01/29/24 21:34:50.899
  Jan 29 21:34:50.906: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 01/29/24 21:34:52.92
  STEP: Verifying the service has paired with the endpoint @ 01/29/24 21:34:52.935
  Jan 29 21:34:53.936: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 01/29/24 21:34:54.018
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 01/29/24 21:34:54.054
  STEP: Deleting the collection of validation webhooks @ 01/29/24 21:34:54.079
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 01/29/24 21:34:54.114
  Jan 29 21:34:54.132: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3888" for this suite. @ 01/29/24 21:34:54.171
  STEP: Destroying namespace "webhook-markers-2098" for this suite. @ 01/29/24 21:34:54.177
• [4.291 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:197
  STEP: Creating a kubernetes client @ 01/29/24 21:34:54.205
  Jan 29 21:34:54.205: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename emptydir @ 01/29/24 21:34:54.207
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:34:54.224
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:34:54.229
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 01/29/24 21:34:54.236
  STEP: Saw pod success @ 01/29/24 21:35:00.268
  Jan 29 21:35:00.273: INFO: Trying to get logs from node nodeb14 pod pod-2932b25c-64ce-43dc-944b-47629e744109 container test-container: <nil>
  STEP: delete the pod @ 01/29/24 21:35:00.298
  Jan 29 21:35:00.314: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7499" for this suite. @ 01/29/24 21:35:00.319
• [6.119 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance]
test/e2e/common/node/lifecycle_hook.go:168
  STEP: Creating a kubernetes client @ 01/29/24 21:35:00.327
  Jan 29 21:35:00.328: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 01/29/24 21:35:00.329
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:35:00.346
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:35:00.35
  STEP: create the container to handle the HTTPGet hook request. @ 01/29/24 21:35:00.36
  STEP: create the pod with lifecycle hook @ 01/29/24 21:35:02.384
  STEP: check poststart hook @ 01/29/24 21:35:04.401
  STEP: delete the pod with lifecycle hook @ 01/29/24 21:35:04.41
  Jan 29 21:35:06.427: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-5160" for this suite. @ 01/29/24 21:35:06.432
• [6.113 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:127
  STEP: Creating a kubernetes client @ 01/29/24 21:35:06.443
  Jan 29 21:35:06.443: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename emptydir @ 01/29/24 21:35:06.444
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:35:06.457
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:35:06.462
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 01/29/24 21:35:06.466
  STEP: Saw pod success @ 01/29/24 21:35:10.501
  Jan 29 21:35:10.505: INFO: Trying to get logs from node nodeb14 pod pod-efb9e774-e699-4802-97de-df3728a1bdc4 container test-container: <nil>
  STEP: delete the pod @ 01/29/24 21:35:10.514
  Jan 29 21:35:10.528: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5599" for this suite. @ 01/29/24 21:35:10.535
• [4.098 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance]
test/e2e/common/node/lifecycle_hook.go:135
  STEP: Creating a kubernetes client @ 01/29/24 21:35:10.542
  Jan 29 21:35:10.542: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 01/29/24 21:35:10.545
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:35:10.558
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:35:10.563
  STEP: create the container to handle the HTTPGet hook request. @ 01/29/24 21:35:10.572
  STEP: create the pod with lifecycle hook @ 01/29/24 21:35:12.599
  STEP: check poststart hook @ 01/29/24 21:35:14.618
  STEP: delete the pod with lifecycle hook @ 01/29/24 21:35:14.648
  Jan 29 21:35:16.663: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-5604" for this suite. @ 01/29/24 21:35:16.668
• [6.134 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance]
test/e2e/apps/rc.go:85
  STEP: Creating a kubernetes client @ 01/29/24 21:35:16.677
  Jan 29 21:35:16.677: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename replication-controller @ 01/29/24 21:35:16.679
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:35:16.691
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:35:16.696
  Jan 29 21:35:16.700: INFO: Creating quota "condition-test" that allows only two pods to run in the current namespace
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 01/29/24 21:35:16.712
  STEP: Checking rc "condition-test" has the desired failure condition set @ 01/29/24 21:35:16.718
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 01/29/24 21:35:17.726
  Jan 29 21:35:17.739: INFO: Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 01/29/24 21:35:17.739
  Jan 29 21:35:18.748: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-426" for this suite. @ 01/29/24 21:35:18.754
• [2.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance]
test/e2e/common/node/podtemplates.go:53
  STEP: Creating a kubernetes client @ 01/29/24 21:35:18.764
  Jan 29 21:35:18.764: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename podtemplate @ 01/29/24 21:35:18.766
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:35:18.782
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:35:18.789
  Jan 29 21:35:18.822: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-9791" for this suite. @ 01/29/24 21:35:18.832
• [0.079 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance]
test/e2e/apps/job.go:713
  STEP: Creating a kubernetes client @ 01/29/24 21:35:18.843
  Jan 29 21:35:18.843: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename job @ 01/29/24 21:35:18.844
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:35:18.856
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:35:18.859
  STEP: Creating a suspended job @ 01/29/24 21:35:18.867
  STEP: Patching the Job @ 01/29/24 21:35:18.871
  STEP: Watching for Job to be patched @ 01/29/24 21:35:18.892
  Jan 29 21:35:18.894: INFO: Event ADDED observed for Job e2e-z6wjz in namespace job-4443 with labels: map[e2e-job-label:e2e-z6wjz] and annotations: map[]
  Jan 29 21:35:18.895: INFO: Event MODIFIED observed for Job e2e-z6wjz in namespace job-4443 with labels: map[e2e-job-label:e2e-z6wjz] and annotations: map[]
  Jan 29 21:35:18.895: INFO: Event MODIFIED found for Job e2e-z6wjz in namespace job-4443 with labels: map[e2e-job-label:e2e-z6wjz e2e-z6wjz:patched] and annotations: map[]
  STEP: Updating the job @ 01/29/24 21:35:18.895
  STEP: Watching for Job to be updated @ 01/29/24 21:35:18.906
  Jan 29 21:35:18.909: INFO: Event MODIFIED found for Job e2e-z6wjz in namespace job-4443 with labels: map[e2e-job-label:e2e-z6wjz e2e-z6wjz:patched] and annotations: map[updated:true]
  Jan 29 21:35:18.909: INFO: Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 01/29/24 21:35:18.909
  Jan 29 21:35:18.912: INFO: Job: e2e-z6wjz as labels: map[e2e-job-label:e2e-z6wjz e2e-z6wjz:patched]
  STEP: Waiting for job to complete @ 01/29/24 21:35:18.912
  STEP: Delete a job collection with a labelselector @ 01/29/24 21:35:28.924
  STEP: Watching for Job to be deleted @ 01/29/24 21:35:28.934
  Jan 29 21:35:28.937: INFO: Event MODIFIED observed for Job e2e-z6wjz in namespace job-4443 with labels: map[e2e-job-label:e2e-z6wjz e2e-z6wjz:patched] and annotations: map[updated:true]
  Jan 29 21:35:28.938: INFO: Event MODIFIED observed for Job e2e-z6wjz in namespace job-4443 with labels: map[e2e-job-label:e2e-z6wjz e2e-z6wjz:patched] and annotations: map[updated:true]
  Jan 29 21:35:28.938: INFO: Event MODIFIED observed for Job e2e-z6wjz in namespace job-4443 with labels: map[e2e-job-label:e2e-z6wjz e2e-z6wjz:patched] and annotations: map[updated:true]
  Jan 29 21:35:28.938: INFO: Event MODIFIED observed for Job e2e-z6wjz in namespace job-4443 with labels: map[e2e-job-label:e2e-z6wjz e2e-z6wjz:patched] and annotations: map[updated:true]
  Jan 29 21:35:28.938: INFO: Event MODIFIED observed for Job e2e-z6wjz in namespace job-4443 with labels: map[e2e-job-label:e2e-z6wjz e2e-z6wjz:patched] and annotations: map[updated:true]
  Jan 29 21:35:28.939: INFO: Event MODIFIED observed for Job e2e-z6wjz in namespace job-4443 with labels: map[e2e-job-label:e2e-z6wjz e2e-z6wjz:patched] and annotations: map[updated:true]
  Jan 29 21:35:28.939: INFO: Event MODIFIED observed for Job e2e-z6wjz in namespace job-4443 with labels: map[e2e-job-label:e2e-z6wjz e2e-z6wjz:patched] and annotations: map[updated:true]
  Jan 29 21:35:28.939: INFO: Event MODIFIED observed for Job e2e-z6wjz in namespace job-4443 with labels: map[e2e-job-label:e2e-z6wjz e2e-z6wjz:patched] and annotations: map[updated:true]
  Jan 29 21:35:28.939: INFO: Event MODIFIED observed for Job e2e-z6wjz in namespace job-4443 with labels: map[e2e-job-label:e2e-z6wjz e2e-z6wjz:patched] and annotations: map[updated:true]
  Jan 29 21:35:28.939: INFO: Event DELETED found for Job e2e-z6wjz in namespace job-4443 with labels: map[e2e-job-label:e2e-z6wjz e2e-z6wjz:patched] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 01/29/24 21:35:28.939
  Jan 29 21:35:28.943: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-4443" for this suite. @ 01/29/24 21:35:28.949
• [10.116 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:198
  STEP: Creating a kubernetes client @ 01/29/24 21:35:28.961
  Jan 29 21:35:28.961: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename custom-resource-definition @ 01/29/24 21:35:28.963
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:35:28.974
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:35:28.979
  STEP: fetching the /apis discovery document @ 01/29/24 21:35:28.983
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 01/29/24 21:35:28.985
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 01/29/24 21:35:28.985
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 01/29/24 21:35:28.985
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 01/29/24 21:35:28.987
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 01/29/24 21:35:28.987
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 01/29/24 21:35:28.989
  Jan 29 21:35:28.989: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-5798" for this suite. @ 01/29/24 21:35:28.993
• [0.037 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance]
test/e2e/apimachinery/webhook.go:646
  STEP: Creating a kubernetes client @ 01/29/24 21:35:29.001
  Jan 29 21:35:29.001: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename webhook @ 01/29/24 21:35:29.003
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:35:29.016
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:35:29.021
  STEP: Setting up server cert @ 01/29/24 21:35:29.046
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/29/24 21:35:29.34
  STEP: Deploying the webhook pod @ 01/29/24 21:35:29.351
  STEP: Wait for the deployment to be ready @ 01/29/24 21:35:29.367
  Jan 29 21:35:29.375: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 01/29/24 21:35:31.395
  STEP: Verifying the service has paired with the endpoint @ 01/29/24 21:35:31.411
  Jan 29 21:35:32.412: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 01/29/24 21:35:32.481
  STEP: Creating a configMap that should be mutated @ 01/29/24 21:35:32.503
  STEP: Deleting the collection of validation webhooks @ 01/29/24 21:35:32.547
  STEP: Creating a configMap that should not be mutated @ 01/29/24 21:35:32.58
  Jan 29 21:35:32.589: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3402" for this suite. @ 01/29/24 21:35:32.645
  STEP: Destroying namespace "webhook-markers-5891" for this suite. @ 01/29/24 21:35:32.655
• [3.660 seconds]
------------------------------
SSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance]
test/e2e/network/dns.go:117
  STEP: Creating a kubernetes client @ 01/29/24 21:35:32.662
  Jan 29 21:35:32.662: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename dns @ 01/29/24 21:35:32.664
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:35:32.674
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:35:32.678
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-8377.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-8377.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
   @ 01/29/24 21:35:32.683
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-8377.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-8377.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 01/29/24 21:35:32.683
  STEP: creating a pod to probe /etc/hosts @ 01/29/24 21:35:32.684
  STEP: submitting the pod to kubernetes @ 01/29/24 21:35:32.684
  STEP: retrieving the pod @ 01/29/24 21:35:34.703
  STEP: looking for the results for each expected name from probers @ 01/29/24 21:35:34.707
  Jan 29 21:35:34.726: INFO: DNS probes using dns-8377/dns-test-27c69c11-e852-4ca2-962d-375a0686c521 succeeded

  Jan 29 21:35:34.727: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 01/29/24 21:35:34.731
  STEP: Destroying namespace "dns-8377" for this suite. @ 01/29/24 21:35:34.744
• [2.088 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance]
test/e2e/apimachinery/webhook.go:221
  STEP: Creating a kubernetes client @ 01/29/24 21:35:34.751
  Jan 29 21:35:34.751: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename webhook @ 01/29/24 21:35:34.753
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:35:34.766
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:35:34.77
  STEP: Setting up server cert @ 01/29/24 21:35:34.793
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/29/24 21:35:35.36
  STEP: Deploying the webhook pod @ 01/29/24 21:35:35.369
  STEP: Wait for the deployment to be ready @ 01/29/24 21:35:35.383
  Jan 29 21:35:35.394: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 01/29/24 21:35:37.408
  STEP: Verifying the service has paired with the endpoint @ 01/29/24 21:35:37.423
  Jan 29 21:35:38.423: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Jan 29 21:35:38.432: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 01/29/24 21:35:38.948
  STEP: Creating a custom resource that should be denied by the webhook @ 01/29/24 21:35:38.985
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 01/29/24 21:35:41.028
  STEP: Updating the custom resource with disallowed data should be denied @ 01/29/24 21:35:41.038
  STEP: Deleting the custom resource should be denied @ 01/29/24 21:35:41.049
  STEP: Remove the offending key and value from the custom resource data @ 01/29/24 21:35:41.057
  STEP: Deleting the updated custom resource should be successful @ 01/29/24 21:35:41.067
  Jan 29 21:35:41.076: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7570" for this suite. @ 01/29/24 21:35:41.637
  STEP: Destroying namespace "webhook-markers-2866" for this suite. @ 01/29/24 21:35:41.644
• [6.898 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance]
test/e2e/common/node/runtimeclass.go:55
  STEP: Creating a kubernetes client @ 01/29/24 21:35:41.65
  Jan 29 21:35:41.650: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename runtimeclass @ 01/29/24 21:35:41.652
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:35:41.669
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:35:41.673
  Jan 29 21:35:41.686: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-2623" for this suite. @ 01/29/24 21:35:41.691
• [0.046 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:174
  STEP: Creating a kubernetes client @ 01/29/24 21:35:41.697
  Jan 29 21:35:41.697: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename projected @ 01/29/24 21:35:41.699
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:35:41.711
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:35:41.716
  STEP: Creating configMap with name cm-test-opt-del-5d41afa6-3676-4b6d-8ea2-f70ef2c8e62c @ 01/29/24 21:35:41.725
  STEP: Creating configMap with name cm-test-opt-upd-e511c4fb-5e99-4a09-8a92-9dc3bffd3178 @ 01/29/24 21:35:41.729
  STEP: Creating the pod @ 01/29/24 21:35:41.734
  STEP: Deleting configmap cm-test-opt-del-5d41afa6-3676-4b6d-8ea2-f70ef2c8e62c @ 01/29/24 21:35:43.78
  STEP: Updating configmap cm-test-opt-upd-e511c4fb-5e99-4a09-8a92-9dc3bffd3178 @ 01/29/24 21:35:43.786
  STEP: Creating configMap with name cm-test-opt-create-1a05d424-3a19-4351-9ffa-323c0d1b7700 @ 01/29/24 21:35:43.79
  STEP: waiting to observe update in volume @ 01/29/24 21:35:43.795
  Jan 29 21:36:58.311: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3348" for this suite. @ 01/29/24 21:36:58.316
• [76.625 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance]
test/e2e/apimachinery/webhook.go:332
  STEP: Creating a kubernetes client @ 01/29/24 21:36:58.323
  Jan 29 21:36:58.323: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename webhook @ 01/29/24 21:36:58.325
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:36:58.339
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:36:58.343
  STEP: Setting up server cert @ 01/29/24 21:36:58.366
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/29/24 21:36:58.665
  STEP: Deploying the webhook pod @ 01/29/24 21:36:58.674
  STEP: Wait for the deployment to be ready @ 01/29/24 21:36:58.691
  Jan 29 21:36:58.699: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 01/29/24 21:37:00.712
  STEP: Verifying the service has paired with the endpoint @ 01/29/24 21:37:00.726
  Jan 29 21:37:01.727: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Jan 29 21:37:01.736: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-1798-crds.webhook.example.com via the AdmissionRegistration API @ 01/29/24 21:37:02.254
  STEP: Creating a custom resource that should be mutated by the webhook @ 01/29/24 21:37:02.278
  Jan 29 21:37:04.331: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6927" for this suite. @ 01/29/24 21:37:04.905
  STEP: Destroying namespace "webhook-markers-77" for this suite. @ 01/29/24 21:37:04.912
• [6.595 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance]
test/e2e/apps/replica_set.go:154
  STEP: Creating a kubernetes client @ 01/29/24 21:37:04.92
  Jan 29 21:37:04.920: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename replicaset @ 01/29/24 21:37:04.922
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:37:04.935
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:37:04.939
  Jan 29 21:37:04.957: INFO: Pod name sample-pod: Found 0 pods out of 1
  Jan 29 21:37:09.961: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 01/29/24 21:37:09.961
  STEP: Scaling up "test-rs" replicaset  @ 01/29/24 21:37:09.961
  Jan 29 21:37:09.971: INFO: Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 01/29/24 21:37:09.971
  Jan 29 21:37:09.983: INFO: observed ReplicaSet test-rs in namespace replicaset-2674 with ReadyReplicas 1, AvailableReplicas 1
  Jan 29 21:37:09.991: INFO: observed ReplicaSet test-rs in namespace replicaset-2674 with ReadyReplicas 1, AvailableReplicas 1
  Jan 29 21:37:10.008: INFO: observed ReplicaSet test-rs in namespace replicaset-2674 with ReadyReplicas 1, AvailableReplicas 1
  Jan 29 21:37:10.014: INFO: observed ReplicaSet test-rs in namespace replicaset-2674 with ReadyReplicas 1, AvailableReplicas 1
  Jan 29 21:37:10.714: INFO: observed ReplicaSet test-rs in namespace replicaset-2674 with ReadyReplicas 2, AvailableReplicas 2
  Jan 29 21:37:11.523: INFO: observed Replicaset test-rs in namespace replicaset-2674 with ReadyReplicas 3 found true
  Jan 29 21:37:11.524: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-2674" for this suite. @ 01/29/24 21:37:11.53
• [6.616 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance]
test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 01/29/24 21:37:11.538
  Jan 29 21:37:11.538: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename daemonsets @ 01/29/24 21:37:11.54
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:37:11.555
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:37:11.561
  Jan 29 21:37:11.592: INFO: Create a RollingUpdate DaemonSet
  Jan 29 21:37:11.600: INFO: Check that daemon pods launch on every node of the cluster
  Jan 29 21:37:11.605: INFO: DaemonSet pods can't tolerate node nodeb08 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jan 29 21:37:11.611: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jan 29 21:37:11.611: INFO: Node nodeb14 is running 0 daemon pod, expected 1
  Jan 29 21:37:12.622: INFO: DaemonSet pods can't tolerate node nodeb08 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jan 29 21:37:12.627: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jan 29 21:37:12.627: INFO: Node nodec03 is running 0 daemon pod, expected 1
  Jan 29 21:37:13.618: INFO: DaemonSet pods can't tolerate node nodeb08 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jan 29 21:37:13.622: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jan 29 21:37:13.622: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  Jan 29 21:37:13.622: INFO: Update the DaemonSet to trigger a rollout
  Jan 29 21:37:13.633: INFO: Updating DaemonSet daemon-set
  Jan 29 21:37:14.652: INFO: Roll back the DaemonSet before rollout is complete
  Jan 29 21:37:14.668: INFO: Updating DaemonSet daemon-set
  Jan 29 21:37:14.668: INFO: Make sure DaemonSet rollback is complete
  Jan 29 21:37:14.672: INFO: Wrong image for pod: daemon-set-z4c6z. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  Jan 29 21:37:14.672: INFO: Pod daemon-set-z4c6z is not available
  Jan 29 21:37:14.679: INFO: DaemonSet pods can't tolerate node nodeb08 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jan 29 21:37:15.690: INFO: DaemonSet pods can't tolerate node nodeb08 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jan 29 21:37:16.689: INFO: DaemonSet pods can't tolerate node nodeb08 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jan 29 21:37:17.686: INFO: Pod daemon-set-lg6zq is not available
  Jan 29 21:37:17.690: INFO: DaemonSet pods can't tolerate node nodeb08 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Deleting DaemonSet "daemon-set" @ 01/29/24 21:37:17.7
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-913, will wait for the garbage collector to delete the pods @ 01/29/24 21:37:17.7
  Jan 29 21:37:17.760: INFO: Deleting DaemonSet.extensions daemon-set took: 6.156385ms
  Jan 29 21:37:17.861: INFO: Terminating DaemonSet.extensions daemon-set pods took: 101.221802ms
  Jan 29 21:37:19.866: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jan 29 21:37:19.866: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Jan 29 21:37:19.870: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"11487"},"items":null}

  Jan 29 21:37:19.873: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"11487"},"items":null}

  Jan 29 21:37:19.892: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-913" for this suite. @ 01/29/24 21:37:19.897
• [8.365 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc  [Conformance]
test/e2e/kubectl/kubectl.go:1641
  STEP: Creating a kubernetes client @ 01/29/24 21:37:19.91
  Jan 29 21:37:19.910: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename kubectl @ 01/29/24 21:37:19.912
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:37:19.924
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:37:19.928
  STEP: creating Agnhost RC @ 01/29/24 21:37:19.933
  Jan 29 21:37:19.933: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=kubectl-3966 create -f -'
  Jan 29 21:37:20.551: INFO: stderr: ""
  Jan 29 21:37:20.552: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 01/29/24 21:37:20.552
  Jan 29 21:37:21.557: INFO: Selector matched 1 pods for map[app:agnhost]
  Jan 29 21:37:21.557: INFO: Found 0 / 1
  Jan 29 21:37:22.557: INFO: Selector matched 1 pods for map[app:agnhost]
  Jan 29 21:37:22.557: INFO: Found 1 / 1
  Jan 29 21:37:22.558: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 01/29/24 21:37:22.558
  Jan 29 21:37:22.562: INFO: Selector matched 1 pods for map[app:agnhost]
  Jan 29 21:37:22.562: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Jan 29 21:37:22.562: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=kubectl-3966 patch pod agnhost-primary-nq48v -p {"metadata":{"annotations":{"x":"y"}}}'
  Jan 29 21:37:22.688: INFO: stderr: ""
  Jan 29 21:37:22.688: INFO: stdout: "pod/agnhost-primary-nq48v patched\n"
  STEP: checking annotations @ 01/29/24 21:37:22.688
  Jan 29 21:37:22.692: INFO: Selector matched 1 pods for map[app:agnhost]
  Jan 29 21:37:22.692: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Jan 29 21:37:22.692: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3966" for this suite. @ 01/29/24 21:37:22.697
• [2.791 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 01/29/24 21:37:22.704
  Jan 29 21:37:22.704: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename secrets @ 01/29/24 21:37:22.705
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:37:22.718
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:37:22.723
  STEP: Creating secret with name secret-test-c9e0d2ca-fa86-4779-8727-95c94d1a1919 @ 01/29/24 21:37:22.745
  STEP: Creating a pod to test consume secrets @ 01/29/24 21:37:22.751
  STEP: Saw pod success @ 01/29/24 21:37:26.774
  Jan 29 21:37:26.783: INFO: Trying to get logs from node nodeb14 pod pod-secrets-d03966ec-b30d-4a23-a148-0ec6db53f9be container secret-volume-test: <nil>
  STEP: delete the pod @ 01/29/24 21:37:26.792
  Jan 29 21:37:26.808: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2076" for this suite. @ 01/29/24 21:37:26.813
  STEP: Destroying namespace "secret-namespace-4586" for this suite. @ 01/29/24 21:37:26.822
• [4.123 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance]
test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 01/29/24 21:37:26.832
  Jan 29 21:37:26.832: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename deployment @ 01/29/24 21:37:26.833
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:37:26.848
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:37:26.853
  STEP: creating a Deployment @ 01/29/24 21:37:26.862
  STEP: waiting for Deployment to be created @ 01/29/24 21:37:26.87
  STEP: waiting for all Replicas to be Ready @ 01/29/24 21:37:26.873
  Jan 29 21:37:26.878: INFO: observed Deployment test-deployment in namespace deployment-9497 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jan 29 21:37:26.878: INFO: observed Deployment test-deployment in namespace deployment-9497 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jan 29 21:37:26.884: INFO: observed Deployment test-deployment in namespace deployment-9497 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jan 29 21:37:26.884: INFO: observed Deployment test-deployment in namespace deployment-9497 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jan 29 21:37:26.894: INFO: observed Deployment test-deployment in namespace deployment-9497 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jan 29 21:37:26.894: INFO: observed Deployment test-deployment in namespace deployment-9497 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jan 29 21:37:26.910: INFO: observed Deployment test-deployment in namespace deployment-9497 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jan 29 21:37:26.910: INFO: observed Deployment test-deployment in namespace deployment-9497 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jan 29 21:37:27.618: INFO: observed Deployment test-deployment in namespace deployment-9497 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  Jan 29 21:37:27.618: INFO: observed Deployment test-deployment in namespace deployment-9497 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  Jan 29 21:37:27.801: INFO: observed Deployment test-deployment in namespace deployment-9497 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 01/29/24 21:37:27.801
  Jan 29 21:37:27.810: INFO: observed event type ADDED
  STEP: waiting for Replicas to scale @ 01/29/24 21:37:27.811
  Jan 29 21:37:27.812: INFO: observed Deployment test-deployment in namespace deployment-9497 with ReadyReplicas 0
  Jan 29 21:37:27.813: INFO: observed Deployment test-deployment in namespace deployment-9497 with ReadyReplicas 0
  Jan 29 21:37:27.813: INFO: observed Deployment test-deployment in namespace deployment-9497 with ReadyReplicas 0
  Jan 29 21:37:27.813: INFO: observed Deployment test-deployment in namespace deployment-9497 with ReadyReplicas 0
  Jan 29 21:37:27.813: INFO: observed Deployment test-deployment in namespace deployment-9497 with ReadyReplicas 0
  Jan 29 21:37:27.813: INFO: observed Deployment test-deployment in namespace deployment-9497 with ReadyReplicas 0
  Jan 29 21:37:27.813: INFO: observed Deployment test-deployment in namespace deployment-9497 with ReadyReplicas 0
  Jan 29 21:37:27.813: INFO: observed Deployment test-deployment in namespace deployment-9497 with ReadyReplicas 0
  Jan 29 21:37:27.813: INFO: observed Deployment test-deployment in namespace deployment-9497 with ReadyReplicas 1
  Jan 29 21:37:27.814: INFO: observed Deployment test-deployment in namespace deployment-9497 with ReadyReplicas 1
  Jan 29 21:37:27.814: INFO: observed Deployment test-deployment in namespace deployment-9497 with ReadyReplicas 2
  Jan 29 21:37:27.814: INFO: observed Deployment test-deployment in namespace deployment-9497 with ReadyReplicas 2
  Jan 29 21:37:27.814: INFO: observed Deployment test-deployment in namespace deployment-9497 with ReadyReplicas 2
  Jan 29 21:37:27.814: INFO: observed Deployment test-deployment in namespace deployment-9497 with ReadyReplicas 2
  Jan 29 21:37:27.819: INFO: observed Deployment test-deployment in namespace deployment-9497 with ReadyReplicas 2
  Jan 29 21:37:27.819: INFO: observed Deployment test-deployment in namespace deployment-9497 with ReadyReplicas 2
  Jan 29 21:37:27.830: INFO: observed Deployment test-deployment in namespace deployment-9497 with ReadyReplicas 2
  Jan 29 21:37:27.830: INFO: observed Deployment test-deployment in namespace deployment-9497 with ReadyReplicas 2
  Jan 29 21:37:27.841: INFO: observed Deployment test-deployment in namespace deployment-9497 with ReadyReplicas 1
  Jan 29 21:37:27.841: INFO: observed Deployment test-deployment in namespace deployment-9497 with ReadyReplicas 1
  Jan 29 21:37:27.845: INFO: observed Deployment test-deployment in namespace deployment-9497 with ReadyReplicas 1
  Jan 29 21:37:27.845: INFO: observed Deployment test-deployment in namespace deployment-9497 with ReadyReplicas 1
  Jan 29 21:37:28.628: INFO: observed Deployment test-deployment in namespace deployment-9497 with ReadyReplicas 2
  Jan 29 21:37:28.628: INFO: observed Deployment test-deployment in namespace deployment-9497 with ReadyReplicas 2
  Jan 29 21:37:28.655: INFO: observed Deployment test-deployment in namespace deployment-9497 with ReadyReplicas 1
  STEP: listing Deployments @ 01/29/24 21:37:28.655
  Jan 29 21:37:28.658: INFO: Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 01/29/24 21:37:28.659
  Jan 29 21:37:28.672: INFO: observed Deployment test-deployment in namespace deployment-9497 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 01/29/24 21:37:28.672
  Jan 29 21:37:28.680: INFO: observed Deployment test-deployment in namespace deployment-9497 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Jan 29 21:37:28.683: INFO: observed Deployment test-deployment in namespace deployment-9497 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Jan 29 21:37:28.697: INFO: observed Deployment test-deployment in namespace deployment-9497 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Jan 29 21:37:28.710: INFO: observed Deployment test-deployment in namespace deployment-9497 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Jan 29 21:37:28.715: INFO: observed Deployment test-deployment in namespace deployment-9497 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Jan 29 21:37:29.674: INFO: observed Deployment test-deployment in namespace deployment-9497 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Jan 29 21:37:29.701: INFO: observed Deployment test-deployment in namespace deployment-9497 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Jan 29 21:37:29.706: INFO: observed Deployment test-deployment in namespace deployment-9497 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Jan 29 21:37:30.866: INFO: observed Deployment test-deployment in namespace deployment-9497 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 01/29/24 21:37:30.888
  STEP: fetching the DeploymentStatus @ 01/29/24 21:37:30.898
  Jan 29 21:37:30.905: INFO: observed Deployment test-deployment in namespace deployment-9497 with ReadyReplicas 1
  Jan 29 21:37:30.905: INFO: observed Deployment test-deployment in namespace deployment-9497 with ReadyReplicas 1
  Jan 29 21:37:30.906: INFO: observed Deployment test-deployment in namespace deployment-9497 with ReadyReplicas 1
  Jan 29 21:37:30.906: INFO: observed Deployment test-deployment in namespace deployment-9497 with ReadyReplicas 1
  Jan 29 21:37:30.906: INFO: observed Deployment test-deployment in namespace deployment-9497 with ReadyReplicas 1
  Jan 29 21:37:30.906: INFO: observed Deployment test-deployment in namespace deployment-9497 with ReadyReplicas 2
  Jan 29 21:37:30.907: INFO: observed Deployment test-deployment in namespace deployment-9497 with ReadyReplicas 2
  Jan 29 21:37:30.907: INFO: observed Deployment test-deployment in namespace deployment-9497 with ReadyReplicas 2
  Jan 29 21:37:30.907: INFO: observed Deployment test-deployment in namespace deployment-9497 with ReadyReplicas 3
  STEP: deleting the Deployment @ 01/29/24 21:37:30.907
  Jan 29 21:37:30.915: INFO: observed event type MODIFIED
  Jan 29 21:37:30.915: INFO: observed event type MODIFIED
  Jan 29 21:37:30.916: INFO: observed event type MODIFIED
  Jan 29 21:37:30.916: INFO: observed event type MODIFIED
  Jan 29 21:37:30.916: INFO: observed event type MODIFIED
  Jan 29 21:37:30.916: INFO: observed event type MODIFIED
  Jan 29 21:37:30.916: INFO: observed event type MODIFIED
  Jan 29 21:37:30.916: INFO: observed event type MODIFIED
  Jan 29 21:37:30.917: INFO: observed event type MODIFIED
  Jan 29 21:37:30.917: INFO: observed event type MODIFIED
  Jan 29 21:37:30.917: INFO: observed event type MODIFIED
  Jan 29 21:37:30.917: INFO: observed event type MODIFIED
  Jan 29 21:37:30.922: INFO: Log out all the ReplicaSets if there is no deployment created
  Jan 29 21:37:30.926: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9497" for this suite. @ 01/29/24 21:37:30.931
• [4.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance]
test/e2e/apimachinery/webhook.go:261
  STEP: Creating a kubernetes client @ 01/29/24 21:37:30.94
  Jan 29 21:37:30.940: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename webhook @ 01/29/24 21:37:30.941
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:37:30.953
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:37:30.957
  STEP: Setting up server cert @ 01/29/24 21:37:30.978
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/29/24 21:37:31.196
  STEP: Deploying the webhook pod @ 01/29/24 21:37:31.207
  STEP: Wait for the deployment to be ready @ 01/29/24 21:37:31.222
  Jan 29 21:37:31.231: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 01/29/24 21:37:33.247
  STEP: Verifying the service has paired with the endpoint @ 01/29/24 21:37:33.263
  Jan 29 21:37:34.264: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 01/29/24 21:37:34.273
  STEP: create a pod that should be updated by the webhook @ 01/29/24 21:37:34.3
  Jan 29 21:37:34.328: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1470" for this suite. @ 01/29/24 21:37:34.375
  STEP: Destroying namespace "webhook-markers-9713" for this suite. @ 01/29/24 21:37:34.38
• [3.447 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance]
test/e2e/common/node/expansion.go:47
  STEP: Creating a kubernetes client @ 01/29/24 21:37:34.388
  Jan 29 21:37:34.388: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename var-expansion @ 01/29/24 21:37:34.39
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:37:34.403
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:37:34.407
  STEP: Creating a pod to test env composition @ 01/29/24 21:37:34.412
  STEP: Saw pod success @ 01/29/24 21:37:38.438
  Jan 29 21:37:38.442: INFO: Trying to get logs from node nodeb14 pod var-expansion-530d77f7-f903-49a1-915a-1d57a3c628ad container dapi-container: <nil>
  STEP: delete the pod @ 01/29/24 21:37:38.452
  Jan 29 21:37:38.467: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-1021" for this suite. @ 01/29/24 21:37:38.472
• [4.092 seconds]
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance]
test/e2e/network/service.go:3326
  STEP: Creating a kubernetes client @ 01/29/24 21:37:38.481
  Jan 29 21:37:38.481: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename services @ 01/29/24 21:37:38.483
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:37:38.495
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:37:38.499
  STEP: creating a Service @ 01/29/24 21:37:38.506
  STEP: watching for the Service to be added @ 01/29/24 21:37:38.523
  Jan 29 21:37:38.525: INFO: Found Service test-service-zxp6m in namespace services-9025 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 0}]
  Jan 29 21:37:38.525: INFO: Service test-service-zxp6m created
  STEP: Getting /status @ 01/29/24 21:37:38.525
  Jan 29 21:37:38.530: INFO: Service test-service-zxp6m has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 01/29/24 21:37:38.53
  STEP: watching for the Service to be patched @ 01/29/24 21:37:38.536
  Jan 29 21:37:38.539: INFO: observed Service test-service-zxp6m in namespace services-9025 with annotations: map[] & LoadBalancer: {[]}
  Jan 29 21:37:38.539: INFO: Found Service test-service-zxp6m in namespace services-9025 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  []}]}
  Jan 29 21:37:38.539: INFO: Service test-service-zxp6m has service status patched
  STEP: updating the ServiceStatus @ 01/29/24 21:37:38.539
  Jan 29 21:37:38.548: INFO: updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 01/29/24 21:37:38.548
  Jan 29 21:37:38.550: INFO: Observed Service test-service-zxp6m in namespace services-9025 with annotations: map[] & Conditions: {[]}
  Jan 29 21:37:38.550: INFO: Observed event: &Service{ObjectMeta:{test-service-zxp6m  services-9025  ccdc4c11-7ddc-4b64-aba4-e8f3f5b72f4c 11905 0 2024-01-29 21:37:38 +0000 UTC <nil> <nil> map[test-service-static:true] map[patchedstatus:true] [] [] [{e2e.test Update v1 2024-01-29 21:37:38 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:test-service-static":{}}},"f:spec":{"f:internalTrafficPolicy":{},"f:ports":{".":{},"k:{\"port\":80,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:sessionAffinity":{},"f:type":{}}} } {e2e.test Update v1 2024-01-29 21:37:38 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:patchedstatus":{}}},"f:status":{"f:loadBalancer":{"f:ingress":{}}}} status}]},Spec:ServiceSpec{Ports:[]ServicePort{ServicePort{Name:http,Protocol:TCP,Port:80,TargetPort:{0 80 },NodePort:0,AppProtocol:nil,},},Selector:map[string]string{},ClusterIP:10.111.180.214,Type:ClusterIP,ExternalIPs:[],SessionAffinity:None,LoadBalancerIP:,LoadBalancerSourceRanges:[],ExternalName:,ExternalTrafficPolicy:,HealthCheckNodePort:0,PublishNotReadyAddresses:false,SessionAffinityConfig:nil,IPFamilyPolicy:*SingleStack,ClusterIPs:[10.111.180.214],IPFamilies:[IPv4],AllocateLoadBalancerNodePorts:nil,LoadBalancerClass:nil,InternalTrafficPolicy:*Cluster,},Status:ServiceStatus{LoadBalancer:LoadBalancerStatus{Ingress:[]LoadBalancerIngress{LoadBalancerIngress{IP:203.0.113.1,Hostname:,Ports:[]PortStatus{},},},},Conditions:[]Condition{},},}
  Jan 29 21:37:38.551: INFO: Found Service test-service-zxp6m in namespace services-9025 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Jan 29 21:37:38.551: INFO: Service test-service-zxp6m has service status updated
  STEP: patching the service @ 01/29/24 21:37:38.551
  STEP: watching for the Service to be patched @ 01/29/24 21:37:38.583
  Jan 29 21:37:38.585: INFO: observed Service test-service-zxp6m in namespace services-9025 with labels: map[test-service-static:true]
  Jan 29 21:37:38.586: INFO: observed Service test-service-zxp6m in namespace services-9025 with labels: map[test-service-static:true]
  Jan 29 21:37:38.586: INFO: observed Service test-service-zxp6m in namespace services-9025 with labels: map[test-service-static:true]
  Jan 29 21:37:38.587: INFO: Found Service test-service-zxp6m in namespace services-9025 with labels: map[test-service:patched test-service-static:true]
  Jan 29 21:37:38.588: INFO: Service test-service-zxp6m patched
  STEP: deleting the service @ 01/29/24 21:37:38.588
  STEP: watching for the Service to be deleted @ 01/29/24 21:37:38.603
  Jan 29 21:37:38.606: INFO: Observed event: ADDED
  Jan 29 21:37:38.606: INFO: Observed event: MODIFIED
  Jan 29 21:37:38.606: INFO: Observed event: MODIFIED
  Jan 29 21:37:38.606: INFO: Observed event: MODIFIED
  Jan 29 21:37:38.606: INFO: Found Service test-service-zxp6m in namespace services-9025 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  Jan 29 21:37:38.606: INFO: Service test-service-zxp6m deleted
  Jan 29 21:37:38.606: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9025" for this suite. @ 01/29/24 21:37:38.611
• [0.138 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance]
test/e2e/network/dns.go:329
  STEP: Creating a kubernetes client @ 01/29/24 21:37:38.623
  Jan 29 21:37:38.624: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename dns @ 01/29/24 21:37:38.625
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:37:38.638
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:37:38.642
  STEP: Creating a test externalName service @ 01/29/24 21:37:38.647
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-5685.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-5685.svc.cluster.local; sleep 1; done
   @ 01/29/24 21:37:38.652
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-5685.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-5685.svc.cluster.local; sleep 1; done
   @ 01/29/24 21:37:38.652
  STEP: creating a pod to probe DNS @ 01/29/24 21:37:38.652
  STEP: submitting the pod to kubernetes @ 01/29/24 21:37:38.653
  STEP: retrieving the pod @ 01/29/24 21:37:40.671
  STEP: looking for the results for each expected name from probers @ 01/29/24 21:37:40.674
  Jan 29 21:37:40.689: INFO: DNS probes using dns-test-3b88f432-25e0-4acb-b7f2-01993127d1eb succeeded

  STEP: changing the externalName to bar.example.com @ 01/29/24 21:37:40.689
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-5685.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-5685.svc.cluster.local; sleep 1; done
   @ 01/29/24 21:37:40.697
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-5685.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-5685.svc.cluster.local; sleep 1; done
   @ 01/29/24 21:37:40.697
  STEP: creating a second pod to probe DNS @ 01/29/24 21:37:40.697
  STEP: submitting the pod to kubernetes @ 01/29/24 21:37:40.697
  STEP: retrieving the pod @ 01/29/24 21:37:42.713
  STEP: looking for the results for each expected name from probers @ 01/29/24 21:37:42.718
  Jan 29 21:37:42.729: INFO: DNS probes using dns-test-f1bfa38b-ae37-4341-94f2-3d7825e69876 succeeded

  STEP: changing the service to type=ClusterIP @ 01/29/24 21:37:42.729
  W0129 21:37:42.746134      23 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-5685.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-5685.svc.cluster.local; sleep 1; done
   @ 01/29/24 21:37:42.746
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-5685.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-5685.svc.cluster.local; sleep 1; done
   @ 01/29/24 21:37:42.746
  STEP: creating a third pod to probe DNS @ 01/29/24 21:37:42.746
  STEP: submitting the pod to kubernetes @ 01/29/24 21:37:42.749
  STEP: retrieving the pod @ 01/29/24 21:37:44.765
  STEP: looking for the results for each expected name from probers @ 01/29/24 21:37:44.769
  Jan 29 21:37:44.780: INFO: DNS probes using dns-test-23bdf478-4699-4cb9-8cb9-8d4bfe03f1f3 succeeded

  Jan 29 21:37:44.781: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 01/29/24 21:37:44.785
  STEP: deleting the pod @ 01/29/24 21:37:44.796
  STEP: deleting the pod @ 01/29/24 21:37:44.806
  STEP: deleting the test externalName service @ 01/29/24 21:37:44.817
  STEP: Destroying namespace "dns-5685" for this suite. @ 01/29/24 21:37:44.834
• [6.218 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance]
test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 01/29/24 21:37:44.842
  Jan 29 21:37:44.842: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename watch @ 01/29/24 21:37:44.843
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:37:44.855
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:37:44.86
  STEP: creating a watch on configmaps with a certain label @ 01/29/24 21:37:44.864
  STEP: creating a new configmap @ 01/29/24 21:37:44.866
  STEP: modifying the configmap once @ 01/29/24 21:37:44.87
  STEP: changing the label value of the configmap @ 01/29/24 21:37:44.878
  STEP: Expecting to observe a delete notification for the watched object @ 01/29/24 21:37:44.887
  Jan 29 21:37:44.887: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-1923  be097a94-0a12-4a54-98c2-211194479f2c 12023 0 2024-01-29 21:37:44 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-01-29 21:37:44 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Jan 29 21:37:44.887: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-1923  be097a94-0a12-4a54-98c2-211194479f2c 12024 0 2024-01-29 21:37:44 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-01-29 21:37:44 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jan 29 21:37:44.887: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-1923  be097a94-0a12-4a54-98c2-211194479f2c 12025 0 2024-01-29 21:37:44 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-01-29 21:37:44 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 01/29/24 21:37:44.888
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 01/29/24 21:37:44.894
  STEP: changing the label value of the configmap back @ 01/29/24 21:37:54.895
  STEP: modifying the configmap a third time @ 01/29/24 21:37:54.909
  STEP: deleting the configmap @ 01/29/24 21:37:54.917
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 01/29/24 21:37:54.922
  Jan 29 21:37:54.922: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-1923  be097a94-0a12-4a54-98c2-211194479f2c 12085 0 2024-01-29 21:37:44 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-01-29 21:37:54 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jan 29 21:37:54.922: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-1923  be097a94-0a12-4a54-98c2-211194479f2c 12086 0 2024-01-29 21:37:44 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-01-29 21:37:54 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jan 29 21:37:54.923: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-1923  be097a94-0a12-4a54-98c2-211194479f2c 12087 0 2024-01-29 21:37:44 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-01-29 21:37:54 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jan 29 21:37:54.923: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-1923" for this suite. @ 01/29/24 21:37:54.928
• [10.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance]
test/e2e/common/node/expansion.go:300
  STEP: Creating a kubernetes client @ 01/29/24 21:37:54.936
  Jan 29 21:37:54.936: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename var-expansion @ 01/29/24 21:37:54.938
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:37:54.95
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:37:54.954
  STEP: creating the pod @ 01/29/24 21:37:54.958
  STEP: waiting for pod running @ 01/29/24 21:37:54.966
  STEP: creating a file in subpath @ 01/29/24 21:37:56.975
  Jan 29 21:37:56.980: INFO: ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-2447 PodName:var-expansion-a0148405-9d63-48e9-a842-c4a69562db5d ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jan 29 21:37:56.980: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  Jan 29 21:37:56.981: INFO: ExecWithOptions: Clientset creation
  Jan 29 21:37:56.981: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/var-expansion-2447/pods/var-expansion-a0148405-9d63-48e9-a842-c4a69562db5d/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 01/29/24 21:37:57.105
  Jan 29 21:37:57.109: INFO: ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-2447 PodName:var-expansion-a0148405-9d63-48e9-a842-c4a69562db5d ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jan 29 21:37:57.109: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  Jan 29 21:37:57.110: INFO: ExecWithOptions: Clientset creation
  Jan 29 21:37:57.110: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/var-expansion-2447/pods/var-expansion-a0148405-9d63-48e9-a842-c4a69562db5d/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 01/29/24 21:37:57.227
  Jan 29 21:37:57.744: INFO: Successfully updated pod "var-expansion-a0148405-9d63-48e9-a842-c4a69562db5d"
  STEP: waiting for annotated pod running @ 01/29/24 21:37:57.744
  STEP: deleting the pod gracefully @ 01/29/24 21:37:57.747
  Jan 29 21:37:57.748: INFO: Deleting pod "var-expansion-a0148405-9d63-48e9-a842-c4a69562db5d" in namespace "var-expansion-2447"
  Jan 29 21:37:57.755: INFO: Wait up to 5m0s for pod "var-expansion-a0148405-9d63-48e9-a842-c4a69562db5d" to be fully deleted
  Jan 29 21:38:29.868: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-2447" for this suite. @ 01/29/24 21:38:29.874
• [34.948 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance]
test/e2e/common/node/configmap.go:169
  STEP: Creating a kubernetes client @ 01/29/24 21:38:29.887
  Jan 29 21:38:29.887: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename configmap @ 01/29/24 21:38:29.889
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:38:29.902
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:38:29.907
  STEP: creating a ConfigMap @ 01/29/24 21:38:29.913
  STEP: fetching the ConfigMap @ 01/29/24 21:38:29.918
  STEP: patching the ConfigMap @ 01/29/24 21:38:29.922
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 01/29/24 21:38:29.929
  STEP: deleting the ConfigMap by collection with a label selector @ 01/29/24 21:38:29.933
  STEP: listing all ConfigMaps in test namespace @ 01/29/24 21:38:29.94
  Jan 29 21:38:29.943: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8587" for this suite. @ 01/29/24 21:38:29.947
• [0.066 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance]
test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 01/29/24 21:38:29.966
  Jan 29 21:38:29.966: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename subjectreview @ 01/29/24 21:38:29.967
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:38:29.985
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:38:29.99
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-4633" @ 01/29/24 21:38:29.994
  Jan 29 21:38:29.999: INFO: saUsername: "system:serviceaccount:subjectreview-4633:e2e"
  Jan 29 21:38:29.999: INFO: saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-4633"}
  Jan 29 21:38:29.999: INFO: saUID: "23324250-e250-460a-bb13-bab694c584e6"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-4633:e2e" @ 01/29/24 21:38:29.999
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-4633:e2e" @ 01/29/24 21:38:29.999
  Jan 29 21:38:30.002: INFO: sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-4633:e2e" api 'list' configmaps in "subjectreview-4633" namespace @ 01/29/24 21:38:30.002
  Jan 29 21:38:30.004: INFO: SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-4633:e2e" @ 01/29/24 21:38:30.004
  Jan 29 21:38:30.007: INFO: lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  Jan 29 21:38:30.007: INFO: LocalSubjectAccessReview has been verified
  Jan 29 21:38:30.007: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-4633" for this suite. @ 01/29/24 21:38:30.012
• [0.051 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:208
  STEP: Creating a kubernetes client @ 01/29/24 21:38:30.019
  Jan 29 21:38:30.019: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename downward-api @ 01/29/24 21:38:30.021
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:38:30.033
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:38:30.037
  STEP: Creating a pod to test downward API volume plugin @ 01/29/24 21:38:30.042
  STEP: Saw pod success @ 01/29/24 21:38:34.067
  Jan 29 21:38:34.071: INFO: Trying to get logs from node nodeb14 pod downwardapi-volume-094c4c7d-40ec-4aca-8d6b-935c6e6248fd container client-container: <nil>
  STEP: delete the pod @ 01/29/24 21:38:34.082
  Jan 29 21:38:34.097: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7690" for this suite. @ 01/29/24 21:38:34.103
• [4.089 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:137
  STEP: Creating a kubernetes client @ 01/29/24 21:38:34.111
  Jan 29 21:38:34.111: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename emptydir @ 01/29/24 21:38:34.113
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:38:34.128
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:38:34.132
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 01/29/24 21:38:34.137
  STEP: Saw pod success @ 01/29/24 21:38:38.168
  Jan 29 21:38:38.173: INFO: Trying to get logs from node nodeb14 pod pod-116a95ba-5cf2-43c6-b37d-91e8de515215 container test-container: <nil>
  STEP: delete the pod @ 01/29/24 21:38:38.182
  Jan 29 21:38:38.195: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2808" for this suite. @ 01/29/24 21:38:38.2
• [4.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:148
  STEP: Creating a kubernetes client @ 01/29/24 21:38:38.213
  Jan 29 21:38:38.213: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename kubelet-test @ 01/29/24 21:38:38.214
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:38:38.229
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:38:38.234
  STEP: Waiting for pod completion @ 01/29/24 21:38:38.245
  Jan 29 21:38:42.271: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-9505" for this suite. @ 01/29/24 21:38:42.278
• [4.073 seconds]
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:357
  STEP: Creating a kubernetes client @ 01/29/24 21:38:42.287
  Jan 29 21:38:42.287: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename crd-publish-openapi @ 01/29/24 21:38:42.289
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:38:42.303
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:38:42.307
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 01/29/24 21:38:42.312
  Jan 29 21:38:42.314: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  Jan 29 21:38:43.722: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  Jan 29 21:38:49.486: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5452" for this suite. @ 01/29/24 21:38:49.5
• [7.221 seconds]
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance]
test/e2e/apps/disruption.go:164
  STEP: Creating a kubernetes client @ 01/29/24 21:38:49.508
  Jan 29 21:38:49.508: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename disruption @ 01/29/24 21:38:49.509
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:38:49.529
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:38:49.534
  STEP: Waiting for the pdb to be processed @ 01/29/24 21:38:49.544
  STEP: Updating PodDisruptionBudget status @ 01/29/24 21:38:51.554
  STEP: Waiting for all pods to be running @ 01/29/24 21:38:51.564
  Jan 29 21:38:51.570: INFO: running pods: 0 < 1
  STEP: locating a running pod @ 01/29/24 21:38:53.575
  STEP: Waiting for the pdb to be processed @ 01/29/24 21:38:53.592
  STEP: Patching PodDisruptionBudget status @ 01/29/24 21:38:53.599
  STEP: Waiting for the pdb to be processed @ 01/29/24 21:38:53.612
  Jan 29 21:38:53.623: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2908" for this suite. @ 01/29/24 21:38:53.628
• [4.127 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance]
test/e2e/apps/disruption.go:87
  STEP: Creating a kubernetes client @ 01/29/24 21:38:53.637
  Jan 29 21:38:53.637: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename disruption @ 01/29/24 21:38:53.639
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:38:53.655
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:38:53.659
  STEP: Creating a kubernetes client @ 01/29/24 21:38:53.664
  Jan 29 21:38:53.664: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename disruption-2 @ 01/29/24 21:38:53.665
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:38:53.68
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:38:53.685
  STEP: Waiting for the pdb to be processed @ 01/29/24 21:38:53.694
  STEP: Waiting for the pdb to be processed @ 01/29/24 21:38:55.707
  STEP: Waiting for the pdb to be processed @ 01/29/24 21:38:55.719
  STEP: listing a collection of PDBs across all namespaces @ 01/29/24 21:38:55.723
  STEP: listing a collection of PDBs in namespace disruption-9598 @ 01/29/24 21:38:55.728
  STEP: deleting a collection of PDBs @ 01/29/24 21:38:55.73
  STEP: Waiting for the PDB collection to be deleted @ 01/29/24 21:38:55.739
  Jan 29 21:38:55.742: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Jan 29 21:38:55.747: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-5033" for this suite. @ 01/29/24 21:38:55.752
  STEP: Destroying namespace "disruption-9598" for this suite. @ 01/29/24 21:38:55.759
• [2.129 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 01/29/24 21:38:55.767
  Jan 29 21:38:55.767: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename projected @ 01/29/24 21:38:55.769
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:38:55.783
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:38:55.787
  STEP: Creating projection with secret that has name projected-secret-test-map-c89c088b-971c-4990-9c80-e32523ea04ae @ 01/29/24 21:38:55.791
  STEP: Creating a pod to test consume secrets @ 01/29/24 21:38:55.796
  STEP: Saw pod success @ 01/29/24 21:38:59.823
  Jan 29 21:38:59.826: INFO: Trying to get logs from node nodeb14 pod pod-projected-secrets-d48b6d35-4105-45ca-a014-f5bca73f9ca9 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 01/29/24 21:38:59.836
  Jan 29 21:38:59.851: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3909" for this suite. @ 01/29/24 21:38:59.856
• [4.094 seconds]
------------------------------
S
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount  [Conformance]
test/e2e/auth/service_accounts.go:161
  STEP: Creating a kubernetes client @ 01/29/24 21:38:59.862
  Jan 29 21:38:59.862: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename svcaccounts @ 01/29/24 21:38:59.863
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:38:59.876
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:38:59.881
  Jan 29 21:38:59.902: INFO: created pod pod-service-account-defaultsa
  Jan 29 21:38:59.902: INFO: pod pod-service-account-defaultsa service account token volume mount: true
  Jan 29 21:38:59.908: INFO: created pod pod-service-account-mountsa
  Jan 29 21:38:59.908: INFO: pod pod-service-account-mountsa service account token volume mount: true
  Jan 29 21:38:59.913: INFO: created pod pod-service-account-nomountsa
  Jan 29 21:38:59.913: INFO: pod pod-service-account-nomountsa service account token volume mount: false
  Jan 29 21:38:59.919: INFO: created pod pod-service-account-defaultsa-mountspec
  Jan 29 21:38:59.919: INFO: pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  Jan 29 21:38:59.925: INFO: created pod pod-service-account-mountsa-mountspec
  Jan 29 21:38:59.925: INFO: pod pod-service-account-mountsa-mountspec service account token volume mount: true
  Jan 29 21:38:59.932: INFO: created pod pod-service-account-nomountsa-mountspec
  Jan 29 21:38:59.932: INFO: pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  Jan 29 21:38:59.939: INFO: created pod pod-service-account-defaultsa-nomountspec
  Jan 29 21:38:59.939: INFO: pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  Jan 29 21:38:59.943: INFO: created pod pod-service-account-mountsa-nomountspec
  Jan 29 21:38:59.943: INFO: pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  Jan 29 21:38:59.949: INFO: created pod pod-service-account-nomountsa-nomountspec
  Jan 29 21:38:59.949: INFO: pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  Jan 29 21:38:59.949: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-9306" for this suite. @ 01/29/24 21:38:59.953
• [0.099 seconds]
------------------------------
S
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance]
test/e2e/network/service.go:1533
  STEP: Creating a kubernetes client @ 01/29/24 21:38:59.961
  Jan 29 21:38:59.961: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename services @ 01/29/24 21:38:59.962
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:38:59.979
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:38:59.982
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-6214 @ 01/29/24 21:38:59.986
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 01/29/24 21:39:00.001
  STEP: creating service externalsvc in namespace services-6214 @ 01/29/24 21:39:00.001
  STEP: creating replication controller externalsvc in namespace services-6214 @ 01/29/24 21:39:00.017
  I0129 21:39:00.025835      23 runners.go:197] Created replication controller with name: externalsvc, namespace: services-6214, replica count: 2
  I0129 21:39:03.078184      23 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 01/29/24 21:39:03.081
  Jan 29 21:39:03.101: INFO: Creating new exec pod
  Jan 29 21:39:05.118: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=services-6214 exec execpod472zr -- /bin/sh -x -c nslookup nodeport-service.services-6214.svc.cluster.local'
  Jan 29 21:39:05.375: INFO: stderr: "+ nslookup nodeport-service.services-6214.svc.cluster.local\n"
  Jan 29 21:39:05.375: INFO: stdout: "Server:\t\t10.96.0.10\nAddress:\t10.96.0.10#53\n\nnodeport-service.services-6214.svc.cluster.local\tcanonical name = externalsvc.services-6214.svc.cluster.local.\nName:\texternalsvc.services-6214.svc.cluster.local\nAddress: 10.98.163.165\n\n"
  Jan 29 21:39:05.375: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController externalsvc in namespace services-6214, will wait for the garbage collector to delete the pods @ 01/29/24 21:39:05.381
  Jan 29 21:39:05.441: INFO: Deleting ReplicationController externalsvc took: 6.509301ms
  Jan 29 21:39:05.542: INFO: Terminating ReplicationController externalsvc pods took: 100.198451ms
  Jan 29 21:39:08.264: INFO: Cleaning up the NodePort to ExternalName test service
  STEP: Destroying namespace "services-6214" for this suite. @ 01/29/24 21:39:08.272
• [8.318 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:99
  STEP: Creating a kubernetes client @ 01/29/24 21:39:08.279
  Jan 29 21:39:08.279: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename projected @ 01/29/24 21:39:08.281
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:39:08.294
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:39:08.299
  STEP: Creating configMap with name projected-configmap-test-volume-map-088ede76-ffa3-4869-84fc-c536590b1da1 @ 01/29/24 21:39:08.303
  STEP: Creating a pod to test consume configMaps @ 01/29/24 21:39:08.31
  STEP: Saw pod success @ 01/29/24 21:39:12.332
  Jan 29 21:39:12.335: INFO: Trying to get logs from node nodeb14 pod pod-projected-configmaps-d8b6d3de-57d4-4239-a012-a3b14e1c1826 container agnhost-container: <nil>
  STEP: delete the pod @ 01/29/24 21:39:12.344
  Jan 29 21:39:12.358: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9400" for this suite. @ 01/29/24 21:39:12.364
• [4.091 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance]
test/e2e/apps/statefulset.go:329
  STEP: Creating a kubernetes client @ 01/29/24 21:39:12.373
  Jan 29 21:39:12.373: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename statefulset @ 01/29/24 21:39:12.374
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:39:12.386
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:39:12.39
  STEP: Creating service test in namespace statefulset-6989 @ 01/29/24 21:39:12.394
  STEP: Creating a new StatefulSet @ 01/29/24 21:39:12.4
  Jan 29 21:39:12.409: INFO: Found 0 stateful pods, waiting for 3
  Jan 29 21:39:22.415: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Jan 29 21:39:22.415: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Jan 29 21:39:22.415: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 01/29/24 21:39:22.425
  Jan 29 21:39:22.446: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 01/29/24 21:39:22.446
  STEP: Not applying an update when the partition is greater than the number of replicas @ 01/29/24 21:39:32.47
  STEP: Performing a canary update @ 01/29/24 21:39:32.47
  Jan 29 21:39:32.489: INFO: Updating stateful set ss2
  Jan 29 21:39:32.496: INFO: Waiting for Pod statefulset-6989/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  STEP: Restoring Pods to the correct revision when they are deleted @ 01/29/24 21:39:42.507
  Jan 29 21:39:42.535: INFO: Found 1 stateful pods, waiting for 3
  Jan 29 21:39:52.546: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Jan 29 21:39:52.546: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Jan 29 21:39:52.546: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 01/29/24 21:39:52.553
  Jan 29 21:39:52.577: INFO: Updating stateful set ss2
  Jan 29 21:39:52.587: INFO: Waiting for Pod statefulset-6989/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  Jan 29 21:40:02.624: INFO: Updating stateful set ss2
  Jan 29 21:40:02.632: INFO: Waiting for StatefulSet statefulset-6989/ss2 to complete update
  Jan 29 21:40:02.632: INFO: Waiting for Pod statefulset-6989/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  Jan 29 21:40:12.642: INFO: Deleting all statefulset in ns statefulset-6989
  Jan 29 21:40:12.646: INFO: Scaling statefulset ss2 to 0
  Jan 29 21:40:22.668: INFO: Waiting for statefulset status.replicas updated to 0
  Jan 29 21:40:22.671: INFO: Deleting statefulset ss2
  Jan 29 21:40:22.683: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6989" for this suite. @ 01/29/24 21:40:22.689
• [70.322 seconds]
------------------------------
SS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:91
  STEP: Creating a kubernetes client @ 01/29/24 21:40:22.696
  Jan 29 21:40:22.696: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename downward-api @ 01/29/24 21:40:22.698
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:40:22.719
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:40:22.724
  STEP: Creating a pod to test downward api env vars @ 01/29/24 21:40:22.728
  STEP: Saw pod success @ 01/29/24 21:40:26.753
  Jan 29 21:40:26.757: INFO: Trying to get logs from node nodeb14 pod downward-api-20e7921e-a7bb-44c5-8078-8728d1570aae container dapi-container: <nil>
  STEP: delete the pod @ 01/29/24 21:40:26.766
  Jan 29 21:40:26.785: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2375" for this suite. @ 01/29/24 21:40:26.79
• [4.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance]
test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 01/29/24 21:40:26.799
  Jan 29 21:40:26.799: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename daemonsets @ 01/29/24 21:40:26.801
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:40:26.812
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:40:26.816
  STEP: Creating simple DaemonSet "daemon-set" @ 01/29/24 21:40:26.838
  STEP: Check that daemon pods launch on every node of the cluster. @ 01/29/24 21:40:26.844
  Jan 29 21:40:26.849: INFO: DaemonSet pods can't tolerate node nodeb08 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jan 29 21:40:26.852: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jan 29 21:40:26.852: INFO: Node nodeb14 is running 0 daemon pod, expected 1
  Jan 29 21:40:27.857: INFO: DaemonSet pods can't tolerate node nodeb08 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jan 29 21:40:27.861: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jan 29 21:40:27.861: INFO: Node nodeb14 is running 0 daemon pod, expected 1
  Jan 29 21:40:28.858: INFO: DaemonSet pods can't tolerate node nodeb08 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jan 29 21:40:28.863: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jan 29 21:40:28.863: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 01/29/24 21:40:28.866
  Jan 29 21:40:28.887: INFO: DaemonSet pods can't tolerate node nodeb08 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jan 29 21:40:28.890: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jan 29 21:40:28.891: INFO: Node nodec03 is running 0 daemon pod, expected 1
  Jan 29 21:40:29.897: INFO: DaemonSet pods can't tolerate node nodeb08 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jan 29 21:40:29.901: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jan 29 21:40:29.901: INFO: Node nodec03 is running 0 daemon pod, expected 1
  Jan 29 21:40:30.897: INFO: DaemonSet pods can't tolerate node nodeb08 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jan 29 21:40:30.901: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jan 29 21:40:30.902: INFO: Node nodec03 is running 0 daemon pod, expected 1
  Jan 29 21:40:31.895: INFO: DaemonSet pods can't tolerate node nodeb08 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jan 29 21:40:31.899: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jan 29 21:40:31.899: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 01/29/24 21:40:31.903
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-2961, will wait for the garbage collector to delete the pods @ 01/29/24 21:40:31.903
  Jan 29 21:40:31.963: INFO: Deleting DaemonSet.extensions daemon-set took: 6.021416ms
  Jan 29 21:40:32.064: INFO: Terminating DaemonSet.extensions daemon-set pods took: 101.116961ms
  Jan 29 21:40:33.568: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jan 29 21:40:33.568: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Jan 29 21:40:33.572: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"13193"},"items":null}

  Jan 29 21:40:33.575: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"13193"},"items":null}

  Jan 29 21:40:33.587: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-2961" for this suite. @ 01/29/24 21:40:33.591
• [6.798 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image  [Conformance]
test/e2e/apps/rc.go:69
  STEP: Creating a kubernetes client @ 01/29/24 21:40:33.608
  Jan 29 21:40:33.609: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename replication-controller @ 01/29/24 21:40:33.61
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:40:33.628
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:40:33.631
  STEP: Creating replication controller my-hostname-basic-ebc8e947-5daf-40f6-b98a-ad3f7a16a06f @ 01/29/24 21:40:33.635
  Jan 29 21:40:33.643: INFO: Pod name my-hostname-basic-ebc8e947-5daf-40f6-b98a-ad3f7a16a06f: Found 0 pods out of 1
  Jan 29 21:40:38.648: INFO: Pod name my-hostname-basic-ebc8e947-5daf-40f6-b98a-ad3f7a16a06f: Found 1 pods out of 1
  Jan 29 21:40:38.648: INFO: Ensuring all pods for ReplicationController "my-hostname-basic-ebc8e947-5daf-40f6-b98a-ad3f7a16a06f" are running
  Jan 29 21:40:38.652: INFO: Pod "my-hostname-basic-ebc8e947-5daf-40f6-b98a-ad3f7a16a06f-kzfvj" is running and ready(conditions: [{Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-01-29 21:40:33 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-01-29 21:40:34 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-01-29 21:40:34 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-01-29 21:40:33 +0000 UTC Reason: Message:}])
  Jan 29 21:40:38.652: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 01/29/24 21:40:38.652
  Jan 29 21:40:38.667: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-3410" for this suite. @ 01/29/24 21:40:38.672
• [5.074 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance]
test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 01/29/24 21:40:38.686
  Jan 29 21:40:38.686: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename subpath @ 01/29/24 21:40:38.688
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:40:38.701
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:40:38.705
  STEP: Setting up data @ 01/29/24 21:40:38.71
  STEP: Creating pod pod-subpath-test-configmap-2jmn @ 01/29/24 21:40:38.72
  STEP: Creating a pod to test atomic-volume-subpath @ 01/29/24 21:40:38.72
  STEP: Saw pod success @ 01/29/24 21:41:02.808
  Jan 29 21:41:02.812: INFO: Trying to get logs from node nodeb14 pod pod-subpath-test-configmap-2jmn container test-container-subpath-configmap-2jmn: <nil>
  STEP: delete the pod @ 01/29/24 21:41:02.823
  STEP: Deleting pod pod-subpath-test-configmap-2jmn @ 01/29/24 21:41:02.837
  Jan 29 21:41:02.837: INFO: Deleting pod "pod-subpath-test-configmap-2jmn" in namespace "subpath-2115"
  Jan 29 21:41:02.841: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-2115" for this suite. @ 01/29/24 21:41:02.846
• [24.165 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 01/29/24 21:41:02.852
  Jan 29 21:41:02.852: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename projected @ 01/29/24 21:41:02.854
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:41:02.869
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:41:02.875
  STEP: Creating secret with name projected-secret-test-af9e25bc-7a65-4380-a280-65b89087be78 @ 01/29/24 21:41:02.879
  STEP: Creating a pod to test consume secrets @ 01/29/24 21:41:02.885
  STEP: Saw pod success @ 01/29/24 21:41:06.913
  Jan 29 21:41:06.916: INFO: Trying to get logs from node nodeb14 pod pod-projected-secrets-de945260-8b14-424a-990e-a0fb0dec9b33 container secret-volume-test: <nil>
  STEP: delete the pod @ 01/29/24 21:41:06.925
  Jan 29 21:41:06.939: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4419" for this suite. @ 01/29/24 21:41:06.944
• [4.098 seconds]
------------------------------
SS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:550
  STEP: Creating a kubernetes client @ 01/29/24 21:41:06.95
  Jan 29 21:41:06.950: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename container-probe @ 01/29/24 21:41:06.952
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:41:06.967
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:41:06.971
  STEP: Creating pod test-grpc-2c11855f-dc9d-425c-8fd0-db51b013f138 in namespace container-probe-9290 @ 01/29/24 21:41:06.976
  STEP: checking the pod's current state and verifying that restartCount is present @ 01/29/24 21:41:08.994
  Jan 29 21:41:08.997: INFO: Initial restart count of pod test-grpc-2c11855f-dc9d-425c-8fd0-db51b013f138 is 0
  Jan 29 21:41:09.002: INFO: Get pod test-grpc-2c11855f-dc9d-425c-8fd0-db51b013f138 in namespace container-probe-9290
  Jan 29 21:41:11.008: INFO: Get pod test-grpc-2c11855f-dc9d-425c-8fd0-db51b013f138 in namespace container-probe-9290
  Jan 29 21:41:13.021: INFO: Get pod test-grpc-2c11855f-dc9d-425c-8fd0-db51b013f138 in namespace container-probe-9290
  Jan 29 21:41:15.029: INFO: Get pod test-grpc-2c11855f-dc9d-425c-8fd0-db51b013f138 in namespace container-probe-9290
  Jan 29 21:41:17.036: INFO: Get pod test-grpc-2c11855f-dc9d-425c-8fd0-db51b013f138 in namespace container-probe-9290
  Jan 29 21:41:19.040: INFO: Get pod test-grpc-2c11855f-dc9d-425c-8fd0-db51b013f138 in namespace container-probe-9290
  Jan 29 21:41:21.046: INFO: Get pod test-grpc-2c11855f-dc9d-425c-8fd0-db51b013f138 in namespace container-probe-9290
  Jan 29 21:41:23.053: INFO: Get pod test-grpc-2c11855f-dc9d-425c-8fd0-db51b013f138 in namespace container-probe-9290
  Jan 29 21:41:25.060: INFO: Get pod test-grpc-2c11855f-dc9d-425c-8fd0-db51b013f138 in namespace container-probe-9290
  Jan 29 21:41:27.067: INFO: Get pod test-grpc-2c11855f-dc9d-425c-8fd0-db51b013f138 in namespace container-probe-9290
  Jan 29 21:41:29.073: INFO: Get pod test-grpc-2c11855f-dc9d-425c-8fd0-db51b013f138 in namespace container-probe-9290
  Jan 29 21:41:31.079: INFO: Get pod test-grpc-2c11855f-dc9d-425c-8fd0-db51b013f138 in namespace container-probe-9290
  Jan 29 21:41:33.085: INFO: Get pod test-grpc-2c11855f-dc9d-425c-8fd0-db51b013f138 in namespace container-probe-9290
  Jan 29 21:41:35.093: INFO: Get pod test-grpc-2c11855f-dc9d-425c-8fd0-db51b013f138 in namespace container-probe-9290
  Jan 29 21:41:37.099: INFO: Get pod test-grpc-2c11855f-dc9d-425c-8fd0-db51b013f138 in namespace container-probe-9290
  Jan 29 21:41:39.105: INFO: Get pod test-grpc-2c11855f-dc9d-425c-8fd0-db51b013f138 in namespace container-probe-9290
  Jan 29 21:41:41.112: INFO: Get pod test-grpc-2c11855f-dc9d-425c-8fd0-db51b013f138 in namespace container-probe-9290
  Jan 29 21:41:43.119: INFO: Get pod test-grpc-2c11855f-dc9d-425c-8fd0-db51b013f138 in namespace container-probe-9290
  Jan 29 21:41:45.126: INFO: Get pod test-grpc-2c11855f-dc9d-425c-8fd0-db51b013f138 in namespace container-probe-9290
  Jan 29 21:41:47.133: INFO: Get pod test-grpc-2c11855f-dc9d-425c-8fd0-db51b013f138 in namespace container-probe-9290
  Jan 29 21:41:49.138: INFO: Get pod test-grpc-2c11855f-dc9d-425c-8fd0-db51b013f138 in namespace container-probe-9290
  Jan 29 21:41:51.145: INFO: Get pod test-grpc-2c11855f-dc9d-425c-8fd0-db51b013f138 in namespace container-probe-9290
  Jan 29 21:41:53.152: INFO: Get pod test-grpc-2c11855f-dc9d-425c-8fd0-db51b013f138 in namespace container-probe-9290
  Jan 29 21:41:55.160: INFO: Get pod test-grpc-2c11855f-dc9d-425c-8fd0-db51b013f138 in namespace container-probe-9290
  Jan 29 21:41:57.167: INFO: Get pod test-grpc-2c11855f-dc9d-425c-8fd0-db51b013f138 in namespace container-probe-9290
  Jan 29 21:41:59.172: INFO: Get pod test-grpc-2c11855f-dc9d-425c-8fd0-db51b013f138 in namespace container-probe-9290
  Jan 29 21:42:01.179: INFO: Get pod test-grpc-2c11855f-dc9d-425c-8fd0-db51b013f138 in namespace container-probe-9290
  Jan 29 21:42:03.187: INFO: Get pod test-grpc-2c11855f-dc9d-425c-8fd0-db51b013f138 in namespace container-probe-9290
  Jan 29 21:42:05.194: INFO: Get pod test-grpc-2c11855f-dc9d-425c-8fd0-db51b013f138 in namespace container-probe-9290
  Jan 29 21:42:07.200: INFO: Get pod test-grpc-2c11855f-dc9d-425c-8fd0-db51b013f138 in namespace container-probe-9290
  Jan 29 21:42:09.205: INFO: Get pod test-grpc-2c11855f-dc9d-425c-8fd0-db51b013f138 in namespace container-probe-9290
  Jan 29 21:42:11.216: INFO: Get pod test-grpc-2c11855f-dc9d-425c-8fd0-db51b013f138 in namespace container-probe-9290
  Jan 29 21:42:13.222: INFO: Get pod test-grpc-2c11855f-dc9d-425c-8fd0-db51b013f138 in namespace container-probe-9290
  Jan 29 21:42:13.222: INFO: Restart count of pod container-probe-9290/test-grpc-2c11855f-dc9d-425c-8fd0-db51b013f138 is now 1 (1m4.224643761s elapsed)
  Jan 29 21:42:13.222: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 01/29/24 21:42:13.228
  STEP: Destroying namespace "container-probe-9290" for this suite. @ 01/29/24 21:42:13.245
• [66.302 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod  [Conformance]
test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 01/29/24 21:42:13.254
  Jan 29 21:42:13.254: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename prestop @ 01/29/24 21:42:13.257
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:42:13.269
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:42:13.275
  STEP: Creating server pod server in namespace prestop-8176 @ 01/29/24 21:42:13.279
  STEP: Waiting for pods to come up. @ 01/29/24 21:42:13.286
  STEP: Creating tester pod tester in namespace prestop-8176 @ 01/29/24 21:42:15.3
  STEP: Deleting pre-stop pod @ 01/29/24 21:42:17.319
  Jan 29 21:42:22.340: INFO: Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  Jan 29 21:42:22.340: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Deleting the server pod @ 01/29/24 21:42:22.346
  STEP: Destroying namespace "prestop-8176" for this suite. @ 01/29/24 21:42:22.356
• [9.107 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIStorageCapacity  should support CSIStorageCapacities API operations [Conformance]
test/e2e/storage/csistoragecapacity.go:49
  STEP: Creating a kubernetes client @ 01/29/24 21:42:22.371
  Jan 29 21:42:22.371: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename csistoragecapacity @ 01/29/24 21:42:22.372
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:42:22.386
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:42:22.39
  STEP: getting /apis @ 01/29/24 21:42:22.394
  STEP: getting /apis/storage.k8s.io @ 01/29/24 21:42:22.4
  STEP: getting /apis/storage.k8s.io/v1 @ 01/29/24 21:42:22.402
  STEP: creating @ 01/29/24 21:42:22.404
  STEP: watching @ 01/29/24 21:42:22.419
  Jan 29 21:42:22.419: INFO: starting watch
  STEP: getting @ 01/29/24 21:42:22.426
  STEP: listing in namespace @ 01/29/24 21:42:22.429
  STEP: listing across namespaces @ 01/29/24 21:42:22.433
  STEP: patching @ 01/29/24 21:42:22.437
  STEP: updating @ 01/29/24 21:42:22.443
  Jan 29 21:42:22.450: INFO: waiting for watch events with expected annotations in namespace
  Jan 29 21:42:22.450: INFO: waiting for watch events with expected annotations across namespace
  STEP: deleting @ 01/29/24 21:42:22.45
  STEP: deleting a collection @ 01/29/24 21:42:22.461
  Jan 29 21:42:22.480: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-5" for this suite. @ 01/29/24 21:42:22.484
• [0.121 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should delete a job [Conformance]
test/e2e/apps/job.go:485
  STEP: Creating a kubernetes client @ 01/29/24 21:42:22.496
  Jan 29 21:42:22.496: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename job @ 01/29/24 21:42:22.498
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:42:22.511
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:42:22.516
  STEP: Creating a job @ 01/29/24 21:42:22.52
  STEP: Ensuring active pods == parallelism @ 01/29/24 21:42:22.527
  STEP: delete a job @ 01/29/24 21:42:24.534
  STEP: deleting Job.batch foo in namespace job-2907, will wait for the garbage collector to delete the pods @ 01/29/24 21:42:24.534
  Jan 29 21:42:24.594: INFO: Deleting Job.batch foo took: 5.327967ms
  Jan 29 21:42:24.695: INFO: Terminating Job.batch foo pods took: 100.75573ms
  STEP: Ensuring job was deleted @ 01/29/24 21:42:56.196
  Jan 29 21:42:56.203: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-2907" for this suite. @ 01/29/24 21:42:56.209
• [33.723 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance]
test/e2e/apimachinery/webhook.go:498
  STEP: Creating a kubernetes client @ 01/29/24 21:42:56.22
  Jan 29 21:42:56.220: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename webhook @ 01/29/24 21:42:56.222
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:42:56.235
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:42:56.239
  STEP: Setting up server cert @ 01/29/24 21:42:56.263
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/29/24 21:42:56.727
  STEP: Deploying the webhook pod @ 01/29/24 21:42:56.737
  STEP: Wait for the deployment to be ready @ 01/29/24 21:42:56.749
  Jan 29 21:42:56.756: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 01/29/24 21:42:58.769
  STEP: Verifying the service has paired with the endpoint @ 01/29/24 21:42:58.788
  Jan 29 21:42:59.789: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 01/29/24 21:42:59.797
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 01/29/24 21:42:59.829
  STEP: Creating a configMap that should not be mutated @ 01/29/24 21:42:59.837
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 01/29/24 21:42:59.848
  STEP: Creating a configMap that should be mutated @ 01/29/24 21:42:59.858
  Jan 29 21:42:59.890: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3011" for this suite. @ 01/29/24 21:42:59.937
  STEP: Destroying namespace "webhook-markers-3719" for this suite. @ 01/29/24 21:42:59.943
• [3.729 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance]
test/e2e/common/storage/empty_dir.go:227
  STEP: Creating a kubernetes client @ 01/29/24 21:42:59.954
  Jan 29 21:42:59.954: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename emptydir @ 01/29/24 21:42:59.956
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:42:59.969
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:42:59.973
  STEP: Creating Pod @ 01/29/24 21:42:59.977
  STEP: Reading file content from the nginx-container @ 01/29/24 21:43:01.998
  Jan 29 21:43:01.998: INFO: ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-7506 PodName:pod-sharedvolume-b53175db-b61b-4f2d-b76c-14acb0a31f16 ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jan 29 21:43:01.998: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  Jan 29 21:43:02.000: INFO: ExecWithOptions: Clientset creation
  Jan 29 21:43:02.000: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/emptydir-7506/pods/pod-sharedvolume-b53175db-b61b-4f2d-b76c-14acb0a31f16/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
  Jan 29 21:43:02.128: INFO: Exec stderr: ""
  Jan 29 21:43:02.128: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7506" for this suite. @ 01/29/24 21:43:02.135
• [2.189 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:135
  STEP: Creating a kubernetes client @ 01/29/24 21:43:02.148
  Jan 29 21:43:02.148: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename kubelet-test @ 01/29/24 21:43:02.15
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:43:02.166
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:43:02.171
  Jan 29 21:43:02.203: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-6416" for this suite. @ 01/29/24 21:43:02.207
• [0.065 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance]
test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 01/29/24 21:43:02.216
  Jan 29 21:43:02.216: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename emptydir-wrapper @ 01/29/24 21:43:02.219
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:43:02.234
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:43:02.237
  STEP: Creating 50 configmaps @ 01/29/24 21:43:02.242
  STEP: Creating RC which spawns configmap-volume pods @ 01/29/24 21:43:02.5
  Jan 29 21:43:02.579: INFO: Pod name wrapped-volume-race-ff766ae0-ae9a-410c-9997-23a35411a5f4: Found 3 pods out of 5
  Jan 29 21:43:07.594: INFO: Pod name wrapped-volume-race-ff766ae0-ae9a-410c-9997-23a35411a5f4: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 01/29/24 21:43:07.594
  STEP: Creating RC which spawns configmap-volume pods @ 01/29/24 21:43:07.621
  Jan 29 21:43:07.641: INFO: Pod name wrapped-volume-race-9c58131e-c0f8-4ade-ad2c-04a3454dfae6: Found 0 pods out of 5
  Jan 29 21:43:12.660: INFO: Pod name wrapped-volume-race-9c58131e-c0f8-4ade-ad2c-04a3454dfae6: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 01/29/24 21:43:12.66
  STEP: Creating RC which spawns configmap-volume pods @ 01/29/24 21:43:12.69
  Jan 29 21:43:12.712: INFO: Pod name wrapped-volume-race-34019bd7-6902-4b7c-b522-a020e19c281a: Found 0 pods out of 5
  Jan 29 21:43:17.732: INFO: Pod name wrapped-volume-race-34019bd7-6902-4b7c-b522-a020e19c281a: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 01/29/24 21:43:17.732
  Jan 29 21:43:17.754: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController wrapped-volume-race-34019bd7-6902-4b7c-b522-a020e19c281a in namespace emptydir-wrapper-2354, will wait for the garbage collector to delete the pods @ 01/29/24 21:43:17.759
  Jan 29 21:43:17.825: INFO: Deleting ReplicationController wrapped-volume-race-34019bd7-6902-4b7c-b522-a020e19c281a took: 10.487677ms
  Jan 29 21:43:17.925: INFO: Terminating ReplicationController wrapped-volume-race-34019bd7-6902-4b7c-b522-a020e19c281a pods took: 100.188366ms
  STEP: deleting ReplicationController wrapped-volume-race-9c58131e-c0f8-4ade-ad2c-04a3454dfae6 in namespace emptydir-wrapper-2354, will wait for the garbage collector to delete the pods @ 01/29/24 21:43:19.426
  Jan 29 21:43:19.489: INFO: Deleting ReplicationController wrapped-volume-race-9c58131e-c0f8-4ade-ad2c-04a3454dfae6 took: 7.55577ms
  Jan 29 21:43:19.589: INFO: Terminating ReplicationController wrapped-volume-race-9c58131e-c0f8-4ade-ad2c-04a3454dfae6 pods took: 100.185311ms
  STEP: deleting ReplicationController wrapped-volume-race-ff766ae0-ae9a-410c-9997-23a35411a5f4 in namespace emptydir-wrapper-2354, will wait for the garbage collector to delete the pods @ 01/29/24 21:43:20.491
  Jan 29 21:43:20.553: INFO: Deleting ReplicationController wrapped-volume-race-ff766ae0-ae9a-410c-9997-23a35411a5f4 took: 6.839824ms
  Jan 29 21:43:20.654: INFO: Terminating ReplicationController wrapped-volume-race-ff766ae0-ae9a-410c-9997-23a35411a5f4 pods took: 100.449443ms
  STEP: Cleaning up the configMaps @ 01/29/24 21:43:21.455
  STEP: Destroying namespace "emptydir-wrapper-2354" for this suite. @ 01/29/24 21:43:21.74
• [19.531 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance]
test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 01/29/24 21:43:21.748
  Jan 29 21:43:21.748: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename watch @ 01/29/24 21:43:21.749
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:43:21.764
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:43:21.77
  STEP: getting a starting resourceVersion @ 01/29/24 21:43:21.775
  STEP: starting a background goroutine to produce watch events @ 01/29/24 21:43:21.778
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 01/29/24 21:43:21.778
  Jan 29 21:43:24.555: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-7996" for this suite. @ 01/29/24 21:43:24.605
• [2.911 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance]
test/e2e/apimachinery/webhook.go:301
  STEP: Creating a kubernetes client @ 01/29/24 21:43:24.663
  Jan 29 21:43:24.663: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename webhook @ 01/29/24 21:43:24.665
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:43:24.681
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:43:24.685
  STEP: Setting up server cert @ 01/29/24 21:43:24.705
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/29/24 21:43:25.221
  STEP: Deploying the webhook pod @ 01/29/24 21:43:25.227
  STEP: Wait for the deployment to be ready @ 01/29/24 21:43:25.241
  Jan 29 21:43:25.249: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 01/29/24 21:43:27.26
  STEP: Verifying the service has paired with the endpoint @ 01/29/24 21:43:27.282
  Jan 29 21:43:28.282: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 01/29/24 21:43:28.292
  STEP: Creating a custom resource definition that should be denied by the webhook @ 01/29/24 21:43:28.317
  Jan 29 21:43:28.317: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  Jan 29 21:43:28.336: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5481" for this suite. @ 01/29/24 21:43:28.393
  STEP: Destroying namespace "webhook-markers-6526" for this suite. @ 01/29/24 21:43:28.399
• [3.742 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance]
test/e2e/common/node/runtimeclass.go:104
  STEP: Creating a kubernetes client @ 01/29/24 21:43:28.409
  Jan 29 21:43:28.410: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename runtimeclass @ 01/29/24 21:43:28.413
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:43:28.426
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:43:28.43
  Jan 29 21:43:30.458: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-684" for this suite. @ 01/29/24 21:43:30.471
• [2.070 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance]
test/e2e/apimachinery/resource_quota.go:161
  STEP: Creating a kubernetes client @ 01/29/24 21:43:30.482
  Jan 29 21:43:30.482: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename resourcequota @ 01/29/24 21:43:30.483
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:43:30.5
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:43:30.505
  STEP: Discovering how many secrets are in namespace by default @ 01/29/24 21:43:30.51
  STEP: Counting existing ResourceQuota @ 01/29/24 21:43:35.516
  STEP: Creating a ResourceQuota @ 01/29/24 21:43:40.521
  STEP: Ensuring resource quota status is calculated @ 01/29/24 21:43:40.527
  STEP: Creating a Secret @ 01/29/24 21:43:42.533
  STEP: Ensuring resource quota status captures secret creation @ 01/29/24 21:43:42.548
  STEP: Deleting a secret @ 01/29/24 21:43:44.554
  STEP: Ensuring resource quota status released usage @ 01/29/24 21:43:44.561
  Jan 29 21:43:46.566: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2364" for this suite. @ 01/29/24 21:43:46.572
• [16.096 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0  [Conformance]
test/e2e/kubectl/kubectl.go:1781
  STEP: Creating a kubernetes client @ 01/29/24 21:43:46.578
  Jan 29 21:43:46.578: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename kubectl @ 01/29/24 21:43:46.58
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:43:46.594
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:43:46.598
  STEP: starting the proxy server @ 01/29/24 21:43:46.603
  Jan 29 21:43:46.604: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=kubectl-6457 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 01/29/24 21:43:46.681
  Jan 29 21:43:46.695: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6457" for this suite. @ 01/29/24 21:43:46.7
• [0.128 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance]
test/e2e/network/service.go:2202
  STEP: Creating a kubernetes client @ 01/29/24 21:43:46.706
  Jan 29 21:43:46.706: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename services @ 01/29/24 21:43:46.707
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:43:46.723
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:43:46.727
  STEP: creating service in namespace services-535 @ 01/29/24 21:43:46.732
  STEP: creating service affinity-nodeport in namespace services-535 @ 01/29/24 21:43:46.732
  STEP: creating replication controller affinity-nodeport in namespace services-535 @ 01/29/24 21:43:46.749
  I0129 21:43:46.755779      23 runners.go:197] Created replication controller with name: affinity-nodeport, namespace: services-535, replica count: 3
  I0129 21:43:49.807617      23 runners.go:197] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jan 29 21:43:49.823: INFO: Creating new exec pod
  Jan 29 21:43:52.849: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=services-535 exec execpod-affinityjmc4j -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  Jan 29 21:43:53.066: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
  Jan 29 21:43:53.066: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jan 29 21:43:53.066: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=services-535 exec execpod-affinityjmc4j -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.103.41.227 80'
  Jan 29 21:43:53.291: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.103.41.227 80\nConnection to 10.103.41.227 80 port [tcp/http] succeeded!\n"
  Jan 29 21:43:53.291: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jan 29 21:43:53.291: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=services-535 exec execpod-affinityjmc4j -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.100.114 31503'
  Jan 29 21:43:53.492: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.100.114 31503\nConnection to 192.168.100.114 31503 port [tcp/*] succeeded!\n"
  Jan 29 21:43:53.492: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jan 29 21:43:53.492: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=services-535 exec execpod-affinityjmc4j -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.100.173 31503'
  Jan 29 21:43:53.688: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.100.173 31503\nConnection to 192.168.100.173 31503 port [tcp/*] succeeded!\n"
  Jan 29 21:43:53.688: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jan 29 21:43:53.688: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=services-535 exec execpod-affinityjmc4j -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.100.114:31503/ ; done'
  Jan 29 21:43:54.030: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.114:31503/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.114:31503/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.114:31503/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.114:31503/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.114:31503/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.114:31503/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.114:31503/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.114:31503/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.114:31503/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.114:31503/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.114:31503/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.114:31503/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.114:31503/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.114:31503/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.114:31503/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.114:31503/\n"
  Jan 29 21:43:54.030: INFO: stdout: "\naffinity-nodeport-zg98j\naffinity-nodeport-zg98j\naffinity-nodeport-zg98j\naffinity-nodeport-zg98j\naffinity-nodeport-zg98j\naffinity-nodeport-zg98j\naffinity-nodeport-zg98j\naffinity-nodeport-zg98j\naffinity-nodeport-zg98j\naffinity-nodeport-zg98j\naffinity-nodeport-zg98j\naffinity-nodeport-zg98j\naffinity-nodeport-zg98j\naffinity-nodeport-zg98j\naffinity-nodeport-zg98j\naffinity-nodeport-zg98j"
  Jan 29 21:43:54.030: INFO: Received response from host: affinity-nodeport-zg98j
  Jan 29 21:43:54.030: INFO: Received response from host: affinity-nodeport-zg98j
  Jan 29 21:43:54.030: INFO: Received response from host: affinity-nodeport-zg98j
  Jan 29 21:43:54.030: INFO: Received response from host: affinity-nodeport-zg98j
  Jan 29 21:43:54.030: INFO: Received response from host: affinity-nodeport-zg98j
  Jan 29 21:43:54.030: INFO: Received response from host: affinity-nodeport-zg98j
  Jan 29 21:43:54.030: INFO: Received response from host: affinity-nodeport-zg98j
  Jan 29 21:43:54.030: INFO: Received response from host: affinity-nodeport-zg98j
  Jan 29 21:43:54.030: INFO: Received response from host: affinity-nodeport-zg98j
  Jan 29 21:43:54.030: INFO: Received response from host: affinity-nodeport-zg98j
  Jan 29 21:43:54.030: INFO: Received response from host: affinity-nodeport-zg98j
  Jan 29 21:43:54.030: INFO: Received response from host: affinity-nodeport-zg98j
  Jan 29 21:43:54.030: INFO: Received response from host: affinity-nodeport-zg98j
  Jan 29 21:43:54.030: INFO: Received response from host: affinity-nodeport-zg98j
  Jan 29 21:43:54.030: INFO: Received response from host: affinity-nodeport-zg98j
  Jan 29 21:43:54.030: INFO: Received response from host: affinity-nodeport-zg98j
  Jan 29 21:43:54.030: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Jan 29 21:43:54.036: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-535, will wait for the garbage collector to delete the pods @ 01/29/24 21:43:54.049
  Jan 29 21:43:54.110: INFO: Deleting ReplicationController affinity-nodeport took: 6.8523ms
  Jan 29 21:43:54.211: INFO: Terminating ReplicationController affinity-nodeport pods took: 101.115782ms
  STEP: Destroying namespace "services-535" for this suite. @ 01/29/24 21:43:57.534
• [10.833 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 01/29/24 21:43:57.54
  Jan 29 21:43:57.540: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename pods @ 01/29/24 21:43:57.542
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:43:57.555
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:43:57.56
  STEP: creating the pod @ 01/29/24 21:43:57.564
  STEP: submitting the pod to kubernetes @ 01/29/24 21:43:57.564
  STEP: verifying the pod is in kubernetes @ 01/29/24 21:43:59.592
  STEP: updating the pod @ 01/29/24 21:43:59.596
  Jan 29 21:44:00.113: INFO: Successfully updated pod "pod-update-3df10f2f-4024-4274-8d73-025f9a346905"
  STEP: verifying the updated pod is in kubernetes @ 01/29/24 21:44:00.117
  Jan 29 21:44:00.120: INFO: Pod update OK
  Jan 29 21:44:00.121: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8416" for this suite. @ 01/29/24 21:44:00.125
• [2.592 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:69
  STEP: Creating a kubernetes client @ 01/29/24 21:44:00.134
  Jan 29 21:44:00.134: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename crd-publish-openapi @ 01/29/24 21:44:00.136
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:44:00.146
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:44:00.151
  Jan 29 21:44:00.156: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 01/29/24 21:44:01.561
  Jan 29 21:44:01.561: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=crd-publish-openapi-6895 --namespace=crd-publish-openapi-6895 create -f -'
  Jan 29 21:44:02.164: INFO: stderr: ""
  Jan 29 21:44:02.164: INFO: stdout: "e2e-test-crd-publish-openapi-5883-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  Jan 29 21:44:02.164: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=crd-publish-openapi-6895 --namespace=crd-publish-openapi-6895 delete e2e-test-crd-publish-openapi-5883-crds test-foo'
  Jan 29 21:44:02.275: INFO: stderr: ""
  Jan 29 21:44:02.275: INFO: stdout: "e2e-test-crd-publish-openapi-5883-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  Jan 29 21:44:02.275: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=crd-publish-openapi-6895 --namespace=crd-publish-openapi-6895 apply -f -'
  Jan 29 21:44:02.500: INFO: stderr: ""
  Jan 29 21:44:02.500: INFO: stdout: "e2e-test-crd-publish-openapi-5883-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  Jan 29 21:44:02.500: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=crd-publish-openapi-6895 --namespace=crd-publish-openapi-6895 delete e2e-test-crd-publish-openapi-5883-crds test-foo'
  Jan 29 21:44:02.598: INFO: stderr: ""
  Jan 29 21:44:02.599: INFO: stdout: "e2e-test-crd-publish-openapi-5883-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 01/29/24 21:44:02.599
  Jan 29 21:44:02.599: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=crd-publish-openapi-6895 --namespace=crd-publish-openapi-6895 create -f -'
  Jan 29 21:44:02.802: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 01/29/24 21:44:02.802
  Jan 29 21:44:02.803: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=crd-publish-openapi-6895 --namespace=crd-publish-openapi-6895 create -f -'
  Jan 29 21:44:03.017: INFO: rc: 1
  Jan 29 21:44:03.017: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=crd-publish-openapi-6895 --namespace=crd-publish-openapi-6895 apply -f -'
  Jan 29 21:44:03.232: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 01/29/24 21:44:03.232
  Jan 29 21:44:03.232: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=crd-publish-openapi-6895 --namespace=crd-publish-openapi-6895 create -f -'
  Jan 29 21:44:03.433: INFO: rc: 1
  Jan 29 21:44:03.433: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=crd-publish-openapi-6895 --namespace=crd-publish-openapi-6895 apply -f -'
  Jan 29 21:44:03.644: INFO: rc: 1
  STEP: kubectl explain works to explain CR properties @ 01/29/24 21:44:03.644
  Jan 29 21:44:03.645: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=crd-publish-openapi-6895 explain e2e-test-crd-publish-openapi-5883-crds'
  Jan 29 21:44:03.842: INFO: stderr: ""
  Jan 29 21:44:03.842: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-5883-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 01/29/24 21:44:03.843
  Jan 29 21:44:03.843: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=crd-publish-openapi-6895 explain e2e-test-crd-publish-openapi-5883-crds.metadata'
  Jan 29 21:44:04.052: INFO: stderr: ""
  Jan 29 21:44:04.052: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-5883-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  Jan 29 21:44:04.053: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=crd-publish-openapi-6895 explain e2e-test-crd-publish-openapi-5883-crds.spec'
  Jan 29 21:44:04.244: INFO: stderr: ""
  Jan 29 21:44:04.244: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-5883-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  Jan 29 21:44:04.244: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=crd-publish-openapi-6895 explain e2e-test-crd-publish-openapi-5883-crds.spec.bars'
  Jan 29 21:44:04.439: INFO: stderr: ""
  Jan 29 21:44:04.439: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-5883-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 01/29/24 21:44:04.439
  Jan 29 21:44:04.439: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=crd-publish-openapi-6895 explain e2e-test-crd-publish-openapi-5883-crds.spec.bars2'
  Jan 29 21:44:04.632: INFO: rc: 1
  Jan 29 21:44:06.001: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6895" for this suite. @ 01/29/24 21:44:06.017
• [5.892 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance]
test/e2e/instrumentation/core_events.go:57
  STEP: Creating a kubernetes client @ 01/29/24 21:44:06.027
  Jan 29 21:44:06.027: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename events @ 01/29/24 21:44:06.029
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:44:06.042
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:44:06.046
  STEP: creating a test event @ 01/29/24 21:44:06.05
  STEP: listing all events in all namespaces @ 01/29/24 21:44:06.055
  STEP: patching the test event @ 01/29/24 21:44:06.065
  STEP: fetching the test event @ 01/29/24 21:44:06.074
  STEP: updating the test event @ 01/29/24 21:44:06.077
  STEP: getting the test event @ 01/29/24 21:44:06.086
  STEP: deleting the test event @ 01/29/24 21:44:06.089
  STEP: listing all events in all namespaces @ 01/29/24 21:44:06.095
  Jan 29 21:44:06.102: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-790" for this suite. @ 01/29/24 21:44:06.107
• [0.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching  [Conformance]
test/e2e/scheduling/predicates.go:467
  STEP: Creating a kubernetes client @ 01/29/24 21:44:06.116
  Jan 29 21:44:06.116: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename sched-pred @ 01/29/24 21:44:06.117
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:44:06.131
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:44:06.136
  Jan 29 21:44:06.141: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Jan 29 21:44:06.150: INFO: Waiting for terminating namespaces to be deleted...
  Jan 29 21:44:06.153: INFO: 
  Logging pods the apiserver thinks is on node nodeb14 before test
  Jan 29 21:44:06.160: INFO: kube-flannel-ds-6n294 from kube-flannel started at 2024-01-29 21:34:49 +0000 UTC (1 container statuses recorded)
  Jan 29 21:44:06.160: INFO: 	Container kube-flannel ready: true, restart count 0
  Jan 29 21:44:06.160: INFO: kube-proxy-7rw4k from kube-system started at 2024-01-29 20:54:07 +0000 UTC (1 container statuses recorded)
  Jan 29 21:44:06.161: INFO: 	Container kube-proxy ready: true, restart count 0
  Jan 29 21:44:06.161: INFO: pod-update-3df10f2f-4024-4274-8d73-025f9a346905 from pods-8416 started at 2024-01-29 21:43:57 +0000 UTC (1 container statuses recorded)
  Jan 29 21:44:06.161: INFO: 	Container pause ready: false, restart count 0
  Jan 29 21:44:06.162: INFO: sonobuoy from sonobuoy started at 2024-01-29 20:56:14 +0000 UTC (1 container statuses recorded)
  Jan 29 21:44:06.162: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Jan 29 21:44:06.162: INFO: sonobuoy-e2e-job-c5ce82f9c8fc4251 from sonobuoy started at 2024-01-29 20:56:20 +0000 UTC (2 container statuses recorded)
  Jan 29 21:44:06.163: INFO: 	Container e2e ready: true, restart count 0
  Jan 29 21:44:06.163: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jan 29 21:44:06.163: INFO: sonobuoy-systemd-logs-daemon-set-f2be670d44c14602-jkm8t from sonobuoy started at 2024-01-29 20:56:20 +0000 UTC (2 container statuses recorded)
  Jan 29 21:44:06.163: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jan 29 21:44:06.164: INFO: 	Container systemd-logs ready: true, restart count 0
  Jan 29 21:44:06.164: INFO: 
  Logging pods the apiserver thinks is on node nodec03 before test
  Jan 29 21:44:06.170: INFO: kube-flannel-ds-rdqsr from kube-flannel started at 2024-01-29 20:54:05 +0000 UTC (1 container statuses recorded)
  Jan 29 21:44:06.170: INFO: 	Container kube-flannel ready: true, restart count 0
  Jan 29 21:44:06.170: INFO: kube-proxy-49d8w from kube-system started at 2024-01-29 20:54:05 +0000 UTC (1 container statuses recorded)
  Jan 29 21:44:06.170: INFO: 	Container kube-proxy ready: true, restart count 0
  Jan 29 21:44:06.170: INFO: sonobuoy-systemd-logs-daemon-set-f2be670d44c14602-478zt from sonobuoy started at 2024-01-29 20:56:20 +0000 UTC (2 container statuses recorded)
  Jan 29 21:44:06.170: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jan 29 21:44:06.171: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 01/29/24 21:44:06.171
  STEP: Explicitly delete pod here to free the resource it takes. @ 01/29/24 21:44:08.191
  STEP: Trying to apply a random label on the found node. @ 01/29/24 21:44:08.205
  STEP: verifying the node has the label kubernetes.io/e2e-826bb78b-29de-417b-b79a-dc353f632fbe 42 @ 01/29/24 21:44:08.218
  STEP: Trying to relaunch the pod, now with labels. @ 01/29/24 21:44:08.221
  STEP: removing the label kubernetes.io/e2e-826bb78b-29de-417b-b79a-dc353f632fbe off the node nodeb14 @ 01/29/24 21:44:10.243
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-826bb78b-29de-417b-b79a-dc353f632fbe @ 01/29/24 21:44:10.258
  Jan 29 21:44:10.262: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-1251" for this suite. @ 01/29/24 21:44:10.267
• [4.158 seconds]
------------------------------
S
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance]
test/e2e/apps/rc.go:94
  STEP: Creating a kubernetes client @ 01/29/24 21:44:10.274
  Jan 29 21:44:10.274: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename replication-controller @ 01/29/24 21:44:10.276
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:44:10.292
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:44:10.296
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 01/29/24 21:44:10.301
  STEP: When a replication controller with a matching selector is created @ 01/29/24 21:44:12.322
  STEP: Then the orphan pod is adopted @ 01/29/24 21:44:12.328
  Jan 29 21:44:13.336: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-7030" for this suite. @ 01/29/24 21:44:13.341
• [3.074 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance]
test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 01/29/24 21:44:13.349
  Jan 29 21:44:13.349: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename deployment @ 01/29/24 21:44:13.351
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:44:13.362
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:44:13.366
  Jan 29 21:44:13.374: INFO: Creating replica set "test-rolling-update-controller" (going to be adopted)
  Jan 29 21:44:13.382: INFO: Pod name sample-pod: Found 0 pods out of 1
  Jan 29 21:44:18.387: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 01/29/24 21:44:18.388
  Jan 29 21:44:18.388: INFO: Creating deployment "test-rolling-update-deployment"
  Jan 29 21:44:18.394: INFO: Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  Jan 29 21:44:18.400: INFO: new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  Jan 29 21:44:20.411: INFO: Ensuring status for deployment "test-rolling-update-deployment" is the expected
  Jan 29 21:44:20.415: INFO: Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  Jan 29 21:44:20.426: INFO: Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5103",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c2cec744-51ad-4070-b4a9-d071c1856f5e",
      ResourceVersion: (string) (len=5) "14865",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842161458,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842161458,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842161459,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842161458,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842161458,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842161459,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842161458,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=82) "ReplicaSet \"test-rolling-update-deployment-7f5c55c64\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jan 29 21:44:20.446: INFO: New ReplicaSet "test-rolling-update-deployment-7f5c55c64" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-rolling-update-deployment-7f5c55c64",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5103",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "89876491-43fd-499c-8c2f-d3230882a08a",
      ResourceVersion: (string) (len=5) "14855",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842161458,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "c2cec744-51ad-4070-b4a9-d071c1856f5e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842161458,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 63 32 63 65 63 37  34 34 2d 35 31 61 64 2d  |\"c2cec744-51ad-|
              00000120  34 30 37 30 2d 62 34 61  39 2d 64 30 37 31 63 31  |4070-b4a9-d071c1|
              00000130  38 35 36 66 35 65 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |856f5e\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842161459,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jan 29 21:44:20.447: INFO: All old ReplicaSets of Deployment "test-rolling-update-deployment":
  Jan 29 21:44:20.448: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5103",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "72d266bb-a665-48cc-b08a-723df9b2755d",
      ResourceVersion: (string) (len=5) "14864",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842161453,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "c2cec744-51ad-4070-b4a9-d071c1856f5e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842161453,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842161459,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 63 32 63 65 63 37 34  |"uid\":\"c2cec74|
              000000b0  34 2d 35 31 61 64 2d 34  30 37 30 2d 62 34 61 39  |4-51ad-4070-b4a9|
              000000c0  2d 64 30 37 31 63 31 38  35 36 66 35 65 5c 22 7d  |-d071c1856f5e\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842161459,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jan 29 21:44:20.453: INFO: Pod "test-rolling-update-deployment-7f5c55c64-9vxt5" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=46) "test-rolling-update-deployment-7f5c55c64-9vxt5",
      GenerateName: (string) (len=41) "test-rolling-update-deployment-7f5c55c64-",
      Namespace: (string) (len=15) "deployment-5103",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bb3e67ab-30b5-445e-9bb7-ca104f726086",
      ResourceVersion: (string) (len=5) "14854",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842161458,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=40) "test-rolling-update-deployment-7f5c55c64",
          UID: (types.UID) (len=36) "89876491-43fd-499c-8c2f-d3230882a08a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842161458,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 39  38 37 36 34 39 31 2d 34  |d\":\"89876491-4|
              00000090  33 66 64 2d 34 39 39 63  2d 38 63 32 66 2d 64 33  |3fd-499c-8c2f-d3|
              000000a0  32 33 30 38 38 32 61 30  38 61 5c 22 7d 22 3a 7b  |230882a08a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842161459,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=519) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 34 34 2e 32  2e 32 32 35 5c 22 7d 22  |10.244.2.225\"}"|
              000001e0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              000001f0  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000200  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jfjm4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jfjm4",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodeb14",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842161458,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842161459,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842161459,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842161458,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.100.114",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=12) "10.244.2.225",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.2.225"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842161458,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63842161459,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:2c5b5b056076334e4cf431d964d102e44cbca8f1e6b16ac1e477a0ffbe6caac4",
          ContainerID: (string) (len=77) "containerd://71f4de3bf0a87a3c8876cb70e3b0df859258c59f1444a10cb75ad44bf30a1b05",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan 29 21:44:20.455: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5103" for this suite. @ 01/29/24 21:44:20.461
• [7.117 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:157
  STEP: Creating a kubernetes client @ 01/29/24 21:44:20.469
  Jan 29 21:44:20.469: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename emptydir @ 01/29/24 21:44:20.471
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:44:20.486
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:44:20.49
  STEP: Creating a pod to test emptydir volume type on node default medium @ 01/29/24 21:44:20.494
  STEP: Saw pod success @ 01/29/24 21:44:24.517
  Jan 29 21:44:24.520: INFO: Trying to get logs from node nodeb14 pod pod-b6ca20b1-6d45-4e72-8560-bf0c6f8ae92b container test-container: <nil>
  STEP: delete the pod @ 01/29/24 21:44:24.548
  Jan 29 21:44:24.561: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5283" for this suite. @ 01/29/24 21:44:24.566
• [4.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:87
  STEP: Creating a kubernetes client @ 01/29/24 21:44:24.573
  Jan 29 21:44:24.573: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename emptydir @ 01/29/24 21:44:24.574
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:44:24.588
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:44:24.592
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 01/29/24 21:44:24.597
  STEP: Saw pod success @ 01/29/24 21:44:28.618
  Jan 29 21:44:28.622: INFO: Trying to get logs from node nodeb14 pod pod-04a8d241-c591-4c25-b7e4-a4a3b20ab7e3 container test-container: <nil>
  STEP: delete the pod @ 01/29/24 21:44:28.63
  Jan 29 21:44:28.644: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-219" for this suite. @ 01/29/24 21:44:28.649
• [4.082 seconds]
------------------------------
SS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance]
test/e2e/common/node/secrets.go:95
  STEP: Creating a kubernetes client @ 01/29/24 21:44:28.655
  Jan 29 21:44:28.655: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename secrets @ 01/29/24 21:44:28.657
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:44:28.671
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:44:28.676
  STEP: creating secret secrets-7051/secret-test-3f9e7d14-aede-43d7-8827-021faa27018e @ 01/29/24 21:44:28.68
  STEP: Creating a pod to test consume secrets @ 01/29/24 21:44:28.685
  STEP: Saw pod success @ 01/29/24 21:44:32.713
  Jan 29 21:44:32.717: INFO: Trying to get logs from node nodeb14 pod pod-configmaps-6655b4f0-cf3c-4980-b29e-229d75036e82 container env-test: <nil>
  STEP: delete the pod @ 01/29/24 21:44:32.73
  Jan 29 21:44:32.747: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7051" for this suite. @ 01/29/24 21:44:32.752
• [4.102 seconds]
------------------------------
SSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info  [Conformance]
test/e2e/kubectl/kubectl.go:1316
  STEP: Creating a kubernetes client @ 01/29/24 21:44:32.758
  Jan 29 21:44:32.758: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename kubectl @ 01/29/24 21:44:32.761
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:44:32.776
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:44:32.781
  STEP: validating cluster-info @ 01/29/24 21:44:32.785
  Jan 29 21:44:32.785: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=kubectl-9701 cluster-info'
  Jan 29 21:44:32.887: INFO: stderr: ""
  Jan 29 21:44:32.887: INFO: stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.96.0.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  Jan 29 21:44:32.888: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9701" for this suite. @ 01/29/24 21:44:32.893
• [0.142 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance]
test/e2e/apps/disruption.go:349
  STEP: Creating a kubernetes client @ 01/29/24 21:44:32.901
  Jan 29 21:44:32.901: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename disruption @ 01/29/24 21:44:32.903
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:44:32.918
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:44:32.923
  STEP: Creating a pdb that targets all three pods in a test replica set @ 01/29/24 21:44:32.927
  STEP: Waiting for the pdb to be processed @ 01/29/24 21:44:32.931
  STEP: First trying to evict a pod which shouldn't be evictable @ 01/29/24 21:44:34.947
  STEP: Waiting for all pods to be running @ 01/29/24 21:44:34.947
  Jan 29 21:44:34.951: INFO: pods: 0 < 3
  STEP: locating a running pod @ 01/29/24 21:44:36.956
  STEP: Updating the pdb to allow a pod to be evicted @ 01/29/24 21:44:36.967
  STEP: Waiting for the pdb to be processed @ 01/29/24 21:44:36.976
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 01/29/24 21:44:38.985
  STEP: Waiting for all pods to be running @ 01/29/24 21:44:38.985
  STEP: Waiting for the pdb to observed all healthy pods @ 01/29/24 21:44:38.989
  STEP: Patching the pdb to disallow a pod to be evicted @ 01/29/24 21:44:39.012
  STEP: Waiting for the pdb to be processed @ 01/29/24 21:44:39.035
  STEP: Waiting for all pods to be running @ 01/29/24 21:44:41.044
  STEP: locating a running pod @ 01/29/24 21:44:41.05
  STEP: Deleting the pdb to allow a pod to be evicted @ 01/29/24 21:44:41.061
  STEP: Waiting for the pdb to be deleted @ 01/29/24 21:44:41.066
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 01/29/24 21:44:41.069
  STEP: Waiting for all pods to be running @ 01/29/24 21:44:41.069
  Jan 29 21:44:41.089: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-3446" for this suite. @ 01/29/24 21:44:41.094
• [8.205 seconds]
------------------------------
SSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance]
test/e2e/network/service.go:1280
  STEP: Creating a kubernetes client @ 01/29/24 21:44:41.107
  Jan 29 21:44:41.107: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename services @ 01/29/24 21:44:41.109
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:44:41.121
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:44:41.125
  STEP: creating service nodeport-test with type=NodePort in namespace services-9579 @ 01/29/24 21:44:41.128
  STEP: creating replication controller nodeport-test in namespace services-9579 @ 01/29/24 21:44:41.143
  I0129 21:44:41.151209      23 runners.go:197] Created replication controller with name: nodeport-test, namespace: services-9579, replica count: 2
  I0129 21:44:44.201661      23 runners.go:197] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jan 29 21:44:44.201: INFO: Creating new exec pod
  Jan 29 21:44:47.224: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=services-9579 exec execpodrbrj6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  Jan 29 21:44:47.462: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  Jan 29 21:44:47.463: INFO: stdout: "nodeport-test-q9xgh"
  Jan 29 21:44:47.463: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=services-9579 exec execpodrbrj6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.101.123.234 80'
  Jan 29 21:44:47.690: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.101.123.234 80\nConnection to 10.101.123.234 80 port [tcp/http] succeeded!\n"
  Jan 29 21:44:47.690: INFO: stdout: "nodeport-test-gl6gc"
  Jan 29 21:44:47.690: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=services-9579 exec execpodrbrj6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.100.114 31784'
  Jan 29 21:44:47.911: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.100.114 31784\nConnection to 192.168.100.114 31784 port [tcp/*] succeeded!\n"
  Jan 29 21:44:47.911: INFO: stdout: "nodeport-test-gl6gc"
  Jan 29 21:44:47.911: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=services-9579 exec execpodrbrj6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.100.173 31784'
  Jan 29 21:44:48.128: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.100.173 31784\nConnection to 192.168.100.173 31784 port [tcp/*] succeeded!\n"
  Jan 29 21:44:48.128: INFO: stdout: "nodeport-test-q9xgh"
  Jan 29 21:44:48.128: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9579" for this suite. @ 01/29/24 21:44:48.135
• [7.044 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance]
test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 01/29/24 21:44:48.153
  Jan 29 21:44:48.153: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename subpath @ 01/29/24 21:44:48.154
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:44:48.167
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:44:48.172
  STEP: Setting up data @ 01/29/24 21:44:48.177
  STEP: Creating pod pod-subpath-test-secret-24bw @ 01/29/24 21:44:48.188
  STEP: Creating a pod to test atomic-volume-subpath @ 01/29/24 21:44:48.188
  STEP: Saw pod success @ 01/29/24 21:45:12.282
  Jan 29 21:45:12.285: INFO: Trying to get logs from node nodeb14 pod pod-subpath-test-secret-24bw container test-container-subpath-secret-24bw: <nil>
  STEP: delete the pod @ 01/29/24 21:45:12.294
  STEP: Deleting pod pod-subpath-test-secret-24bw @ 01/29/24 21:45:12.323
  Jan 29 21:45:12.324: INFO: Deleting pod "pod-subpath-test-secret-24bw" in namespace "subpath-4879"
  Jan 29 21:45:12.327: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-4879" for this suite. @ 01/29/24 21:45:12.334
• [24.187 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Service endpoints latency should not be very high  [Conformance]
test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 01/29/24 21:45:12.342
  Jan 29 21:45:12.342: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename svc-latency @ 01/29/24 21:45:12.344
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:45:12.358
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:45:12.363
  Jan 29 21:45:12.368: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-1434 @ 01/29/24 21:45:12.369
  I0129 21:45:12.377319      23 runners.go:197] Created replication controller with name: svc-latency-rc, namespace: svc-latency-1434, replica count: 1
  I0129 21:45:13.427790      23 runners.go:197] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0129 21:45:14.429016      23 runners.go:197] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jan 29 21:45:14.550: INFO: Created: latency-svc-h255m
  Jan 29 21:45:14.559: INFO: Got endpoints: latency-svc-h255m [29.518485ms]
  Jan 29 21:45:14.572: INFO: Created: latency-svc-g62zq
  Jan 29 21:45:14.576: INFO: Got endpoints: latency-svc-g62zq [17.014704ms]
  Jan 29 21:45:14.584: INFO: Created: latency-svc-w5dmt
  Jan 29 21:45:14.594: INFO: Created: latency-svc-d2xdb
  Jan 29 21:45:14.594: INFO: Got endpoints: latency-svc-w5dmt [34.984656ms]
  Jan 29 21:45:14.601: INFO: Got endpoints: latency-svc-d2xdb [42.078955ms]
  Jan 29 21:45:14.605: INFO: Created: latency-svc-8mrm2
  Jan 29 21:45:14.610: INFO: Got endpoints: latency-svc-8mrm2 [50.769977ms]
  Jan 29 21:45:14.618: INFO: Created: latency-svc-j6tzc
  Jan 29 21:45:14.621: INFO: Got endpoints: latency-svc-j6tzc [61.467879ms]
  Jan 29 21:45:14.627: INFO: Created: latency-svc-n8lbf
  Jan 29 21:45:14.632: INFO: Got endpoints: latency-svc-n8lbf [72.692831ms]
  Jan 29 21:45:14.639: INFO: Created: latency-svc-p5h4x
  Jan 29 21:45:14.653: INFO: Got endpoints: latency-svc-p5h4x [93.686861ms]
  Jan 29 21:45:14.656: INFO: Created: latency-svc-ggw4n
  Jan 29 21:45:14.664: INFO: Got endpoints: latency-svc-ggw4n [104.689403ms]
  Jan 29 21:45:14.666: INFO: Created: latency-svc-zrzx2
  Jan 29 21:45:14.672: INFO: Got endpoints: latency-svc-zrzx2 [111.925106ms]
  Jan 29 21:45:14.678: INFO: Created: latency-svc-7lk27
  Jan 29 21:45:14.687: INFO: Got endpoints: latency-svc-7lk27 [127.568501ms]
  Jan 29 21:45:14.690: INFO: Created: latency-svc-gsq22
  Jan 29 21:45:14.699: INFO: Got endpoints: latency-svc-gsq22 [139.215671ms]
  Jan 29 21:45:14.703: INFO: Created: latency-svc-jjvcx
  Jan 29 21:45:14.711: INFO: Got endpoints: latency-svc-jjvcx [152.020327ms]
  Jan 29 21:45:14.714: INFO: Created: latency-svc-6h5pk
  Jan 29 21:45:14.718: INFO: Got endpoints: latency-svc-6h5pk [159.356907ms]
  Jan 29 21:45:14.740: INFO: Created: latency-svc-ffl8q
  Jan 29 21:45:14.746: INFO: Got endpoints: latency-svc-ffl8q [186.67763ms]
  Jan 29 21:45:14.765: INFO: Created: latency-svc-9fhhx
  Jan 29 21:45:14.771: INFO: Got endpoints: latency-svc-9fhhx [211.140934ms]
  Jan 29 21:45:14.775: INFO: Created: latency-svc-774t7
  Jan 29 21:45:14.779: INFO: Got endpoints: latency-svc-774t7 [203.144222ms]
  Jan 29 21:45:14.783: INFO: Created: latency-svc-k7vxr
  Jan 29 21:45:14.792: INFO: Got endpoints: latency-svc-k7vxr [197.883055ms]
  Jan 29 21:45:14.796: INFO: Created: latency-svc-mxsq2
  Jan 29 21:45:14.804: INFO: Got endpoints: latency-svc-mxsq2 [202.623717ms]
  Jan 29 21:45:14.806: INFO: Created: latency-svc-9pvcl
  Jan 29 21:45:14.813: INFO: Got endpoints: latency-svc-9pvcl [203.158697ms]
  Jan 29 21:45:14.814: INFO: Created: latency-svc-crxsw
  Jan 29 21:45:14.820: INFO: Got endpoints: latency-svc-crxsw [199.768949ms]
  Jan 29 21:45:14.822: INFO: Created: latency-svc-lspxb
  Jan 29 21:45:14.827: INFO: Got endpoints: latency-svc-lspxb [195.009509ms]
  Jan 29 21:45:14.833: INFO: Created: latency-svc-tlx8l
  Jan 29 21:45:14.841: INFO: Got endpoints: latency-svc-tlx8l [187.494385ms]
  Jan 29 21:45:14.843: INFO: Created: latency-svc-lpq95
  Jan 29 21:45:14.847: INFO: Got endpoints: latency-svc-lpq95 [182.566476ms]
  Jan 29 21:45:14.856: INFO: Created: latency-svc-h7wv9
  Jan 29 21:45:14.860: INFO: Got endpoints: latency-svc-h7wv9 [188.387835ms]
  Jan 29 21:45:14.875: INFO: Created: latency-svc-v9v8x
  Jan 29 21:45:14.877: INFO: Created: latency-svc-hmgl5
  Jan 29 21:45:14.878: INFO: Got endpoints: latency-svc-v9v8x [190.939137ms]
  Jan 29 21:45:14.883: INFO: Got endpoints: latency-svc-hmgl5 [183.649229ms]
  Jan 29 21:45:14.886: INFO: Created: latency-svc-7s62l
  Jan 29 21:45:14.894: INFO: Got endpoints: latency-svc-7s62l [182.722987ms]
  Jan 29 21:45:14.896: INFO: Created: latency-svc-ss9f6
  Jan 29 21:45:14.902: INFO: Got endpoints: latency-svc-ss9f6 [183.992084ms]
  Jan 29 21:45:14.906: INFO: Created: latency-svc-vf5pd
  Jan 29 21:45:14.914: INFO: Got endpoints: latency-svc-vf5pd [167.574735ms]
  Jan 29 21:45:14.917: INFO: Created: latency-svc-lrcpg
  Jan 29 21:45:14.920: INFO: Got endpoints: latency-svc-lrcpg [149.393517ms]
  Jan 29 21:45:14.932: INFO: Created: latency-svc-xh8k4
  Jan 29 21:45:14.942: INFO: Got endpoints: latency-svc-xh8k4 [162.427881ms]
  Jan 29 21:45:14.945: INFO: Created: latency-svc-j6t4z
  Jan 29 21:45:14.949: INFO: Got endpoints: latency-svc-j6t4z [156.518966ms]
  Jan 29 21:45:14.961: INFO: Created: latency-svc-kbs9z
  Jan 29 21:45:14.966: INFO: Got endpoints: latency-svc-kbs9z [162.353365ms]
  Jan 29 21:45:14.970: INFO: Created: latency-svc-jtsgt
  Jan 29 21:45:14.987: INFO: Got endpoints: latency-svc-jtsgt [174.207205ms]
  Jan 29 21:45:14.990: INFO: Created: latency-svc-8b7kc
  Jan 29 21:45:14.994: INFO: Got endpoints: latency-svc-8b7kc [173.824772ms]
  Jan 29 21:45:15.006: INFO: Created: latency-svc-9vgfz
  Jan 29 21:45:15.010: INFO: Got endpoints: latency-svc-9vgfz [182.858629ms]
  Jan 29 21:45:15.018: INFO: Created: latency-svc-r2ddb
  Jan 29 21:45:15.022: INFO: Got endpoints: latency-svc-r2ddb [180.928731ms]
  Jan 29 21:45:15.033: INFO: Created: latency-svc-rfkd9
  Jan 29 21:45:15.046: INFO: Got endpoints: latency-svc-rfkd9 [198.918451ms]
  Jan 29 21:45:15.048: INFO: Created: latency-svc-s97sl
  Jan 29 21:45:15.056: INFO: Got endpoints: latency-svc-s97sl [195.845525ms]
  Jan 29 21:45:15.068: INFO: Created: latency-svc-j9mvj
  Jan 29 21:45:15.084: INFO: Created: latency-svc-4bplk
  Jan 29 21:45:15.099: INFO: Created: latency-svc-s9tr7
  Jan 29 21:45:15.110: INFO: Got endpoints: latency-svc-j9mvj [232.035451ms]
  Jan 29 21:45:15.116: INFO: Created: latency-svc-q2b4n
  Jan 29 21:45:15.125: INFO: Created: latency-svc-b5ts8
  Jan 29 21:45:15.137: INFO: Created: latency-svc-9s2bq
  Jan 29 21:45:15.146: INFO: Created: latency-svc-5spf2
  Jan 29 21:45:15.162: INFO: Got endpoints: latency-svc-4bplk [278.908399ms]
  Jan 29 21:45:15.169: INFO: Created: latency-svc-95k64
  Jan 29 21:45:15.181: INFO: Created: latency-svc-6dpz2
  Jan 29 21:45:15.195: INFO: Created: latency-svc-x2vbc
  Jan 29 21:45:15.213: INFO: Got endpoints: latency-svc-s9tr7 [318.869183ms]
  Jan 29 21:45:15.217: INFO: Created: latency-svc-jvnth
  Jan 29 21:45:15.225: INFO: Created: latency-svc-jjn4k
  Jan 29 21:45:15.236: INFO: Created: latency-svc-grrv6
  Jan 29 21:45:15.250: INFO: Created: latency-svc-c6pw5
  Jan 29 21:45:15.261: INFO: Created: latency-svc-nv5k7
  Jan 29 21:45:15.262: INFO: Got endpoints: latency-svc-q2b4n [359.014036ms]
  Jan 29 21:45:15.274: INFO: Created: latency-svc-vp55q
  Jan 29 21:45:15.290: INFO: Created: latency-svc-qhpt9
  Jan 29 21:45:15.303: INFO: Created: latency-svc-87pvb
  Jan 29 21:45:15.307: INFO: Got endpoints: latency-svc-b5ts8 [392.71324ms]
  Jan 29 21:45:15.335: INFO: Created: latency-svc-rhhfr
  Jan 29 21:45:15.346: INFO: Created: latency-svc-9sd5p
  Jan 29 21:45:15.358: INFO: Got endpoints: latency-svc-9s2bq [437.961585ms]
  Jan 29 21:45:15.381: INFO: Created: latency-svc-t4v8l
  Jan 29 21:45:15.408: INFO: Got endpoints: latency-svc-5spf2 [465.959178ms]
  Jan 29 21:45:15.435: INFO: Created: latency-svc-6brsw
  Jan 29 21:45:15.459: INFO: Got endpoints: latency-svc-95k64 [510.368882ms]
  Jan 29 21:45:15.485: INFO: Created: latency-svc-2879w
  Jan 29 21:45:15.507: INFO: Got endpoints: latency-svc-6dpz2 [540.489223ms]
  Jan 29 21:45:15.527: INFO: Created: latency-svc-x5lvj
  Jan 29 21:45:15.558: INFO: Got endpoints: latency-svc-x2vbc [570.76581ms]
  Jan 29 21:45:15.581: INFO: Created: latency-svc-n2xbg
  Jan 29 21:45:15.607: INFO: Got endpoints: latency-svc-jvnth [612.23887ms]
  Jan 29 21:45:15.626: INFO: Created: latency-svc-zr2lj
  Jan 29 21:45:15.657: INFO: Got endpoints: latency-svc-jjn4k [647.539877ms]
  Jan 29 21:45:15.679: INFO: Created: latency-svc-zq6kw
  Jan 29 21:45:15.707: INFO: Got endpoints: latency-svc-grrv6 [685.548955ms]
  Jan 29 21:45:15.726: INFO: Created: latency-svc-pbpv4
  Jan 29 21:45:15.757: INFO: Got endpoints: latency-svc-c6pw5 [710.7239ms]
  Jan 29 21:45:15.776: INFO: Created: latency-svc-8f7px
  Jan 29 21:45:15.807: INFO: Got endpoints: latency-svc-nv5k7 [750.438392ms]
  Jan 29 21:45:15.827: INFO: Created: latency-svc-72bbm
  Jan 29 21:45:15.859: INFO: Got endpoints: latency-svc-vp55q [748.504392ms]
  Jan 29 21:45:15.880: INFO: Created: latency-svc-mktxh
  Jan 29 21:45:15.909: INFO: Got endpoints: latency-svc-qhpt9 [747.299005ms]
  Jan 29 21:45:15.950: INFO: Created: latency-svc-9vk9z
  Jan 29 21:45:15.956: INFO: Got endpoints: latency-svc-87pvb [743.228468ms]
  Jan 29 21:45:15.977: INFO: Created: latency-svc-zckhl
  Jan 29 21:45:16.009: INFO: Got endpoints: latency-svc-rhhfr [746.860356ms]
  Jan 29 21:45:16.025: INFO: Created: latency-svc-wbsc5
  Jan 29 21:45:16.059: INFO: Got endpoints: latency-svc-9sd5p [752.510366ms]
  Jan 29 21:45:16.078: INFO: Created: latency-svc-rkksb
  Jan 29 21:45:16.109: INFO: Got endpoints: latency-svc-t4v8l [750.662773ms]
  Jan 29 21:45:16.127: INFO: Created: latency-svc-npwsv
  Jan 29 21:45:16.160: INFO: Got endpoints: latency-svc-6brsw [751.762425ms]
  Jan 29 21:45:16.179: INFO: Created: latency-svc-g2qsg
  Jan 29 21:45:16.207: INFO: Got endpoints: latency-svc-2879w [747.683341ms]
  Jan 29 21:45:16.228: INFO: Created: latency-svc-hlhsd
  Jan 29 21:45:16.258: INFO: Got endpoints: latency-svc-x5lvj [750.768921ms]
  Jan 29 21:45:16.292: INFO: Created: latency-svc-m75gh
  Jan 29 21:45:16.308: INFO: Got endpoints: latency-svc-n2xbg [749.656053ms]
  Jan 29 21:45:16.323: INFO: Created: latency-svc-wztj6
  Jan 29 21:45:16.359: INFO: Got endpoints: latency-svc-zr2lj [752.054541ms]
  Jan 29 21:45:16.384: INFO: Created: latency-svc-8hpxq
  Jan 29 21:45:16.407: INFO: Got endpoints: latency-svc-zq6kw [749.789372ms]
  Jan 29 21:45:16.427: INFO: Created: latency-svc-f9j5h
  Jan 29 21:45:16.457: INFO: Got endpoints: latency-svc-pbpv4 [749.1331ms]
  Jan 29 21:45:16.471: INFO: Created: latency-svc-64bhb
  Jan 29 21:45:16.507: INFO: Got endpoints: latency-svc-8f7px [750.32445ms]
  Jan 29 21:45:16.521: INFO: Created: latency-svc-ndfcw
  Jan 29 21:45:16.562: INFO: Got endpoints: latency-svc-72bbm [755.169722ms]
  Jan 29 21:45:16.577: INFO: Created: latency-svc-7sn5h
  Jan 29 21:45:16.608: INFO: Got endpoints: latency-svc-mktxh [749.301457ms]
  Jan 29 21:45:16.625: INFO: Created: latency-svc-6skqn
  Jan 29 21:45:16.659: INFO: Got endpoints: latency-svc-9vk9z [749.526533ms]
  Jan 29 21:45:16.675: INFO: Created: latency-svc-2xccf
  Jan 29 21:45:16.712: INFO: Got endpoints: latency-svc-zckhl [755.73299ms]
  Jan 29 21:45:16.730: INFO: Created: latency-svc-b4kqf
  Jan 29 21:45:16.758: INFO: Got endpoints: latency-svc-wbsc5 [749.593307ms]
  Jan 29 21:45:16.778: INFO: Created: latency-svc-hbhbw
  Jan 29 21:45:16.808: INFO: Got endpoints: latency-svc-rkksb [748.782105ms]
  Jan 29 21:45:16.830: INFO: Created: latency-svc-8ctld
  Jan 29 21:45:16.857: INFO: Got endpoints: latency-svc-npwsv [747.99724ms]
  Jan 29 21:45:16.874: INFO: Created: latency-svc-lw4db
  Jan 29 21:45:16.908: INFO: Got endpoints: latency-svc-g2qsg [748.389839ms]
  Jan 29 21:45:16.926: INFO: Created: latency-svc-8jc79
  Jan 29 21:45:16.957: INFO: Got endpoints: latency-svc-hlhsd [750.507573ms]
  Jan 29 21:45:16.975: INFO: Created: latency-svc-tcpnq
  Jan 29 21:45:17.008: INFO: Got endpoints: latency-svc-m75gh [750.163033ms]
  Jan 29 21:45:17.028: INFO: Created: latency-svc-r65l9
  Jan 29 21:45:17.062: INFO: Got endpoints: latency-svc-wztj6 [753.739054ms]
  Jan 29 21:45:17.078: INFO: Created: latency-svc-tbmnd
  Jan 29 21:45:17.108: INFO: Got endpoints: latency-svc-8hpxq [749.125566ms]
  Jan 29 21:45:17.123: INFO: Created: latency-svc-4jprf
  Jan 29 21:45:17.157: INFO: Got endpoints: latency-svc-f9j5h [749.535876ms]
  Jan 29 21:45:17.173: INFO: Created: latency-svc-dhrfh
  Jan 29 21:45:17.207: INFO: Got endpoints: latency-svc-64bhb [750.338553ms]
  Jan 29 21:45:17.229: INFO: Created: latency-svc-64xqv
  Jan 29 21:45:17.267: INFO: Got endpoints: latency-svc-ndfcw [759.319865ms]
  Jan 29 21:45:17.286: INFO: Created: latency-svc-pj94g
  Jan 29 21:45:17.306: INFO: Got endpoints: latency-svc-7sn5h [744.210801ms]
  Jan 29 21:45:17.321: INFO: Created: latency-svc-gcfp5
  Jan 29 21:45:17.357: INFO: Got endpoints: latency-svc-6skqn [748.959076ms]
  Jan 29 21:45:17.375: INFO: Created: latency-svc-hjtq6
  Jan 29 21:45:17.407: INFO: Got endpoints: latency-svc-2xccf [748.540312ms]
  Jan 29 21:45:17.422: INFO: Created: latency-svc-vfnpp
  Jan 29 21:45:17.456: INFO: Got endpoints: latency-svc-b4kqf [743.742832ms]
  Jan 29 21:45:17.470: INFO: Created: latency-svc-skngp
  Jan 29 21:45:17.511: INFO: Got endpoints: latency-svc-hbhbw [752.299439ms]
  Jan 29 21:45:17.525: INFO: Created: latency-svc-5kfqv
  Jan 29 21:45:17.558: INFO: Got endpoints: latency-svc-8ctld [749.353407ms]
  Jan 29 21:45:17.571: INFO: Created: latency-svc-jlx5x
  Jan 29 21:45:17.611: INFO: Got endpoints: latency-svc-lw4db [753.496338ms]
  Jan 29 21:45:17.626: INFO: Created: latency-svc-xn5vm
  Jan 29 21:45:17.665: INFO: Got endpoints: latency-svc-8jc79 [756.691736ms]
  Jan 29 21:45:17.685: INFO: Created: latency-svc-7ql7t
  Jan 29 21:45:17.709: INFO: Got endpoints: latency-svc-tcpnq [751.57079ms]
  Jan 29 21:45:17.726: INFO: Created: latency-svc-8njcr
  Jan 29 21:45:17.758: INFO: Got endpoints: latency-svc-r65l9 [749.743491ms]
  Jan 29 21:45:17.779: INFO: Created: latency-svc-n2zxb
  Jan 29 21:45:17.810: INFO: Got endpoints: latency-svc-tbmnd [748.100531ms]
  Jan 29 21:45:17.824: INFO: Created: latency-svc-m5lp2
  Jan 29 21:45:17.859: INFO: Got endpoints: latency-svc-4jprf [750.7598ms]
  Jan 29 21:45:17.879: INFO: Created: latency-svc-65rhm
  Jan 29 21:45:17.908: INFO: Got endpoints: latency-svc-dhrfh [750.477305ms]
  Jan 29 21:45:17.925: INFO: Created: latency-svc-dc7kw
  Jan 29 21:45:17.960: INFO: Got endpoints: latency-svc-64xqv [752.848486ms]
  Jan 29 21:45:17.976: INFO: Created: latency-svc-7tclz
  Jan 29 21:45:18.008: INFO: Got endpoints: latency-svc-pj94g [741.533625ms]
  Jan 29 21:45:18.022: INFO: Created: latency-svc-cwbjs
  Jan 29 21:45:18.057: INFO: Got endpoints: latency-svc-gcfp5 [750.697617ms]
  Jan 29 21:45:18.072: INFO: Created: latency-svc-6rm7z
  Jan 29 21:45:18.107: INFO: Got endpoints: latency-svc-hjtq6 [749.521361ms]
  Jan 29 21:45:18.128: INFO: Created: latency-svc-dxttk
  Jan 29 21:45:18.158: INFO: Got endpoints: latency-svc-vfnpp [750.360047ms]
  Jan 29 21:45:18.174: INFO: Created: latency-svc-qfbfr
  Jan 29 21:45:18.208: INFO: Got endpoints: latency-svc-skngp [752.086144ms]
  Jan 29 21:45:18.227: INFO: Created: latency-svc-grjcb
  Jan 29 21:45:18.257: INFO: Got endpoints: latency-svc-5kfqv [746.490709ms]
  Jan 29 21:45:18.276: INFO: Created: latency-svc-25wkk
  Jan 29 21:45:18.306: INFO: Got endpoints: latency-svc-jlx5x [748.475142ms]
  Jan 29 21:45:18.322: INFO: Created: latency-svc-tscnb
  Jan 29 21:45:18.359: INFO: Got endpoints: latency-svc-xn5vm [748.131075ms]
  Jan 29 21:45:18.375: INFO: Created: latency-svc-t2x2j
  Jan 29 21:45:18.408: INFO: Got endpoints: latency-svc-7ql7t [742.8491ms]
  Jan 29 21:45:18.446: INFO: Created: latency-svc-c6sc5
  Jan 29 21:45:18.459: INFO: Got endpoints: latency-svc-8njcr [749.838365ms]
  Jan 29 21:45:18.476: INFO: Created: latency-svc-4lmzv
  Jan 29 21:45:18.511: INFO: Got endpoints: latency-svc-n2zxb [753.434959ms]
  Jan 29 21:45:18.526: INFO: Created: latency-svc-cjjhh
  Jan 29 21:45:18.557: INFO: Got endpoints: latency-svc-m5lp2 [747.510179ms]
  Jan 29 21:45:18.570: INFO: Created: latency-svc-lj6f4
  Jan 29 21:45:18.610: INFO: Got endpoints: latency-svc-65rhm [751.088654ms]
  Jan 29 21:45:18.627: INFO: Created: latency-svc-6xl7n
  Jan 29 21:45:18.658: INFO: Got endpoints: latency-svc-dc7kw [750.409446ms]
  Jan 29 21:45:18.672: INFO: Created: latency-svc-546zf
  Jan 29 21:45:18.711: INFO: Got endpoints: latency-svc-7tclz [750.840879ms]
  Jan 29 21:45:18.726: INFO: Created: latency-svc-jjvzj
  Jan 29 21:45:18.757: INFO: Got endpoints: latency-svc-cwbjs [748.3534ms]
  Jan 29 21:45:18.773: INFO: Created: latency-svc-hnbrx
  Jan 29 21:45:18.807: INFO: Got endpoints: latency-svc-6rm7z [750.168218ms]
  Jan 29 21:45:18.825: INFO: Created: latency-svc-ztfp2
  Jan 29 21:45:18.859: INFO: Got endpoints: latency-svc-dxttk [752.14403ms]
  Jan 29 21:45:18.875: INFO: Created: latency-svc-mwdc7
  Jan 29 21:45:18.907: INFO: Got endpoints: latency-svc-qfbfr [749.481509ms]
  Jan 29 21:45:18.930: INFO: Created: latency-svc-w8pcp
  Jan 29 21:45:18.960: INFO: Got endpoints: latency-svc-grjcb [751.507709ms]
  Jan 29 21:45:18.974: INFO: Created: latency-svc-qvp5z
  Jan 29 21:45:19.009: INFO: Got endpoints: latency-svc-25wkk [752.090283ms]
  Jan 29 21:45:19.026: INFO: Created: latency-svc-gz5fn
  Jan 29 21:45:19.059: INFO: Got endpoints: latency-svc-tscnb [752.606901ms]
  Jan 29 21:45:19.074: INFO: Created: latency-svc-hrxl9
  Jan 29 21:45:19.107: INFO: Got endpoints: latency-svc-t2x2j [748.000604ms]
  Jan 29 21:45:19.125: INFO: Created: latency-svc-xx77z
  Jan 29 21:45:19.157: INFO: Got endpoints: latency-svc-c6sc5 [749.45424ms]
  Jan 29 21:45:19.172: INFO: Created: latency-svc-6wqjm
  Jan 29 21:45:19.207: INFO: Got endpoints: latency-svc-4lmzv [747.881145ms]
  Jan 29 21:45:19.225: INFO: Created: latency-svc-dflc7
  Jan 29 21:45:19.259: INFO: Got endpoints: latency-svc-cjjhh [746.988738ms]
  Jan 29 21:45:19.277: INFO: Created: latency-svc-wk29n
  Jan 29 21:45:19.310: INFO: Got endpoints: latency-svc-lj6f4 [752.500619ms]
  Jan 29 21:45:19.327: INFO: Created: latency-svc-ms7j2
  Jan 29 21:45:19.358: INFO: Got endpoints: latency-svc-6xl7n [747.726103ms]
  Jan 29 21:45:19.378: INFO: Created: latency-svc-gnrhc
  Jan 29 21:45:19.416: INFO: Got endpoints: latency-svc-546zf [757.633077ms]
  Jan 29 21:45:19.430: INFO: Created: latency-svc-dr42j
  Jan 29 21:45:19.465: INFO: Got endpoints: latency-svc-jjvzj [754.023794ms]
  Jan 29 21:45:19.480: INFO: Created: latency-svc-mxs54
  Jan 29 21:45:19.507: INFO: Got endpoints: latency-svc-hnbrx [750.505971ms]
  Jan 29 21:45:19.525: INFO: Created: latency-svc-bk5m5
  Jan 29 21:45:19.559: INFO: Got endpoints: latency-svc-ztfp2 [751.24285ms]
  Jan 29 21:45:19.587: INFO: Created: latency-svc-rh6qv
  Jan 29 21:45:19.608: INFO: Got endpoints: latency-svc-mwdc7 [749.151051ms]
  Jan 29 21:45:19.624: INFO: Created: latency-svc-k7lvw
  Jan 29 21:45:19.658: INFO: Got endpoints: latency-svc-w8pcp [750.130422ms]
  Jan 29 21:45:19.677: INFO: Created: latency-svc-fqbpp
  Jan 29 21:45:19.709: INFO: Got endpoints: latency-svc-qvp5z [749.063097ms]
  Jan 29 21:45:19.725: INFO: Created: latency-svc-mfc6m
  Jan 29 21:45:19.758: INFO: Got endpoints: latency-svc-gz5fn [748.939945ms]
  Jan 29 21:45:19.775: INFO: Created: latency-svc-l6zjx
  Jan 29 21:45:19.810: INFO: Got endpoints: latency-svc-hrxl9 [750.973958ms]
  Jan 29 21:45:19.826: INFO: Created: latency-svc-bld7c
  Jan 29 21:45:19.857: INFO: Got endpoints: latency-svc-xx77z [750.06413ms]
  Jan 29 21:45:19.872: INFO: Created: latency-svc-5qzgw
  Jan 29 21:45:19.906: INFO: Got endpoints: latency-svc-6wqjm [748.833112ms]
  Jan 29 21:45:19.920: INFO: Created: latency-svc-qwkdp
  Jan 29 21:45:19.957: INFO: Got endpoints: latency-svc-dflc7 [749.849941ms]
  Jan 29 21:45:19.973: INFO: Created: latency-svc-vnkw4
  Jan 29 21:45:20.007: INFO: Got endpoints: latency-svc-wk29n [748.556042ms]
  Jan 29 21:45:20.022: INFO: Created: latency-svc-bbff7
  Jan 29 21:45:20.059: INFO: Got endpoints: latency-svc-ms7j2 [749.188042ms]
  Jan 29 21:45:20.072: INFO: Created: latency-svc-69g4m
  Jan 29 21:45:20.108: INFO: Got endpoints: latency-svc-gnrhc [750.008239ms]
  Jan 29 21:45:20.125: INFO: Created: latency-svc-6zrnx
  Jan 29 21:45:20.158: INFO: Got endpoints: latency-svc-dr42j [742.413777ms]
  Jan 29 21:45:20.174: INFO: Created: latency-svc-8j67x
  Jan 29 21:45:20.208: INFO: Got endpoints: latency-svc-mxs54 [743.088542ms]
  Jan 29 21:45:20.227: INFO: Created: latency-svc-hr87k
  Jan 29 21:45:20.260: INFO: Got endpoints: latency-svc-bk5m5 [752.210823ms]
  Jan 29 21:45:20.274: INFO: Created: latency-svc-48kwh
  Jan 29 21:45:20.310: INFO: Got endpoints: latency-svc-rh6qv [750.991488ms]
  Jan 29 21:45:20.325: INFO: Created: latency-svc-gj66l
  Jan 29 21:45:20.357: INFO: Got endpoints: latency-svc-k7lvw [748.316131ms]
  Jan 29 21:45:20.373: INFO: Created: latency-svc-pf45d
  Jan 29 21:45:20.411: INFO: Got endpoints: latency-svc-fqbpp [753.092776ms]
  Jan 29 21:45:20.427: INFO: Created: latency-svc-sdsn2
  Jan 29 21:45:20.458: INFO: Got endpoints: latency-svc-mfc6m [748.74061ms]
  Jan 29 21:45:20.474: INFO: Created: latency-svc-cfm55
  Jan 29 21:45:20.507: INFO: Got endpoints: latency-svc-l6zjx [748.211648ms]
  Jan 29 21:45:20.527: INFO: Created: latency-svc-9gk6k
  Jan 29 21:45:20.558: INFO: Got endpoints: latency-svc-bld7c [748.411532ms]
  Jan 29 21:45:20.571: INFO: Created: latency-svc-xjqrm
  Jan 29 21:45:20.609: INFO: Got endpoints: latency-svc-5qzgw [751.956227ms]
  Jan 29 21:45:20.632: INFO: Created: latency-svc-8gqjg
  Jan 29 21:45:20.658: INFO: Got endpoints: latency-svc-qwkdp [751.478843ms]
  Jan 29 21:45:20.679: INFO: Created: latency-svc-mb9cs
  Jan 29 21:45:20.708: INFO: Got endpoints: latency-svc-vnkw4 [750.771372ms]
  Jan 29 21:45:20.732: INFO: Created: latency-svc-5p5bd
  Jan 29 21:45:20.756: INFO: Got endpoints: latency-svc-bbff7 [748.908964ms]
  Jan 29 21:45:20.772: INFO: Created: latency-svc-jq4pf
  Jan 29 21:45:20.807: INFO: Got endpoints: latency-svc-69g4m [747.770384ms]
  Jan 29 21:45:20.826: INFO: Created: latency-svc-9xqkb
  Jan 29 21:45:20.860: INFO: Got endpoints: latency-svc-6zrnx [751.654593ms]
  Jan 29 21:45:20.884: INFO: Created: latency-svc-2nqr2
  Jan 29 21:45:20.907: INFO: Got endpoints: latency-svc-8j67x [748.381202ms]
  Jan 29 21:45:20.926: INFO: Created: latency-svc-kcdzs
  Jan 29 21:45:20.957: INFO: Got endpoints: latency-svc-hr87k [748.582302ms]
  Jan 29 21:45:20.975: INFO: Created: latency-svc-6d7h6
  Jan 29 21:45:21.007: INFO: Got endpoints: latency-svc-48kwh [747.089135ms]
  Jan 29 21:45:21.059: INFO: Created: latency-svc-j5p9q
  Jan 29 21:45:21.063: INFO: Got endpoints: latency-svc-gj66l [753.202731ms]
  Jan 29 21:45:21.075: INFO: Created: latency-svc-zr84g
  Jan 29 21:45:21.107: INFO: Got endpoints: latency-svc-pf45d [750.115933ms]
  Jan 29 21:45:21.123: INFO: Created: latency-svc-4v2qv
  Jan 29 21:45:21.156: INFO: Got endpoints: latency-svc-sdsn2 [745.495535ms]
  Jan 29 21:45:21.173: INFO: Created: latency-svc-zxlx4
  Jan 29 21:45:21.209: INFO: Got endpoints: latency-svc-cfm55 [750.931523ms]
  Jan 29 21:45:21.224: INFO: Created: latency-svc-8bl22
  Jan 29 21:45:21.257: INFO: Got endpoints: latency-svc-9gk6k [750.145734ms]
  Jan 29 21:45:21.273: INFO: Created: latency-svc-h9jwd
  Jan 29 21:45:21.308: INFO: Got endpoints: latency-svc-xjqrm [749.538424ms]
  Jan 29 21:45:21.336: INFO: Created: latency-svc-274m4
  Jan 29 21:45:21.356: INFO: Got endpoints: latency-svc-8gqjg [747.150912ms]
  Jan 29 21:45:21.380: INFO: Created: latency-svc-9xtj2
  Jan 29 21:45:21.408: INFO: Got endpoints: latency-svc-mb9cs [749.833402ms]
  Jan 29 21:45:21.423: INFO: Created: latency-svc-xzkdx
  Jan 29 21:45:21.458: INFO: Got endpoints: latency-svc-5p5bd [750.638986ms]
  Jan 29 21:45:21.477: INFO: Created: latency-svc-ljhmx
  Jan 29 21:45:21.508: INFO: Got endpoints: latency-svc-jq4pf [751.369212ms]
  Jan 29 21:45:21.522: INFO: Created: latency-svc-2jpfb
  Jan 29 21:45:21.560: INFO: Got endpoints: latency-svc-9xqkb [752.679569ms]
  Jan 29 21:45:21.576: INFO: Created: latency-svc-xhdq4
  Jan 29 21:45:21.606: INFO: Got endpoints: latency-svc-2nqr2 [746.497737ms]
  Jan 29 21:45:21.629: INFO: Created: latency-svc-7lgqd
  Jan 29 21:45:21.658: INFO: Got endpoints: latency-svc-kcdzs [751.370763ms]
  Jan 29 21:45:21.673: INFO: Created: latency-svc-qcqrd
  Jan 29 21:45:21.706: INFO: Got endpoints: latency-svc-6d7h6 [749.604841ms]
  Jan 29 21:45:21.722: INFO: Created: latency-svc-f6dk4
  Jan 29 21:45:21.758: INFO: Got endpoints: latency-svc-j5p9q [751.420284ms]
  Jan 29 21:45:21.775: INFO: Created: latency-svc-t7wpq
  Jan 29 21:45:21.809: INFO: Got endpoints: latency-svc-zr84g [745.726276ms]
  Jan 29 21:45:21.825: INFO: Created: latency-svc-9vknc
  Jan 29 21:45:21.857: INFO: Got endpoints: latency-svc-4v2qv [749.812437ms]
  Jan 29 21:45:21.876: INFO: Created: latency-svc-n4gpz
  Jan 29 21:45:21.907: INFO: Got endpoints: latency-svc-zxlx4 [750.636515ms]
  Jan 29 21:45:21.923: INFO: Created: latency-svc-kqdjs
  Jan 29 21:45:21.961: INFO: Got endpoints: latency-svc-8bl22 [752.075374ms]
  Jan 29 21:45:21.985: INFO: Created: latency-svc-22c4v
  Jan 29 21:45:22.009: INFO: Got endpoints: latency-svc-h9jwd [751.869217ms]
  Jan 29 21:45:22.024: INFO: Created: latency-svc-l45bf
  Jan 29 21:45:22.056: INFO: Got endpoints: latency-svc-274m4 [748.363026ms]
  Jan 29 21:45:22.071: INFO: Created: latency-svc-hs7pg
  Jan 29 21:45:22.108: INFO: Got endpoints: latency-svc-9xtj2 [751.323825ms]
  Jan 29 21:45:22.128: INFO: Created: latency-svc-j7pbz
  Jan 29 21:45:22.157: INFO: Got endpoints: latency-svc-xzkdx [749.658466ms]
  Jan 29 21:45:22.173: INFO: Created: latency-svc-7pl8r
  Jan 29 21:45:22.208: INFO: Got endpoints: latency-svc-ljhmx [749.607427ms]
  Jan 29 21:45:22.226: INFO: Created: latency-svc-5f8ts
  Jan 29 21:45:22.257: INFO: Got endpoints: latency-svc-2jpfb [749.588769ms]
  Jan 29 21:45:22.275: INFO: Created: latency-svc-l5w9n
  Jan 29 21:45:22.308: INFO: Got endpoints: latency-svc-xhdq4 [747.939766ms]
  Jan 29 21:45:22.327: INFO: Created: latency-svc-v6x7h
  Jan 29 21:45:22.360: INFO: Got endpoints: latency-svc-7lgqd [753.404964ms]
  Jan 29 21:45:22.376: INFO: Created: latency-svc-sspp5
  Jan 29 21:45:22.409: INFO: Got endpoints: latency-svc-qcqrd [750.48268ms]
  Jan 29 21:45:22.458: INFO: Got endpoints: latency-svc-f6dk4 [751.885613ms]
  Jan 29 21:45:22.509: INFO: Got endpoints: latency-svc-t7wpq [751.052575ms]
  Jan 29 21:45:22.558: INFO: Got endpoints: latency-svc-9vknc [748.812194ms]
  Jan 29 21:45:22.609: INFO: Got endpoints: latency-svc-n4gpz [752.086601ms]
  Jan 29 21:45:22.660: INFO: Got endpoints: latency-svc-kqdjs [752.610203ms]
  Jan 29 21:45:22.708: INFO: Got endpoints: latency-svc-22c4v [747.072496ms]
  Jan 29 21:45:22.757: INFO: Got endpoints: latency-svc-l45bf [748.372916ms]
  Jan 29 21:45:22.813: INFO: Got endpoints: latency-svc-hs7pg [756.816448ms]
  Jan 29 21:45:22.857: INFO: Got endpoints: latency-svc-j7pbz [749.521505ms]
  Jan 29 21:45:22.916: INFO: Got endpoints: latency-svc-7pl8r [758.123995ms]
  Jan 29 21:45:22.957: INFO: Got endpoints: latency-svc-5f8ts [748.838921ms]
  Jan 29 21:45:23.008: INFO: Got endpoints: latency-svc-l5w9n [750.929972ms]
  Jan 29 21:45:23.061: INFO: Got endpoints: latency-svc-v6x7h [752.779616ms]
  Jan 29 21:45:23.108: INFO: Got endpoints: latency-svc-sspp5 [747.943047ms]
  Jan 29 21:45:23.108: INFO: Latencies: [17.014704ms 34.984656ms 42.078955ms 50.769977ms 61.467879ms 72.692831ms 93.686861ms 104.689403ms 111.925106ms 127.568501ms 139.215671ms 149.393517ms 152.020327ms 156.518966ms 159.356907ms 162.353365ms 162.427881ms 167.574735ms 173.824772ms 174.207205ms 180.928731ms 182.566476ms 182.722987ms 182.858629ms 183.649229ms 183.992084ms 186.67763ms 187.494385ms 188.387835ms 190.939137ms 195.009509ms 195.845525ms 197.883055ms 198.918451ms 199.768949ms 202.623717ms 203.144222ms 203.158697ms 211.140934ms 232.035451ms 278.908399ms 318.869183ms 359.014036ms 392.71324ms 437.961585ms 465.959178ms 510.368882ms 540.489223ms 570.76581ms 612.23887ms 647.539877ms 685.548955ms 710.7239ms 741.533625ms 742.413777ms 742.8491ms 743.088542ms 743.228468ms 743.742832ms 744.210801ms 745.495535ms 745.726276ms 746.490709ms 746.497737ms 746.860356ms 746.988738ms 747.072496ms 747.089135ms 747.150912ms 747.299005ms 747.510179ms 747.683341ms 747.726103ms 747.770384ms 747.881145ms 747.939766ms 747.943047ms 747.99724ms 748.000604ms 748.100531ms 748.131075ms 748.211648ms 748.316131ms 748.3534ms 748.363026ms 748.372916ms 748.381202ms 748.389839ms 748.411532ms 748.475142ms 748.504392ms 748.540312ms 748.556042ms 748.582302ms 748.74061ms 748.782105ms 748.812194ms 748.833112ms 748.838921ms 748.908964ms 748.939945ms 748.959076ms 749.063097ms 749.125566ms 749.1331ms 749.151051ms 749.188042ms 749.301457ms 749.353407ms 749.45424ms 749.481509ms 749.521361ms 749.521505ms 749.526533ms 749.535876ms 749.538424ms 749.588769ms 749.593307ms 749.604841ms 749.607427ms 749.656053ms 749.658466ms 749.743491ms 749.789372ms 749.812437ms 749.833402ms 749.838365ms 749.849941ms 750.008239ms 750.06413ms 750.115933ms 750.130422ms 750.145734ms 750.163033ms 750.168218ms 750.32445ms 750.338553ms 750.360047ms 750.409446ms 750.438392ms 750.477305ms 750.48268ms 750.505971ms 750.507573ms 750.636515ms 750.638986ms 750.662773ms 750.697617ms 750.7598ms 750.768921ms 750.771372ms 750.840879ms 750.929972ms 750.931523ms 750.973958ms 750.991488ms 751.052575ms 751.088654ms 751.24285ms 751.323825ms 751.369212ms 751.370763ms 751.420284ms 751.478843ms 751.507709ms 751.57079ms 751.654593ms 751.762425ms 751.869217ms 751.885613ms 751.956227ms 752.054541ms 752.075374ms 752.086144ms 752.086601ms 752.090283ms 752.14403ms 752.210823ms 752.299439ms 752.500619ms 752.510366ms 752.606901ms 752.610203ms 752.679569ms 752.779616ms 752.848486ms 753.092776ms 753.202731ms 753.404964ms 753.434959ms 753.496338ms 753.739054ms 754.023794ms 755.169722ms 755.73299ms 756.691736ms 756.816448ms 757.633077ms 758.123995ms 759.319865ms]
  Jan 29 21:45:23.108: INFO: 50 %ile: 748.939945ms
  Jan 29 21:45:23.108: INFO: 90 %ile: 752.510366ms
  Jan 29 21:45:23.108: INFO: 99 %ile: 758.123995ms
  Jan 29 21:45:23.108: INFO: Total sample count: 200
  Jan 29 21:45:23.109: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-1434" for this suite. @ 01/29/24 21:45:23.12
• [10.785 seconds]
------------------------------
SS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance]
test/e2e/apps/statefulset.go:983
  STEP: Creating a kubernetes client @ 01/29/24 21:45:23.128
  Jan 29 21:45:23.128: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename statefulset @ 01/29/24 21:45:23.129
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:45:23.15
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:45:23.154
  STEP: Creating service test in namespace statefulset-3038 @ 01/29/24 21:45:23.158
  STEP: Creating statefulset ss in namespace statefulset-3038 @ 01/29/24 21:45:23.168
  Jan 29 21:45:23.177: INFO: Found 0 stateful pods, waiting for 1
  Jan 29 21:45:33.188: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 01/29/24 21:45:33.196
  STEP: Getting /status @ 01/29/24 21:45:33.205
  Jan 29 21:45:33.209: INFO: StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 01/29/24 21:45:33.209
  Jan 29 21:45:33.223: INFO: updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 01/29/24 21:45:33.223
  Jan 29 21:45:33.226: INFO: Observed &StatefulSet event: ADDED
  Jan 29 21:45:33.226: INFO: Found Statefulset ss in namespace statefulset-3038 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Jan 29 21:45:33.226: INFO: Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 01/29/24 21:45:33.226
  Jan 29 21:45:33.226: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Jan 29 21:45:33.236: INFO: Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 01/29/24 21:45:33.236
  Jan 29 21:45:33.240: INFO: Observed &StatefulSet event: ADDED
  Jan 29 21:45:33.240: INFO: Deleting all statefulset in ns statefulset-3038
  Jan 29 21:45:33.243: INFO: Scaling statefulset ss to 0
  Jan 29 21:45:43.268: INFO: Waiting for statefulset status.replicas updated to 0
  Jan 29 21:45:43.271: INFO: Deleting statefulset ss
  Jan 29 21:45:43.284: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3038" for this suite. @ 01/29/24 21:45:43.29
• [20.167 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:268
  STEP: Creating a kubernetes client @ 01/29/24 21:45:43.296
  Jan 29 21:45:43.296: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename downward-api @ 01/29/24 21:45:43.298
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:45:43.314
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:45:43.319
  STEP: Creating a pod to test downward api env vars @ 01/29/24 21:45:43.323
  STEP: Saw pod success @ 01/29/24 21:45:47.348
  Jan 29 21:45:47.352: INFO: Trying to get logs from node nodeb14 pod downward-api-2f37a08f-15c9-4f4a-a235-bbfd4e60028d container dapi-container: <nil>
  STEP: delete the pod @ 01/29/24 21:45:47.362
  Jan 29 21:45:47.376: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-716" for this suite. @ 01/29/24 21:45:47.381
• [4.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance]
test/e2e/apimachinery/webhook.go:403
  STEP: Creating a kubernetes client @ 01/29/24 21:45:47.394
  Jan 29 21:45:47.394: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename webhook @ 01/29/24 21:45:47.395
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:45:47.407
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:45:47.411
  STEP: Setting up server cert @ 01/29/24 21:45:47.432
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/29/24 21:45:47.658
  STEP: Deploying the webhook pod @ 01/29/24 21:45:47.666
  STEP: Wait for the deployment to be ready @ 01/29/24 21:45:47.686
  Jan 29 21:45:47.693: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 01/29/24 21:45:49.706
  STEP: Verifying the service has paired with the endpoint @ 01/29/24 21:45:49.727
  Jan 29 21:45:50.727: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 01/29/24 21:45:50.737
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 01/29/24 21:45:50.767
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 01/29/24 21:45:50.784
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 01/29/24 21:45:50.794
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 01/29/24 21:45:50.803
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 01/29/24 21:45:50.812
  Jan 29 21:45:50.826: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8740" for this suite. @ 01/29/24 21:45:50.863
  STEP: Destroying namespace "webhook-markers-6707" for this suite. @ 01/29/24 21:45:50.868
• [3.480 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance]
test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 01/29/24 21:45:50.878
  Jan 29 21:45:50.878: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename daemonsets @ 01/29/24 21:45:50.88
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:45:50.892
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:45:50.896
  STEP: Creating a simple DaemonSet "daemon-set" @ 01/29/24 21:45:50.918
  STEP: Check that daemon pods launch on every node of the cluster. @ 01/29/24 21:45:50.923
  Jan 29 21:45:50.930: INFO: DaemonSet pods can't tolerate node nodeb08 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jan 29 21:45:50.935: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jan 29 21:45:50.936: INFO: Node nodeb14 is running 0 daemon pod, expected 1
  Jan 29 21:45:51.942: INFO: DaemonSet pods can't tolerate node nodeb08 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jan 29 21:45:51.946: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jan 29 21:45:51.946: INFO: Node nodeb14 is running 0 daemon pod, expected 1
  Jan 29 21:45:52.943: INFO: DaemonSet pods can't tolerate node nodeb08 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jan 29 21:45:52.948: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jan 29 21:45:52.948: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 01/29/24 21:45:52.952
  Jan 29 21:45:52.972: INFO: DaemonSet pods can't tolerate node nodeb08 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jan 29 21:45:52.976: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jan 29 21:45:52.976: INFO: Node nodeb14 is running 0 daemon pod, expected 1
  Jan 29 21:45:53.984: INFO: DaemonSet pods can't tolerate node nodeb08 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jan 29 21:45:53.988: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jan 29 21:45:53.988: INFO: Node nodeb14 is running 0 daemon pod, expected 1
  Jan 29 21:45:54.983: INFO: DaemonSet pods can't tolerate node nodeb08 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jan 29 21:45:54.987: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jan 29 21:45:54.987: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 01/29/24 21:45:54.987
  STEP: Deleting DaemonSet "daemon-set" @ 01/29/24 21:45:54.993
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-3880, will wait for the garbage collector to delete the pods @ 01/29/24 21:45:54.993
  Jan 29 21:45:55.056: INFO: Deleting DaemonSet.extensions daemon-set took: 8.016886ms
  Jan 29 21:45:55.157: INFO: Terminating DaemonSet.extensions daemon-set pods took: 101.233327ms
  Jan 29 21:45:56.062: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jan 29 21:45:56.062: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Jan 29 21:45:56.065: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"17251"},"items":null}

  Jan 29 21:45:56.068: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"17251"},"items":null}

  Jan 29 21:45:56.080: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-3880" for this suite. @ 01/29/24 21:45:56.084
• [5.211 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/security_context.go:609
  STEP: Creating a kubernetes client @ 01/29/24 21:45:56.099
  Jan 29 21:45:56.099: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename security-context-test @ 01/29/24 21:45:56.1
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:45:56.111
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:45:56.115
  Jan 29 21:46:00.156: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-8586" for this suite. @ 01/29/24 21:46:00.161
• [4.068 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:85
  STEP: Creating a kubernetes client @ 01/29/24 21:46:00.171
  Jan 29 21:46:00.171: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename downward-api @ 01/29/24 21:46:00.173
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:46:00.183
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:46:00.187
  STEP: Creating a pod to test downward API volume plugin @ 01/29/24 21:46:00.191
  STEP: Saw pod success @ 01/29/24 21:46:04.216
  Jan 29 21:46:04.220: INFO: Trying to get logs from node nodeb14 pod downwardapi-volume-2804d5ab-eb92-4f85-8910-503d78b4696f container client-container: <nil>
  STEP: delete the pod @ 01/29/24 21:46:04.229
  Jan 29 21:46:04.245: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6489" for this suite. @ 01/29/24 21:46:04.25
• [4.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:391
  STEP: Creating a kubernetes client @ 01/29/24 21:46:04.261
  Jan 29 21:46:04.261: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename crd-publish-openapi @ 01/29/24 21:46:04.263
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:46:04.28
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:46:04.284
  STEP: set up a multi version CRD @ 01/29/24 21:46:04.289
  Jan 29 21:46:04.290: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: rename a version @ 01/29/24 21:46:08.038
  STEP: check the new version name is served @ 01/29/24 21:46:08.058
  STEP: check the old version name is removed @ 01/29/24 21:46:08.961
  STEP: check the other version is not changed @ 01/29/24 21:46:09.725
  Jan 29 21:46:12.641: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2434" for this suite. @ 01/29/24 21:46:12.655
• [8.400 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance]
test/e2e/apimachinery/field_validation.go:117
  STEP: Creating a kubernetes client @ 01/29/24 21:46:12.662
  Jan 29 21:46:12.662: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename field-validation @ 01/29/24 21:46:12.663
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:46:12.677
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:46:12.682
  STEP: apply creating a deployment @ 01/29/24 21:46:12.686
  Jan 29 21:46:12.688: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-1082" for this suite. @ 01/29/24 21:46:12.704
• [0.049 seconds]
------------------------------
S
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance]
test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 01/29/24 21:46:12.711
  Jan 29 21:46:12.711: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename init-container @ 01/29/24 21:46:12.713
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:46:12.729
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:46:12.733
  STEP: creating the pod @ 01/29/24 21:46:12.738
  Jan 29 21:46:12.738: INFO: PodSpec: initContainers in spec.initContainers
  Jan 29 21:46:16.331: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-5548" for this suite. @ 01/29/24 21:46:16.338
• [3.637 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:250
  STEP: Creating a kubernetes client @ 01/29/24 21:46:16.35
  Jan 29 21:46:16.350: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename projected @ 01/29/24 21:46:16.352
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:46:16.364
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:46:16.368
  STEP: Creating a pod to test downward API volume plugin @ 01/29/24 21:46:16.372
  STEP: Saw pod success @ 01/29/24 21:46:20.396
  Jan 29 21:46:20.400: INFO: Trying to get logs from node nodeb14 pod downwardapi-volume-4b05eb83-fc78-43fd-a57e-e0520f59d809 container client-container: <nil>
  STEP: delete the pod @ 01/29/24 21:46:20.41
  Jan 29 21:46:20.427: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3113" for this suite. @ 01/29/24 21:46:20.432
• [4.089 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance]
test/e2e/apimachinery/discovery.go:125
  STEP: Creating a kubernetes client @ 01/29/24 21:46:20.441
  Jan 29 21:46:20.441: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename discovery @ 01/29/24 21:46:20.443
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:46:20.455
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:46:20.459
  STEP: Setting up server cert @ 01/29/24 21:46:20.464
  Jan 29 21:46:20.773: INFO: Checking APIGroup: apiregistration.k8s.io
  Jan 29 21:46:20.774: INFO: PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  Jan 29 21:46:20.774: INFO: Versions found [{apiregistration.k8s.io/v1 v1}]
  Jan 29 21:46:20.774: INFO: apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  Jan 29 21:46:20.774: INFO: Checking APIGroup: apps
  Jan 29 21:46:20.776: INFO: PreferredVersion.GroupVersion: apps/v1
  Jan 29 21:46:20.776: INFO: Versions found [{apps/v1 v1}]
  Jan 29 21:46:20.776: INFO: apps/v1 matches apps/v1
  Jan 29 21:46:20.776: INFO: Checking APIGroup: events.k8s.io
  Jan 29 21:46:20.778: INFO: PreferredVersion.GroupVersion: events.k8s.io/v1
  Jan 29 21:46:20.778: INFO: Versions found [{events.k8s.io/v1 v1}]
  Jan 29 21:46:20.778: INFO: events.k8s.io/v1 matches events.k8s.io/v1
  Jan 29 21:46:20.778: INFO: Checking APIGroup: authentication.k8s.io
  Jan 29 21:46:20.779: INFO: PreferredVersion.GroupVersion: authentication.k8s.io/v1
  Jan 29 21:46:20.779: INFO: Versions found [{authentication.k8s.io/v1 v1}]
  Jan 29 21:46:20.779: INFO: authentication.k8s.io/v1 matches authentication.k8s.io/v1
  Jan 29 21:46:20.779: INFO: Checking APIGroup: authorization.k8s.io
  Jan 29 21:46:20.781: INFO: PreferredVersion.GroupVersion: authorization.k8s.io/v1
  Jan 29 21:46:20.781: INFO: Versions found [{authorization.k8s.io/v1 v1}]
  Jan 29 21:46:20.781: INFO: authorization.k8s.io/v1 matches authorization.k8s.io/v1
  Jan 29 21:46:20.781: INFO: Checking APIGroup: autoscaling
  Jan 29 21:46:20.783: INFO: PreferredVersion.GroupVersion: autoscaling/v2
  Jan 29 21:46:20.783: INFO: Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  Jan 29 21:46:20.783: INFO: autoscaling/v2 matches autoscaling/v2
  Jan 29 21:46:20.783: INFO: Checking APIGroup: batch
  Jan 29 21:46:20.785: INFO: PreferredVersion.GroupVersion: batch/v1
  Jan 29 21:46:20.785: INFO: Versions found [{batch/v1 v1}]
  Jan 29 21:46:20.785: INFO: batch/v1 matches batch/v1
  Jan 29 21:46:20.785: INFO: Checking APIGroup: certificates.k8s.io
  Jan 29 21:46:20.786: INFO: PreferredVersion.GroupVersion: certificates.k8s.io/v1
  Jan 29 21:46:20.786: INFO: Versions found [{certificates.k8s.io/v1 v1}]
  Jan 29 21:46:20.786: INFO: certificates.k8s.io/v1 matches certificates.k8s.io/v1
  Jan 29 21:46:20.786: INFO: Checking APIGroup: networking.k8s.io
  Jan 29 21:46:20.788: INFO: PreferredVersion.GroupVersion: networking.k8s.io/v1
  Jan 29 21:46:20.788: INFO: Versions found [{networking.k8s.io/v1 v1}]
  Jan 29 21:46:20.788: INFO: networking.k8s.io/v1 matches networking.k8s.io/v1
  Jan 29 21:46:20.788: INFO: Checking APIGroup: policy
  Jan 29 21:46:20.790: INFO: PreferredVersion.GroupVersion: policy/v1
  Jan 29 21:46:20.790: INFO: Versions found [{policy/v1 v1}]
  Jan 29 21:46:20.790: INFO: policy/v1 matches policy/v1
  Jan 29 21:46:20.790: INFO: Checking APIGroup: rbac.authorization.k8s.io
  Jan 29 21:46:20.791: INFO: PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  Jan 29 21:46:20.791: INFO: Versions found [{rbac.authorization.k8s.io/v1 v1}]
  Jan 29 21:46:20.791: INFO: rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  Jan 29 21:46:20.791: INFO: Checking APIGroup: storage.k8s.io
  Jan 29 21:46:20.792: INFO: PreferredVersion.GroupVersion: storage.k8s.io/v1
  Jan 29 21:46:20.792: INFO: Versions found [{storage.k8s.io/v1 v1}]
  Jan 29 21:46:20.792: INFO: storage.k8s.io/v1 matches storage.k8s.io/v1
  Jan 29 21:46:20.792: INFO: Checking APIGroup: admissionregistration.k8s.io
  Jan 29 21:46:20.794: INFO: PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  Jan 29 21:46:20.794: INFO: Versions found [{admissionregistration.k8s.io/v1 v1}]
  Jan 29 21:46:20.794: INFO: admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  Jan 29 21:46:20.794: INFO: Checking APIGroup: apiextensions.k8s.io
  Jan 29 21:46:20.796: INFO: PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  Jan 29 21:46:20.796: INFO: Versions found [{apiextensions.k8s.io/v1 v1}]
  Jan 29 21:46:20.796: INFO: apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  Jan 29 21:46:20.796: INFO: Checking APIGroup: scheduling.k8s.io
  Jan 29 21:46:20.798: INFO: PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  Jan 29 21:46:20.798: INFO: Versions found [{scheduling.k8s.io/v1 v1}]
  Jan 29 21:46:20.798: INFO: scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  Jan 29 21:46:20.798: INFO: Checking APIGroup: coordination.k8s.io
  Jan 29 21:46:20.800: INFO: PreferredVersion.GroupVersion: coordination.k8s.io/v1
  Jan 29 21:46:20.800: INFO: Versions found [{coordination.k8s.io/v1 v1}]
  Jan 29 21:46:20.800: INFO: coordination.k8s.io/v1 matches coordination.k8s.io/v1
  Jan 29 21:46:20.800: INFO: Checking APIGroup: node.k8s.io
  Jan 29 21:46:20.802: INFO: PreferredVersion.GroupVersion: node.k8s.io/v1
  Jan 29 21:46:20.802: INFO: Versions found [{node.k8s.io/v1 v1}]
  Jan 29 21:46:20.802: INFO: node.k8s.io/v1 matches node.k8s.io/v1
  Jan 29 21:46:20.802: INFO: Checking APIGroup: discovery.k8s.io
  Jan 29 21:46:20.804: INFO: PreferredVersion.GroupVersion: discovery.k8s.io/v1
  Jan 29 21:46:20.804: INFO: Versions found [{discovery.k8s.io/v1 v1}]
  Jan 29 21:46:20.804: INFO: discovery.k8s.io/v1 matches discovery.k8s.io/v1
  Jan 29 21:46:20.804: INFO: Checking APIGroup: flowcontrol.apiserver.k8s.io
  Jan 29 21:46:20.806: INFO: PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1beta3
  Jan 29 21:46:20.806: INFO: Versions found [{flowcontrol.apiserver.k8s.io/v1beta3 v1beta3} {flowcontrol.apiserver.k8s.io/v1beta2 v1beta2}]
  Jan 29 21:46:20.806: INFO: flowcontrol.apiserver.k8s.io/v1beta3 matches flowcontrol.apiserver.k8s.io/v1beta3
  Jan 29 21:46:20.806: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-7717" for this suite. @ 01/29/24 21:46:20.811
• [0.377 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:89
  STEP: Creating a kubernetes client @ 01/29/24 21:46:20.832
  Jan 29 21:46:20.832: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename projected @ 01/29/24 21:46:20.834
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:46:20.847
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:46:20.85
  STEP: Creating configMap with name projected-configmap-test-volume-map-15dbf0f8-af46-470a-958a-317104f6c0eb @ 01/29/24 21:46:20.854
  STEP: Creating a pod to test consume configMaps @ 01/29/24 21:46:20.86
  STEP: Saw pod success @ 01/29/24 21:46:24.884
  Jan 29 21:46:24.887: INFO: Trying to get logs from node nodeb14 pod pod-projected-configmaps-e43bdbe2-8e48-49e7-bbff-73b192b70a60 container agnhost-container: <nil>
  STEP: delete the pod @ 01/29/24 21:46:24.896
  Jan 29 21:46:24.913: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6447" for this suite. @ 01/29/24 21:46:24.919
• [4.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance]
test/e2e/apps/replica_set.go:131
  STEP: Creating a kubernetes client @ 01/29/24 21:46:24.926
  Jan 29 21:46:24.926: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename replicaset @ 01/29/24 21:46:24.928
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:46:24.943
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:46:24.947
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 01/29/24 21:46:24.952
  STEP: When a replicaset with a matching selector is created @ 01/29/24 21:46:26.999
  STEP: Then the orphan pod is adopted @ 01/29/24 21:46:27.007
  STEP: When the matched label of one of its pods change @ 01/29/24 21:46:28.016
  Jan 29 21:46:28.020: INFO: Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 01/29/24 21:46:28.035
  Jan 29 21:46:29.044: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-1190" for this suite. @ 01/29/24 21:46:29.049
• [4.133 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance]
test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 01/29/24 21:46:29.063
  Jan 29 21:46:29.063: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename init-container @ 01/29/24 21:46:29.064
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:46:29.076
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:46:29.08
  STEP: creating the pod @ 01/29/24 21:46:29.084
  Jan 29 21:46:29.085: INFO: PodSpec: initContainers in spec.initContainers
  Jan 29 21:46:32.206: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-7980" for this suite. @ 01/29/24 21:46:32.211
• [3.158 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance]
test/e2e/scheduling/preemption.go:130
  STEP: Creating a kubernetes client @ 01/29/24 21:46:32.223
  Jan 29 21:46:32.223: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename sched-preemption @ 01/29/24 21:46:32.225
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:46:32.238
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:46:32.242
  Jan 29 21:46:32.262: INFO: Waiting up to 1m0s for all nodes to be ready
  Jan 29 21:47:32.299: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 01/29/24 21:47:32.302
  Jan 29 21:47:32.324: INFO: Created pod: pod0-0-sched-preemption-low-priority
  Jan 29 21:47:32.329: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  Jan 29 21:47:32.348: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  Jan 29 21:47:32.354: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 01/29/24 21:47:32.355
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 01/29/24 21:47:38.389
  Jan 29 21:47:42.437: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-9623" for this suite. @ 01/29/24 21:47:42.475
• [70.261 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance]
test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 01/29/24 21:47:42.485
  Jan 29 21:47:42.485: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename watch @ 01/29/24 21:47:42.487
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:47:42.499
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:47:42.503
  STEP: creating a watch on configmaps @ 01/29/24 21:47:42.508
  STEP: creating a new configmap @ 01/29/24 21:47:42.51
  STEP: modifying the configmap once @ 01/29/24 21:47:42.515
  STEP: closing the watch once it receives two notifications @ 01/29/24 21:47:42.522
  Jan 29 21:47:42.522: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-8633  7c2ca52d-9226-4315-9b29-6521ff52f2c2 17767 0 2024-01-29 21:47:42 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-01-29 21:47:42 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Jan 29 21:47:42.522: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-8633  7c2ca52d-9226-4315-9b29-6521ff52f2c2 17768 0 2024-01-29 21:47:42 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-01-29 21:47:42 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 01/29/24 21:47:42.523
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 01/29/24 21:47:42.53
  STEP: deleting the configmap @ 01/29/24 21:47:42.532
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 01/29/24 21:47:42.537
  Jan 29 21:47:42.537: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-8633  7c2ca52d-9226-4315-9b29-6521ff52f2c2 17769 0 2024-01-29 21:47:42 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-01-29 21:47:42 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jan 29 21:47:42.538: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-8633  7c2ca52d-9226-4315-9b29-6521ff52f2c2 17770 0 2024-01-29 21:47:42 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-01-29 21:47:42 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jan 29 21:47:42.538: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-8633" for this suite. @ 01/29/24 21:47:42.542
• [0.070 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection][NodeConformance] [Conformance]
test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 01/29/24 21:47:42.556
  Jan 29 21:47:42.556: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename projected @ 01/29/24 21:47:42.557
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:47:42.57
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:47:42.574
  STEP: Creating configMap with name configmap-projected-all-test-volume-5eb6291a-a08c-407b-a7ea-288b9c29304d @ 01/29/24 21:47:42.578
  STEP: Creating secret with name secret-projected-all-test-volume-ac9edf5e-7cd3-40e3-8cf9-9aab4daf0cd2 @ 01/29/24 21:47:42.582
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 01/29/24 21:47:42.588
  STEP: Saw pod success @ 01/29/24 21:47:46.611
  Jan 29 21:47:46.614: INFO: Trying to get logs from node nodeb14 pod projected-volume-e18db875-49fb-4689-b645-337fca5acb54 container projected-all-volume-test: <nil>
  STEP: delete the pod @ 01/29/24 21:47:46.623
  Jan 29 21:47:46.639: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5937" for this suite. @ 01/29/24 21:47:46.645
• [4.094 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:214
  STEP: Creating a kubernetes client @ 01/29/24 21:47:46.651
  Jan 29 21:47:46.651: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename container-probe @ 01/29/24 21:47:46.653
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:47:46.665
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:47:46.669
  STEP: Creating pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167 @ 01/29/24 21:47:46.674
  STEP: checking the pod's current state and verifying that restartCount is present @ 01/29/24 21:47:48.694
  Jan 29 21:47:48.698: INFO: Initial restart count of pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc is 0
  Jan 29 21:47:48.701: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:47:50.707: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:47:52.716: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:47:54.732: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:47:56.740: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:47:58.746: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:48:00.752: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:48:02.759: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:48:04.767: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:48:06.774: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:48:08.780: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:48:10.785: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:48:12.793: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:48:14.799: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:48:16.804: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:48:18.816: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:48:20.822: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:48:22.832: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:48:24.839: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:48:26.845: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:48:28.851: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:48:30.857: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:48:32.864: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:48:34.870: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:48:36.878: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:48:38.883: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:48:40.888: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:48:42.896: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:48:44.902: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:48:46.909: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:48:48.914: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:48:50.920: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:48:52.931: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:48:54.938: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:48:56.944: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:48:58.950: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:49:00.957: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:49:02.966: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:49:04.972: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:49:06.980: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:49:08.987: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:49:10.993: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:49:13.002: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:49:15.008: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:49:17.014: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:49:19.020: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:49:21.025: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:49:23.032: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:49:25.037: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:49:27.044: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:49:29.050: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:49:31.056: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:49:33.064: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:49:35.071: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:49:37.078: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:49:39.083: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:49:41.089: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:49:43.097: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:49:45.103: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:49:47.109: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:49:49.115: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:49:51.121: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:49:53.128: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:49:55.135: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:49:57.141: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:49:59.148: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:50:01.154: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:50:03.161: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:50:05.169: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:50:07.176: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:50:09.181: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:50:11.186: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:50:13.194: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:50:15.200: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:50:17.207: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:50:19.213: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:50:21.219: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:50:23.227: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:50:25.234: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:50:27.242: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:50:29.247: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:50:31.252: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:50:33.259: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:50:35.266: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:50:37.273: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:50:39.279: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:50:41.284: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:50:43.292: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:50:45.298: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:50:47.306: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:50:49.310: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:50:51.315: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:50:53.322: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:50:55.330: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:50:57.335: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:50:59.340: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:51:01.346: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:51:03.353: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:51:05.359: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:51:07.366: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:51:09.372: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:51:11.379: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:51:13.386: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:51:15.393: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:51:17.399: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:51:19.405: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:51:21.412: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:51:23.419: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:51:25.425: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:51:27.431: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:51:29.437: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:51:31.442: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:51:33.448: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:51:35.454: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:51:37.460: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:51:39.467: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:51:41.472: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:51:43.480: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:51:45.485: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:51:47.491: INFO: Get pod test-webserver-0fc8bde6-93de-4316-83ac-99bf4c57e6fc in namespace container-probe-4167
  Jan 29 21:51:49.492: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 01/29/24 21:51:49.499
  STEP: Destroying namespace "container-probe-4167" for this suite. @ 01/29/24 21:51:49.513
• [242.869 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance]
test/e2e/common/node/podtemplates.go:176
  STEP: Creating a kubernetes client @ 01/29/24 21:51:49.524
  Jan 29 21:51:49.524: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename podtemplate @ 01/29/24 21:51:49.527
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:51:49.545
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:51:49.549
  STEP: Create a pod template @ 01/29/24 21:51:49.553
  STEP: Replace a pod template @ 01/29/24 21:51:49.56
  Jan 29 21:51:49.572: INFO: Found updated podtemplate annotation: "true"

  Jan 29 21:51:49.572: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-3053" for this suite. @ 01/29/24 21:51:49.577
• [0.060 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:147
  STEP: Creating a kubernetes client @ 01/29/24 21:51:49.584
  Jan 29 21:51:49.584: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename emptydir @ 01/29/24 21:51:49.586
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:51:49.598
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:51:49.601
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 01/29/24 21:51:49.606
  STEP: Saw pod success @ 01/29/24 21:51:53.633
  Jan 29 21:51:53.636: INFO: Trying to get logs from node nodeb14 pod pod-e863e569-971f-4496-84d1-1b38d00f3162 container test-container: <nil>
  STEP: delete the pod @ 01/29/24 21:51:53.663
  Jan 29 21:51:53.680: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5284" for this suite. @ 01/29/24 21:51:53.684
• [4.105 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:107
  STEP: Creating a kubernetes client @ 01/29/24 21:51:53.691
  Jan 29 21:51:53.691: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename emptydir @ 01/29/24 21:51:53.692
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:51:53.704
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:51:53.709
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 01/29/24 21:51:53.715
  STEP: Saw pod success @ 01/29/24 21:51:57.737
  Jan 29 21:51:57.741: INFO: Trying to get logs from node nodeb14 pod pod-2fb9978b-5cec-4d81-b0a2-b63eac0b4527 container test-container: <nil>
  STEP: delete the pod @ 01/29/24 21:51:57.75
  Jan 29 21:51:57.764: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4243" for this suite. @ 01/29/24 21:51:57.77
• [4.089 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance]
test/e2e/common/node/lifecycle_hook.go:152
  STEP: Creating a kubernetes client @ 01/29/24 21:51:57.781
  Jan 29 21:51:57.781: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 01/29/24 21:51:57.784
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:51:57.797
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:51:57.801
  STEP: create the container to handle the HTTPGet hook request. @ 01/29/24 21:51:57.813
  STEP: create the pod with lifecycle hook @ 01/29/24 21:51:59.836
  STEP: delete the pod with lifecycle hook @ 01/29/24 21:52:01.856
  STEP: check prestop hook @ 01/29/24 21:52:03.878
  Jan 29 21:52:03.887: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-5745" for this suite. @ 01/29/24 21:52:03.891
• [6.117 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:45
  STEP: Creating a kubernetes client @ 01/29/24 21:52:03.901
  Jan 29 21:52:03.901: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename downward-api @ 01/29/24 21:52:03.903
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:52:03.918
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:52:03.923
  STEP: Creating a pod to test downward api env vars @ 01/29/24 21:52:03.928
  STEP: Saw pod success @ 01/29/24 21:52:07.955
  Jan 29 21:52:07.958: INFO: Trying to get logs from node nodeb14 pod downward-api-3da7fe52-af46-4e89-8289-02ecddf29578 container dapi-container: <nil>
  STEP: delete the pod @ 01/29/24 21:52:07.968
  Jan 29 21:52:07.980: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8138" for this suite. @ 01/29/24 21:52:07.986
• [4.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance]
test/e2e/common/node/runtimeclass.go:129
  STEP: Creating a kubernetes client @ 01/29/24 21:52:07.996
  Jan 29 21:52:07.996: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename runtimeclass @ 01/29/24 21:52:07.998
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:52:08.009
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:52:08.014
  Jan 29 21:52:10.040: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-3866" for this suite. @ 01/29/24 21:52:10.053
• [2.064 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance]
test/e2e/apps/deployment.go:488
  STEP: Creating a kubernetes client @ 01/29/24 21:52:10.061
  Jan 29 21:52:10.061: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename deployment @ 01/29/24 21:52:10.064
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:52:10.076
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:52:10.083
  STEP: creating a Deployment @ 01/29/24 21:52:10.094
  Jan 29 21:52:10.095: INFO: Creating simple deployment test-deployment-fn4md
  Jan 29 21:52:10.113: INFO: deployment "test-deployment-fn4md" doesn't have the required revision set
  STEP: Getting /status @ 01/29/24 21:52:12.13
  Jan 29 21:52:12.136: INFO: Deployment test-deployment-fn4md has Conditions: [{Available True 2024-01-29 21:52:11 +0000 UTC 2024-01-29 21:52:11 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2024-01-29 21:52:11 +0000 UTC 2024-01-29 21:52:10 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-fn4md-5d576bd769" has successfully progressed.}]
  STEP: updating Deployment Status @ 01/29/24 21:52:12.136
  Jan 29 21:52:12.148: INFO: updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.January, 29, 21, 52, 11, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 29, 21, 52, 11, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.January, 29, 21, 52, 11, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 29, 21, 52, 10, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-fn4md-5d576bd769\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 01/29/24 21:52:12.149
  Jan 29 21:52:12.152: INFO: Observed &Deployment event: ADDED
  Jan 29 21:52:12.152: INFO: Observed Deployment test-deployment-fn4md in namespace deployment-1479 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-01-29 21:52:10 +0000 UTC 2024-01-29 21:52:10 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-fn4md-5d576bd769"}
  Jan 29 21:52:12.152: INFO: Observed &Deployment event: MODIFIED
  Jan 29 21:52:12.152: INFO: Observed Deployment test-deployment-fn4md in namespace deployment-1479 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-01-29 21:52:10 +0000 UTC 2024-01-29 21:52:10 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-fn4md-5d576bd769"}
  Jan 29 21:52:12.152: INFO: Observed Deployment test-deployment-fn4md in namespace deployment-1479 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-01-29 21:52:10 +0000 UTC 2024-01-29 21:52:10 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Jan 29 21:52:12.152: INFO: Observed &Deployment event: MODIFIED
  Jan 29 21:52:12.153: INFO: Observed Deployment test-deployment-fn4md in namespace deployment-1479 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-01-29 21:52:10 +0000 UTC 2024-01-29 21:52:10 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Jan 29 21:52:12.153: INFO: Observed Deployment test-deployment-fn4md in namespace deployment-1479 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-01-29 21:52:10 +0000 UTC 2024-01-29 21:52:10 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-fn4md-5d576bd769" is progressing.}
  Jan 29 21:52:12.153: INFO: Observed &Deployment event: MODIFIED
  Jan 29 21:52:12.153: INFO: Observed Deployment test-deployment-fn4md in namespace deployment-1479 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-01-29 21:52:11 +0000 UTC 2024-01-29 21:52:11 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Jan 29 21:52:12.153: INFO: Observed Deployment test-deployment-fn4md in namespace deployment-1479 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-01-29 21:52:11 +0000 UTC 2024-01-29 21:52:10 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-fn4md-5d576bd769" has successfully progressed.}
  Jan 29 21:52:12.153: INFO: Observed &Deployment event: MODIFIED
  Jan 29 21:52:12.153: INFO: Observed Deployment test-deployment-fn4md in namespace deployment-1479 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-01-29 21:52:11 +0000 UTC 2024-01-29 21:52:11 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Jan 29 21:52:12.153: INFO: Observed Deployment test-deployment-fn4md in namespace deployment-1479 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-01-29 21:52:11 +0000 UTC 2024-01-29 21:52:10 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-fn4md-5d576bd769" has successfully progressed.}
  Jan 29 21:52:12.153: INFO: Found Deployment test-deployment-fn4md in namespace deployment-1479 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Jan 29 21:52:12.153: INFO: Deployment test-deployment-fn4md has an updated status
  STEP: patching the Statefulset Status @ 01/29/24 21:52:12.153
  Jan 29 21:52:12.153: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Jan 29 21:52:12.163: INFO: Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 01/29/24 21:52:12.163
  Jan 29 21:52:12.167: INFO: Observed &Deployment event: ADDED
  Jan 29 21:52:12.167: INFO: Observed deployment test-deployment-fn4md in namespace deployment-1479 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-01-29 21:52:10 +0000 UTC 2024-01-29 21:52:10 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-fn4md-5d576bd769"}
  Jan 29 21:52:12.167: INFO: Observed &Deployment event: MODIFIED
  Jan 29 21:52:12.167: INFO: Observed deployment test-deployment-fn4md in namespace deployment-1479 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-01-29 21:52:10 +0000 UTC 2024-01-29 21:52:10 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-fn4md-5d576bd769"}
  Jan 29 21:52:12.167: INFO: Observed deployment test-deployment-fn4md in namespace deployment-1479 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-01-29 21:52:10 +0000 UTC 2024-01-29 21:52:10 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Jan 29 21:52:12.168: INFO: Observed &Deployment event: MODIFIED
  Jan 29 21:52:12.168: INFO: Observed deployment test-deployment-fn4md in namespace deployment-1479 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-01-29 21:52:10 +0000 UTC 2024-01-29 21:52:10 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Jan 29 21:52:12.168: INFO: Observed deployment test-deployment-fn4md in namespace deployment-1479 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-01-29 21:52:10 +0000 UTC 2024-01-29 21:52:10 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-fn4md-5d576bd769" is progressing.}
  Jan 29 21:52:12.168: INFO: Observed &Deployment event: MODIFIED
  Jan 29 21:52:12.168: INFO: Observed deployment test-deployment-fn4md in namespace deployment-1479 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-01-29 21:52:11 +0000 UTC 2024-01-29 21:52:11 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Jan 29 21:52:12.168: INFO: Observed deployment test-deployment-fn4md in namespace deployment-1479 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-01-29 21:52:11 +0000 UTC 2024-01-29 21:52:10 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-fn4md-5d576bd769" has successfully progressed.}
  Jan 29 21:52:12.168: INFO: Observed &Deployment event: MODIFIED
  Jan 29 21:52:12.168: INFO: Observed deployment test-deployment-fn4md in namespace deployment-1479 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-01-29 21:52:11 +0000 UTC 2024-01-29 21:52:11 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Jan 29 21:52:12.168: INFO: Observed deployment test-deployment-fn4md in namespace deployment-1479 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-01-29 21:52:11 +0000 UTC 2024-01-29 21:52:10 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-fn4md-5d576bd769" has successfully progressed.}
  Jan 29 21:52:12.168: INFO: Observed deployment test-deployment-fn4md in namespace deployment-1479 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Jan 29 21:52:12.169: INFO: Observed &Deployment event: MODIFIED
  Jan 29 21:52:12.169: INFO: Found deployment test-deployment-fn4md in namespace deployment-1479 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  Jan 29 21:52:12.169: INFO: Deployment test-deployment-fn4md has a patched status
  Jan 29 21:52:12.175: INFO: Deployment "test-deployment-fn4md":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-fn4md",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1479",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2318064f-0283-433a-8667-2cfec6533ad9",
      ResourceVersion: (string) (len=5) "18439",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842161930,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842161930,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842161932,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842161932,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842161932,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842161932,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=56) "Found new replica set \"test-deployment-fn4md-5d576bd769\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jan 29 21:52:12.190: INFO: New ReplicaSet "test-deployment-fn4md-5d576bd769" of Deployment "test-deployment-fn4md":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-fn4md-5d576bd769",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1479",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a1279f92-9da3-4190-852a-86618b462060",
      ResourceVersion: (string) (len=5) "18435",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842161930,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-fn4md",
          UID: (types.UID) (len=36) "2318064f-0283-433a-8667-2cfec6533ad9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842161930,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 32 33 31  |k:{\"uid\":\"231|
              00000120  38 30 36 34 66 2d 30 32  38 33 2d 34 33 33 61 2d  |8064f-0283-433a-|
              00000130  38 36 36 37 2d 32 63 66  65 63 36 35 33 33 61 64  |8667-2cfec6533ad|
              00000140  39 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |9\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842161931,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769",
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jan 29 21:52:12.195: INFO: Pod "test-deployment-fn4md-5d576bd769-vcj7n" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=38) "test-deployment-fn4md-5d576bd769-vcj7n",
      GenerateName: (string) (len=33) "test-deployment-fn4md-5d576bd769-",
      Namespace: (string) (len=15) "deployment-1479",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "96f09036-7ff9-457e-83e5-067937baf7b2",
      ResourceVersion: (string) (len=5) "18434",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842161930,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769",
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=32) "test-deployment-fn4md-5d576bd769",
          UID: (types.UID) (len=36) "a1279f92-9da3-4190-852a-86618b462060",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842161930,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 61 31 32 37 39 66 39  32 2d 39 64 61 33 2d 34  |"a1279f92-9da3-4|
              000000a0  31 39 30 2d 38 35 32 61  2d 38 36 36 31 38 62 34  |190-852a-86618b4|
              000000b0  36 32 30 36 30 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |62060\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842161931,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=517) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 34 34 2e 32  2e 38 5c 22 7d 22 3a 7b  |10.244.2.8\"}":{|
              000001e0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000001f0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000200  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-t9kq4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-t9kq4",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodeb14",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842161930,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842161931,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842161931,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842161930,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.100.114",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=10) "10.244.2.8",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.244.2.8"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842161930,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63842161930,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://be34b65443c398f3f695bcafdb917c716c4ae14599f26e19c2d096bb1e2465de",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan 29 21:52:12.199: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1479" for this suite. @ 01/29/24 21:52:12.203
• [2.148 seconds]
------------------------------
S
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:183
  STEP: Creating a kubernetes client @ 01/29/24 21:52:12.209
  Jan 29 21:52:12.209: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename container-probe @ 01/29/24 21:52:12.21
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:52:12.224
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:52:12.229
  STEP: Creating pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640 @ 01/29/24 21:52:12.234
  STEP: checking the pod's current state and verifying that restartCount is present @ 01/29/24 21:52:14.252
  Jan 29 21:52:14.256: INFO: Initial restart count of pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f is 0
  Jan 29 21:52:14.260: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:52:16.267: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:52:18.274: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:52:20.281: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:52:22.286: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:52:24.292: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:52:26.298: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:52:28.305: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:52:30.312: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:52:32.318: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:52:34.327: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:52:36.333: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:52:38.340: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:52:40.347: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:52:42.353: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:52:44.360: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:52:46.367: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:52:48.374: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:52:50.380: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:52:52.388: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:52:54.394: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:52:56.400: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:52:58.405: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:53:00.412: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:53:02.419: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:53:04.426: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:53:06.433: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:53:08.437: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:53:10.443: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:53:12.449: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:53:14.457: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:53:16.462: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:53:18.467: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:53:20.473: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:53:22.479: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:53:24.485: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:53:26.492: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:53:28.497: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:53:30.503: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:53:32.512: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:53:34.519: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:53:36.525: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:53:38.531: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:53:40.539: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:53:42.545: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:53:44.552: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:53:46.557: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:53:48.563: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:53:50.572: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:53:52.578: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:53:54.585: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:53:56.592: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:53:58.597: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:54:00.603: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:54:02.608: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:54:04.615: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:54:06.619: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:54:08.624: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:54:10.629: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:54:12.634: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:54:14.639: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:54:16.645: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:54:18.654: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:54:20.660: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:54:22.666: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:54:24.672: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:54:26.678: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:54:28.683: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:54:30.688: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:54:32.695: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:54:34.701: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:54:36.708: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:54:38.717: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:54:40.724: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:54:42.729: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:54:44.736: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:54:46.742: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:54:48.748: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:54:50.754: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:54:52.761: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:54:54.768: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:54:56.779: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:54:58.784: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:55:00.789: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:55:02.795: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:55:04.803: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:55:06.809: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:55:08.814: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:55:10.820: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:55:12.826: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:55:14.833: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:55:16.840: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:55:18.847: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:55:20.853: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:55:22.859: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:55:24.867: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:55:26.873: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:55:28.879: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:55:30.885: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:55:32.890: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:55:34.897: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:55:36.904: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:55:38.910: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:55:40.919: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:55:42.925: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:55:44.932: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:55:46.945: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:55:48.950: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:55:50.956: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:55:52.963: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:55:54.972: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:55:56.981: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:55:58.990: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:56:00.996: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:56:03.003: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:56:05.010: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:56:07.016: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:56:09.022: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:56:11.028: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:56:13.032: INFO: Get pod liveness-1b45e76c-a985-4709-b4f2-67ebdc5bcd1f in namespace container-probe-2640
  Jan 29 21:56:15.034: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 01/29/24 21:56:15.042
  STEP: Destroying namespace "container-probe-2640" for this suite. @ 01/29/24 21:56:15.058
• [242.854 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance]
test/e2e/scheduling/preemption.go:224
  STEP: Creating a kubernetes client @ 01/29/24 21:56:15.065
  Jan 29 21:56:15.065: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename sched-preemption @ 01/29/24 21:56:15.067
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:56:15.08
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:56:15.084
  Jan 29 21:56:15.100: INFO: Waiting up to 1m0s for all nodes to be ready
  Jan 29 21:57:15.136: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 01/29/24 21:57:15.14
  Jan 29 21:57:15.165: INFO: Created pod: pod0-0-sched-preemption-low-priority
  Jan 29 21:57:15.172: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  Jan 29 21:57:15.190: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  Jan 29 21:57:15.195: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 01/29/24 21:57:15.195
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 01/29/24 21:57:17.216
  Jan 29 21:57:21.281: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-3616" for this suite. @ 01/29/24 21:57:21.324
• [66.264 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance]
test/e2e/apimachinery/namespace.go:370
  STEP: Creating a kubernetes client @ 01/29/24 21:57:21.337
  Jan 29 21:57:21.337: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename namespaces @ 01/29/24 21:57:21.338
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:57:21.349
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:57:21.353
  STEP: Updating Namespace "namespaces-2533" @ 01/29/24 21:57:21.357
  Jan 29 21:57:21.365: INFO: Namespace "namespaces-2533" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"49806411-f3fa-4688-a28f-4a30d2c0e24c", "kubernetes.io/metadata.name":"namespaces-2533", "namespaces-2533":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  Jan 29 21:57:21.365: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-2533" for this suite. @ 01/29/24 21:57:21.37
• [0.040 seconds]
------------------------------
SSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance]
test/e2e/scheduling/preemption.go:812
  STEP: Creating a kubernetes client @ 01/29/24 21:57:21.377
  Jan 29 21:57:21.377: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename sched-preemption @ 01/29/24 21:57:21.379
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:57:21.391
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:57:21.395
  Jan 29 21:57:21.412: INFO: Waiting up to 1m0s for all nodes to be ready
  Jan 29 21:58:21.447: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 01/29/24 21:58:21.451
  Jan 29 21:58:21.451: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename sched-preemption-path @ 01/29/24 21:58:21.452
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:58:21.465
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:58:21.47
  Jan 29 21:58:21.492: INFO: PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  Jan 29 21:58:21.495: INFO: PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  Jan 29 21:58:21.514: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Jan 29 21:58:21.526: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-9251" for this suite. @ 01/29/24 21:58:21.563
  STEP: Destroying namespace "sched-preemption-6180" for this suite. @ 01/29/24 21:58:21.569
• [60.199 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance]
test/e2e/apimachinery/aggregator.go:96
  STEP: Creating a kubernetes client @ 01/29/24 21:58:21.577
  Jan 29 21:58:21.577: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename aggregator @ 01/29/24 21:58:21.579
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:58:21.589
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:58:21.594
  Jan 29 21:58:21.598: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Registering the sample API server. @ 01/29/24 21:58:21.6
  Jan 29 21:58:22.097: INFO: Found ClusterRoles; assuming RBAC is enabled.
  Jan 29 21:58:22.122: INFO: deployment "sample-apiserver-deployment" doesn't have the required revision set
  Jan 29 21:58:24.170: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.January, 29, 21, 58, 22, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 29, 21, 58, 22, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.January, 29, 21, 58, 22, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 29, 21, 58, 22, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jan 29 21:58:26.177: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.January, 29, 21, 58, 22, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 29, 21, 58, 22, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.January, 29, 21, 58, 22, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 29, 21, 58, 22, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jan 29 21:58:28.175: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.January, 29, 21, 58, 22, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 29, 21, 58, 22, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.January, 29, 21, 58, 22, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 29, 21, 58, 22, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jan 29 21:58:30.176: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.January, 29, 21, 58, 22, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 29, 21, 58, 22, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.January, 29, 21, 58, 22, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 29, 21, 58, 22, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jan 29 21:58:32.176: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.January, 29, 21, 58, 22, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 29, 21, 58, 22, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.January, 29, 21, 58, 22, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 29, 21, 58, 22, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jan 29 21:58:34.176: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.January, 29, 21, 58, 22, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 29, 21, 58, 22, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.January, 29, 21, 58, 22, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 29, 21, 58, 22, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jan 29 21:58:36.177: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.January, 29, 21, 58, 22, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 29, 21, 58, 22, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.January, 29, 21, 58, 22, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 29, 21, 58, 22, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jan 29 21:58:38.177: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.January, 29, 21, 58, 22, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 29, 21, 58, 22, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.January, 29, 21, 58, 22, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 29, 21, 58, 22, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jan 29 21:58:40.177: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.January, 29, 21, 58, 22, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 29, 21, 58, 22, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.January, 29, 21, 58, 22, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 29, 21, 58, 22, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jan 29 21:58:42.177: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.January, 29, 21, 58, 22, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 29, 21, 58, 22, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.January, 29, 21, 58, 22, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 29, 21, 58, 22, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jan 29 21:58:44.176: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.January, 29, 21, 58, 22, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 29, 21, 58, 22, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.January, 29, 21, 58, 22, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 29, 21, 58, 22, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jan 29 21:58:46.178: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.January, 29, 21, 58, 22, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 29, 21, 58, 22, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.January, 29, 21, 58, 22, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 29, 21, 58, 22, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jan 29 21:58:48.308: INFO: Waited 119.413405ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 01/29/24 21:58:48.372
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 01/29/24 21:58:48.377
  STEP: List APIServices @ 01/29/24 21:58:48.39
  Jan 29 21:58:48.397: INFO: Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 01/29/24 21:58:48.397
  Jan 29 21:58:48.413: INFO: APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 01/29/24 21:58:48.413
  Jan 29 21:58:48.425: INFO: updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2024, time.January, 29, 21, 58, 48, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 01/29/24 21:58:48.425
  Jan 29 21:58:48.431: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2024-01-29 21:58:48 +0000 UTC Passed all checks passed}
  Jan 29 21:58:48.431: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Jan 29 21:58:48.431: INFO: Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 01/29/24 21:58:48.431
  Jan 29 21:58:48.441: INFO: Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete APIService "dynamic-flunder-199920141" @ 01/29/24 21:58:48.441
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 01/29/24 21:58:48.456
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 01/29/24 21:58:48.467
  STEP: Patch APIService Status @ 01/29/24 21:58:48.473
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 01/29/24 21:58:48.48
  Jan 29 21:58:48.484: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2024-01-29 21:58:48 +0000 UTC Passed all checks passed}
  Jan 29 21:58:48.485: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Jan 29 21:58:48.485: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  Jan 29 21:58:48.485: INFO: Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "e2e-apiservice=patched" @ 01/29/24 21:58:48.486
  STEP: Confirm that the generated APIService has been deleted @ 01/29/24 21:58:48.492
  Jan 29 21:58:48.492: INFO: Requesting list of APIServices to confirm quantity
  Jan 29 21:58:48.496: INFO: Found 0 APIService with label "e2e-apiservice=patched"
  Jan 29 21:58:48.496: INFO: APIService v1alpha1.wardle.example.com has been deleted.
  Jan 29 21:58:48.556: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-2960" for this suite. @ 01/29/24 21:58:48.595
• [27.023 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance]
test/e2e/apimachinery/webhook.go:199
  STEP: Creating a kubernetes client @ 01/29/24 21:58:48.603
  Jan 29 21:58:48.603: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename webhook @ 01/29/24 21:58:48.605
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:58:48.618
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:58:48.623
  STEP: Setting up server cert @ 01/29/24 21:58:48.644
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/29/24 21:58:49.694
  STEP: Deploying the webhook pod @ 01/29/24 21:58:49.7
  STEP: Wait for the deployment to be ready @ 01/29/24 21:58:49.714
  Jan 29 21:58:49.720: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 01/29/24 21:58:51.735
  STEP: Verifying the service has paired with the endpoint @ 01/29/24 21:58:51.752
  Jan 29 21:58:52.753: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 01/29/24 21:58:52.763
  STEP: create a pod that should be denied by the webhook @ 01/29/24 21:58:52.791
  STEP: create a pod that causes the webhook to hang @ 01/29/24 21:58:52.812
  STEP: create a configmap that should be denied by the webhook @ 01/29/24 21:59:02.822
  STEP: create a configmap that should be admitted by the webhook @ 01/29/24 21:59:02.855
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 01/29/24 21:59:02.87
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 01/29/24 21:59:02.88
  STEP: create a namespace that bypass the webhook @ 01/29/24 21:59:02.886
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 01/29/24 21:59:02.898
  Jan 29 21:59:02.912: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7523" for this suite. @ 01/29/24 21:59:02.957
  STEP: Destroying namespace "webhook-markers-4892" for this suite. @ 01/29/24 21:59:02.966
  STEP: Destroying namespace "exempted-namespace-6605" for this suite. @ 01/29/24 21:59:02.971
• [14.374 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance]
test/e2e/apimachinery/garbage_collector.go:379
  STEP: Creating a kubernetes client @ 01/29/24 21:59:02.979
  Jan 29 21:59:02.979: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename gc @ 01/29/24 21:59:02.98
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:59:02.995
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:59:02.999
  STEP: create the rc @ 01/29/24 21:59:03.007
  W0129 21:59:03.012726      23 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 01/29/24 21:59:09.02
  STEP: wait for the rc to be deleted @ 01/29/24 21:59:09.033
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 01/29/24 21:59:14.039
  STEP: Gathering metrics @ 01/29/24 21:59:44.062
  Jan 29 21:59:44.212: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Jan 29 21:59:44.212: INFO: Deleting pod "simpletest.rc-22q6v" in namespace "gc-3187"
  Jan 29 21:59:44.224: INFO: Deleting pod "simpletest.rc-27n66" in namespace "gc-3187"
  Jan 29 21:59:44.234: INFO: Deleting pod "simpletest.rc-2n5m6" in namespace "gc-3187"
  Jan 29 21:59:44.243: INFO: Deleting pod "simpletest.rc-2nc5d" in namespace "gc-3187"
  Jan 29 21:59:44.254: INFO: Deleting pod "simpletest.rc-2t88l" in namespace "gc-3187"
  Jan 29 21:59:44.262: INFO: Deleting pod "simpletest.rc-2xjk2" in namespace "gc-3187"
  Jan 29 21:59:44.273: INFO: Deleting pod "simpletest.rc-4jxcm" in namespace "gc-3187"
  Jan 29 21:59:44.281: INFO: Deleting pod "simpletest.rc-58thq" in namespace "gc-3187"
  Jan 29 21:59:44.292: INFO: Deleting pod "simpletest.rc-5jfnj" in namespace "gc-3187"
  Jan 29 21:59:44.303: INFO: Deleting pod "simpletest.rc-66k5q" in namespace "gc-3187"
  Jan 29 21:59:44.311: INFO: Deleting pod "simpletest.rc-66n4b" in namespace "gc-3187"
  Jan 29 21:59:44.320: INFO: Deleting pod "simpletest.rc-67zq2" in namespace "gc-3187"
  Jan 29 21:59:44.328: INFO: Deleting pod "simpletest.rc-68j7x" in namespace "gc-3187"
  Jan 29 21:59:44.340: INFO: Deleting pod "simpletest.rc-6jllq" in namespace "gc-3187"
  Jan 29 21:59:44.354: INFO: Deleting pod "simpletest.rc-6q2hn" in namespace "gc-3187"
  Jan 29 21:59:44.362: INFO: Deleting pod "simpletest.rc-6zvcz" in namespace "gc-3187"
  Jan 29 21:59:44.370: INFO: Deleting pod "simpletest.rc-76qkg" in namespace "gc-3187"
  Jan 29 21:59:44.378: INFO: Deleting pod "simpletest.rc-799wh" in namespace "gc-3187"
  Jan 29 21:59:44.388: INFO: Deleting pod "simpletest.rc-7c74q" in namespace "gc-3187"
  Jan 29 21:59:44.397: INFO: Deleting pod "simpletest.rc-7cf7w" in namespace "gc-3187"
  Jan 29 21:59:44.405: INFO: Deleting pod "simpletest.rc-7nj9p" in namespace "gc-3187"
  Jan 29 21:59:44.415: INFO: Deleting pod "simpletest.rc-7tpvs" in namespace "gc-3187"
  Jan 29 21:59:44.427: INFO: Deleting pod "simpletest.rc-7vbr9" in namespace "gc-3187"
  Jan 29 21:59:44.435: INFO: Deleting pod "simpletest.rc-85m5v" in namespace "gc-3187"
  Jan 29 21:59:44.444: INFO: Deleting pod "simpletest.rc-86vjt" in namespace "gc-3187"
  Jan 29 21:59:44.452: INFO: Deleting pod "simpletest.rc-87wr4" in namespace "gc-3187"
  Jan 29 21:59:44.462: INFO: Deleting pod "simpletest.rc-8kf97" in namespace "gc-3187"
  Jan 29 21:59:44.482: INFO: Deleting pod "simpletest.rc-8s5vg" in namespace "gc-3187"
  Jan 29 21:59:44.516: INFO: Deleting pod "simpletest.rc-8w6x2" in namespace "gc-3187"
  Jan 29 21:59:44.525: INFO: Deleting pod "simpletest.rc-9qjjv" in namespace "gc-3187"
  Jan 29 21:59:44.534: INFO: Deleting pod "simpletest.rc-b5r7r" in namespace "gc-3187"
  Jan 29 21:59:44.546: INFO: Deleting pod "simpletest.rc-c9sz5" in namespace "gc-3187"
  Jan 29 21:59:44.554: INFO: Deleting pod "simpletest.rc-ccdst" in namespace "gc-3187"
  Jan 29 21:59:44.562: INFO: Deleting pod "simpletest.rc-cprx9" in namespace "gc-3187"
  Jan 29 21:59:44.573: INFO: Deleting pod "simpletest.rc-dhbd4" in namespace "gc-3187"
  Jan 29 21:59:44.581: INFO: Deleting pod "simpletest.rc-djnnz" in namespace "gc-3187"
  Jan 29 21:59:44.595: INFO: Deleting pod "simpletest.rc-dnn7t" in namespace "gc-3187"
  Jan 29 21:59:44.606: INFO: Deleting pod "simpletest.rc-f5wxf" in namespace "gc-3187"
  Jan 29 21:59:44.615: INFO: Deleting pod "simpletest.rc-fkdzk" in namespace "gc-3187"
  Jan 29 21:59:44.624: INFO: Deleting pod "simpletest.rc-fsggr" in namespace "gc-3187"
  Jan 29 21:59:44.632: INFO: Deleting pod "simpletest.rc-g2v59" in namespace "gc-3187"
  Jan 29 21:59:44.645: INFO: Deleting pod "simpletest.rc-g499c" in namespace "gc-3187"
  Jan 29 21:59:44.656: INFO: Deleting pod "simpletest.rc-gfhjh" in namespace "gc-3187"
  Jan 29 21:59:44.670: INFO: Deleting pod "simpletest.rc-ghzj7" in namespace "gc-3187"
  Jan 29 21:59:44.678: INFO: Deleting pod "simpletest.rc-gjnvs" in namespace "gc-3187"
  Jan 29 21:59:44.687: INFO: Deleting pod "simpletest.rc-gljzc" in namespace "gc-3187"
  Jan 29 21:59:44.694: INFO: Deleting pod "simpletest.rc-grkl2" in namespace "gc-3187"
  Jan 29 21:59:44.704: INFO: Deleting pod "simpletest.rc-gtxsf" in namespace "gc-3187"
  Jan 29 21:59:44.711: INFO: Deleting pod "simpletest.rc-hlwmv" in namespace "gc-3187"
  Jan 29 21:59:44.721: INFO: Deleting pod "simpletest.rc-hqrw6" in namespace "gc-3187"
  Jan 29 21:59:44.731: INFO: Deleting pod "simpletest.rc-hqzxr" in namespace "gc-3187"
  Jan 29 21:59:44.741: INFO: Deleting pod "simpletest.rc-jr85x" in namespace "gc-3187"
  Jan 29 21:59:44.750: INFO: Deleting pod "simpletest.rc-k7vcx" in namespace "gc-3187"
  Jan 29 21:59:44.762: INFO: Deleting pod "simpletest.rc-k8q4m" in namespace "gc-3187"
  Jan 29 21:59:44.770: INFO: Deleting pod "simpletest.rc-kpsgh" in namespace "gc-3187"
  Jan 29 21:59:44.781: INFO: Deleting pod "simpletest.rc-krrl4" in namespace "gc-3187"
  Jan 29 21:59:44.792: INFO: Deleting pod "simpletest.rc-ktxnn" in namespace "gc-3187"
  Jan 29 21:59:44.799: INFO: Deleting pod "simpletest.rc-kxtm7" in namespace "gc-3187"
  Jan 29 21:59:44.810: INFO: Deleting pod "simpletest.rc-llzjc" in namespace "gc-3187"
  Jan 29 21:59:44.818: INFO: Deleting pod "simpletest.rc-lt2pp" in namespace "gc-3187"
  Jan 29 21:59:44.826: INFO: Deleting pod "simpletest.rc-m9885" in namespace "gc-3187"
  Jan 29 21:59:44.835: INFO: Deleting pod "simpletest.rc-mgkh5" in namespace "gc-3187"
  Jan 29 21:59:44.849: INFO: Deleting pod "simpletest.rc-mj9lg" in namespace "gc-3187"
  Jan 29 21:59:44.902: INFO: Deleting pod "simpletest.rc-ms2ch" in namespace "gc-3187"
  Jan 29 21:59:44.950: INFO: Deleting pod "simpletest.rc-nx8kl" in namespace "gc-3187"
  Jan 29 21:59:45.002: INFO: Deleting pod "simpletest.rc-pqk8p" in namespace "gc-3187"
  Jan 29 21:59:45.049: INFO: Deleting pod "simpletest.rc-psn7v" in namespace "gc-3187"
  Jan 29 21:59:45.100: INFO: Deleting pod "simpletest.rc-pt5tq" in namespace "gc-3187"
  Jan 29 21:59:45.152: INFO: Deleting pod "simpletest.rc-qbz7s" in namespace "gc-3187"
  Jan 29 21:59:45.200: INFO: Deleting pod "simpletest.rc-qg256" in namespace "gc-3187"
  Jan 29 21:59:45.254: INFO: Deleting pod "simpletest.rc-qg6nt" in namespace "gc-3187"
  Jan 29 21:59:45.306: INFO: Deleting pod "simpletest.rc-qhbfn" in namespace "gc-3187"
  Jan 29 21:59:45.352: INFO: Deleting pod "simpletest.rc-qjn6k" in namespace "gc-3187"
  Jan 29 21:59:45.401: INFO: Deleting pod "simpletest.rc-qpw7n" in namespace "gc-3187"
  Jan 29 21:59:45.453: INFO: Deleting pod "simpletest.rc-qr8dw" in namespace "gc-3187"
  Jan 29 21:59:45.509: INFO: Deleting pod "simpletest.rc-r68xz" in namespace "gc-3187"
  Jan 29 21:59:45.552: INFO: Deleting pod "simpletest.rc-r97tj" in namespace "gc-3187"
  Jan 29 21:59:45.602: INFO: Deleting pod "simpletest.rc-rb2m8" in namespace "gc-3187"
  Jan 29 21:59:45.649: INFO: Deleting pod "simpletest.rc-rb85l" in namespace "gc-3187"
  Jan 29 21:59:45.704: INFO: Deleting pod "simpletest.rc-rx8j6" in namespace "gc-3187"
  Jan 29 21:59:45.751: INFO: Deleting pod "simpletest.rc-scsb8" in namespace "gc-3187"
  Jan 29 21:59:45.803: INFO: Deleting pod "simpletest.rc-ssscn" in namespace "gc-3187"
  Jan 29 21:59:45.854: INFO: Deleting pod "simpletest.rc-t67mf" in namespace "gc-3187"
  Jan 29 21:59:45.903: INFO: Deleting pod "simpletest.rc-tccw2" in namespace "gc-3187"
  Jan 29 21:59:45.953: INFO: Deleting pod "simpletest.rc-tghxf" in namespace "gc-3187"
  Jan 29 21:59:46.001: INFO: Deleting pod "simpletest.rc-vvqjd" in namespace "gc-3187"
  Jan 29 21:59:46.050: INFO: Deleting pod "simpletest.rc-vxzkm" in namespace "gc-3187"
  Jan 29 21:59:46.101: INFO: Deleting pod "simpletest.rc-w7zbf" in namespace "gc-3187"
  Jan 29 21:59:46.154: INFO: Deleting pod "simpletest.rc-wbwjh" in namespace "gc-3187"
  Jan 29 21:59:46.204: INFO: Deleting pod "simpletest.rc-wbxsq" in namespace "gc-3187"
  Jan 29 21:59:46.252: INFO: Deleting pod "simpletest.rc-wd8lb" in namespace "gc-3187"
  Jan 29 21:59:46.309: INFO: Deleting pod "simpletest.rc-wf872" in namespace "gc-3187"
  Jan 29 21:59:46.353: INFO: Deleting pod "simpletest.rc-wmckk" in namespace "gc-3187"
  Jan 29 21:59:46.403: INFO: Deleting pod "simpletest.rc-wwbcv" in namespace "gc-3187"
  Jan 29 21:59:46.450: INFO: Deleting pod "simpletest.rc-wz6gn" in namespace "gc-3187"
  Jan 29 21:59:46.505: INFO: Deleting pod "simpletest.rc-x56zx" in namespace "gc-3187"
  Jan 29 21:59:46.550: INFO: Deleting pod "simpletest.rc-xbwhn" in namespace "gc-3187"
  Jan 29 21:59:46.599: INFO: Deleting pod "simpletest.rc-zhrg7" in namespace "gc-3187"
  Jan 29 21:59:46.649: INFO: Deleting pod "simpletest.rc-zkq5t" in namespace "gc-3187"
  Jan 29 21:59:46.701: INFO: Deleting pod "simpletest.rc-zzzv2" in namespace "gc-3187"
  Jan 29 21:59:46.750: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-3187" for this suite. @ 01/29/24 21:59:46.8
• [43.868 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:117
  STEP: Creating a kubernetes client @ 01/29/24 21:59:46.848
  Jan 29 21:59:46.848: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename emptydir @ 01/29/24 21:59:46.849
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:59:46.861
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:59:46.864
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 01/29/24 21:59:46.869
  STEP: Saw pod success @ 01/29/24 21:59:50.892
  Jan 29 21:59:50.896: INFO: Trying to get logs from node nodeb14 pod pod-16fca69f-c00d-48ad-99cd-11a3c07ef84a container test-container: <nil>
  STEP: delete the pod @ 01/29/24 21:59:50.929
  Jan 29 21:59:50.944: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3007" for this suite. @ 01/29/24 21:59:50.95
• [4.108 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance]
test/e2e/network/ingress.go:556
  STEP: Creating a kubernetes client @ 01/29/24 21:59:50.957
  Jan 29 21:59:50.957: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename ingress @ 01/29/24 21:59:50.959
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:59:50.972
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:59:50.976
  STEP: getting /apis @ 01/29/24 21:59:50.98
  STEP: getting /apis/networking.k8s.io @ 01/29/24 21:59:50.986
  STEP: getting /apis/networking.k8s.iov1 @ 01/29/24 21:59:50.988
  STEP: creating @ 01/29/24 21:59:50.99
  STEP: getting @ 01/29/24 21:59:51.005
  STEP: listing @ 01/29/24 21:59:51.008
  STEP: watching @ 01/29/24 21:59:51.012
  Jan 29 21:59:51.012: INFO: starting watch
  STEP: cluster-wide listing @ 01/29/24 21:59:51.014
  STEP: cluster-wide watching @ 01/29/24 21:59:51.018
  Jan 29 21:59:51.018: INFO: starting watch
  STEP: patching @ 01/29/24 21:59:51.02
  STEP: updating @ 01/29/24 21:59:51.027
  Jan 29 21:59:51.036: INFO: waiting for watch events with expected annotations
  Jan 29 21:59:51.036: INFO: saw patched and updated annotations
  STEP: patching /status @ 01/29/24 21:59:51.036
  STEP: updating /status @ 01/29/24 21:59:51.042
  STEP: get /status @ 01/29/24 21:59:51.051
  STEP: deleting @ 01/29/24 21:59:51.054
  STEP: deleting a collection @ 01/29/24 21:59:51.065
  Jan 29 21:59:51.079: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-6640" for this suite. @ 01/29/24 21:59:51.084
• [0.135 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance]
test/e2e/apps/daemon_set.go:836
  STEP: Creating a kubernetes client @ 01/29/24 21:59:51.094
  Jan 29 21:59:51.094: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename daemonsets @ 01/29/24 21:59:51.096
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:59:51.108
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:59:51.112
  STEP: Creating simple DaemonSet "daemon-set" @ 01/29/24 21:59:51.132
  STEP: Check that daemon pods launch on every node of the cluster. @ 01/29/24 21:59:51.137
  Jan 29 21:59:51.141: INFO: DaemonSet pods can't tolerate node nodeb08 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jan 29 21:59:51.144: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jan 29 21:59:51.144: INFO: Node nodeb14 is running 0 daemon pod, expected 1
  Jan 29 21:59:52.149: INFO: DaemonSet pods can't tolerate node nodeb08 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jan 29 21:59:52.153: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jan 29 21:59:52.153: INFO: Node nodeb14 is running 0 daemon pod, expected 1
  Jan 29 21:59:53.152: INFO: DaemonSet pods can't tolerate node nodeb08 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jan 29 21:59:53.157: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jan 29 21:59:53.157: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: listing all DaemonSets @ 01/29/24 21:59:53.161
  STEP: DeleteCollection of the DaemonSets @ 01/29/24 21:59:53.165
  STEP: Verify that ReplicaSets have been deleted @ 01/29/24 21:59:53.171
  Jan 29 21:59:53.180: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"21158"},"items":null}

  Jan 29 21:59:53.184: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"21159"},"items":[{"metadata":{"name":"daemon-set-4s844","generateName":"daemon-set-","namespace":"daemonsets-6544","uid":"2e2edce6-9754-4488-8385-41f0e20b9602","resourceVersion":"21045","creationTimestamp":"2024-01-29T21:59:51Z","labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"ffb33e9d-b6bc-4dbb-bffa-202fcca29dda","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-01-29T21:59:51Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"ffb33e9d-b6bc-4dbb-bffa-202fcca29dda\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-01-29T21:59:52Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.2.71\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-ztmvd","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-ztmvd","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"nodeb14","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["nodeb14"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-01-29T21:59:51Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-01-29T21:59:52Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-01-29T21:59:52Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-01-29T21:59:51Z"}],"hostIP":"192.168.100.114","podIP":"10.244.2.71","podIPs":[{"ip":"10.244.2.71"}],"startTime":"2024-01-29T21:59:51Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-01-29T21:59:51Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://18b0e82a5ffb4269bfa153f871725a0c838db70a131abc86a40575833c8d83ab","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-szds8","generateName":"daemon-set-","namespace":"daemonsets-6544","uid":"b3c4bb7f-da97-48cd-9c9a-49b7d65384d7","resourceVersion":"20883","creationTimestamp":"2024-01-29T21:59:51Z","labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"ffb33e9d-b6bc-4dbb-bffa-202fcca29dda","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-01-29T21:59:51Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"ffb33e9d-b6bc-4dbb-bffa-202fcca29dda\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-01-29T21:59:52Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.1.134\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-wg5mj","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-wg5mj","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"nodec03","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["nodec03"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-01-29T21:59:51Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-01-29T21:59:52Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-01-29T21:59:52Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-01-29T21:59:51Z"}],"hostIP":"192.168.100.173","podIP":"10.244.1.134","podIPs":[{"ip":"10.244.1.134"}],"startTime":"2024-01-29T21:59:51Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-01-29T21:59:51Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://1b1f7ebf82835e15ba9fd7a7f2a7132348f666e1c928ff21012036247dbff008","started":true}],"qosClass":"BestEffort"}}]}

  Jan 29 21:59:53.196: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-6544" for this suite. @ 01/29/24 21:59:53.201
• [2.113 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance]
test/e2e/common/node/expansion.go:228
  STEP: Creating a kubernetes client @ 01/29/24 21:59:53.21
  Jan 29 21:59:53.210: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename var-expansion @ 01/29/24 21:59:53.213
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 21:59:53.226
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 21:59:53.231
  STEP: creating the pod with failed condition @ 01/29/24 21:59:53.237
  STEP: updating the pod @ 01/29/24 22:01:53.249
  Jan 29 22:01:53.767: INFO: Successfully updated pod "var-expansion-8e779812-8e1c-46ed-aaab-2ebbfc27e546"
  STEP: waiting for pod running @ 01/29/24 22:01:53.767
  STEP: deleting the pod gracefully @ 01/29/24 22:01:55.776
  Jan 29 22:01:55.776: INFO: Deleting pod "var-expansion-8e779812-8e1c-46ed-aaab-2ebbfc27e546" in namespace "var-expansion-9902"
  Jan 29 22:01:55.785: INFO: Wait up to 5m0s for pod "var-expansion-8e779812-8e1c-46ed-aaab-2ebbfc27e546" to be fully deleted
  Jan 29 22:02:27.902: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9902" for this suite. @ 01/29/24 22:02:27.907
• [154.705 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:74
  STEP: Creating a kubernetes client @ 01/29/24 22:02:27.917
  Jan 29 22:02:27.917: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename configmap @ 01/29/24 22:02:27.919
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:02:27.935
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:02:27.94
  STEP: Creating configMap with name configmap-test-volume-677f7680-48f7-4301-a2f0-f4e61eda919c @ 01/29/24 22:02:27.944
  STEP: Creating a pod to test consume configMaps @ 01/29/24 22:02:27.951
  STEP: Saw pod success @ 01/29/24 22:02:31.978
  Jan 29 22:02:31.982: INFO: Trying to get logs from node nodeb14 pod pod-configmaps-0d03ad9c-eabc-47d5-b000-5232cf51f9d6 container agnhost-container: <nil>
  STEP: delete the pod @ 01/29/24 22:02:32.008
  Jan 29 22:02:32.028: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8449" for this suite. @ 01/29/24 22:02:32.034
• [4.122 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller  [Conformance]
test/e2e/kubectl/kubectl.go:354
  STEP: Creating a kubernetes client @ 01/29/24 22:02:32.04
  Jan 29 22:02:32.040: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename kubectl @ 01/29/24 22:02:32.042
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:02:32.056
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:02:32.062
  STEP: creating a replication controller @ 01/29/24 22:02:32.068
  Jan 29 22:02:32.068: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=kubectl-5664 create -f -'
  Jan 29 22:02:32.834: INFO: stderr: ""
  Jan 29 22:02:32.834: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 01/29/24 22:02:32.834
  Jan 29 22:02:32.834: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=kubectl-5664 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jan 29 22:02:32.936: INFO: stderr: ""
  Jan 29 22:02:32.937: INFO: stdout: "update-demo-nautilus-4jx5b update-demo-nautilus-xm6bc "
  Jan 29 22:02:32.937: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=kubectl-5664 get pods update-demo-nautilus-4jx5b -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jan 29 22:02:33.033: INFO: stderr: ""
  Jan 29 22:02:33.033: INFO: stdout: ""
  Jan 29 22:02:33.033: INFO: update-demo-nautilus-4jx5b is created but not running
  Jan 29 22:02:38.034: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=kubectl-5664 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jan 29 22:02:38.148: INFO: stderr: ""
  Jan 29 22:02:38.148: INFO: stdout: "update-demo-nautilus-4jx5b update-demo-nautilus-xm6bc "
  Jan 29 22:02:38.148: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=kubectl-5664 get pods update-demo-nautilus-4jx5b -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jan 29 22:02:38.254: INFO: stderr: ""
  Jan 29 22:02:38.254: INFO: stdout: ""
  Jan 29 22:02:38.254: INFO: update-demo-nautilus-4jx5b is created but not running
  Jan 29 22:02:43.259: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=kubectl-5664 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jan 29 22:02:43.381: INFO: stderr: ""
  Jan 29 22:02:43.381: INFO: stdout: "update-demo-nautilus-4jx5b update-demo-nautilus-xm6bc "
  Jan 29 22:02:43.381: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=kubectl-5664 get pods update-demo-nautilus-4jx5b -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jan 29 22:02:43.483: INFO: stderr: ""
  Jan 29 22:02:43.483: INFO: stdout: "true"
  Jan 29 22:02:43.483: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=kubectl-5664 get pods update-demo-nautilus-4jx5b -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jan 29 22:02:43.578: INFO: stderr: ""
  Jan 29 22:02:43.579: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jan 29 22:02:43.579: INFO: validating pod update-demo-nautilus-4jx5b
  Jan 29 22:02:43.585: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jan 29 22:02:43.585: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jan 29 22:02:43.585: INFO: update-demo-nautilus-4jx5b is verified up and running
  Jan 29 22:02:43.586: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=kubectl-5664 get pods update-demo-nautilus-xm6bc -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jan 29 22:02:43.688: INFO: stderr: ""
  Jan 29 22:02:43.688: INFO: stdout: "true"
  Jan 29 22:02:43.688: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=kubectl-5664 get pods update-demo-nautilus-xm6bc -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jan 29 22:02:43.796: INFO: stderr: ""
  Jan 29 22:02:43.796: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jan 29 22:02:43.796: INFO: validating pod update-demo-nautilus-xm6bc
  Jan 29 22:02:43.804: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jan 29 22:02:43.804: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jan 29 22:02:43.804: INFO: update-demo-nautilus-xm6bc is verified up and running
  STEP: scaling down the replication controller @ 01/29/24 22:02:43.804
  Jan 29 22:02:43.808: INFO: scanned /root for discovery docs: <nil>
  Jan 29 22:02:43.808: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=kubectl-5664 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  Jan 29 22:02:44.929: INFO: stderr: ""
  Jan 29 22:02:44.929: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 01/29/24 22:02:44.929
  Jan 29 22:02:44.930: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=kubectl-5664 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jan 29 22:02:45.037: INFO: stderr: ""
  Jan 29 22:02:45.037: INFO: stdout: "update-demo-nautilus-4jx5b update-demo-nautilus-xm6bc "
  STEP: Replicas for name=update-demo: expected=1 actual=2 @ 01/29/24 22:02:45.037
  Jan 29 22:02:50.038: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=kubectl-5664 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jan 29 22:02:50.144: INFO: stderr: ""
  Jan 29 22:02:50.144: INFO: stdout: "update-demo-nautilus-xm6bc "
  Jan 29 22:02:50.144: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=kubectl-5664 get pods update-demo-nautilus-xm6bc -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jan 29 22:02:50.241: INFO: stderr: ""
  Jan 29 22:02:50.241: INFO: stdout: "true"
  Jan 29 22:02:50.241: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=kubectl-5664 get pods update-demo-nautilus-xm6bc -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jan 29 22:02:50.340: INFO: stderr: ""
  Jan 29 22:02:50.340: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jan 29 22:02:50.340: INFO: validating pod update-demo-nautilus-xm6bc
  Jan 29 22:02:50.344: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jan 29 22:02:50.344: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jan 29 22:02:50.344: INFO: update-demo-nautilus-xm6bc is verified up and running
  STEP: scaling up the replication controller @ 01/29/24 22:02:50.344
  Jan 29 22:02:50.347: INFO: scanned /root for discovery docs: <nil>
  Jan 29 22:02:50.347: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=kubectl-5664 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  Jan 29 22:02:51.472: INFO: stderr: ""
  Jan 29 22:02:51.472: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 01/29/24 22:02:51.472
  Jan 29 22:02:51.472: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=kubectl-5664 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jan 29 22:02:51.580: INFO: stderr: ""
  Jan 29 22:02:51.580: INFO: stdout: "update-demo-nautilus-wwp7w update-demo-nautilus-xm6bc "
  Jan 29 22:02:51.580: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=kubectl-5664 get pods update-demo-nautilus-wwp7w -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jan 29 22:02:51.681: INFO: stderr: ""
  Jan 29 22:02:51.681: INFO: stdout: "true"
  Jan 29 22:02:51.681: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=kubectl-5664 get pods update-demo-nautilus-wwp7w -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jan 29 22:02:51.775: INFO: stderr: ""
  Jan 29 22:02:51.775: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jan 29 22:02:51.775: INFO: validating pod update-demo-nautilus-wwp7w
  Jan 29 22:02:51.782: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jan 29 22:02:51.782: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jan 29 22:02:51.782: INFO: update-demo-nautilus-wwp7w is verified up and running
  Jan 29 22:02:51.782: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=kubectl-5664 get pods update-demo-nautilus-xm6bc -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jan 29 22:02:51.884: INFO: stderr: ""
  Jan 29 22:02:51.884: INFO: stdout: "true"
  Jan 29 22:02:51.884: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=kubectl-5664 get pods update-demo-nautilus-xm6bc -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jan 29 22:02:51.984: INFO: stderr: ""
  Jan 29 22:02:51.984: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jan 29 22:02:51.984: INFO: validating pod update-demo-nautilus-xm6bc
  Jan 29 22:02:51.989: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jan 29 22:02:51.989: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jan 29 22:02:51.989: INFO: update-demo-nautilus-xm6bc is verified up and running
  STEP: using delete to clean up resources @ 01/29/24 22:02:51.989
  Jan 29 22:02:51.989: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=kubectl-5664 delete --grace-period=0 --force -f -'
  Jan 29 22:02:52.088: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jan 29 22:02:52.088: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  Jan 29 22:02:52.088: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=kubectl-5664 get rc,svc -l name=update-demo --no-headers'
  Jan 29 22:02:52.193: INFO: stderr: "No resources found in kubectl-5664 namespace.\n"
  Jan 29 22:02:52.193: INFO: stdout: ""
  Jan 29 22:02:52.193: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=kubectl-5664 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Jan 29 22:02:52.308: INFO: stderr: ""
  Jan 29 22:02:52.308: INFO: stdout: ""
  Jan 29 22:02:52.308: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5664" for this suite. @ 01/29/24 22:02:52.314
• [20.280 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance]
test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 01/29/24 22:02:52.32
  Jan 29 22:02:52.320: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename init-container @ 01/29/24 22:02:52.321
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:02:52.336
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:02:52.34
  STEP: creating the pod @ 01/29/24 22:02:52.345
  Jan 29 22:02:52.345: INFO: PodSpec: initContainers in spec.initContainers
  Jan 29 22:02:56.687: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-3627" for this suite. @ 01/29/24 22:02:56.698
• [4.385 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works  [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:85
  STEP: Creating a kubernetes client @ 01/29/24 22:02:56.705
  Jan 29 22:02:56.705: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename custom-resource-definition @ 01/29/24 22:02:56.707
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:02:56.721
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:02:56.725
  Jan 29 22:02:56.730: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  Jan 29 22:03:02.976: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-3904" for this suite. @ 01/29/24 22:03:02.984
• [6.285 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance]
test/e2e/apps/statefulset.go:318
  STEP: Creating a kubernetes client @ 01/29/24 22:03:02.993
  Jan 29 22:03:02.993: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename statefulset @ 01/29/24 22:03:02.995
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:03:03.009
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:03:03.013
  STEP: Creating service test in namespace statefulset-9251 @ 01/29/24 22:03:03.018
  STEP: Creating a new StatefulSet @ 01/29/24 22:03:03.024
  Jan 29 22:03:03.034: INFO: Found 0 stateful pods, waiting for 3
  Jan 29 22:03:13.045: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Jan 29 22:03:13.045: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Jan 29 22:03:13.045: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  Jan 29 22:03:13.057: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=statefulset-9251 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jan 29 22:03:13.293: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jan 29 22:03:13.293: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jan 29 22:03:13.293: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 01/29/24 22:03:23.32
  Jan 29 22:03:23.344: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 01/29/24 22:03:23.345
  STEP: Updating Pods in reverse ordinal order @ 01/29/24 22:03:33.366
  Jan 29 22:03:33.371: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=statefulset-9251 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jan 29 22:03:33.580: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jan 29 22:03:33.580: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jan 29 22:03:33.580: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  STEP: Rolling back to a previous revision @ 01/29/24 22:03:43.609
  Jan 29 22:03:43.609: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=statefulset-9251 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jan 29 22:03:43.817: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jan 29 22:03:43.817: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jan 29 22:03:43.817: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jan 29 22:03:53.861: INFO: Updating stateful set ss2
  STEP: Rolling back update in reverse ordinal order @ 01/29/24 22:04:03.88
  Jan 29 22:04:03.884: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=statefulset-9251 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jan 29 22:04:04.111: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jan 29 22:04:04.111: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jan 29 22:04:04.111: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jan 29 22:04:14.138: INFO: Deleting all statefulset in ns statefulset-9251
  Jan 29 22:04:14.142: INFO: Scaling statefulset ss2 to 0
  Jan 29 22:04:24.163: INFO: Waiting for statefulset status.replicas updated to 0
  Jan 29 22:04:24.166: INFO: Deleting statefulset ss2
  Jan 29 22:04:24.179: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-9251" for this suite. @ 01/29/24 22:04:24.186
• [81.202 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should patch a secret [Conformance]
test/e2e/common/node/secrets.go:154
  STEP: Creating a kubernetes client @ 01/29/24 22:04:24.196
  Jan 29 22:04:24.196: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename secrets @ 01/29/24 22:04:24.198
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:04:24.21
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:04:24.214
  STEP: creating a secret @ 01/29/24 22:04:24.218
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 01/29/24 22:04:24.223
  STEP: patching the secret @ 01/29/24 22:04:24.227
  STEP: deleting the secret using a LabelSelector @ 01/29/24 22:04:24.236
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 01/29/24 22:04:24.242
  Jan 29 22:04:24.246: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7807" for this suite. @ 01/29/24 22:04:24.25
• [0.060 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance]
test/e2e/auth/service_accounts.go:808
  STEP: Creating a kubernetes client @ 01/29/24 22:04:24.257
  Jan 29 22:04:24.257: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename svcaccounts @ 01/29/24 22:04:24.258
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:04:24.271
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:04:24.276
  STEP: Creating ServiceAccount "e2e-sa-vt8ds"  @ 01/29/24 22:04:24.281
  Jan 29 22:04:24.286: INFO: AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-vt8ds"  @ 01/29/24 22:04:24.286
  Jan 29 22:04:24.298: INFO: AutomountServiceAccountToken: true
  Jan 29 22:04:24.298: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-660" for this suite. @ 01/29/24 22:04:24.302
• [0.051 seconds]
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:54
  STEP: Creating a kubernetes client @ 01/29/24 22:04:24.308
  Jan 29 22:04:24.308: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename projected @ 01/29/24 22:04:24.31
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:04:24.324
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:04:24.328
  STEP: Creating a pod to test downward API volume plugin @ 01/29/24 22:04:24.335
  STEP: Saw pod success @ 01/29/24 22:04:28.363
  Jan 29 22:04:28.367: INFO: Trying to get logs from node nodeb14 pod downwardapi-volume-17304ebc-a44e-46bb-a777-0f2e646f451e container client-container: <nil>
  STEP: delete the pod @ 01/29/24 22:04:28.394
  Jan 29 22:04:28.410: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2726" for this suite. @ 01/29/24 22:04:28.418
• [4.114 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Conformance]
test/e2e/common/node/sysctl.go:77
  STEP: Creating a kubernetes client @ 01/29/24 22:04:28.423
  Jan 29 22:04:28.423: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename sysctl @ 01/29/24 22:04:28.424
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:04:28.437
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:04:28.442
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 01/29/24 22:04:28.447
  STEP: Watching for error events or started pod @ 01/29/24 22:04:28.455
  STEP: Waiting for pod completion @ 01/29/24 22:04:30.46
  STEP: Checking that the pod succeeded @ 01/29/24 22:04:32.472
  STEP: Getting logs from the pod @ 01/29/24 22:04:32.472
  STEP: Checking that the sysctl is actually updated @ 01/29/24 22:04:32.484
  Jan 29 22:04:32.484: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-5767" for this suite. @ 01/29/24 22:04:32.49
• [4.078 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:168
  STEP: Creating a kubernetes client @ 01/29/24 22:04:32.502
  Jan 29 22:04:32.502: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename container-probe @ 01/29/24 22:04:32.504
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:04:32.518
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:04:32.522
  STEP: Creating pod liveness-085783d4-1660-43dd-9225-3202092f2eef in namespace container-probe-3023 @ 01/29/24 22:04:32.527
  STEP: checking the pod's current state and verifying that restartCount is present @ 01/29/24 22:04:34.548
  Jan 29 22:04:34.552: INFO: Initial restart count of pod liveness-085783d4-1660-43dd-9225-3202092f2eef is 0
  Jan 29 22:04:34.556: INFO: Get pod liveness-085783d4-1660-43dd-9225-3202092f2eef in namespace container-probe-3023
  Jan 29 22:04:36.562: INFO: Get pod liveness-085783d4-1660-43dd-9225-3202092f2eef in namespace container-probe-3023
  Jan 29 22:04:38.568: INFO: Get pod liveness-085783d4-1660-43dd-9225-3202092f2eef in namespace container-probe-3023
  Jan 29 22:04:40.575: INFO: Get pod liveness-085783d4-1660-43dd-9225-3202092f2eef in namespace container-probe-3023
  Jan 29 22:04:42.581: INFO: Get pod liveness-085783d4-1660-43dd-9225-3202092f2eef in namespace container-probe-3023
  Jan 29 22:04:44.589: INFO: Get pod liveness-085783d4-1660-43dd-9225-3202092f2eef in namespace container-probe-3023
  Jan 29 22:04:46.597: INFO: Get pod liveness-085783d4-1660-43dd-9225-3202092f2eef in namespace container-probe-3023
  Jan 29 22:04:48.603: INFO: Get pod liveness-085783d4-1660-43dd-9225-3202092f2eef in namespace container-probe-3023
  Jan 29 22:04:50.609: INFO: Get pod liveness-085783d4-1660-43dd-9225-3202092f2eef in namespace container-probe-3023
  Jan 29 22:04:52.614: INFO: Get pod liveness-085783d4-1660-43dd-9225-3202092f2eef in namespace container-probe-3023
  Jan 29 22:04:54.621: INFO: Get pod liveness-085783d4-1660-43dd-9225-3202092f2eef in namespace container-probe-3023
  Jan 29 22:04:54.621: INFO: Restart count of pod container-probe-3023/liveness-085783d4-1660-43dd-9225-3202092f2eef is now 1 (20.068263804s elapsed)
  Jan 29 22:04:54.621: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 01/29/24 22:04:54.627
  STEP: Destroying namespace "container-probe-3023" for this suite. @ 01/29/24 22:04:54.637
• [22.140 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance]
test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 01/29/24 22:04:54.647
  Jan 29 22:04:54.647: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename pods @ 01/29/24 22:04:54.65
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:04:54.664
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:04:54.67
  STEP: creating the pod @ 01/29/24 22:04:54.677
  STEP: submitting the pod to kubernetes @ 01/29/24 22:04:54.677
  STEP: verifying QOS class is set on the pod @ 01/29/24 22:04:54.685
  Jan 29 22:04:54.689: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9610" for this suite. @ 01/29/24 22:04:54.695
• [0.054 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance]
test/e2e/common/node/podtemplates.go:122
  STEP: Creating a kubernetes client @ 01/29/24 22:04:54.704
  Jan 29 22:04:54.704: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename podtemplate @ 01/29/24 22:04:54.705
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:04:54.715
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:04:54.718
  STEP: Create set of pod templates @ 01/29/24 22:04:54.722
  Jan 29 22:04:54.728: INFO: created test-podtemplate-1
  Jan 29 22:04:54.733: INFO: created test-podtemplate-2
  Jan 29 22:04:54.737: INFO: created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 01/29/24 22:04:54.737
  STEP: delete collection of pod templates @ 01/29/24 22:04:54.741
  Jan 29 22:04:54.741: INFO: requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 01/29/24 22:04:54.755
  Jan 29 22:04:54.755: INFO: requesting list of pod templates to confirm quantity
  Jan 29 22:04:54.758: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-1307" for this suite. @ 01/29/24 22:04:54.763
• [0.065 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance]
test/e2e/apimachinery/garbage_collector.go:817
  STEP: Creating a kubernetes client @ 01/29/24 22:04:54.771
  Jan 29 22:04:54.771: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename gc @ 01/29/24 22:04:54.773
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:04:54.787
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:04:54.791
  Jan 29 22:04:54.821: INFO: pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"d4da5037-9751-4ee8-aff4-9101f3d7d7b1", Controller:(*bool)(0xc0036e4b96), BlockOwnerDeletion:(*bool)(0xc0036e4b97)}}
  Jan 29 22:04:54.829: INFO: pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"1296efe9-16c9-4c4d-9cf7-b9c2ef6b6d2b", Controller:(*bool)(0xc0036e4dce), BlockOwnerDeletion:(*bool)(0xc0036e4dcf)}}
  Jan 29 22:04:54.833: INFO: pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"7055ec2e-5f86-4fc1-ad8e-54db2078a060", Controller:(*bool)(0xc0036e4fee), BlockOwnerDeletion:(*bool)(0xc0036e4fef)}}
  Jan 29 22:04:59.847: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-2581" for this suite. @ 01/29/24 22:04:59.852
• [5.087 seconds]
------------------------------
SS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 01/29/24 22:04:59.858
  Jan 29 22:04:59.858: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename secrets @ 01/29/24 22:04:59.86
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:04:59.873
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:04:59.877
  STEP: Creating secret with name secret-test-map-c8257974-187d-4b7c-96b8-bff4016947d6 @ 01/29/24 22:04:59.882
  STEP: Creating a pod to test consume secrets @ 01/29/24 22:04:59.886
  STEP: Saw pod success @ 01/29/24 22:05:03.91
  Jan 29 22:05:03.914: INFO: Trying to get logs from node nodeb14 pod pod-secrets-b8bb9cc6-f477-4a2a-b365-cd435495c392 container secret-volume-test: <nil>
  STEP: delete the pod @ 01/29/24 22:05:03.927
  Jan 29 22:05:03.942: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9576" for this suite. @ 01/29/24 22:05:03.948
• [4.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc  [Conformance]
test/e2e/kubectl/kubectl.go:1481
  STEP: Creating a kubernetes client @ 01/29/24 22:05:03.96
  Jan 29 22:05:03.960: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename kubectl @ 01/29/24 22:05:03.961
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:05:03.974
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:05:03.978
  STEP: creating Agnhost RC @ 01/29/24 22:05:03.983
  Jan 29 22:05:03.983: INFO: namespace kubectl-2795
  Jan 29 22:05:03.983: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=kubectl-2795 create -f -'
  Jan 29 22:05:04.282: INFO: stderr: ""
  Jan 29 22:05:04.282: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 01/29/24 22:05:04.282
  Jan 29 22:05:05.290: INFO: Selector matched 1 pods for map[app:agnhost]
  Jan 29 22:05:05.290: INFO: Found 1 / 1
  Jan 29 22:05:05.290: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  Jan 29 22:05:05.295: INFO: Selector matched 1 pods for map[app:agnhost]
  Jan 29 22:05:05.295: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Jan 29 22:05:05.295: INFO: wait on agnhost-primary startup in kubectl-2795 
  Jan 29 22:05:05.296: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=kubectl-2795 logs agnhost-primary-wp6m6 agnhost-primary'
  Jan 29 22:05:05.414: INFO: stderr: ""
  Jan 29 22:05:05.414: INFO: stdout: "Paused\n"
  STEP: exposing RC @ 01/29/24 22:05:05.414
  Jan 29 22:05:05.414: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=kubectl-2795 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  Jan 29 22:05:05.538: INFO: stderr: ""
  Jan 29 22:05:05.538: INFO: stdout: "service/rm2 exposed\n"
  Jan 29 22:05:05.542: INFO: Service rm2 in namespace kubectl-2795 found.
  STEP: exposing service @ 01/29/24 22:05:07.55
  Jan 29 22:05:07.550: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=kubectl-2795 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  Jan 29 22:05:07.667: INFO: stderr: ""
  Jan 29 22:05:07.667: INFO: stdout: "service/rm3 exposed\n"
  Jan 29 22:05:07.671: INFO: Service rm3 in namespace kubectl-2795 found.
  Jan 29 22:05:09.680: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2795" for this suite. @ 01/29/24 22:05:09.685
• [5.732 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/network/networking.go:107
  STEP: Creating a kubernetes client @ 01/29/24 22:05:09.694
  Jan 29 22:05:09.694: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename pod-network-test @ 01/29/24 22:05:09.695
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:05:09.708
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:05:09.712
  STEP: Performing setup for networking test in namespace pod-network-test-411 @ 01/29/24 22:05:09.717
  STEP: creating a selector @ 01/29/24 22:05:09.717
  STEP: Creating the service pods in kubernetes @ 01/29/24 22:05:09.717
  Jan 29 22:05:09.717: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 01/29/24 22:05:21.792
  Jan 29 22:05:23.826: INFO: Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  Jan 29 22:05:23.826: INFO: Going to poll 10.244.2.88 on port 8083 at least 0 times, with a maximum of 34 tries before failing
  Jan 29 22:05:23.830: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.244.2.88:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-411 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jan 29 22:05:23.830: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  Jan 29 22:05:23.831: INFO: ExecWithOptions: Clientset creation
  Jan 29 22:05:23.831: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-411/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.244.2.88%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Jan 29 22:05:23.964: INFO: Found all 1 expected endpoints: [netserver-0]
  Jan 29 22:05:23.964: INFO: Going to poll 10.244.1.139 on port 8083 at least 0 times, with a maximum of 34 tries before failing
  Jan 29 22:05:23.969: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.244.1.139:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-411 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jan 29 22:05:23.969: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  Jan 29 22:05:23.970: INFO: ExecWithOptions: Clientset creation
  Jan 29 22:05:23.970: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-411/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.244.1.139%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Jan 29 22:05:24.080: INFO: Found all 1 expected endpoints: [netserver-1]
  Jan 29 22:05:24.080: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-411" for this suite. @ 01/29/24 22:05:24.086
• [14.398 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:89
  STEP: Creating a kubernetes client @ 01/29/24 22:05:24.095
  Jan 29 22:05:24.095: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename configmap @ 01/29/24 22:05:24.097
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:05:24.111
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:05:24.115
  STEP: Creating configMap with name configmap-test-volume-map-0b8282f3-f7a3-4468-9e72-235d2b7abe23 @ 01/29/24 22:05:24.119
  STEP: Creating a pod to test consume configMaps @ 01/29/24 22:05:24.123
  STEP: Saw pod success @ 01/29/24 22:05:28.148
  Jan 29 22:05:28.152: INFO: Trying to get logs from node nodeb14 pod pod-configmaps-b3d39463-412b-43ec-bac9-3432cd2e6132 container agnhost-container: <nil>
  STEP: delete the pod @ 01/29/24 22:05:28.163
  Jan 29 22:05:28.179: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2445" for this suite. @ 01/29/24 22:05:28.185
• [4.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:57
  STEP: Creating a kubernetes client @ 01/29/24 22:05:28.2
  Jan 29 22:05:28.200: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename configmap @ 01/29/24 22:05:28.203
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:05:28.215
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:05:28.22
  STEP: Creating configMap with name configmap-test-volume-122f6ca5-b9ec-4782-9d92-a8024baca21b @ 01/29/24 22:05:28.225
  STEP: Creating a pod to test consume configMaps @ 01/29/24 22:05:28.231
  STEP: Saw pod success @ 01/29/24 22:05:32.251
  Jan 29 22:05:32.256: INFO: Trying to get logs from node nodeb14 pod pod-configmaps-51010f21-f56c-4206-9159-27c04df93c91 container agnhost-container: <nil>
  STEP: delete the pod @ 01/29/24 22:05:32.265
  Jan 29 22:05:32.278: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4275" for this suite. @ 01/29/24 22:05:32.283
• [4.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 01/29/24 22:05:32.296
  Jan 29 22:05:32.296: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename secrets @ 01/29/24 22:05:32.297
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:05:32.311
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:05:32.315
  STEP: Creating secret with name secret-test-23fe7f10-aa9e-4d63-80cd-e5833846188d @ 01/29/24 22:05:32.319
  STEP: Creating a pod to test consume secrets @ 01/29/24 22:05:32.324
  STEP: Saw pod success @ 01/29/24 22:05:36.352
  Jan 29 22:05:36.356: INFO: Trying to get logs from node nodeb14 pod pod-secrets-f2cc5e45-1a16-4c60-ae92-121aea7511cc container secret-volume-test: <nil>
  STEP: delete the pod @ 01/29/24 22:05:36.365
  Jan 29 22:05:36.380: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1127" for this suite. @ 01/29/24 22:05:36.385
• [4.095 seconds]
------------------------------
SS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
test/e2e/node/security_context.go:129
  STEP: Creating a kubernetes client @ 01/29/24 22:05:36.392
  Jan 29 22:05:36.392: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename security-context @ 01/29/24 22:05:36.394
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:05:36.408
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:05:36.413
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 01/29/24 22:05:36.418
  STEP: Saw pod success @ 01/29/24 22:05:40.441
  Jan 29 22:05:40.445: INFO: Trying to get logs from node nodeb14 pod security-context-df443976-71b6-4db8-967b-e3a8b98baebb container test-container: <nil>
  STEP: delete the pod @ 01/29/24 22:05:40.453
  Jan 29 22:05:40.468: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-2272" for this suite. @ 01/29/24 22:05:40.474
• [4.091 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:69
  STEP: Creating a kubernetes client @ 01/29/24 22:05:40.483
  Jan 29 22:05:40.483: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename projected @ 01/29/24 22:05:40.486
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:05:40.497
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:05:40.5
  STEP: Creating a pod to test downward API volume plugin @ 01/29/24 22:05:40.505
  STEP: Saw pod success @ 01/29/24 22:05:44.536
  Jan 29 22:05:44.540: INFO: Trying to get logs from node nodeb14 pod downwardapi-volume-9b43437d-8d7d-406e-8e64-2aff3dc45ff8 container client-container: <nil>
  STEP: delete the pod @ 01/29/24 22:05:44.549
  Jan 29 22:05:44.564: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4343" for this suite. @ 01/29/24 22:05:44.57
• [4.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 01/29/24 22:05:44.581
  Jan 29 22:05:44.581: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename container-runtime @ 01/29/24 22:05:44.583
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:05:44.6
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:05:44.604
  STEP: create the container @ 01/29/24 22:05:44.609
  W0129 22:05:44.618382      23 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 01/29/24 22:05:44.618
  STEP: get the container status @ 01/29/24 22:05:47.637
  STEP: the container should be terminated @ 01/29/24 22:05:47.641
  STEP: the termination message should be set @ 01/29/24 22:05:47.641
  Jan 29 22:05:47.641: INFO: Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 01/29/24 22:05:47.641
  Jan 29 22:05:47.654: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-7103" for this suite. @ 01/29/24 22:05:47.662
• [3.093 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance]
test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 01/29/24 22:05:47.675
  Jan 29 22:05:47.675: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename deployment @ 01/29/24 22:05:47.677
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:05:47.69
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:05:47.697
  Jan 29 22:05:47.703: INFO: Creating simple deployment test-new-deployment
  Jan 29 22:05:47.718: INFO: deployment "test-new-deployment" doesn't have the required revision set
  STEP: getting scale subresource @ 01/29/24 22:05:49.733
  STEP: updating a scale subresource @ 01/29/24 22:05:49.736
  STEP: verifying the deployment Spec.Replicas was modified @ 01/29/24 22:05:49.742
  STEP: Patch a scale subresource @ 01/29/24 22:05:49.745
  Jan 29 22:05:49.763: INFO: Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3061",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "55cbd6e2-02ae-4a4b-9455-80a3164d74fc",
      ResourceVersion: (string) (len=5) "23074",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842162747,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842162747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842162749,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842162749,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842162749,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842162749,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842162747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-557759b7c7\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jan 29 22:05:49.770: INFO: New ReplicaSet "test-new-deployment-557759b7c7" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3061",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9f1836f7-eef2-49b2-a9cb-cd3f1c7555ca",
      ResourceVersion: (string) (len=5) "23081",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842162747,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "55cbd6e2-02ae-4a4b-9455-80a3164d74fc",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842162749,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 35 35 63 62 64 36  65 32 2d 30 32 61 65 2d  |\"55cbd6e2-02ae-|
              00000120  34 61 34 62 2d 39 34 35  35 2d 38 30 61 33 31 36  |4a4b-9455-80a316|
              00000130  34 64 37 34 66 63 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |4d74fc\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842162749,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jan 29 22:05:49.782: INFO: Pod "test-new-deployment-557759b7c7-qh8pt" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-qh8pt",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3061",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7480b2a4-07e7-46ff-819e-355a1ea99951",
      ResourceVersion: (string) (len=5) "23063",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842162747,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "9f1836f7-eef2-49b2-a9cb-cd3f1c7555ca",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842162747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 66  31 38 33 36 66 37 2d 65  |d\":\"9f1836f7-e|
              00000090  65 66 32 2d 34 39 62 32  2d 61 39 63 62 2d 63 64  |ef2-49b2-a9cb-cd|
              000000a0  33 66 31 63 37 35 35 35  63 61 5c 22 7d 22 3a 7b  |3f1c7555ca\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842162749,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=518) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 34 34 2e 32  2e 39 36 5c 22 7d 22 3a  |10.244.2.96\"}":|
              000001e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              000001f0  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000200  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4jk4m",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4jk4m",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodeb14",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842162747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842162749,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842162749,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842162747,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.100.114",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=11) "10.244.2.96",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.2.96"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842162747,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63842162748,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://7b5d09109137a68d8e66ca3524574c6db2f212e9232d37190ef6b4fdfec3d866",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan 29 22:05:49.788: INFO: Pod "test-new-deployment-557759b7c7-qnjqc" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-qnjqc",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3061",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ef979741-87c1-4366-8012-1d8ed028fc2d",
      ResourceVersion: (string) (len=5) "23087",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842162749,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "9f1836f7-eef2-49b2-a9cb-cd3f1c7555ca",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842162749,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 66  31 38 33 36 66 37 2d 65  |d\":\"9f1836f7-e|
              00000090  65 66 32 2d 34 39 62 32  2d 61 39 63 62 2d 63 64  |ef2-49b2-a9cb-cd|
              000000a0  33 66 31 63 37 35 35 35  63 61 5c 22 7d 22 3a 7b  |3f1c7555ca\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gkdxp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gkdxp",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan 29 22:05:49.793: INFO: Pod "test-new-deployment-557759b7c7-r9pdn" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-r9pdn",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3061",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a73e629c-03e5-43ec-a2f6-a94bf976b277",
      ResourceVersion: (string) (len=5) "23084",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842162749,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "9f1836f7-eef2-49b2-a9cb-cd3f1c7555ca",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842162749,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 66  31 38 33 36 66 37 2d 65  |d\":\"9f1836f7-e|
              00000090  65 66 32 2d 34 39 62 32  2d 61 39 63 62 2d 63 64  |ef2-49b2-a9cb-cd|
              000000a0  33 66 31 63 37 35 35 35  63 61 5c 22 7d 22 3a 7b  |3f1c7555ca\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842162749,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qrg9m",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qrg9m",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodec03",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842162749,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842162749,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842162749,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842162749,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.100.173",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842162749,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan 29 22:05:49.795: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-3061" for this suite. @ 01/29/24 22:05:49.799
• [2.131 seconds]
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance]
test/e2e/node/taints.go:290
  STEP: Creating a kubernetes client @ 01/29/24 22:05:49.806
  Jan 29 22:05:49.806: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename taint-single-pod @ 01/29/24 22:05:49.807
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:05:49.821
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:05:49.824
  Jan 29 22:05:49.828: INFO: Waiting up to 1m0s for all nodes to be ready
  Jan 29 22:06:49.858: INFO: Waiting for terminating namespaces to be deleted...
  Jan 29 22:06:49.862: INFO: Starting informer...
  STEP: Starting pod... @ 01/29/24 22:06:49.862
  Jan 29 22:06:50.079: INFO: Pod is running on nodeb14. Tainting Node
  STEP: Trying to apply a taint on the Node @ 01/29/24 22:06:50.079
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 01/29/24 22:06:50.097
  STEP: Waiting short time to make sure Pod is queued for deletion @ 01/29/24 22:06:50.102
  Jan 29 22:06:50.102: INFO: Pod wasn't evicted. Proceeding
  Jan 29 22:06:50.102: INFO: Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 01/29/24 22:06:50.12
  STEP: Waiting some time to make sure that toleration time passed. @ 01/29/24 22:06:50.123
  Jan 29 22:08:05.124: INFO: Pod wasn't evicted. Test successful
  Jan 29 22:08:05.125: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-7162" for this suite. @ 01/29/24 22:08:05.131
• [135.332 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:236
  STEP: Creating a kubernetes client @ 01/29/24 22:08:05.143
  Jan 29 22:08:05.143: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename projected @ 01/29/24 22:08:05.145
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:08:05.159
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:08:05.164
  STEP: Creating a pod to test downward API volume plugin @ 01/29/24 22:08:05.169
  STEP: Saw pod success @ 01/29/24 22:08:09.195
  Jan 29 22:08:09.199: INFO: Trying to get logs from node nodeb14 pod downwardapi-volume-d18b054e-9fab-4a01-888a-dc53b64aaeb9 container client-container: <nil>
  STEP: delete the pod @ 01/29/24 22:08:09.228
  Jan 29 22:08:09.244: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4476" for this suite. @ 01/29/24 22:08:09.248
• [4.111 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance]
test/e2e/apimachinery/webhook.go:210
  STEP: Creating a kubernetes client @ 01/29/24 22:08:09.257
  Jan 29 22:08:09.257: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename webhook @ 01/29/24 22:08:09.259
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:08:09.271
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:08:09.276
  STEP: Setting up server cert @ 01/29/24 22:08:09.299
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/29/24 22:08:09.663
  STEP: Deploying the webhook pod @ 01/29/24 22:08:09.68
  STEP: Wait for the deployment to be ready @ 01/29/24 22:08:09.714
  Jan 29 22:08:09.728: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 01/29/24 22:08:11.743
  STEP: Verifying the service has paired with the endpoint @ 01/29/24 22:08:11.759
  Jan 29 22:08:12.759: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 01/29/24 22:08:12.768
  STEP: create a pod @ 01/29/24 22:08:12.794
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 01/29/24 22:08:14.812
  Jan 29 22:08:14.812: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=webhook-6497 attach --namespace=webhook-6497 to-be-attached-pod -i -c=container1'
  Jan 29 22:08:14.948: INFO: rc: 1
  Jan 29 22:08:14.948: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6497" for this suite. @ 01/29/24 22:08:15.001
  STEP: Destroying namespace "webhook-markers-7008" for this suite. @ 01/29/24 22:08:15.007
• [5.755 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance]
test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 01/29/24 22:08:15.012
  Jan 29 22:08:15.012: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename deployment @ 01/29/24 22:08:15.013
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:08:15.025
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:08:15.031
  Jan 29 22:08:15.045: INFO: Pod name cleanup-pod: Found 0 pods out of 1
  Jan 29 22:08:20.050: INFO: Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 01/29/24 22:08:20.05
  Jan 29 22:08:20.050: INFO: Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 01/29/24 22:08:20.063
  Jan 29 22:08:20.073: INFO: Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4491",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5761ac89-037f-42a3-8b16-a349f68aeaf4",
      ResourceVersion: (string) (len=5) "23538",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842162900,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842162900,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 0,
      Replicas: (int32) 0,
      UpdatedReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) <nil>,
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jan 29 22:08:20.088: INFO: New ReplicaSet "test-cleanup-deployment-58dcc84f74" of Deployment "test-cleanup-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-cleanup-deployment-58dcc84f74",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4491",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "18f6b6a6-715d-4979-b618-a2fd4f2e733e",
      ResourceVersion: (string) (len=5) "23544",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842162900,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "58dcc84f74"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "5761ac89-037f-42a3-8b16-a349f68aeaf4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842162900,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 35 37 36 31 61 63  38 39 2d 30 33 37 66 2d  |\"5761ac89-037f-|
              00000120  34 32 61 33 2d 38 62 31  36 2d 61 33 34 39 66 36  |42a3-8b16-a349f6|
              00000130  38 61 65 61 66 34 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |8aeaf4\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "58dcc84f74"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "58dcc84f74"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 0,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jan 29 22:08:20.089: INFO: All old ReplicaSets of Deployment "test-cleanup-deployment":
  Jan 29 22:08:20.089: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4491",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e71e2c17-098b-48ae-9645-76cd1f49631e",
      ResourceVersion: (string) (len=5) "23542",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842162895,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "5761ac89-037f-42a3-8b16-a349f68aeaf4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842162895,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=483) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000050  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000060  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000070  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000080  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000090  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              000000a0  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000b0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000c0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000d0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000f0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000100  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000110  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000120  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000130  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000140  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000160  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000170  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000180  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000190  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000001a0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001b0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001c0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001d0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001e0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842162895,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842162900,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=103) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000020  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000030  22 75 69 64 5c 22 3a 5c  22 35 37 36 31 61 63 38  |"uid\":\"5761ac8|
              00000040  39 2d 30 33 37 66 2d 34  32 61 33 2d 38 62 31 36  |9-037f-42a3-8b16|
              00000050  2d 61 33 34 39 66 36 38  61 65 61 66 34 5c 22 7d  |-a349f68aeaf4\"}|
              00000060  22 3a 7b 7d 7d 7d 7d                              |":{}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jan 29 22:08:20.095: INFO: Pod "test-cleanup-controller-mjfj4" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=29) "test-cleanup-controller-mjfj4",
      GenerateName: (string) (len=24) "test-cleanup-controller-",
      Namespace: (string) (len=15) "deployment-4491",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b5b3bb14-b680-44f8-a6e8-2f8ae36a39fb",
      ResourceVersion: (string) (len=5) "23520",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842162895,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=23) "test-cleanup-controller",
          UID: (types.UID) (len=36) "e71e2c17-098b-48ae-9645-76cd1f49631e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842162895,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=500) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 2c 22 66  |},"f:pod":{}},"f|
              00000050  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000060  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000070  75 69 64 5c 22 3a 5c 22  65 37 31 65 32 63 31 37  |uid\":\"e71e2c17|
              00000080  2d 30 39 38 62 2d 34 38  61 65 2d 39 36 34 35 2d  |-098b-48ae-9645-|
              00000090  37 36 63 64 31 66 34 39  36 33 31 65 5c 22 7d 22  |76cd1f49631e\"}"|
              000000a0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000b0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000c0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              000000d0  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              000000e0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              000000f0  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000100  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000110  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000120  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000130  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000140  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000150  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000160  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              00000170  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              00000180  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              00000190  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001a0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001b0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001c0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              000001d0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              000001e0  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              000001f0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842162895,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=519) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 34 34 2e 32  2e 31 30 31 5c 22 7d 22  |10.244.2.101\"}"|
              000001e0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              000001f0  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000200  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pdb2r",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pdb2r",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)(<nil>),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodeb14",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842162895,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842162895,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842162895,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842162895,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.100.114",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=12) "10.244.2.101",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.2.101"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842162895,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63842162895,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://b6c5384978c1a70274a2f6558662aad135138edb74093f0e5efa14d59a4208b8",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan 29 22:08:20.097: INFO: Pod "test-cleanup-deployment-58dcc84f74-h7tr6" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-cleanup-deployment-58dcc84f74-h7tr6",
      GenerateName: (string) (len=35) "test-cleanup-deployment-58dcc84f74-",
      Namespace: (string) (len=15) "deployment-4491",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "34799b1d-3a03-4db8-8a4e-4df8b3dec2d7",
      ResourceVersion: (string) (len=5) "23549",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842162900,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "58dcc84f74"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-cleanup-deployment-58dcc84f74",
          UID: (types.UID) (len=36) "18f6b6a6-715d-4979-b618-a2fd4f2e733e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842162900,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 38  66 36 62 36 61 36 2d 37  |d\":\"18f6b6a6-7|
              00000090  31 35 64 2d 34 39 37 39  2d 62 36 31 38 2d 61 32  |15d-4979-b618-a2|
              000000a0  66 64 34 66 32 65 37 33  33 65 5c 22 7d 22 3a 7b  |fd4f2e733e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cdwwl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cdwwl",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodeb14",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842162900,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan 29 22:08:20.099: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-4491" for this suite. @ 01/29/24 22:08:20.104
• [5.100 seconds]
------------------------------
SSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance]
test/e2e/common/network/networking.go:95
  STEP: Creating a kubernetes client @ 01/29/24 22:08:20.123
  Jan 29 22:08:20.123: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename pod-network-test @ 01/29/24 22:08:20.124
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:08:20.137
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:08:20.142
  STEP: Performing setup for networking test in namespace pod-network-test-5315 @ 01/29/24 22:08:20.146
  STEP: creating a selector @ 01/29/24 22:08:20.146
  STEP: Creating the service pods in kubernetes @ 01/29/24 22:08:20.146
  Jan 29 22:08:20.146: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 01/29/24 22:08:32.227
  Jan 29 22:08:34.249: INFO: Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  Jan 29 22:08:34.249: INFO: Breadth first check of 10.244.2.102 on host 192.168.100.114...
  Jan 29 22:08:34.253: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.2.103:9080/dial?request=hostname&protocol=udp&host=10.244.2.102&port=8081&tries=1'] Namespace:pod-network-test-5315 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jan 29 22:08:34.253: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  Jan 29 22:08:34.254: INFO: ExecWithOptions: Clientset creation
  Jan 29 22:08:34.254: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-5315/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.2.103%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.244.2.102%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Jan 29 22:08:34.363: INFO: Waiting for responses: map[]
  Jan 29 22:08:34.363: INFO: reached 10.244.2.102 after 0/1 tries
  Jan 29 22:08:34.363: INFO: Breadth first check of 10.244.1.140 on host 192.168.100.173...
  Jan 29 22:08:34.368: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.2.103:9080/dial?request=hostname&protocol=udp&host=10.244.1.140&port=8081&tries=1'] Namespace:pod-network-test-5315 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jan 29 22:08:34.368: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  Jan 29 22:08:34.369: INFO: ExecWithOptions: Clientset creation
  Jan 29 22:08:34.369: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-5315/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.2.103%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.244.1.140%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Jan 29 22:08:34.493: INFO: Waiting for responses: map[]
  Jan 29 22:08:34.493: INFO: reached 10.244.1.140 after 0/1 tries
  Jan 29 22:08:34.493: INFO: Going to retry 0 out of 2 pods....
  Jan 29 22:08:34.494: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-5315" for this suite. @ 01/29/24 22:08:34.504
• [14.386 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 01/29/24 22:08:34.511
  Jan 29 22:08:34.511: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename container-runtime @ 01/29/24 22:08:34.513
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:08:34.528
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:08:34.532
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 01/29/24 22:08:34.544
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 01/29/24 22:08:50.636
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 01/29/24 22:08:50.641
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 01/29/24 22:08:50.651
  STEP: Container 'terminate-cmd-rpa': should be possible to delete [NodeConformance] @ 01/29/24 22:08:50.651
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 01/29/24 22:08:50.674
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 01/29/24 22:08:53.694
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 01/29/24 22:08:54.705
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 01/29/24 22:08:54.711
  STEP: Container 'terminate-cmd-rpof': should be possible to delete [NodeConformance] @ 01/29/24 22:08:54.711
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 01/29/24 22:08:54.73
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 01/29/24 22:08:55.739
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 01/29/24 22:08:57.76
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 01/29/24 22:08:57.768
  STEP: Container 'terminate-cmd-rpn': should be possible to delete [NodeConformance] @ 01/29/24 22:08:57.768
  Jan 29 22:08:57.784: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-9650" for this suite. @ 01/29/24 22:08:57.805
• [23.301 seconds]
------------------------------
SS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance]
test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 01/29/24 22:08:57.812
  Jan 29 22:08:57.812: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename pods @ 01/29/24 22:08:57.816
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:08:57.83
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:08:57.835
  STEP: creating a Pod with a static label @ 01/29/24 22:08:57.846
  STEP: watching for Pod to be ready @ 01/29/24 22:08:57.857
  Jan 29 22:08:57.860: INFO: observed Pod pod-test in namespace pods-165 in phase Pending with labels: map[test-pod-static:true] & conditions []
  Jan 29 22:08:57.862: INFO: observed Pod pod-test in namespace pods-165 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-01-29 22:08:57 +0000 UTC  }]
  Jan 29 22:08:57.877: INFO: observed Pod pod-test in namespace pods-165 in phase Pending with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-01-29 22:08:57 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-01-29 22:08:57 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-01-29 22:08:57 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-01-29 22:08:57 +0000 UTC  }]
  Jan 29 22:08:59.001: INFO: Found Pod pod-test in namespace pods-165 in phase Running with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-01-29 22:08:57 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2024-01-29 22:08:58 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2024-01-29 22:08:58 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-01-29 22:08:57 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 01/29/24 22:08:59.005
  STEP: getting the Pod and ensuring that it's patched @ 01/29/24 22:08:59.02
  STEP: replacing the Pod's status Ready condition to False @ 01/29/24 22:08:59.024
  STEP: check the Pod again to ensure its Ready conditions are False @ 01/29/24 22:08:59.04
  STEP: deleting the Pod via a Collection with a LabelSelector @ 01/29/24 22:08:59.04
  STEP: watching for the Pod to be deleted @ 01/29/24 22:08:59.049
  Jan 29 22:08:59.053: INFO: observed event type MODIFIED
  Jan 29 22:09:01.008: INFO: observed event type MODIFIED
  Jan 29 22:09:01.216: INFO: observed event type MODIFIED
  Jan 29 22:09:02.014: INFO: observed event type MODIFIED
  Jan 29 22:09:02.027: INFO: observed event type MODIFIED
  Jan 29 22:09:02.033: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-165" for this suite. @ 01/29/24 22:09:02.038
• [4.231 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance]
test/e2e/common/node/expansion.go:115
  STEP: Creating a kubernetes client @ 01/29/24 22:09:02.048
  Jan 29 22:09:02.048: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename var-expansion @ 01/29/24 22:09:02.05
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:09:02.064
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:09:02.068
  STEP: Creating a pod to test substitution in volume subpath @ 01/29/24 22:09:02.073
  STEP: Saw pod success @ 01/29/24 22:09:06.096
  Jan 29 22:09:06.100: INFO: Trying to get logs from node nodeb14 pod var-expansion-a8d15431-6992-4bef-abbf-6a7f0bd2fe61 container dapi-container: <nil>
  STEP: delete the pod @ 01/29/24 22:09:06.108
  Jan 29 22:09:06.120: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-27" for this suite. @ 01/29/24 22:09:06.126
• [4.083 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance]
test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 01/29/24 22:09:06.145
  Jan 29 22:09:06.145: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename events @ 01/29/24 22:09:06.147
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:09:06.161
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:09:06.165
  STEP: Create set of events @ 01/29/24 22:09:06.17
  STEP: get a list of Events with a label in the current namespace @ 01/29/24 22:09:06.184
  STEP: delete a list of events @ 01/29/24 22:09:06.188
  Jan 29 22:09:06.188: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 01/29/24 22:09:06.203
  Jan 29 22:09:06.206: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-4761" for this suite. @ 01/29/24 22:09:06.21
• [0.069 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance]
test/e2e/apps/job.go:642
  STEP: Creating a kubernetes client @ 01/29/24 22:09:06.215
  Jan 29 22:09:06.215: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename job @ 01/29/24 22:09:06.217
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:09:06.228
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:09:06.233
  STEP: Creating a job @ 01/29/24 22:09:06.237
  STEP: Ensure pods equal to parallelism count is attached to the job @ 01/29/24 22:09:06.242
  STEP: patching /status @ 01/29/24 22:09:08.249
  STEP: updating /status @ 01/29/24 22:09:08.258
  STEP: get /status @ 01/29/24 22:09:08.268
  Jan 29 22:09:08.272: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7636" for this suite. @ 01/29/24 22:09:08.277
• [2.069 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance]
test/e2e/common/node/security_context.go:486
  STEP: Creating a kubernetes client @ 01/29/24 22:09:08.285
  Jan 29 22:09:08.285: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename security-context-test @ 01/29/24 22:09:08.287
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:09:08.3
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:09:08.305
  Jan 29 22:09:12.333: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-8" for this suite. @ 01/29/24 22:09:12.341
• [4.064 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:131
  STEP: Creating a kubernetes client @ 01/29/24 22:09:12.35
  Jan 29 22:09:12.350: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename downward-api @ 01/29/24 22:09:12.351
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:09:12.363
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:09:12.368
  STEP: Creating the pod @ 01/29/24 22:09:12.374
  Jan 29 22:09:14.930: INFO: Successfully updated pod "labelsupdate610cb8b7-f969-40c5-a201-5f804dc50fa2"
  Jan 29 22:09:18.961: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2872" for this suite. @ 01/29/24 22:09:18.966
• [6.623 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:262
  STEP: Creating a kubernetes client @ 01/29/24 22:09:18.976
  Jan 29 22:09:18.976: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename downward-api @ 01/29/24 22:09:18.978
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:09:18.991
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:09:18.997
  STEP: Creating a pod to test downward API volume plugin @ 01/29/24 22:09:19.002
  STEP: Saw pod success @ 01/29/24 22:09:23.024
  Jan 29 22:09:23.028: INFO: Trying to get logs from node nodeb14 pod downwardapi-volume-0d9302ee-6b8f-48ad-97b4-e4a32e546dd3 container client-container: <nil>
  STEP: delete the pod @ 01/29/24 22:09:23.037
  Jan 29 22:09:23.053: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2892" for this suite. @ 01/29/24 22:09:23.059
• [4.089 seconds]
------------------------------
SS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:240
  STEP: Creating a kubernetes client @ 01/29/24 22:09:23.066
  Jan 29 22:09:23.066: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename configmap @ 01/29/24 22:09:23.068
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:09:23.084
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:09:23.088
  STEP: Creating configMap with name cm-test-opt-del-7b9a9813-ef29-4708-98a5-7a4aaeece21a @ 01/29/24 22:09:23.1
  STEP: Creating configMap with name cm-test-opt-upd-0e002023-5060-4f31-a14e-66884939ea9c @ 01/29/24 22:09:23.105
  STEP: Creating the pod @ 01/29/24 22:09:23.109
  STEP: Deleting configmap cm-test-opt-del-7b9a9813-ef29-4708-98a5-7a4aaeece21a @ 01/29/24 22:09:25.152
  STEP: Updating configmap cm-test-opt-upd-0e002023-5060-4f31-a14e-66884939ea9c @ 01/29/24 22:09:25.158
  STEP: Creating configMap with name cm-test-opt-create-1b5ec881-adee-44bc-8366-23855bcf949d @ 01/29/24 22:09:25.163
  STEP: waiting to observe update in volume @ 01/29/24 22:09:25.168
  Jan 29 22:10:32.374: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1976" for this suite. @ 01/29/24 22:10:32.381
• [69.322 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance]
test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 01/29/24 22:10:32.392
  Jan 29 22:10:32.392: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename conformance-tests @ 01/29/24 22:10:32.394
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:10:32.409
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:10:32.413
  STEP: Getting node addresses @ 01/29/24 22:10:32.418
  Jan 29 22:10:32.418: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  Jan 29 22:10:32.424: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-278" for this suite. @ 01/29/24 22:10:32.429
• [0.044 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching  [Conformance]
test/e2e/scheduling/predicates.go:444
  STEP: Creating a kubernetes client @ 01/29/24 22:10:32.436
  Jan 29 22:10:32.436: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename sched-pred @ 01/29/24 22:10:32.438
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:10:32.45
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:10:32.454
  Jan 29 22:10:32.458: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Jan 29 22:10:32.466: INFO: Waiting for terminating namespaces to be deleted...
  Jan 29 22:10:32.469: INFO: 
  Logging pods the apiserver thinks is on node nodeb14 before test
  Jan 29 22:10:32.476: INFO: pod-configmaps-a3d3f8a9-0b55-4333-a752-ef9821a58871 from configmap-1976 started at 2024-01-29 22:09:23 +0000 UTC (3 container statuses recorded)
  Jan 29 22:10:32.476: INFO: 	Container createcm-volume-test ready: true, restart count 0
  Jan 29 22:10:32.476: INFO: 	Container delcm-volume-test ready: true, restart count 0
  Jan 29 22:10:32.476: INFO: 	Container updcm-volume-test ready: true, restart count 0
  Jan 29 22:10:32.476: INFO: kube-flannel-ds-5ft7f from kube-flannel started at 2024-01-29 22:06:50 +0000 UTC (1 container statuses recorded)
  Jan 29 22:10:32.476: INFO: 	Container kube-flannel ready: true, restart count 0
  Jan 29 22:10:32.476: INFO: kube-proxy-7rw4k from kube-system started at 2024-01-29 20:54:07 +0000 UTC (1 container statuses recorded)
  Jan 29 22:10:32.476: INFO: 	Container kube-proxy ready: true, restart count 0
  Jan 29 22:10:32.476: INFO: sonobuoy from sonobuoy started at 2024-01-29 20:56:14 +0000 UTC (1 container statuses recorded)
  Jan 29 22:10:32.476: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Jan 29 22:10:32.476: INFO: sonobuoy-e2e-job-c5ce82f9c8fc4251 from sonobuoy started at 2024-01-29 20:56:20 +0000 UTC (2 container statuses recorded)
  Jan 29 22:10:32.476: INFO: 	Container e2e ready: true, restart count 0
  Jan 29 22:10:32.476: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jan 29 22:10:32.476: INFO: sonobuoy-systemd-logs-daemon-set-f2be670d44c14602-jkm8t from sonobuoy started at 2024-01-29 20:56:20 +0000 UTC (2 container statuses recorded)
  Jan 29 22:10:32.476: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jan 29 22:10:32.476: INFO: 	Container systemd-logs ready: true, restart count 0
  Jan 29 22:10:32.476: INFO: 
  Logging pods the apiserver thinks is on node nodec03 before test
  Jan 29 22:10:32.482: INFO: kube-flannel-ds-rdqsr from kube-flannel started at 2024-01-29 20:54:05 +0000 UTC (1 container statuses recorded)
  Jan 29 22:10:32.482: INFO: 	Container kube-flannel ready: true, restart count 0
  Jan 29 22:10:32.482: INFO: kube-proxy-49d8w from kube-system started at 2024-01-29 20:54:05 +0000 UTC (1 container statuses recorded)
  Jan 29 22:10:32.482: INFO: 	Container kube-proxy ready: true, restart count 0
  Jan 29 22:10:32.482: INFO: sonobuoy-systemd-logs-daemon-set-f2be670d44c14602-478zt from sonobuoy started at 2024-01-29 20:56:20 +0000 UTC (2 container statuses recorded)
  Jan 29 22:10:32.482: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jan 29 22:10:32.482: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 01/29/24 22:10:32.482
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.17aef0f25a319ac8], Reason = [FailedScheduling], Message = [0/3 nodes are available: 1 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 2 node(s) didn't match Pod's node affinity/selector. preemption: 0/3 nodes are available: 3 Preemption is not helpful for scheduling..] @ 01/29/24 22:10:32.515
  Jan 29 22:10:33.511: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-455" for this suite. @ 01/29/24 22:10:33.517
• [1.088 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:124
  STEP: Creating a kubernetes client @ 01/29/24 22:10:33.525
  Jan 29 22:10:33.525: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename projected @ 01/29/24 22:10:33.529
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:10:33.543
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:10:33.548
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-380ccab6-efd6-4dd3-b470-e5674c44a0a9 @ 01/29/24 22:10:33.557
  STEP: Creating the pod @ 01/29/24 22:10:33.562
  STEP: Updating configmap projected-configmap-test-upd-380ccab6-efd6-4dd3-b470-e5674c44a0a9 @ 01/29/24 22:10:35.598
  STEP: waiting to observe update in volume @ 01/29/24 22:10:35.607
  Jan 29 22:11:48.070: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1691" for this suite. @ 01/29/24 22:11:48.076
• [74.558 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance]
test/e2e/apimachinery/garbage_collector.go:538
  STEP: Creating a kubernetes client @ 01/29/24 22:11:48.086
  Jan 29 22:11:48.086: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename gc @ 01/29/24 22:11:48.088
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:11:48.104
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:11:48.109
  STEP: create the deployment @ 01/29/24 22:11:48.113
  W0129 22:11:48.120556      23 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 01/29/24 22:11:48.12
  STEP: delete the deployment @ 01/29/24 22:11:48.63
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 01/29/24 22:11:48.638
  STEP: Gathering metrics @ 01/29/24 22:11:49.161
  Jan 29 22:11:49.311: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Jan 29 22:11:49.312: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-9432" for this suite. @ 01/29/24 22:11:49.317
• [1.236 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance]
test/e2e/common/node/containers.go:89
  STEP: Creating a kubernetes client @ 01/29/24 22:11:49.324
  Jan 29 22:11:49.324: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename containers @ 01/29/24 22:11:49.325
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:11:49.342
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:11:49.346
  STEP: Creating a pod to test override all @ 01/29/24 22:11:49.351
  STEP: Saw pod success @ 01/29/24 22:11:53.378
  Jan 29 22:11:53.381: INFO: Trying to get logs from node nodeb14 pod client-containers-c741d074-e534-4a8d-b8de-6643295f4327 container agnhost-container: <nil>
  STEP: delete the pod @ 01/29/24 22:11:53.391
  Jan 29 22:11:53.408: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-3415" for this suite. @ 01/29/24 22:11:53.414
• [4.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance]
test/e2e/apps/cronjob.go:161
  STEP: Creating a kubernetes client @ 01/29/24 22:11:53.422
  Jan 29 22:11:53.422: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename cronjob @ 01/29/24 22:11:53.423
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:11:53.434
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:11:53.438
  STEP: Creating a ReplaceConcurrent cronjob @ 01/29/24 22:11:53.443
  STEP: Ensuring a job is scheduled @ 01/29/24 22:11:53.447
  STEP: Ensuring exactly one is scheduled @ 01/29/24 22:12:01.454
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 01/29/24 22:12:01.458
  STEP: Ensuring the job is replaced with a new one @ 01/29/24 22:12:01.462
  STEP: Removing cronjob @ 01/29/24 22:13:01.468
  Jan 29 22:13:01.475: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-6833" for this suite. @ 01/29/24 22:13:01.479
• [68.064 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:194
  STEP: Creating a kubernetes client @ 01/29/24 22:13:01.487
  Jan 29 22:13:01.487: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename downward-api @ 01/29/24 22:13:01.489
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:13:01.507
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:13:01.511
  STEP: Creating a pod to test downward API volume plugin @ 01/29/24 22:13:01.515
  STEP: Saw pod success @ 01/29/24 22:13:05.54
  Jan 29 22:13:05.543: INFO: Trying to get logs from node nodeb14 pod downwardapi-volume-d81332bc-a916-45d1-a368-9bc4a82ed0fb container client-container: <nil>
  STEP: delete the pod @ 01/29/24 22:13:05.552
  Jan 29 22:13:05.568: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-378" for this suite. @ 01/29/24 22:13:05.573
• [4.090 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance]
test/e2e/common/network/networking.go:84
  STEP: Creating a kubernetes client @ 01/29/24 22:13:05.579
  Jan 29 22:13:05.579: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename pod-network-test @ 01/29/24 22:13:05.58
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:13:05.596
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:13:05.601
  STEP: Performing setup for networking test in namespace pod-network-test-1759 @ 01/29/24 22:13:05.608
  STEP: creating a selector @ 01/29/24 22:13:05.608
  STEP: Creating the service pods in kubernetes @ 01/29/24 22:13:05.608
  Jan 29 22:13:05.608: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 01/29/24 22:13:27.723
  Jan 29 22:13:29.749: INFO: Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  Jan 29 22:13:29.749: INFO: Breadth first check of 10.244.2.121 on host 192.168.100.114...
  Jan 29 22:13:29.752: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.2.122:9080/dial?request=hostname&protocol=http&host=10.244.2.121&port=8083&tries=1'] Namespace:pod-network-test-1759 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jan 29 22:13:29.752: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  Jan 29 22:13:29.754: INFO: ExecWithOptions: Clientset creation
  Jan 29 22:13:29.754: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-1759/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.2.122%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.244.2.121%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Jan 29 22:13:29.877: INFO: Waiting for responses: map[]
  Jan 29 22:13:29.877: INFO: reached 10.244.2.121 after 0/1 tries
  Jan 29 22:13:29.877: INFO: Breadth first check of 10.244.1.142 on host 192.168.100.173...
  Jan 29 22:13:29.882: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.2.122:9080/dial?request=hostname&protocol=http&host=10.244.1.142&port=8083&tries=1'] Namespace:pod-network-test-1759 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jan 29 22:13:29.882: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  Jan 29 22:13:29.882: INFO: ExecWithOptions: Clientset creation
  Jan 29 22:13:29.882: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-1759/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.2.122%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.244.1.142%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Jan 29 22:13:29.992: INFO: Waiting for responses: map[]
  Jan 29 22:13:29.992: INFO: reached 10.244.1.142 after 0/1 tries
  Jan 29 22:13:29.992: INFO: Going to retry 0 out of 2 pods....
  Jan 29 22:13:29.993: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-1759" for this suite. @ 01/29/24 22:13:29.998
• [24.428 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance]
test/e2e/auth/service_accounts.go:740
  STEP: Creating a kubernetes client @ 01/29/24 22:13:30.008
  Jan 29 22:13:30.008: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename svcaccounts @ 01/29/24 22:13:30.01
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:13:30.023
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:13:30.027
  Jan 29 22:13:30.035: INFO: Got root ca configmap in namespace "svcaccounts-5800"
  Jan 29 22:13:30.040: INFO: Deleted root ca configmap in namespace "svcaccounts-5800"
  STEP: waiting for a new root ca configmap created @ 01/29/24 22:13:30.541
  Jan 29 22:13:30.545: INFO: Recreated root ca configmap in namespace "svcaccounts-5800"
  Jan 29 22:13:30.550: INFO: Updated root ca configmap in namespace "svcaccounts-5800"
  STEP: waiting for the root ca configmap reconciled @ 01/29/24 22:13:31.051
  Jan 29 22:13:31.055: INFO: Reconciled root ca configmap in namespace "svcaccounts-5800"
  Jan 29 22:13:31.055: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-5800" for this suite. @ 01/29/24 22:13:31.06
• [1.058 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works  [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:145
  STEP: Creating a kubernetes client @ 01/29/24 22:13:31.067
  Jan 29 22:13:31.067: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename custom-resource-definition @ 01/29/24 22:13:31.069
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:13:31.088
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:13:31.092
  Jan 29 22:13:31.097: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  Jan 29 22:13:31.649: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-5335" for this suite. @ 01/29/24 22:13:31.655
• [0.599 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance]
test/e2e/apimachinery/resource_quota.go:887
  STEP: Creating a kubernetes client @ 01/29/24 22:13:31.667
  Jan 29 22:13:31.667: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename resourcequota @ 01/29/24 22:13:31.669
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:13:31.694
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:13:31.698
  STEP: Creating a ResourceQuota @ 01/29/24 22:13:31.703
  STEP: Getting a ResourceQuota @ 01/29/24 22:13:31.709
  STEP: Updating a ResourceQuota @ 01/29/24 22:13:31.713
  STEP: Verifying a ResourceQuota was modified @ 01/29/24 22:13:31.717
  STEP: Deleting a ResourceQuota @ 01/29/24 22:13:31.721
  STEP: Verifying the deleted ResourceQuota @ 01/29/24 22:13:31.727
  Jan 29 22:13:31.732: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6061" for this suite. @ 01/29/24 22:13:31.737
• [0.076 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance]
test/e2e/apps/disruption.go:108
  STEP: Creating a kubernetes client @ 01/29/24 22:13:31.749
  Jan 29 22:13:31.749: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename disruption @ 01/29/24 22:13:31.75
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:13:31.763
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:13:31.768
  STEP: creating the pdb @ 01/29/24 22:13:31.773
  STEP: Waiting for the pdb to be processed @ 01/29/24 22:13:31.777
  STEP: updating the pdb @ 01/29/24 22:13:33.787
  STEP: Waiting for the pdb to be processed @ 01/29/24 22:13:33.796
  STEP: patching the pdb @ 01/29/24 22:13:33.804
  STEP: Waiting for the pdb to be processed @ 01/29/24 22:13:33.814
  STEP: Waiting for the pdb to be deleted @ 01/29/24 22:13:35.826
  Jan 29 22:13:35.830: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-6678" for this suite. @ 01/29/24 22:13:35.834
• [4.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:276
  STEP: Creating a kubernetes client @ 01/29/24 22:13:35.842
  Jan 29 22:13:35.842: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename crd-publish-openapi @ 01/29/24 22:13:35.843
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:13:35.854
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:13:35.858
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 01/29/24 22:13:35.862
  Jan 29 22:13:35.863: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  Jan 29 22:13:37.268: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  Jan 29 22:13:43.027: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-48" for this suite. @ 01/29/24 22:13:43.04
• [7.204 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 01/29/24 22:13:43.048
  Jan 29 22:13:43.048: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename pods @ 01/29/24 22:13:43.049
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:13:43.065
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:13:43.069
  Jan 29 22:13:43.073: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: creating the pod @ 01/29/24 22:13:43.074
  STEP: submitting the pod to kubernetes @ 01/29/24 22:13:43.074
  Jan 29 22:13:45.122: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5987" for this suite. @ 01/29/24 22:13:45.126
• [2.084 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 01/29/24 22:13:45.132
  Jan 29 22:13:45.132: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename projected @ 01/29/24 22:13:45.133
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:13:45.146
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:13:45.15
  STEP: Creating projection with secret that has name projected-secret-test-2802656c-6b60-4536-8b05-f1e0176205de @ 01/29/24 22:13:45.154
  STEP: Creating a pod to test consume secrets @ 01/29/24 22:13:45.158
  STEP: Saw pod success @ 01/29/24 22:13:49.182
  Jan 29 22:13:49.186: INFO: Trying to get logs from node nodeb14 pod pod-projected-secrets-29084466-2734-4093-b13f-5851a3b27c05 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 01/29/24 22:13:49.195
  Jan 29 22:13:49.211: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7548" for this suite. @ 01/29/24 22:13:49.216
• [4.089 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance]
test/e2e/apimachinery/resource_quota.go:395
  STEP: Creating a kubernetes client @ 01/29/24 22:13:49.221
  Jan 29 22:13:49.221: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename resourcequota @ 01/29/24 22:13:49.223
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:13:49.239
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:13:49.245
  STEP: Counting existing ResourceQuota @ 01/29/24 22:13:49.25
  STEP: Creating a ResourceQuota @ 01/29/24 22:13:54.254
  STEP: Ensuring resource quota status is calculated @ 01/29/24 22:13:54.263
  STEP: Creating a ReplicationController @ 01/29/24 22:13:56.27
  STEP: Ensuring resource quota status captures replication controller creation @ 01/29/24 22:13:56.286
  STEP: Deleting a ReplicationController @ 01/29/24 22:13:58.292
  STEP: Ensuring resource quota status released usage @ 01/29/24 22:13:58.3
  Jan 29 22:14:00.307: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2818" for this suite. @ 01/29/24 22:14:00.313
• [11.098 seconds]
------------------------------
S
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance]
test/e2e/common/node/expansion.go:155
  STEP: Creating a kubernetes client @ 01/29/24 22:14:00.319
  Jan 29 22:14:00.319: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename var-expansion @ 01/29/24 22:14:00.321
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:14:00.337
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:14:00.341
  Jan 29 22:14:02.366: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Jan 29 22:14:02.371: INFO: Deleting pod "var-expansion-4bd77103-f21b-410b-aafe-97c1d7e4a6a8" in namespace "var-expansion-186"
  Jan 29 22:14:02.376: INFO: Wait up to 5m0s for pod "var-expansion-4bd77103-f21b-410b-aafe-97c1d7e4a6a8" to be fully deleted
  STEP: Destroying namespace "var-expansion-186" for this suite. @ 01/29/24 22:14:04.386
• [4.072 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:74
  STEP: Creating a kubernetes client @ 01/29/24 22:14:04.392
  Jan 29 22:14:04.392: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename projected @ 01/29/24 22:14:04.393
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:14:04.406
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:14:04.41
  STEP: Creating configMap with name projected-configmap-test-volume-4516dbe0-0136-4b82-8c07-5c80985bd09d @ 01/29/24 22:14:04.415
  STEP: Creating a pod to test consume configMaps @ 01/29/24 22:14:04.419
  STEP: Saw pod success @ 01/29/24 22:14:08.444
  Jan 29 22:14:08.447: INFO: Trying to get logs from node nodeb14 pod pod-projected-configmaps-96f9c5e5-32b3-4db2-88fe-8ca62c6d33b5 container agnhost-container: <nil>
  STEP: delete the pod @ 01/29/24 22:14:08.456
  Jan 29 22:14:08.472: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1157" for this suite. @ 01/29/24 22:14:08.478
• [4.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance]
test/e2e/auth/service_accounts.go:647
  STEP: Creating a kubernetes client @ 01/29/24 22:14:08.493
  Jan 29 22:14:08.494: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename svcaccounts @ 01/29/24 22:14:08.495
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:14:08.511
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:14:08.515
  STEP: creating a ServiceAccount @ 01/29/24 22:14:08.519
  STEP: watching for the ServiceAccount to be added @ 01/29/24 22:14:08.527
  STEP: patching the ServiceAccount @ 01/29/24 22:14:08.531
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 01/29/24 22:14:08.537
  STEP: deleting the ServiceAccount @ 01/29/24 22:14:08.541
  Jan 29 22:14:08.551: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6772" for this suite. @ 01/29/24 22:14:08.556
• [0.069 seconds]
------------------------------
SS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 01/29/24 22:14:08.562
  Jan 29 22:14:08.562: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename secrets @ 01/29/24 22:14:08.564
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:14:08.579
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:14:08.583
  STEP: Creating secret with name secret-test-map-f1c745e6-d13b-4fc6-8d06-a4022aeb994b @ 01/29/24 22:14:08.587
  STEP: Creating a pod to test consume secrets @ 01/29/24 22:14:08.591
  STEP: Saw pod success @ 01/29/24 22:14:12.616
  Jan 29 22:14:12.620: INFO: Trying to get logs from node nodeb14 pod pod-secrets-04e2bfaa-c5e4-49e7-875a-5a545984b297 container secret-volume-test: <nil>
  STEP: delete the pod @ 01/29/24 22:14:12.629
  Jan 29 22:14:12.646: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8452" for this suite. @ 01/29/24 22:14:12.652
• [4.096 seconds]
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:184
  STEP: Creating a kubernetes client @ 01/29/24 22:14:12.658
  Jan 29 22:14:12.658: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename kubelet-test @ 01/29/24 22:14:12.66
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:14:12.676
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:14:12.68
  Jan 29 22:14:14.715: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-9698" for this suite. @ 01/29/24 22:14:14.721
• [2.071 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods  [Conformance]
test/e2e/network/service.go:846
  STEP: Creating a kubernetes client @ 01/29/24 22:14:14.736
  Jan 29 22:14:14.736: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename services @ 01/29/24 22:14:14.737
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:14:14.752
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:14:14.756
  STEP: creating service multi-endpoint-test in namespace services-2549 @ 01/29/24 22:14:14.761
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-2549 to expose endpoints map[] @ 01/29/24 22:14:14.775
  Jan 29 22:14:14.779: INFO: Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
  Jan 29 22:14:15.790: INFO: successfully validated that service multi-endpoint-test in namespace services-2549 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-2549 @ 01/29/24 22:14:15.791
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-2549 to expose endpoints map[pod1:[100]] @ 01/29/24 22:14:17.814
  Jan 29 22:14:17.823: INFO: successfully validated that service multi-endpoint-test in namespace services-2549 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-2549 @ 01/29/24 22:14:17.823
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-2549 to expose endpoints map[pod1:[100] pod2:[101]] @ 01/29/24 22:14:19.84
  Jan 29 22:14:19.852: INFO: successfully validated that service multi-endpoint-test in namespace services-2549 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 01/29/24 22:14:19.852
  Jan 29 22:14:19.852: INFO: Creating new exec pod
  Jan 29 22:14:22.868: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=services-2549 exec execpod6wtss -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  Jan 29 22:14:23.115: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
  Jan 29 22:14:23.115: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jan 29 22:14:23.115: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=services-2549 exec execpod6wtss -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.103.97.78 80'
  Jan 29 22:14:23.320: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.103.97.78 80\nConnection to 10.103.97.78 80 port [tcp/http] succeeded!\n"
  Jan 29 22:14:23.320: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jan 29 22:14:23.320: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=services-2549 exec execpod6wtss -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  Jan 29 22:14:23.528: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
  Jan 29 22:14:23.528: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jan 29 22:14:23.528: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=services-2549 exec execpod6wtss -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.103.97.78 81'
  Jan 29 22:14:23.731: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.103.97.78 81\nConnection to 10.103.97.78 81 port [tcp/*] succeeded!\n"
  Jan 29 22:14:23.731: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-2549 @ 01/29/24 22:14:23.731
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-2549 to expose endpoints map[pod2:[101]] @ 01/29/24 22:14:23.749
  Jan 29 22:14:23.765: INFO: successfully validated that service multi-endpoint-test in namespace services-2549 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-2549 @ 01/29/24 22:14:23.765
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-2549 to expose endpoints map[] @ 01/29/24 22:14:23.774
  Jan 29 22:14:23.782: INFO: successfully validated that service multi-endpoint-test in namespace services-2549 exposes endpoints map[]
  Jan 29 22:14:23.782: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2549" for this suite. @ 01/29/24 22:14:23.805
• [9.082 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance]
test/e2e/common/node/containers.go:75
  STEP: Creating a kubernetes client @ 01/29/24 22:14:23.819
  Jan 29 22:14:23.819: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename containers @ 01/29/24 22:14:23.821
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:14:23.833
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:14:23.837
  STEP: Creating a pod to test override command @ 01/29/24 22:14:23.841
  STEP: Saw pod success @ 01/29/24 22:14:27.863
  Jan 29 22:14:27.866: INFO: Trying to get logs from node nodeb14 pod client-containers-2011241b-8644-4780-91e7-61bb5eacda8f container agnhost-container: <nil>
  STEP: delete the pod @ 01/29/24 22:14:27.874
  Jan 29 22:14:27.887: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-6110" for this suite. @ 01/29/24 22:14:27.892
• [4.080 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application  [Conformance]
test/e2e/kubectl/kubectl.go:396
  STEP: Creating a kubernetes client @ 01/29/24 22:14:27.904
  Jan 29 22:14:27.904: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename kubectl @ 01/29/24 22:14:27.907
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:14:27.918
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:14:27.922
  STEP: creating all guestbook components @ 01/29/24 22:14:27.926
  Jan 29 22:14:27.926: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  Jan 29 22:14:27.927: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=kubectl-4199 create -f -'
  Jan 29 22:14:28.246: INFO: stderr: ""
  Jan 29 22:14:28.246: INFO: stdout: "service/agnhost-replica created\n"
  Jan 29 22:14:28.246: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  Jan 29 22:14:28.247: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=kubectl-4199 create -f -'
  Jan 29 22:14:28.551: INFO: stderr: ""
  Jan 29 22:14:28.551: INFO: stdout: "service/agnhost-primary created\n"
  Jan 29 22:14:28.551: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  Jan 29 22:14:28.552: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=kubectl-4199 create -f -'
  Jan 29 22:14:28.835: INFO: stderr: ""
  Jan 29 22:14:28.835: INFO: stdout: "service/frontend created\n"
  Jan 29 22:14:28.835: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.45
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  Jan 29 22:14:28.836: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=kubectl-4199 create -f -'
  Jan 29 22:14:29.080: INFO: stderr: ""
  Jan 29 22:14:29.080: INFO: stdout: "deployment.apps/frontend created\n"
  Jan 29 22:14:29.080: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.45
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  Jan 29 22:14:29.081: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=kubectl-4199 create -f -'
  Jan 29 22:14:29.322: INFO: stderr: ""
  Jan 29 22:14:29.322: INFO: stdout: "deployment.apps/agnhost-primary created\n"
  Jan 29 22:14:29.322: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.45
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  Jan 29 22:14:29.323: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=kubectl-4199 create -f -'
  Jan 29 22:14:29.581: INFO: stderr: ""
  Jan 29 22:14:29.581: INFO: stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 01/29/24 22:14:29.581
  Jan 29 22:14:29.581: INFO: Waiting for all frontend pods to be Running.
  Jan 29 22:14:34.633: INFO: Waiting for frontend to serve content.
  Jan 29 22:14:34.653: INFO: Trying to add a new entry to the guestbook.
  Jan 29 22:14:34.668: INFO: Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 01/29/24 22:14:34.687
  Jan 29 22:14:34.687: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=kubectl-4199 delete --grace-period=0 --force -f -'
  Jan 29 22:14:34.799: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jan 29 22:14:34.799: INFO: stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 01/29/24 22:14:34.799
  Jan 29 22:14:34.800: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=kubectl-4199 delete --grace-period=0 --force -f -'
  Jan 29 22:14:34.912: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jan 29 22:14:34.912: INFO: stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 01/29/24 22:14:34.912
  Jan 29 22:14:34.912: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=kubectl-4199 delete --grace-period=0 --force -f -'
  Jan 29 22:14:35.025: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jan 29 22:14:35.025: INFO: stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 01/29/24 22:14:35.025
  Jan 29 22:14:35.025: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=kubectl-4199 delete --grace-period=0 --force -f -'
  Jan 29 22:14:35.127: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jan 29 22:14:35.127: INFO: stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 01/29/24 22:14:35.127
  Jan 29 22:14:35.127: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=kubectl-4199 delete --grace-period=0 --force -f -'
  Jan 29 22:14:35.246: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jan 29 22:14:35.246: INFO: stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 01/29/24 22:14:35.247
  Jan 29 22:14:35.247: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=kubectl-4199 delete --grace-period=0 --force -f -'
  Jan 29 22:14:35.366: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jan 29 22:14:35.366: INFO: stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  Jan 29 22:14:35.366: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4199" for this suite. @ 01/29/24 22:14:35.37
• [7.483 seconds]
------------------------------
S
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:175
  STEP: Creating a kubernetes client @ 01/29/24 22:14:35.384
  Jan 29 22:14:35.384: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename configmap @ 01/29/24 22:14:35.385
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:14:35.397
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:14:35.402
  STEP: Creating configMap with name configmap-test-upd-564e0e18-c7a1-4bd0-8808-60802b0d7768 @ 01/29/24 22:14:35.408
  STEP: Creating the pod @ 01/29/24 22:14:35.412
  STEP: Waiting for pod with text data @ 01/29/24 22:14:37.429
  STEP: Waiting for pod with binary data @ 01/29/24 22:14:37.437
  Jan 29 22:14:37.448: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8902" for this suite. @ 01/29/24 22:14:37.452
• [2.075 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance]
test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 01/29/24 22:14:37.46
  Jan 29 22:14:37.460: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename events @ 01/29/24 22:14:37.461
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:14:37.474
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:14:37.479
  STEP: creating a test event @ 01/29/24 22:14:37.484
  STEP: listing events in all namespaces @ 01/29/24 22:14:37.492
  STEP: listing events in test namespace @ 01/29/24 22:14:37.497
  STEP: listing events with field selection filtering on source @ 01/29/24 22:14:37.501
  STEP: listing events with field selection filtering on reportingController @ 01/29/24 22:14:37.504
  STEP: getting the test event @ 01/29/24 22:14:37.507
  STEP: patching the test event @ 01/29/24 22:14:37.51
  STEP: getting the test event @ 01/29/24 22:14:37.521
  STEP: updating the test event @ 01/29/24 22:14:37.524
  STEP: getting the test event @ 01/29/24 22:14:37.531
  STEP: deleting the test event @ 01/29/24 22:14:37.534
  STEP: listing events in all namespaces @ 01/29/24 22:14:37.542
  STEP: listing events in test namespace @ 01/29/24 22:14:37.547
  Jan 29 22:14:37.550: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-4" for this suite. @ 01/29/24 22:14:37.555
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance]
test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 01/29/24 22:14:37.563
  Jan 29 22:14:37.563: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename deployment @ 01/29/24 22:14:37.565
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:14:37.58
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:14:37.584
  Jan 29 22:14:37.599: INFO: Pod name rollover-pod: Found 0 pods out of 1
  Jan 29 22:14:42.607: INFO: Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 01/29/24 22:14:42.607
  Jan 29 22:14:42.607: INFO: Waiting for pods owned by replica set "test-rollover-controller" to become ready
  Jan 29 22:14:44.613: INFO: Creating deployment "test-rollover-deployment"
  Jan 29 22:14:44.625: INFO: Make sure deployment "test-rollover-deployment" performs scaling operations
  Jan 29 22:14:46.634: INFO: Check revision of new replica set for deployment "test-rollover-deployment"
  Jan 29 22:14:46.646: INFO: Ensure that both replica sets have 1 created replica
  Jan 29 22:14:46.653: INFO: Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  Jan 29 22:14:46.664: INFO: Updating deployment test-rollover-deployment
  Jan 29 22:14:46.664: INFO: Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  Jan 29 22:14:48.680: INFO: Wait for revision update of deployment "test-rollover-deployment" to 2
  Jan 29 22:14:48.688: INFO: Make sure deployment "test-rollover-deployment" is complete
  Jan 29 22:14:48.698: INFO: all replica sets need to contain the pod-template-hash label
  Jan 29 22:14:48.698: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.January, 29, 22, 14, 44, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 29, 22, 14, 44, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.January, 29, 22, 14, 47, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 29, 22, 14, 44, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jan 29 22:14:50.709: INFO: all replica sets need to contain the pod-template-hash label
  Jan 29 22:14:50.710: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.January, 29, 22, 14, 44, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 29, 22, 14, 44, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.January, 29, 22, 14, 47, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 29, 22, 14, 44, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jan 29 22:14:52.709: INFO: all replica sets need to contain the pod-template-hash label
  Jan 29 22:14:52.709: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.January, 29, 22, 14, 44, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 29, 22, 14, 44, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.January, 29, 22, 14, 47, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 29, 22, 14, 44, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jan 29 22:14:54.708: INFO: all replica sets need to contain the pod-template-hash label
  Jan 29 22:14:54.708: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.January, 29, 22, 14, 44, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 29, 22, 14, 44, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.January, 29, 22, 14, 47, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 29, 22, 14, 44, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jan 29 22:14:56.709: INFO: all replica sets need to contain the pod-template-hash label
  Jan 29 22:14:56.709: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.January, 29, 22, 14, 44, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 29, 22, 14, 44, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.January, 29, 22, 14, 47, 0, time.Local), LastTransitionTime:time.Date(2024, time.January, 29, 22, 14, 44, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jan 29 22:14:58.709: INFO: 
  Jan 29 22:14:58.709: INFO: Ensure that both old replica sets have no replicas
  Jan 29 22:14:58.720: INFO: Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1322",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5ab2d1aa-9401-4714-9a23-6bf379778335",
      ResourceVersion: (string) (len=5) "25555",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842163284,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842163286,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842163297,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842163284,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842163284,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842163297,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842163284,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-5d484bf7f9\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jan 29 22:14:58.735: INFO: New ReplicaSet "test-rollover-deployment-5d484bf7f9" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-5d484bf7f9",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1322",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d91f99cf-f101-4175-99a5-c19351d8e278",
      ResourceVersion: (string) (len=5) "25545",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842163286,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "5ab2d1aa-9401-4714-9a23-6bf379778335",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842163286,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 35 61 62 32 64 31  61 61 2d 39 34 30 31 2d  |\"5ab2d1aa-9401-|
              00000120  34 37 31 34 2d 39 61 32  33 2d 36 62 66 33 37 39  |4714-9a23-6bf379|
              00000130  37 37 38 33 33 35 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |778335\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842163297,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9",
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9",
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jan 29 22:14:58.740: INFO: All old ReplicaSets of Deployment "test-rollover-deployment":
  Jan 29 22:14:58.741: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1322",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5d88483a-2f63-4baa-bc70-f32ddada3311",
      ResourceVersion: (string) (len=5) "25554",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842163277,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "5ab2d1aa-9401-4714-9a23-6bf379778335",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842163277,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842163297,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  35 61 62 32 64 31 61 61  2d 39 34 30 31 2d 34 37  |5ab2d1aa-9401-47|
              000000c0  31 34 2d 39 61 32 33 2d  36 62 66 33 37 39 37 37  |14-9a23-6bf37977|
              000000d0  38 33 33 35 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |8335\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842163297,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jan 29 22:14:58.744: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-664fc6c874",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1322",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a9e4ede6-30ef-40f1-91c7-ccc138978599",
      ResourceVersion: (string) (len=5) "25512",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842163284,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "5ab2d1aa-9401-4714-9a23-6bf379778335",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842163286,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 35 61 62 32 64 31  61 61 2d 39 34 30 31 2d  |\"5ab2d1aa-9401-|
              00000120  34 37 31 34 2d 39 61 32  33 2d 36 62 66 33 37 39  |4714-9a23-6bf379|
              00000130  37 37 38 33 33 35 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |778335\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842163286,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jan 29 22:14:58.750: INFO: Pod "test-rollover-deployment-5d484bf7f9-8wffm" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-5d484bf7f9-8wffm",
      GenerateName: (string) (len=36) "test-rollover-deployment-5d484bf7f9-",
      Namespace: (string) (len=15) "deployment-1322",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "aae4d5cf-f6bf-4b90-b20c-b2bde5db2773",
      ResourceVersion: (string) (len=5) "25521",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842163286,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-5d484bf7f9",
          UID: (types.UID) (len=36) "d91f99cf-f101-4175-99a5-c19351d8e278",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842163286,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 39  31 66 39 39 63 66 2d 66  |d\":\"d91f99cf-f|
              00000090  31 30 31 2d 34 31 37 35  2d 39 39 61 35 2d 63 31  |101-4175-99a5-c1|
              000000a0  39 33 35 31 64 38 65 32  37 38 5c 22 7d 22 3a 7b  |9351d8e278\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842163287,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=519) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 34 34 2e 32  2e 31 33 39 5c 22 7d 22  |10.244.2.139\"}"|
              000001e0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              000001f0  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000200  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-n96gb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-n96gb",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodeb14",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842163286,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842163287,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842163287,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63842163286,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.100.114",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=12) "10.244.2.139",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.2.139"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63842163286,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63842163287,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:2c5b5b056076334e4cf431d964d102e44cbca8f1e6b16ac1e477a0ffbe6caac4",
          ContainerID: (string) (len=77) "containerd://20ddbf512ffb98026b646dbeb511f32140b5e63ab38d46e0b77baec6c4c2d806",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jan 29 22:14:58.753: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1322" for this suite. @ 01/29/24 22:14:58.758
• [21.201 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:47
  STEP: Creating a kubernetes client @ 01/29/24 22:14:58.764
  Jan 29 22:14:58.764: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename configmap @ 01/29/24 22:14:58.766
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:14:58.781
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:14:58.785
  STEP: Creating configMap with name configmap-test-volume-cb6bb4b5-8d9c-49fa-8a2c-594ce1cb4005 @ 01/29/24 22:14:58.79
  STEP: Creating a pod to test consume configMaps @ 01/29/24 22:14:58.795
  STEP: Saw pod success @ 01/29/24 22:15:02.823
  Jan 29 22:15:02.826: INFO: Trying to get logs from node nodeb14 pod pod-configmaps-2f3ecc6b-83ee-4d5f-ae5e-3142fa966226 container agnhost-container: <nil>
  STEP: delete the pod @ 01/29/24 22:15:02.836
  Jan 29 22:15:02.849: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1774" for this suite. @ 01/29/24 22:15:02.854
• [4.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance]
test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 01/29/24 22:15:02.868
  Jan 29 22:15:02.868: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename subpath @ 01/29/24 22:15:02.87
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:15:02.882
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:15:02.886
  STEP: Setting up data @ 01/29/24 22:15:02.891
  STEP: Creating pod pod-subpath-test-projected-qzrl @ 01/29/24 22:15:02.901
  STEP: Creating a pod to test atomic-volume-subpath @ 01/29/24 22:15:02.901
  STEP: Saw pod success @ 01/29/24 22:15:26.985
  Jan 29 22:15:26.988: INFO: Trying to get logs from node nodeb14 pod pod-subpath-test-projected-qzrl container test-container-subpath-projected-qzrl: <nil>
  STEP: delete the pod @ 01/29/24 22:15:27
  STEP: Deleting pod pod-subpath-test-projected-qzrl @ 01/29/24 22:15:27.015
  Jan 29 22:15:27.015: INFO: Deleting pod "pod-subpath-test-projected-qzrl" in namespace "subpath-9693"
  Jan 29 22:15:27.018: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-9693" for this suite. @ 01/29/24 22:15:27.023
• [24.160 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works  [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:58
  STEP: Creating a kubernetes client @ 01/29/24 22:15:27.029
  Jan 29 22:15:27.029: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename custom-resource-definition @ 01/29/24 22:15:27.031
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:15:27.047
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:15:27.052
  Jan 29 22:15:27.056: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  Jan 29 22:15:28.087: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-3188" for this suite. @ 01/29/24 22:15:28.093
• [1.073 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:163
  STEP: Creating a kubernetes client @ 01/29/24 22:15:28.103
  Jan 29 22:15:28.103: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename downward-api @ 01/29/24 22:15:28.105
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:15:28.118
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:15:28.123
  STEP: Creating the pod @ 01/29/24 22:15:28.127
  Jan 29 22:15:30.677: INFO: Successfully updated pod "annotationupdate42a9d6b7-a081-4a27-8a25-7c4d2ce8af13"
  Jan 29 22:15:34.708: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4169" for this suite. @ 01/29/24 22:15:34.713
• [6.615 seconds]
------------------------------
S
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance]
test/e2e/network/service.go:1416
  STEP: Creating a kubernetes client @ 01/29/24 22:15:34.719
  Jan 29 22:15:34.719: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename services @ 01/29/24 22:15:34.721
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:15:34.741
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:15:34.746
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-4285 @ 01/29/24 22:15:34.753
  STEP: changing the ExternalName service to type=ClusterIP @ 01/29/24 22:15:34.758
  STEP: creating replication controller externalname-service in namespace services-4285 @ 01/29/24 22:15:34.778
  I0129 22:15:34.784715      23 runners.go:197] Created replication controller with name: externalname-service, namespace: services-4285, replica count: 2
  I0129 22:15:37.836635      23 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jan 29 22:15:37.836: INFO: Creating new exec pod
  Jan 29 22:15:40.853: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=services-4285 exec execpodzwxfg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Jan 29 22:15:41.073: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Jan 29 22:15:41.073: INFO: stdout: "externalname-service-428sc"
  Jan 29 22:15:41.073: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=services-4285 exec execpodzwxfg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.110.134.113 80'
  Jan 29 22:15:41.293: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.110.134.113 80\nConnection to 10.110.134.113 80 port [tcp/http] succeeded!\n"
  Jan 29 22:15:41.293: INFO: stdout: "externalname-service-qksxl"
  Jan 29 22:15:41.293: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Jan 29 22:15:41.300: INFO: Cleaning up the ExternalName to ClusterIP test service
  STEP: Destroying namespace "services-4285" for this suite. @ 01/29/24 22:15:41.32
• [6.606 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance]
test/e2e/apimachinery/namespace.go:272
  STEP: Creating a kubernetes client @ 01/29/24 22:15:41.326
  Jan 29 22:15:41.326: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename namespaces @ 01/29/24 22:15:41.328
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:15:41.341
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:15:41.345
  STEP: creating a Namespace @ 01/29/24 22:15:41.35
  STEP: patching the Namespace @ 01/29/24 22:15:41.36
  STEP: get the Namespace and ensuring it has the label @ 01/29/24 22:15:41.365
  Jan 29 22:15:41.368: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-1044" for this suite. @ 01/29/24 22:15:41.372
  STEP: Destroying namespace "nspatchtest-fa82750d-efb8-43b3-8afd-bcf128785ba7-9635" for this suite. @ 01/29/24 22:15:41.376
• [0.056 seconds]
------------------------------
S
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/security_context.go:528
  STEP: Creating a kubernetes client @ 01/29/24 22:15:41.383
  Jan 29 22:15:41.383: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename security-context-test @ 01/29/24 22:15:41.384
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:15:41.396
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:15:41.401
  Jan 29 22:15:45.445: INFO: Got logs for pod "busybox-privileged-false-c67a3a3f-97ac-4c1c-93cd-a07c0d51b4e5": "ip: RTNETLINK answers: Operation not permitted\n"
  Jan 29 22:15:45.445: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-3704" for this suite. @ 01/29/24 22:15:45.45
• [4.075 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance]
test/e2e/apimachinery/field_validation.go:474
  STEP: Creating a kubernetes client @ 01/29/24 22:15:45.459
  Jan 29 22:15:45.459: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename field-validation @ 01/29/24 22:15:45.461
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:15:45.478
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:15:45.482
  Jan 29 22:15:45.487: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  W0129 22:15:48.059826      23 warnings.go:70] unknown field "alpha"
  W0129 22:15:48.059886      23 warnings.go:70] unknown field "beta"
  W0129 22:15:48.059900      23 warnings.go:70] unknown field "delta"
  W0129 22:15:48.059911      23 warnings.go:70] unknown field "epsilon"
  W0129 22:15:48.059923      23 warnings.go:70] unknown field "gamma"
  Jan 29 22:15:48.592: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-4747" for this suite. @ 01/29/24 22:15:48.614
• [3.160 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance]
test/e2e/network/endpointslice.go:104
  STEP: Creating a kubernetes client @ 01/29/24 22:15:48.622
  Jan 29 22:15:48.622: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename endpointslice @ 01/29/24 22:15:48.623
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:15:48.637
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:15:48.642
  Jan 29 22:15:50.701: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-9461" for this suite. @ 01/29/24 22:15:50.706
• [2.090 seconds]
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:52
  STEP: Creating a kubernetes client @ 01/29/24 22:15:50.712
  Jan 29 22:15:50.712: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename kubelet-test @ 01/29/24 22:15:50.714
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:15:50.726
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:15:50.73
  Jan 29 22:15:52.763: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-3938" for this suite. @ 01/29/24 22:15:52.769
• [2.064 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 01/29/24 22:15:52.779
  Jan 29 22:15:52.779: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename container-runtime @ 01/29/24 22:15:52.78
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:15:52.795
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:15:52.799
  STEP: create the container @ 01/29/24 22:15:52.804
  W0129 22:15:52.815904      23 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 01/29/24 22:15:52.816
  STEP: get the container status @ 01/29/24 22:15:55.841
  STEP: the container should be terminated @ 01/29/24 22:15:55.844
  STEP: the termination message should be set @ 01/29/24 22:15:55.844
  Jan 29 22:15:55.844: INFO: Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 01/29/24 22:15:55.845
  Jan 29 22:15:55.853: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-8038" for this suite. @ 01/29/24 22:15:55.861
• [3.088 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:208
  STEP: Creating a kubernetes client @ 01/29/24 22:15:55.867
  Jan 29 22:15:55.867: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename projected @ 01/29/24 22:15:55.868
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:15:55.879
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:15:55.883
  STEP: Creating a pod to test downward API volume plugin @ 01/29/24 22:15:55.887
  STEP: Saw pod success @ 01/29/24 22:15:59.91
  Jan 29 22:15:59.913: INFO: Trying to get logs from node nodeb14 pod downwardapi-volume-2e5cfb77-0556-4999-8ded-4b7ecf19f964 container client-container: <nil>
  STEP: delete the pod @ 01/29/24 22:15:59.925
  Jan 29 22:15:59.941: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-954" for this suite. @ 01/29/24 22:15:59.946
• [4.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:218
  STEP: Creating a kubernetes client @ 01/29/24 22:15:59.952
  Jan 29 22:15:59.952: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename downward-api @ 01/29/24 22:15:59.954
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:15:59.966
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:15:59.97
  STEP: Creating a pod to test downward api env vars @ 01/29/24 22:15:59.975
  STEP: Saw pod success @ 01/29/24 22:16:01.99
  Jan 29 22:16:01.994: INFO: Trying to get logs from node nodeb14 pod downward-api-b0044cd2-03cd-4c27-8a5b-700691b9e240 container dapi-container: <nil>
  STEP: delete the pod @ 01/29/24 22:16:02.006
  Jan 29 22:16:02.021: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3444" for this suite. @ 01/29/24 22:16:02.026
• [2.079 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for services  [Conformance]
test/e2e/network/dns.go:137
  STEP: Creating a kubernetes client @ 01/29/24 22:16:02.032
  Jan 29 22:16:02.032: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename dns @ 01/29/24 22:16:02.033
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:16:02.047
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:16:02.051
  STEP: Creating a test headless service @ 01/29/24 22:16:02.055
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-6297.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-6297.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-6297.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-6297.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-6297.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-6297.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-6297.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-6297.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-6297.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-6297.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-6297.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-6297.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 237.147.100.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.100.147.237_udp@PTR;check="$$(dig +tcp +noall +answer +search 237.147.100.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.100.147.237_tcp@PTR;sleep 1; done
   @ 01/29/24 22:16:02.078
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-6297.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-6297.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-6297.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-6297.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-6297.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-6297.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-6297.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-6297.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-6297.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-6297.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-6297.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-6297.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 237.147.100.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.100.147.237_udp@PTR;check="$$(dig +tcp +noall +answer +search 237.147.100.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.100.147.237_tcp@PTR;sleep 1; done
   @ 01/29/24 22:16:02.078
  STEP: creating a pod to probe DNS @ 01/29/24 22:16:02.078
  STEP: submitting the pod to kubernetes @ 01/29/24 22:16:02.078
  STEP: retrieving the pod @ 01/29/24 22:16:04.098
  STEP: looking for the results for each expected name from probers @ 01/29/24 22:16:04.102
  Jan 29 22:16:04.109: INFO: Unable to read wheezy_udp@dns-test-service.dns-6297.svc.cluster.local from pod dns-6297/dns-test-fbf508a9-e70b-4cdb-9c47-e45bc689bb0d: the server could not find the requested resource (get pods dns-test-fbf508a9-e70b-4cdb-9c47-e45bc689bb0d)
  Jan 29 22:16:04.114: INFO: Unable to read wheezy_tcp@dns-test-service.dns-6297.svc.cluster.local from pod dns-6297/dns-test-fbf508a9-e70b-4cdb-9c47-e45bc689bb0d: the server could not find the requested resource (get pods dns-test-fbf508a9-e70b-4cdb-9c47-e45bc689bb0d)
  Jan 29 22:16:04.118: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-6297.svc.cluster.local from pod dns-6297/dns-test-fbf508a9-e70b-4cdb-9c47-e45bc689bb0d: the server could not find the requested resource (get pods dns-test-fbf508a9-e70b-4cdb-9c47-e45bc689bb0d)
  Jan 29 22:16:04.124: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-6297.svc.cluster.local from pod dns-6297/dns-test-fbf508a9-e70b-4cdb-9c47-e45bc689bb0d: the server could not find the requested resource (get pods dns-test-fbf508a9-e70b-4cdb-9c47-e45bc689bb0d)
  Jan 29 22:16:04.146: INFO: Unable to read jessie_udp@dns-test-service.dns-6297.svc.cluster.local from pod dns-6297/dns-test-fbf508a9-e70b-4cdb-9c47-e45bc689bb0d: the server could not find the requested resource (get pods dns-test-fbf508a9-e70b-4cdb-9c47-e45bc689bb0d)
  Jan 29 22:16:04.151: INFO: Unable to read jessie_tcp@dns-test-service.dns-6297.svc.cluster.local from pod dns-6297/dns-test-fbf508a9-e70b-4cdb-9c47-e45bc689bb0d: the server could not find the requested resource (get pods dns-test-fbf508a9-e70b-4cdb-9c47-e45bc689bb0d)
  Jan 29 22:16:04.158: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-6297.svc.cluster.local from pod dns-6297/dns-test-fbf508a9-e70b-4cdb-9c47-e45bc689bb0d: the server could not find the requested resource (get pods dns-test-fbf508a9-e70b-4cdb-9c47-e45bc689bb0d)
  Jan 29 22:16:04.163: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-6297.svc.cluster.local from pod dns-6297/dns-test-fbf508a9-e70b-4cdb-9c47-e45bc689bb0d: the server could not find the requested resource (get pods dns-test-fbf508a9-e70b-4cdb-9c47-e45bc689bb0d)
  Jan 29 22:16:04.181: INFO: Lookups using dns-6297/dns-test-fbf508a9-e70b-4cdb-9c47-e45bc689bb0d failed for: [wheezy_udp@dns-test-service.dns-6297.svc.cluster.local wheezy_tcp@dns-test-service.dns-6297.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-6297.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-6297.svc.cluster.local jessie_udp@dns-test-service.dns-6297.svc.cluster.local jessie_tcp@dns-test-service.dns-6297.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-6297.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-6297.svc.cluster.local]

  Jan 29 22:16:04.188: INFO: Pod client logs for webserver: 
  Jan 29 22:16:04.196: INFO: Pod client logs for querier: 
  Jan 29 22:16:04.203: INFO: Pod client logs for jessie-querier: 
  Jan 29 22:16:09.210: INFO: Unable to read wheezy_udp@dns-test-service.dns-6297.svc.cluster.local from pod dns-6297/dns-test-fbf508a9-e70b-4cdb-9c47-e45bc689bb0d: the server could not find the requested resource (get pods dns-test-fbf508a9-e70b-4cdb-9c47-e45bc689bb0d)
  Jan 29 22:16:09.215: INFO: Unable to read wheezy_tcp@dns-test-service.dns-6297.svc.cluster.local from pod dns-6297/dns-test-fbf508a9-e70b-4cdb-9c47-e45bc689bb0d: the server could not find the requested resource (get pods dns-test-fbf508a9-e70b-4cdb-9c47-e45bc689bb0d)
  Jan 29 22:16:09.220: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-6297.svc.cluster.local from pod dns-6297/dns-test-fbf508a9-e70b-4cdb-9c47-e45bc689bb0d: the server could not find the requested resource (get pods dns-test-fbf508a9-e70b-4cdb-9c47-e45bc689bb0d)
  Jan 29 22:16:09.225: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-6297.svc.cluster.local from pod dns-6297/dns-test-fbf508a9-e70b-4cdb-9c47-e45bc689bb0d: the server could not find the requested resource (get pods dns-test-fbf508a9-e70b-4cdb-9c47-e45bc689bb0d)
  Jan 29 22:16:09.253: INFO: Unable to read jessie_udp@dns-test-service.dns-6297.svc.cluster.local from pod dns-6297/dns-test-fbf508a9-e70b-4cdb-9c47-e45bc689bb0d: the server could not find the requested resource (get pods dns-test-fbf508a9-e70b-4cdb-9c47-e45bc689bb0d)
  Jan 29 22:16:09.259: INFO: Unable to read jessie_tcp@dns-test-service.dns-6297.svc.cluster.local from pod dns-6297/dns-test-fbf508a9-e70b-4cdb-9c47-e45bc689bb0d: the server could not find the requested resource (get pods dns-test-fbf508a9-e70b-4cdb-9c47-e45bc689bb0d)
  Jan 29 22:16:09.264: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-6297.svc.cluster.local from pod dns-6297/dns-test-fbf508a9-e70b-4cdb-9c47-e45bc689bb0d: the server could not find the requested resource (get pods dns-test-fbf508a9-e70b-4cdb-9c47-e45bc689bb0d)
  Jan 29 22:16:09.269: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-6297.svc.cluster.local from pod dns-6297/dns-test-fbf508a9-e70b-4cdb-9c47-e45bc689bb0d: the server could not find the requested resource (get pods dns-test-fbf508a9-e70b-4cdb-9c47-e45bc689bb0d)
  Jan 29 22:16:09.288: INFO: Lookups using dns-6297/dns-test-fbf508a9-e70b-4cdb-9c47-e45bc689bb0d failed for: [wheezy_udp@dns-test-service.dns-6297.svc.cluster.local wheezy_tcp@dns-test-service.dns-6297.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-6297.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-6297.svc.cluster.local jessie_udp@dns-test-service.dns-6297.svc.cluster.local jessie_tcp@dns-test-service.dns-6297.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-6297.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-6297.svc.cluster.local]

  Jan 29 22:16:09.298: INFO: Pod client logs for webserver: 
  Jan 29 22:16:09.307: INFO: Pod client logs for querier: 
  Jan 29 22:16:09.315: INFO: Pod client logs for jessie-querier: 
  Jan 29 22:16:14.210: INFO: Unable to read wheezy_udp@dns-test-service.dns-6297.svc.cluster.local from pod dns-6297/dns-test-fbf508a9-e70b-4cdb-9c47-e45bc689bb0d: the server could not find the requested resource (get pods dns-test-fbf508a9-e70b-4cdb-9c47-e45bc689bb0d)
  Jan 29 22:16:14.215: INFO: Unable to read wheezy_tcp@dns-test-service.dns-6297.svc.cluster.local from pod dns-6297/dns-test-fbf508a9-e70b-4cdb-9c47-e45bc689bb0d: the server could not find the requested resource (get pods dns-test-fbf508a9-e70b-4cdb-9c47-e45bc689bb0d)
  Jan 29 22:16:14.220: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-6297.svc.cluster.local from pod dns-6297/dns-test-fbf508a9-e70b-4cdb-9c47-e45bc689bb0d: the server could not find the requested resource (get pods dns-test-fbf508a9-e70b-4cdb-9c47-e45bc689bb0d)
  Jan 29 22:16:14.224: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-6297.svc.cluster.local from pod dns-6297/dns-test-fbf508a9-e70b-4cdb-9c47-e45bc689bb0d: the server could not find the requested resource (get pods dns-test-fbf508a9-e70b-4cdb-9c47-e45bc689bb0d)
  Jan 29 22:16:14.248: INFO: Unable to read jessie_udp@dns-test-service.dns-6297.svc.cluster.local from pod dns-6297/dns-test-fbf508a9-e70b-4cdb-9c47-e45bc689bb0d: the server could not find the requested resource (get pods dns-test-fbf508a9-e70b-4cdb-9c47-e45bc689bb0d)
  Jan 29 22:16:14.256: INFO: Unable to read jessie_tcp@dns-test-service.dns-6297.svc.cluster.local from pod dns-6297/dns-test-fbf508a9-e70b-4cdb-9c47-e45bc689bb0d: the server could not find the requested resource (get pods dns-test-fbf508a9-e70b-4cdb-9c47-e45bc689bb0d)
  Jan 29 22:16:14.260: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-6297.svc.cluster.local from pod dns-6297/dns-test-fbf508a9-e70b-4cdb-9c47-e45bc689bb0d: the server could not find the requested resource (get pods dns-test-fbf508a9-e70b-4cdb-9c47-e45bc689bb0d)
  Jan 29 22:16:14.265: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-6297.svc.cluster.local from pod dns-6297/dns-test-fbf508a9-e70b-4cdb-9c47-e45bc689bb0d: the server could not find the requested resource (get pods dns-test-fbf508a9-e70b-4cdb-9c47-e45bc689bb0d)
  Jan 29 22:16:14.284: INFO: Lookups using dns-6297/dns-test-fbf508a9-e70b-4cdb-9c47-e45bc689bb0d failed for: [wheezy_udp@dns-test-service.dns-6297.svc.cluster.local wheezy_tcp@dns-test-service.dns-6297.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-6297.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-6297.svc.cluster.local jessie_udp@dns-test-service.dns-6297.svc.cluster.local jessie_tcp@dns-test-service.dns-6297.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-6297.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-6297.svc.cluster.local]

  Jan 29 22:16:14.293: INFO: Pod client logs for webserver: 
  Jan 29 22:16:14.300: INFO: Pod client logs for querier: 
  Jan 29 22:16:14.307: INFO: Pod client logs for jessie-querier: 
  Jan 29 22:16:19.208: INFO: Unable to read wheezy_udp@dns-test-service.dns-6297.svc.cluster.local from pod dns-6297/dns-test-fbf508a9-e70b-4cdb-9c47-e45bc689bb0d: the server could not find the requested resource (get pods dns-test-fbf508a9-e70b-4cdb-9c47-e45bc689bb0d)
  Jan 29 22:16:19.213: INFO: Unable to read wheezy_tcp@dns-test-service.dns-6297.svc.cluster.local from pod dns-6297/dns-test-fbf508a9-e70b-4cdb-9c47-e45bc689bb0d: the server could not find the requested resource (get pods dns-test-fbf508a9-e70b-4cdb-9c47-e45bc689bb0d)
  Jan 29 22:16:19.216: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-6297.svc.cluster.local from pod dns-6297/dns-test-fbf508a9-e70b-4cdb-9c47-e45bc689bb0d: the server could not find the requested resource (get pods dns-test-fbf508a9-e70b-4cdb-9c47-e45bc689bb0d)
  Jan 29 22:16:19.220: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-6297.svc.cluster.local from pod dns-6297/dns-test-fbf508a9-e70b-4cdb-9c47-e45bc689bb0d: the server could not find the requested resource (get pods dns-test-fbf508a9-e70b-4cdb-9c47-e45bc689bb0d)
  Jan 29 22:16:19.240: INFO: Unable to read jessie_udp@dns-test-service.dns-6297.svc.cluster.local from pod dns-6297/dns-test-fbf508a9-e70b-4cdb-9c47-e45bc689bb0d: the server could not find the requested resource (get pods dns-test-fbf508a9-e70b-4cdb-9c47-e45bc689bb0d)
  Jan 29 22:16:19.244: INFO: Unable to read jessie_tcp@dns-test-service.dns-6297.svc.cluster.local from pod dns-6297/dns-test-fbf508a9-e70b-4cdb-9c47-e45bc689bb0d: the server could not find the requested resource (get pods dns-test-fbf508a9-e70b-4cdb-9c47-e45bc689bb0d)
  Jan 29 22:16:19.248: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-6297.svc.cluster.local from pod dns-6297/dns-test-fbf508a9-e70b-4cdb-9c47-e45bc689bb0d: the server could not find the requested resource (get pods dns-test-fbf508a9-e70b-4cdb-9c47-e45bc689bb0d)
  Jan 29 22:16:19.252: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-6297.svc.cluster.local from pod dns-6297/dns-test-fbf508a9-e70b-4cdb-9c47-e45bc689bb0d: the server could not find the requested resource (get pods dns-test-fbf508a9-e70b-4cdb-9c47-e45bc689bb0d)
  Jan 29 22:16:19.268: INFO: Lookups using dns-6297/dns-test-fbf508a9-e70b-4cdb-9c47-e45bc689bb0d failed for: [wheezy_udp@dns-test-service.dns-6297.svc.cluster.local wheezy_tcp@dns-test-service.dns-6297.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-6297.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-6297.svc.cluster.local jessie_udp@dns-test-service.dns-6297.svc.cluster.local jessie_tcp@dns-test-service.dns-6297.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-6297.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-6297.svc.cluster.local]

  Jan 29 22:16:19.275: INFO: Pod client logs for webserver: 
  Jan 29 22:16:19.281: INFO: Pod client logs for querier: 
  Jan 29 22:16:19.287: INFO: Pod client logs for jessie-querier: 
  Jan 29 22:16:24.212: INFO: Unable to read wheezy_udp@dns-test-service.dns-6297.svc.cluster.local from pod dns-6297/dns-test-fbf508a9-e70b-4cdb-9c47-e45bc689bb0d: the server could not find the requested resource (get pods dns-test-fbf508a9-e70b-4cdb-9c47-e45bc689bb0d)
  Jan 29 22:16:24.217: INFO: Unable to read wheezy_tcp@dns-test-service.dns-6297.svc.cluster.local from pod dns-6297/dns-test-fbf508a9-e70b-4cdb-9c47-e45bc689bb0d: the server could not find the requested resource (get pods dns-test-fbf508a9-e70b-4cdb-9c47-e45bc689bb0d)
  Jan 29 22:16:24.221: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-6297.svc.cluster.local from pod dns-6297/dns-test-fbf508a9-e70b-4cdb-9c47-e45bc689bb0d: the server could not find the requested resource (get pods dns-test-fbf508a9-e70b-4cdb-9c47-e45bc689bb0d)
  Jan 29 22:16:24.225: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-6297.svc.cluster.local from pod dns-6297/dns-test-fbf508a9-e70b-4cdb-9c47-e45bc689bb0d: the server could not find the requested resource (get pods dns-test-fbf508a9-e70b-4cdb-9c47-e45bc689bb0d)
  Jan 29 22:16:24.258: INFO: Unable to read jessie_udp@dns-test-service.dns-6297.svc.cluster.local from pod dns-6297/dns-test-fbf508a9-e70b-4cdb-9c47-e45bc689bb0d: the server could not find the requested resource (get pods dns-test-fbf508a9-e70b-4cdb-9c47-e45bc689bb0d)
  Jan 29 22:16:24.262: INFO: Unable to read jessie_tcp@dns-test-service.dns-6297.svc.cluster.local from pod dns-6297/dns-test-fbf508a9-e70b-4cdb-9c47-e45bc689bb0d: the server could not find the requested resource (get pods dns-test-fbf508a9-e70b-4cdb-9c47-e45bc689bb0d)
  Jan 29 22:16:24.267: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-6297.svc.cluster.local from pod dns-6297/dns-test-fbf508a9-e70b-4cdb-9c47-e45bc689bb0d: the server could not find the requested resource (get pods dns-test-fbf508a9-e70b-4cdb-9c47-e45bc689bb0d)
  Jan 29 22:16:24.271: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-6297.svc.cluster.local from pod dns-6297/dns-test-fbf508a9-e70b-4cdb-9c47-e45bc689bb0d: the server could not find the requested resource (get pods dns-test-fbf508a9-e70b-4cdb-9c47-e45bc689bb0d)
  Jan 29 22:16:24.299: INFO: Lookups using dns-6297/dns-test-fbf508a9-e70b-4cdb-9c47-e45bc689bb0d failed for: [wheezy_udp@dns-test-service.dns-6297.svc.cluster.local wheezy_tcp@dns-test-service.dns-6297.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-6297.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-6297.svc.cluster.local jessie_udp@dns-test-service.dns-6297.svc.cluster.local jessie_tcp@dns-test-service.dns-6297.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-6297.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-6297.svc.cluster.local]

  Jan 29 22:16:24.309: INFO: Pod client logs for webserver: 
  Jan 29 22:16:24.317: INFO: Pod client logs for querier: 
  Jan 29 22:16:24.324: INFO: Pod client logs for jessie-querier: 
  Jan 29 22:16:29.210: INFO: Unable to read wheezy_udp@dns-test-service.dns-6297.svc.cluster.local from pod dns-6297/dns-test-fbf508a9-e70b-4cdb-9c47-e45bc689bb0d: the server could not find the requested resource (get pods dns-test-fbf508a9-e70b-4cdb-9c47-e45bc689bb0d)
  Jan 29 22:16:29.215: INFO: Unable to read wheezy_tcp@dns-test-service.dns-6297.svc.cluster.local from pod dns-6297/dns-test-fbf508a9-e70b-4cdb-9c47-e45bc689bb0d: the server could not find the requested resource (get pods dns-test-fbf508a9-e70b-4cdb-9c47-e45bc689bb0d)
  Jan 29 22:16:29.221: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-6297.svc.cluster.local from pod dns-6297/dns-test-fbf508a9-e70b-4cdb-9c47-e45bc689bb0d: the server could not find the requested resource (get pods dns-test-fbf508a9-e70b-4cdb-9c47-e45bc689bb0d)
  Jan 29 22:16:29.227: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-6297.svc.cluster.local from pod dns-6297/dns-test-fbf508a9-e70b-4cdb-9c47-e45bc689bb0d: the server could not find the requested resource (get pods dns-test-fbf508a9-e70b-4cdb-9c47-e45bc689bb0d)
  Jan 29 22:16:29.263: INFO: Unable to read jessie_udp@dns-test-service.dns-6297.svc.cluster.local from pod dns-6297/dns-test-fbf508a9-e70b-4cdb-9c47-e45bc689bb0d: the server could not find the requested resource (get pods dns-test-fbf508a9-e70b-4cdb-9c47-e45bc689bb0d)
  Jan 29 22:16:29.267: INFO: Unable to read jessie_tcp@dns-test-service.dns-6297.svc.cluster.local from pod dns-6297/dns-test-fbf508a9-e70b-4cdb-9c47-e45bc689bb0d: the server could not find the requested resource (get pods dns-test-fbf508a9-e70b-4cdb-9c47-e45bc689bb0d)
  Jan 29 22:16:29.271: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-6297.svc.cluster.local from pod dns-6297/dns-test-fbf508a9-e70b-4cdb-9c47-e45bc689bb0d: the server could not find the requested resource (get pods dns-test-fbf508a9-e70b-4cdb-9c47-e45bc689bb0d)
  Jan 29 22:16:29.275: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-6297.svc.cluster.local from pod dns-6297/dns-test-fbf508a9-e70b-4cdb-9c47-e45bc689bb0d: the server could not find the requested resource (get pods dns-test-fbf508a9-e70b-4cdb-9c47-e45bc689bb0d)
  Jan 29 22:16:29.295: INFO: Lookups using dns-6297/dns-test-fbf508a9-e70b-4cdb-9c47-e45bc689bb0d failed for: [wheezy_udp@dns-test-service.dns-6297.svc.cluster.local wheezy_tcp@dns-test-service.dns-6297.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-6297.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-6297.svc.cluster.local jessie_udp@dns-test-service.dns-6297.svc.cluster.local jessie_tcp@dns-test-service.dns-6297.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-6297.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-6297.svc.cluster.local]

  Jan 29 22:16:29.308: INFO: Pod client logs for webserver: 
  Jan 29 22:16:29.317: INFO: Pod client logs for querier: 
  Jan 29 22:16:29.325: INFO: Pod client logs for jessie-querier: 
  Jan 29 22:16:34.273: INFO: DNS probes using dns-6297/dns-test-fbf508a9-e70b-4cdb-9c47-e45bc689bb0d succeeded

  Jan 29 22:16:34.274: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 01/29/24 22:16:34.279
  STEP: deleting the test service @ 01/29/24 22:16:34.294
  STEP: deleting the test headless service @ 01/29/24 22:16:34.319
  STEP: Destroying namespace "dns-6297" for this suite. @ 01/29/24 22:16:34.327
• [32.300 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance]
test/e2e/network/service.go:2187
  STEP: Creating a kubernetes client @ 01/29/24 22:16:34.333
  Jan 29 22:16:34.333: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename services @ 01/29/24 22:16:34.335
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:16:34.349
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:16:34.352
  STEP: creating service in namespace services-71 @ 01/29/24 22:16:34.356
  STEP: creating service affinity-clusterip-transition in namespace services-71 @ 01/29/24 22:16:34.356
  STEP: creating replication controller affinity-clusterip-transition in namespace services-71 @ 01/29/24 22:16:34.369
  I0129 22:16:34.384205      23 runners.go:197] Created replication controller with name: affinity-clusterip-transition, namespace: services-71, replica count: 3
  I0129 22:16:37.436316      23 runners.go:197] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jan 29 22:16:37.445: INFO: Creating new exec pod
  Jan 29 22:16:40.471: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=services-71 exec execpod-affinityhghnf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  Jan 29 22:16:40.685: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
  Jan 29 22:16:40.685: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jan 29 22:16:40.685: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=services-71 exec execpod-affinityhghnf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.111.68.51 80'
  Jan 29 22:16:40.915: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.111.68.51 80\nConnection to 10.111.68.51 80 port [tcp/http] succeeded!\n"
  Jan 29 22:16:40.915: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jan 29 22:16:40.925: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=services-71 exec execpod-affinityhghnf -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.111.68.51:80/ ; done'
  Jan 29 22:16:41.246: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.111.68.51:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.111.68.51:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.111.68.51:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.111.68.51:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.111.68.51:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.111.68.51:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.111.68.51:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.111.68.51:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.111.68.51:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.111.68.51:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.111.68.51:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.111.68.51:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.111.68.51:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.111.68.51:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.111.68.51:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.111.68.51:80/\n"
  Jan 29 22:16:41.246: INFO: stdout: "\naffinity-clusterip-transition-tccnq\naffinity-clusterip-transition-tr4lw\naffinity-clusterip-transition-tr4lw\naffinity-clusterip-transition-tr4lw\naffinity-clusterip-transition-tr4lw\naffinity-clusterip-transition-lvw5k\naffinity-clusterip-transition-tccnq\naffinity-clusterip-transition-tccnq\naffinity-clusterip-transition-lvw5k\naffinity-clusterip-transition-tccnq\naffinity-clusterip-transition-lvw5k\naffinity-clusterip-transition-lvw5k\naffinity-clusterip-transition-tccnq\naffinity-clusterip-transition-lvw5k\naffinity-clusterip-transition-lvw5k\naffinity-clusterip-transition-tr4lw"
  Jan 29 22:16:41.246: INFO: Received response from host: affinity-clusterip-transition-tccnq
  Jan 29 22:16:41.246: INFO: Received response from host: affinity-clusterip-transition-tr4lw
  Jan 29 22:16:41.246: INFO: Received response from host: affinity-clusterip-transition-tr4lw
  Jan 29 22:16:41.246: INFO: Received response from host: affinity-clusterip-transition-tr4lw
  Jan 29 22:16:41.246: INFO: Received response from host: affinity-clusterip-transition-tr4lw
  Jan 29 22:16:41.246: INFO: Received response from host: affinity-clusterip-transition-lvw5k
  Jan 29 22:16:41.246: INFO: Received response from host: affinity-clusterip-transition-tccnq
  Jan 29 22:16:41.246: INFO: Received response from host: affinity-clusterip-transition-tccnq
  Jan 29 22:16:41.246: INFO: Received response from host: affinity-clusterip-transition-lvw5k
  Jan 29 22:16:41.246: INFO: Received response from host: affinity-clusterip-transition-tccnq
  Jan 29 22:16:41.246: INFO: Received response from host: affinity-clusterip-transition-lvw5k
  Jan 29 22:16:41.246: INFO: Received response from host: affinity-clusterip-transition-lvw5k
  Jan 29 22:16:41.246: INFO: Received response from host: affinity-clusterip-transition-tccnq
  Jan 29 22:16:41.246: INFO: Received response from host: affinity-clusterip-transition-lvw5k
  Jan 29 22:16:41.246: INFO: Received response from host: affinity-clusterip-transition-lvw5k
  Jan 29 22:16:41.246: INFO: Received response from host: affinity-clusterip-transition-tr4lw
  Jan 29 22:16:41.259: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=services-71 exec execpod-affinityhghnf -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.111.68.51:80/ ; done'
  Jan 29 22:16:41.592: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.111.68.51:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.111.68.51:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.111.68.51:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.111.68.51:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.111.68.51:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.111.68.51:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.111.68.51:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.111.68.51:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.111.68.51:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.111.68.51:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.111.68.51:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.111.68.51:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.111.68.51:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.111.68.51:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.111.68.51:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.111.68.51:80/\n"
  Jan 29 22:16:41.592: INFO: stdout: "\naffinity-clusterip-transition-tccnq\naffinity-clusterip-transition-tccnq\naffinity-clusterip-transition-tccnq\naffinity-clusterip-transition-tccnq\naffinity-clusterip-transition-tccnq\naffinity-clusterip-transition-tccnq\naffinity-clusterip-transition-tccnq\naffinity-clusterip-transition-tccnq\naffinity-clusterip-transition-tccnq\naffinity-clusterip-transition-tccnq\naffinity-clusterip-transition-tccnq\naffinity-clusterip-transition-tccnq\naffinity-clusterip-transition-tccnq\naffinity-clusterip-transition-tccnq\naffinity-clusterip-transition-tccnq\naffinity-clusterip-transition-tccnq"
  Jan 29 22:16:41.592: INFO: Received response from host: affinity-clusterip-transition-tccnq
  Jan 29 22:16:41.592: INFO: Received response from host: affinity-clusterip-transition-tccnq
  Jan 29 22:16:41.592: INFO: Received response from host: affinity-clusterip-transition-tccnq
  Jan 29 22:16:41.592: INFO: Received response from host: affinity-clusterip-transition-tccnq
  Jan 29 22:16:41.592: INFO: Received response from host: affinity-clusterip-transition-tccnq
  Jan 29 22:16:41.592: INFO: Received response from host: affinity-clusterip-transition-tccnq
  Jan 29 22:16:41.592: INFO: Received response from host: affinity-clusterip-transition-tccnq
  Jan 29 22:16:41.592: INFO: Received response from host: affinity-clusterip-transition-tccnq
  Jan 29 22:16:41.592: INFO: Received response from host: affinity-clusterip-transition-tccnq
  Jan 29 22:16:41.592: INFO: Received response from host: affinity-clusterip-transition-tccnq
  Jan 29 22:16:41.592: INFO: Received response from host: affinity-clusterip-transition-tccnq
  Jan 29 22:16:41.592: INFO: Received response from host: affinity-clusterip-transition-tccnq
  Jan 29 22:16:41.592: INFO: Received response from host: affinity-clusterip-transition-tccnq
  Jan 29 22:16:41.592: INFO: Received response from host: affinity-clusterip-transition-tccnq
  Jan 29 22:16:41.592: INFO: Received response from host: affinity-clusterip-transition-tccnq
  Jan 29 22:16:41.592: INFO: Received response from host: affinity-clusterip-transition-tccnq
  Jan 29 22:16:41.593: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Jan 29 22:16:41.599: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-71, will wait for the garbage collector to delete the pods @ 01/29/24 22:16:41.613
  Jan 29 22:16:41.681: INFO: Deleting ReplicationController affinity-clusterip-transition took: 12.950478ms
  Jan 29 22:16:41.782: INFO: Terminating ReplicationController affinity-clusterip-transition pods took: 100.873505ms
  STEP: Destroying namespace "services-71" for this suite. @ 01/29/24 22:16:45.105
• [10.779 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance]
test/e2e/network/endpointslice.go:355
  STEP: Creating a kubernetes client @ 01/29/24 22:16:45.116
  Jan 29 22:16:45.116: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename endpointslice @ 01/29/24 22:16:45.118
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:16:45.132
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:16:45.137
  STEP: getting /apis @ 01/29/24 22:16:45.142
  STEP: getting /apis/discovery.k8s.io @ 01/29/24 22:16:45.149
  STEP: getting /apis/discovery.k8s.iov1 @ 01/29/24 22:16:45.151
  STEP: creating @ 01/29/24 22:16:45.153
  STEP: getting @ 01/29/24 22:16:45.169
  STEP: listing @ 01/29/24 22:16:45.172
  STEP: watching @ 01/29/24 22:16:45.175
  Jan 29 22:16:45.175: INFO: starting watch
  STEP: cluster-wide listing @ 01/29/24 22:16:45.178
  STEP: cluster-wide watching @ 01/29/24 22:16:45.181
  Jan 29 22:16:45.182: INFO: starting watch
  STEP: patching @ 01/29/24 22:16:45.183
  STEP: updating @ 01/29/24 22:16:45.192
  Jan 29 22:16:45.202: INFO: waiting for watch events with expected annotations
  Jan 29 22:16:45.202: INFO: saw patched and updated annotations
  STEP: deleting @ 01/29/24 22:16:45.203
  STEP: deleting a collection @ 01/29/24 22:16:45.217
  Jan 29 22:16:45.234: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-1285" for this suite. @ 01/29/24 22:16:45.241
• [0.131 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:69
  STEP: Creating a kubernetes client @ 01/29/24 22:16:45.25
  Jan 29 22:16:45.250: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename downward-api @ 01/29/24 22:16:45.252
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:16:45.265
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:16:45.269
  STEP: Creating a pod to test downward API volume plugin @ 01/29/24 22:16:45.274
  STEP: Saw pod success @ 01/29/24 22:16:49.298
  Jan 29 22:16:49.303: INFO: Trying to get logs from node nodeb14 pod downwardapi-volume-94a63fdb-2e82-48c7-a669-6a92dbbf06c5 container client-container: <nil>
  STEP: delete the pod @ 01/29/24 22:16:49.313
  Jan 29 22:16:49.328: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5814" for this suite. @ 01/29/24 22:16:49.333
• [4.089 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance]
test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 01/29/24 22:16:49.341
  Jan 29 22:16:49.341: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename hostport @ 01/29/24 22:16:49.343
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:16:49.356
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:16:49.361
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 01/29/24 22:16:49.37
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 192.168.100.173 on the node which pod1 resides and expect scheduled @ 01/29/24 22:16:51.39
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 192.168.100.173 but use UDP protocol on the node which pod2 resides @ 01/29/24 22:17:03.441
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 01/29/24 22:17:07.478
  Jan 29 22:17:07.478: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 192.168.100.173 http://127.0.0.1:54323/hostname] Namespace:hostport-9531 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jan 29 22:17:07.478: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  Jan 29 22:17:07.480: INFO: ExecWithOptions: Clientset creation
  Jan 29 22:17:07.480: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/hostport-9531/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+192.168.100.173+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 192.168.100.173, port: 54323 @ 01/29/24 22:17:07.588
  Jan 29 22:17:07.588: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://192.168.100.173:54323/hostname] Namespace:hostport-9531 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jan 29 22:17:07.588: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  Jan 29 22:17:07.589: INFO: ExecWithOptions: Clientset creation
  Jan 29 22:17:07.589: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/hostport-9531/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F192.168.100.173%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 192.168.100.173, port: 54323 UDP @ 01/29/24 22:17:07.699
  Jan 29 22:17:07.699: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 192.168.100.173 54323] Namespace:hostport-9531 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jan 29 22:17:07.699: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  Jan 29 22:17:07.700: INFO: ExecWithOptions: Clientset creation
  Jan 29 22:17:07.700: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/hostport-9531/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+192.168.100.173+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  Jan 29 22:17:12.806: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-9531" for this suite. @ 01/29/24 22:17:12.813
• [23.479 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance]
test/e2e/apps/controller_revision.go:124
  STEP: Creating a kubernetes client @ 01/29/24 22:17:12.824
  Jan 29 22:17:12.825: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename controllerrevisions @ 01/29/24 22:17:12.827
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:17:12.843
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:17:12.848
  STEP: Creating DaemonSet "e2e-hwvd8-daemon-set" @ 01/29/24 22:17:12.872
  STEP: Check that daemon pods launch on every node of the cluster. @ 01/29/24 22:17:12.88
  Jan 29 22:17:12.886: INFO: DaemonSet pods can't tolerate node nodeb08 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jan 29 22:17:12.890: INFO: Number of nodes with available pods controlled by daemonset e2e-hwvd8-daemon-set: 0
  Jan 29 22:17:12.890: INFO: Node nodeb14 is running 0 daemon pod, expected 1
  Jan 29 22:17:13.896: INFO: DaemonSet pods can't tolerate node nodeb08 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jan 29 22:17:13.906: INFO: Number of nodes with available pods controlled by daemonset e2e-hwvd8-daemon-set: 0
  Jan 29 22:17:13.906: INFO: Node nodeb14 is running 0 daemon pod, expected 1
  Jan 29 22:17:14.897: INFO: DaemonSet pods can't tolerate node nodeb08 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jan 29 22:17:14.902: INFO: Number of nodes with available pods controlled by daemonset e2e-hwvd8-daemon-set: 2
  Jan 29 22:17:14.903: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset e2e-hwvd8-daemon-set
  STEP: Confirm DaemonSet "e2e-hwvd8-daemon-set" successfully created with "daemonset-name=e2e-hwvd8-daemon-set" label @ 01/29/24 22:17:14.906
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-hwvd8-daemon-set" @ 01/29/24 22:17:14.912
  Jan 29 22:17:14.915: INFO: Located ControllerRevision: "e2e-hwvd8-daemon-set-674c55f6f4"
  STEP: Patching ControllerRevision "e2e-hwvd8-daemon-set-674c55f6f4" @ 01/29/24 22:17:14.918
  Jan 29 22:17:14.936: INFO: e2e-hwvd8-daemon-set-674c55f6f4 has been patched
  STEP: Create a new ControllerRevision @ 01/29/24 22:17:14.936
  Jan 29 22:17:14.948: INFO: Created ControllerRevision: e2e-hwvd8-daemon-set-58dd84bf64
  STEP: Confirm that there are two ControllerRevisions @ 01/29/24 22:17:14.948
  Jan 29 22:17:14.948: INFO: Requesting list of ControllerRevisions to confirm quantity
  Jan 29 22:17:14.958: INFO: Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-hwvd8-daemon-set-674c55f6f4" @ 01/29/24 22:17:14.958
  STEP: Confirm that there is only one ControllerRevision @ 01/29/24 22:17:14.962
  Jan 29 22:17:14.962: INFO: Requesting list of ControllerRevisions to confirm quantity
  Jan 29 22:17:14.965: INFO: Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-hwvd8-daemon-set-58dd84bf64" @ 01/29/24 22:17:14.968
  Jan 29 22:17:14.977: INFO: e2e-hwvd8-daemon-set-58dd84bf64 has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 01/29/24 22:17:14.977
  W0129 22:17:14.990203      23 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 01/29/24 22:17:14.99
  Jan 29 22:17:14.990: INFO: Requesting list of ControllerRevisions to confirm quantity
  Jan 29 22:17:15.993: INFO: Requesting list of ControllerRevisions to confirm quantity
  Jan 29 22:17:16.004: INFO: Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-hwvd8-daemon-set-58dd84bf64=updated" @ 01/29/24 22:17:16.004
  STEP: Confirm that there is only one ControllerRevision @ 01/29/24 22:17:16.013
  Jan 29 22:17:16.013: INFO: Requesting list of ControllerRevisions to confirm quantity
  Jan 29 22:17:16.016: INFO: Found 1 ControllerRevisions
  Jan 29 22:17:16.020: INFO: ControllerRevision "e2e-hwvd8-daemon-set-7bb5c497c" has revision 3
  STEP: Deleting DaemonSet "e2e-hwvd8-daemon-set" @ 01/29/24 22:17:16.023
  STEP: deleting DaemonSet.extensions e2e-hwvd8-daemon-set in namespace controllerrevisions-8514, will wait for the garbage collector to delete the pods @ 01/29/24 22:17:16.023
  Jan 29 22:17:16.085: INFO: Deleting DaemonSet.extensions e2e-hwvd8-daemon-set took: 7.664609ms
  Jan 29 22:17:16.186: INFO: Terminating DaemonSet.extensions e2e-hwvd8-daemon-set pods took: 100.669952ms
  Jan 29 22:17:17.590: INFO: Number of nodes with available pods controlled by daemonset e2e-hwvd8-daemon-set: 0
  Jan 29 22:17:17.590: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset e2e-hwvd8-daemon-set
  Jan 29 22:17:17.594: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"26459"},"items":null}

  Jan 29 22:17:17.602: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"26459"},"items":null}

  Jan 29 22:17:17.615: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-8514" for this suite. @ 01/29/24 22:17:17.621
• [4.803 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance]
test/e2e/apimachinery/resource_quota.go:76
  STEP: Creating a kubernetes client @ 01/29/24 22:17:17.63
  Jan 29 22:17:17.630: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename resourcequota @ 01/29/24 22:17:17.631
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:17:17.647
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:17:17.652
  STEP: Counting existing ResourceQuota @ 01/29/24 22:17:17.656
  STEP: Creating a ResourceQuota @ 01/29/24 22:17:22.662
  STEP: Ensuring resource quota status is calculated @ 01/29/24 22:17:22.668
  Jan 29 22:17:24.675: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3691" for this suite. @ 01/29/24 22:17:24.681
• [7.058 seconds]
------------------------------
SSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never  [Conformance]
test/e2e/kubectl/kubectl.go:1707
  STEP: Creating a kubernetes client @ 01/29/24 22:17:24.69
  Jan 29 22:17:24.690: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename kubectl @ 01/29/24 22:17:24.692
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:17:24.706
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:17:24.711
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 01/29/24 22:17:24.716
  Jan 29 22:17:24.716: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=kubectl-5866 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  Jan 29 22:17:24.832: INFO: stderr: ""
  Jan 29 22:17:24.833: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 01/29/24 22:17:24.833
  Jan 29 22:17:24.836: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=kubectl-5866 delete pods e2e-test-httpd-pod'
  Jan 29 22:17:26.130: INFO: stderr: ""
  Jan 29 22:17:26.130: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Jan 29 22:17:26.130: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5866" for this suite. @ 01/29/24 22:17:26.135
• [1.450 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance]
test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 01/29/24 22:17:26.143
  Jan 29 22:17:26.143: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename init-container @ 01/29/24 22:17:26.145
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:17:26.157
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:17:26.163
  STEP: creating the pod @ 01/29/24 22:17:26.168
  Jan 29 22:17:26.168: INFO: PodSpec: initContainers in spec.initContainers
  Jan 29 22:18:06.258: INFO: init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-ac6975a3-d08c-4ef3-ac7e-b78a69260433", GenerateName:"", Namespace:"init-container-5951", SelfLink:"", UID:"50ec407e-5541-40fd-b825-d4ac65349ed2", ResourceVersion:"26643", Generation:0, CreationTimestamp:time.Date(2024, time.January, 29, 22, 17, 26, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"168849237"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 29, 22, 17, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00630cd68), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.January, 29, 22, 18, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00630cdc8), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-knh77", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc004500440), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-knh77", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-knh77", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.9", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-knh77", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc004ca7388), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"nodeb14", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc0001d6a10), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc004ca7410)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc004ca7430)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc004ca7438), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc004ca743c), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc0064ea8e0), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.January, 29, 22, 17, 26, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.January, 29, 22, 17, 26, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.January, 29, 22, 17, 26, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.January, 29, 22, 17, 26, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"192.168.100.114", HostIPs:[]v1.HostIP(nil), PodIP:"10.244.2.156", PodIPs:[]v1.PodIP{v1.PodIP{IP:"10.244.2.156"}}, StartTime:time.Date(2024, time.January, 29, 22, 17, 26, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0001d6b60)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0001d6cb0)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:2e0f836850e09b8b7cc937681d6194537a09fbd5f6b9e08f4d646a85128e8937", ContainerID:"containerd://650e9ca2a5b2209ebf2000ba19ce3d9aac78f6020059ea0d01271c89ed4e366a", Started:(*bool)(0xc004ca74da), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc0045004e0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", ImageID:"", ContainerID:"", Started:(*bool)(0xc004ca74ef), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc0045004c0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.9", ImageID:"", ContainerID:"", Started:(*bool)(0xc004ca74bf), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  Jan 29 22:18:06.259: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-5951" for this suite. @ 01/29/24 22:18:06.264
• [40.126 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance]
test/e2e/apps/statefulset.go:745
  STEP: Creating a kubernetes client @ 01/29/24 22:18:06.271
  Jan 29 22:18:06.271: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename statefulset @ 01/29/24 22:18:06.273
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:18:06.286
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:18:06.29
  STEP: Creating service test in namespace statefulset-194 @ 01/29/24 22:18:06.295
  STEP: Looking for a node to schedule stateful set and pod @ 01/29/24 22:18:06.303
  STEP: Creating pod with conflicting port in namespace statefulset-194 @ 01/29/24 22:18:06.307
  STEP: Waiting until pod test-pod will start running in namespace statefulset-194 @ 01/29/24 22:18:06.314
  STEP: Creating statefulset with conflicting port in namespace statefulset-194 @ 01/29/24 22:18:08.324
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-194 @ 01/29/24 22:18:08.335
  Jan 29 22:18:08.348: INFO: Observed stateful pod in namespace: statefulset-194, name: ss-0, uid: a3040faf-4de8-478f-99a5-3c6147fa55c7, status phase: Pending. Waiting for statefulset controller to delete.
  Jan 29 22:18:08.362: INFO: Observed stateful pod in namespace: statefulset-194, name: ss-0, uid: a3040faf-4de8-478f-99a5-3c6147fa55c7, status phase: Failed. Waiting for statefulset controller to delete.
  Jan 29 22:18:08.368: INFO: Observed stateful pod in namespace: statefulset-194, name: ss-0, uid: a3040faf-4de8-478f-99a5-3c6147fa55c7, status phase: Failed. Waiting for statefulset controller to delete.
  Jan 29 22:18:08.369: INFO: Observed delete event for stateful pod ss-0 in namespace statefulset-194
  STEP: Removing pod with conflicting port in namespace statefulset-194 @ 01/29/24 22:18:08.369
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-194 and will be in running state @ 01/29/24 22:18:08.384
  Jan 29 22:18:10.393: INFO: Deleting all statefulset in ns statefulset-194
  Jan 29 22:18:10.398: INFO: Scaling statefulset ss to 0
  Jan 29 22:18:20.420: INFO: Waiting for statefulset status.replicas updated to 0
  Jan 29 22:18:20.424: INFO: Deleting statefulset ss
  Jan 29 22:18:20.437: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-194" for this suite. @ 01/29/24 22:18:20.442
• [14.178 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance]
test/e2e/apps/statefulset.go:593
  STEP: Creating a kubernetes client @ 01/29/24 22:18:20.457
  Jan 29 22:18:20.457: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename statefulset @ 01/29/24 22:18:20.459
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:18:20.473
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:18:20.477
  STEP: Creating service test in namespace statefulset-4587 @ 01/29/24 22:18:20.482
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 01/29/24 22:18:20.489
  STEP: Creating stateful set ss in namespace statefulset-4587 @ 01/29/24 22:18:20.492
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-4587 @ 01/29/24 22:18:20.5
  Jan 29 22:18:20.503: INFO: Found 0 stateful pods, waiting for 1
  Jan 29 22:18:30.509: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 01/29/24 22:18:30.509
  Jan 29 22:18:30.513: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=statefulset-4587 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jan 29 22:18:30.737: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jan 29 22:18:30.737: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jan 29 22:18:30.737: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jan 29 22:18:30.742: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  Jan 29 22:18:40.747: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Jan 29 22:18:40.747: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Jan 29 22:18:40.766: INFO: Verifying statefulset ss doesn't scale past 1 for another 9.999999524s
  Jan 29 22:18:41.772: INFO: Verifying statefulset ss doesn't scale past 1 for another 8.996204402s
  Jan 29 22:18:42.778: INFO: Verifying statefulset ss doesn't scale past 1 for another 7.990633842s
  Jan 29 22:18:43.784: INFO: Verifying statefulset ss doesn't scale past 1 for another 6.983691475s
  Jan 29 22:18:44.790: INFO: Verifying statefulset ss doesn't scale past 1 for another 5.978478198s
  Jan 29 22:18:45.795: INFO: Verifying statefulset ss doesn't scale past 1 for another 4.972893201s
  Jan 29 22:18:46.804: INFO: Verifying statefulset ss doesn't scale past 1 for another 3.967742572s
  Jan 29 22:18:47.809: INFO: Verifying statefulset ss doesn't scale past 1 for another 2.958712988s
  Jan 29 22:18:48.815: INFO: Verifying statefulset ss doesn't scale past 1 for another 1.953096021s
  Jan 29 22:18:49.821: INFO: Verifying statefulset ss doesn't scale past 1 for another 947.145612ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-4587 @ 01/29/24 22:18:50.821
  Jan 29 22:18:50.829: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=statefulset-4587 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jan 29 22:18:51.087: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jan 29 22:18:51.087: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jan 29 22:18:51.087: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jan 29 22:18:51.092: INFO: Found 1 stateful pods, waiting for 3
  Jan 29 22:19:01.102: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Jan 29 22:19:01.102: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Jan 29 22:19:01.102: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=false
  Jan 29 22:19:11.102: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Jan 29 22:19:11.102: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Jan 29 22:19:11.103: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 01/29/24 22:19:11.103
  STEP: Scale down will halt with unhealthy stateful pod @ 01/29/24 22:19:11.103
  Jan 29 22:19:11.111: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=statefulset-4587 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jan 29 22:19:11.312: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jan 29 22:19:11.312: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jan 29 22:19:11.312: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jan 29 22:19:11.312: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=statefulset-4587 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jan 29 22:19:12.310: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jan 29 22:19:12.310: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jan 29 22:19:12.310: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jan 29 22:19:12.310: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=statefulset-4587 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jan 29 22:19:12.529: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jan 29 22:19:12.529: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jan 29 22:19:12.529: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jan 29 22:19:12.529: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Jan 29 22:19:12.534: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 2
  Jan 29 22:19:22.547: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Jan 29 22:19:22.547: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  Jan 29 22:19:22.547: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  Jan 29 22:19:22.561: INFO: Verifying statefulset ss doesn't scale past 3 for another 9.999999524s
  Jan 29 22:19:23.567: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.995360597s
  Jan 29 22:19:24.573: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.988955273s
  Jan 29 22:19:25.579: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.983482339s
  Jan 29 22:19:26.585: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.977942991s
  Jan 29 22:19:27.592: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.971121581s
  Jan 29 22:19:28.599: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.963825328s
  Jan 29 22:19:29.604: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.957727782s
  Jan 29 22:19:30.611: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.951929859s
  Jan 29 22:19:31.616: INFO: Verifying statefulset ss doesn't scale past 3 for another 945.975955ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-4587 @ 01/29/24 22:19:32.616
  Jan 29 22:19:32.624: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=statefulset-4587 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jan 29 22:19:32.834: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jan 29 22:19:32.834: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jan 29 22:19:32.834: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jan 29 22:19:32.834: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=statefulset-4587 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jan 29 22:19:33.038: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jan 29 22:19:33.038: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jan 29 22:19:33.038: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jan 29 22:19:33.038: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=statefulset-4587 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jan 29 22:19:33.255: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jan 29 22:19:33.255: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jan 29 22:19:33.255: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jan 29 22:19:33.255: INFO: Scaling statefulset ss to 0
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 01/29/24 22:19:43.282
  Jan 29 22:19:43.282: INFO: Deleting all statefulset in ns statefulset-4587
  Jan 29 22:19:43.285: INFO: Scaling statefulset ss to 0
  Jan 29 22:19:43.298: INFO: Waiting for statefulset status.replicas updated to 0
  Jan 29 22:19:43.302: INFO: Deleting statefulset ss
  Jan 29 22:19:43.314: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4587" for this suite. @ 01/29/24 22:19:43.32
• [82.869 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance]
test/e2e/auth/service_accounts.go:529
  STEP: Creating a kubernetes client @ 01/29/24 22:19:43.327
  Jan 29 22:19:43.327: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename svcaccounts @ 01/29/24 22:19:43.328
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:19:43.343
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:19:43.348
  Jan 29 22:19:43.368: INFO: created pod
  STEP: Saw pod success @ 01/29/24 22:19:47.384
  Jan 29 22:20:17.387: INFO: polling logs
  Jan 29 22:20:17.414: INFO: Pod logs: 
  I0129 22:19:44.053787       1 log.go:194] OK: Got token
  I0129 22:19:44.053884       1 log.go:194] validating with in-cluster discovery
  I0129 22:19:44.054393       1 log.go:194] OK: got issuer https://kubernetes.default.svc.cluster.local
  I0129 22:19:44.054451       1 log.go:194] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-1573:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc0001a0e40), NotBefore:(*jwt.NumericDate)(0xc0001a0f28), IssuedAt:(*jwt.NumericDate)(0xc0001a0e50), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-1573", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"59055588-3f16-47dd-ab8e-ec19418645df"}}}
  I0129 22:19:44.074838       1 log.go:194] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc.cluster.local
  I0129 22:19:44.088581       1 log.go:194] OK: Validated signature on JWT
  I0129 22:19:44.088746       1 log.go:194] OK: Got valid claims from token!
  I0129 22:19:44.088814       1 log.go:194] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-1573:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc0002a0a30), NotBefore:(*jwt.NumericDate)(0xc0002a0a58), IssuedAt:(*jwt.NumericDate)(0xc0002a0a38), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-1573", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"59055588-3f16-47dd-ab8e-ec19418645df"}}}

  Jan 29 22:20:17.416: INFO: completed pod
  Jan 29 22:20:17.423: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1573" for this suite. @ 01/29/24 22:20:17.428
• [34.108 seconds]
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance]
test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 01/29/24 22:20:17.435
  Jan 29 22:20:17.435: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename daemonsets @ 01/29/24 22:20:17.436
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:20:17.45
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:20:17.456
  Jan 29 22:20:17.477: INFO: Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 01/29/24 22:20:17.483
  Jan 29 22:20:17.491: INFO: DaemonSet pods can't tolerate node nodeb08 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jan 29 22:20:17.494: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jan 29 22:20:17.494: INFO: Node nodeb14 is running 0 daemon pod, expected 1
  Jan 29 22:20:18.503: INFO: DaemonSet pods can't tolerate node nodeb08 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jan 29 22:20:18.508: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jan 29 22:20:18.509: INFO: Node nodeb14 is running 0 daemon pod, expected 1
  Jan 29 22:20:19.503: INFO: DaemonSet pods can't tolerate node nodeb08 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jan 29 22:20:19.507: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jan 29 22:20:19.507: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Update daemon pods image. @ 01/29/24 22:20:19.521
  STEP: Check that daemon pods images are updated. @ 01/29/24 22:20:19.536
  Jan 29 22:20:19.542: INFO: Wrong image for pod: daemon-set-m5gfc. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Jan 29 22:20:19.542: INFO: Wrong image for pod: daemon-set-xxmps. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Jan 29 22:20:19.547: INFO: DaemonSet pods can't tolerate node nodeb08 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jan 29 22:20:20.553: INFO: Wrong image for pod: daemon-set-xxmps. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Jan 29 22:20:20.558: INFO: DaemonSet pods can't tolerate node nodeb08 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jan 29 22:20:21.553: INFO: Pod daemon-set-dhb6f is not available
  Jan 29 22:20:21.554: INFO: Wrong image for pod: daemon-set-xxmps. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Jan 29 22:20:21.559: INFO: DaemonSet pods can't tolerate node nodeb08 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jan 29 22:20:22.552: INFO: Pod daemon-set-42cf4 is not available
  Jan 29 22:20:22.556: INFO: DaemonSet pods can't tolerate node nodeb08 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Check that daemon pods are still running on every node of the cluster. @ 01/29/24 22:20:22.556
  Jan 29 22:20:22.563: INFO: DaemonSet pods can't tolerate node nodeb08 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jan 29 22:20:22.566: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jan 29 22:20:22.566: INFO: Node nodeb14 is running 0 daemon pod, expected 1
  Jan 29 22:20:23.573: INFO: DaemonSet pods can't tolerate node nodeb08 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jan 29 22:20:23.577: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jan 29 22:20:23.577: INFO: Node nodeb14 is running 0 daemon pod, expected 1
  Jan 29 22:20:24.574: INFO: DaemonSet pods can't tolerate node nodeb08 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Jan 29 22:20:24.578: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jan 29 22:20:24.578: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 01/29/24 22:20:24.601
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-6687, will wait for the garbage collector to delete the pods @ 01/29/24 22:20:24.601
  Jan 29 22:20:24.663: INFO: Deleting DaemonSet.extensions daemon-set took: 7.183167ms
  Jan 29 22:20:24.763: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.343083ms
  Jan 29 22:20:25.868: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jan 29 22:20:25.868: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Jan 29 22:20:25.872: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"27293"},"items":null}

  Jan 29 22:20:25.875: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"27293"},"items":null}

  Jan 29 22:20:25.886: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-6687" for this suite. @ 01/29/24 22:20:25.89
• [8.461 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance]
test/e2e/apps/rc.go:112
  STEP: Creating a kubernetes client @ 01/29/24 22:20:25.897
  Jan 29 22:20:25.897: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename replication-controller @ 01/29/24 22:20:25.898
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:20:25.91
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:20:25.914
  STEP: creating a ReplicationController @ 01/29/24 22:20:25.922
  STEP: waiting for RC to be added @ 01/29/24 22:20:25.927
  STEP: waiting for available Replicas @ 01/29/24 22:20:25.927
  STEP: patching ReplicationController @ 01/29/24 22:20:26.789
  STEP: waiting for RC to be modified @ 01/29/24 22:20:26.797
  STEP: patching ReplicationController status @ 01/29/24 22:20:26.798
  STEP: waiting for RC to be modified @ 01/29/24 22:20:26.806
  STEP: waiting for available Replicas @ 01/29/24 22:20:26.806
  STEP: fetching ReplicationController status @ 01/29/24 22:20:26.814
  STEP: patching ReplicationController scale @ 01/29/24 22:20:26.817
  STEP: waiting for RC to be modified @ 01/29/24 22:20:26.825
  STEP: waiting for ReplicationController's scale to be the max amount @ 01/29/24 22:20:26.825
  STEP: fetching ReplicationController; ensuring that it's patched @ 01/29/24 22:20:28.217
  STEP: updating ReplicationController status @ 01/29/24 22:20:28.221
  STEP: waiting for RC to be modified @ 01/29/24 22:20:28.232
  STEP: listing all ReplicationControllers @ 01/29/24 22:20:28.233
  STEP: checking that ReplicationController has expected values @ 01/29/24 22:20:28.242
  STEP: deleting ReplicationControllers by collection @ 01/29/24 22:20:28.242
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 01/29/24 22:20:28.248
  Jan 29 22:20:28.293: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0129 22:20:28.293621      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-201" for this suite. @ 01/29/24 22:20:28.298
• [2.408 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance]
test/e2e/apimachinery/resource_quota.go:693
  STEP: Creating a kubernetes client @ 01/29/24 22:20:28.305
  Jan 29 22:20:28.305: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename resourcequota @ 01/29/24 22:20:28.307
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:20:28.322
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:20:28.327
  STEP: Creating a ResourceQuota with terminating scope @ 01/29/24 22:20:28.332
  STEP: Ensuring ResourceQuota status is calculated @ 01/29/24 22:20:28.338
  E0129 22:20:29.293875      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:20:30.294421      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not terminating scope @ 01/29/24 22:20:30.344
  STEP: Ensuring ResourceQuota status is calculated @ 01/29/24 22:20:30.349
  E0129 22:20:31.294272      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:20:32.294502      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a long running pod @ 01/29/24 22:20:32.354
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 01/29/24 22:20:32.371
  E0129 22:20:33.295621      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:20:34.295776      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 01/29/24 22:20:34.377
  E0129 22:20:35.296136      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:20:36.297173      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 01/29/24 22:20:36.382
  STEP: Ensuring resource quota status released the pod usage @ 01/29/24 22:20:36.394
  E0129 22:20:37.296687      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:20:38.297645      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a terminating pod @ 01/29/24 22:20:38.399
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 01/29/24 22:20:38.412
  E0129 22:20:39.297820      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:20:40.298688      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 01/29/24 22:20:40.418
  E0129 22:20:41.298990      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:20:42.299914      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 01/29/24 22:20:42.423
  STEP: Ensuring resource quota status released the pod usage @ 01/29/24 22:20:42.432
  E0129 22:20:43.300249      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:20:44.300273      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:20:44.441: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6899" for this suite. @ 01/29/24 22:20:44.447
• [16.151 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance]
test/e2e/apimachinery/resource_quota.go:451
  STEP: Creating a kubernetes client @ 01/29/24 22:20:44.457
  Jan 29 22:20:44.457: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename resourcequota @ 01/29/24 22:20:44.46
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:20:44.477
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:20:44.481
  STEP: Counting existing ResourceQuota @ 01/29/24 22:20:44.486
  E0129 22:20:45.301141      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:20:46.301876      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:20:47.302876      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:20:48.303545      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:20:49.304157      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 01/29/24 22:20:49.49
  STEP: Ensuring resource quota status is calculated @ 01/29/24 22:20:49.497
  E0129 22:20:50.304755      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:20:51.305775      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ReplicaSet @ 01/29/24 22:20:51.503
  STEP: Ensuring resource quota status captures replicaset creation @ 01/29/24 22:20:51.519
  E0129 22:20:52.306093      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:20:53.306743      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicaSet @ 01/29/24 22:20:53.525
  STEP: Ensuring resource quota status released usage @ 01/29/24 22:20:53.532
  E0129 22:20:54.307152      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:20:55.307799      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:20:55.539: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5768" for this suite. @ 01/29/24 22:20:55.546
• [11.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance]
test/e2e/apimachinery/namespace.go:243
  STEP: Creating a kubernetes client @ 01/29/24 22:20:55.556
  Jan 29 22:20:55.556: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename namespaces @ 01/29/24 22:20:55.557
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:20:55.57
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:20:55.576
  STEP: Creating a test namespace @ 01/29/24 22:20:55.58
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:20:55.593
  STEP: Creating a pod in the namespace @ 01/29/24 22:20:55.598
  STEP: Waiting for the pod to have running status @ 01/29/24 22:20:55.608
  E0129 22:20:56.307910      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:20:57.309036      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the namespace @ 01/29/24 22:20:57.619
  STEP: Waiting for the namespace to be removed. @ 01/29/24 22:20:57.628
  E0129 22:20:58.309119      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:20:59.309948      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:21:00.310893      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:21:01.311159      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:21:02.311368      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:21:03.312068      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:21:04.312331      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:21:05.312430      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:21:06.313359      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:21:07.313419      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:21:08.314179      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 01/29/24 22:21:08.633
  STEP: Verifying there are no pods in the namespace @ 01/29/24 22:21:08.649
  Jan 29 22:21:08.652: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-239" for this suite. @ 01/29/24 22:21:08.657
  STEP: Destroying namespace "nsdeletetest-7987" for this suite. @ 01/29/24 22:21:08.661
  Jan 29 22:21:08.665: INFO: Namespace nsdeletetest-7987 was already deleted
  STEP: Destroying namespace "nsdeletetest-8107" for this suite. @ 01/29/24 22:21:08.665
• [13.114 seconds]
------------------------------
SS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:99
  STEP: Creating a kubernetes client @ 01/29/24 22:21:08.67
  Jan 29 22:21:08.670: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename configmap @ 01/29/24 22:21:08.672
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:21:08.684
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:21:08.689
  STEP: Creating configMap with name configmap-test-volume-map-093b8fa3-95b6-43d3-b03b-c4865343475e @ 01/29/24 22:21:08.694
  STEP: Creating a pod to test consume configMaps @ 01/29/24 22:21:08.699
  E0129 22:21:09.314618      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:21:10.315779      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:21:11.316831      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:21:12.317418      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/29/24 22:21:12.723
  Jan 29 22:21:12.727: INFO: Trying to get logs from node nodeb14 pod pod-configmaps-7c429f92-9acd-4b2c-892e-482c8d51df7e container agnhost-container: <nil>
  STEP: delete the pod @ 01/29/24 22:21:12.741
  Jan 29 22:21:12.757: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-169" for this suite. @ 01/29/24 22:21:12.763
• [4.098 seconds]
------------------------------
S
------------------------------
[sig-network] Services should serve a basic endpoint from pods  [Conformance]
test/e2e/network/service.go:785
  STEP: Creating a kubernetes client @ 01/29/24 22:21:12.769
  Jan 29 22:21:12.769: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename services @ 01/29/24 22:21:12.771
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:21:12.786
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:21:12.79
  STEP: creating service endpoint-test2 in namespace services-3210 @ 01/29/24 22:21:12.795
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-3210 to expose endpoints map[] @ 01/29/24 22:21:12.809
  Jan 29 22:21:12.820: INFO: successfully validated that service endpoint-test2 in namespace services-3210 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-3210 @ 01/29/24 22:21:12.82
  E0129 22:21:13.318341      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:21:14.318775      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-3210 to expose endpoints map[pod1:[80]] @ 01/29/24 22:21:14.842
  Jan 29 22:21:14.854: INFO: successfully validated that service endpoint-test2 in namespace services-3210 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 01/29/24 22:21:14.854
  Jan 29 22:21:14.854: INFO: Creating new exec pod
  E0129 22:21:15.318866      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:21:16.319174      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:21:17.319634      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:21:17.869: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=services-3210 exec execpodkphht -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Jan 29 22:21:18.092: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Jan 29 22:21:18.092: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jan 29 22:21:18.092: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=services-3210 exec execpodkphht -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.104.41.0 80'
  E0129 22:21:18.320277      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:21:18.321: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.104.41.0 80\nConnection to 10.104.41.0 80 port [tcp/http] succeeded!\n"
  Jan 29 22:21:18.321: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-3210 @ 01/29/24 22:21:18.321
  E0129 22:21:19.320911      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:21:20.321550      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-3210 to expose endpoints map[pod1:[80] pod2:[80]] @ 01/29/24 22:21:20.348
  Jan 29 22:21:20.363: INFO: successfully validated that service endpoint-test2 in namespace services-3210 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 01/29/24 22:21:20.363
  E0129 22:21:21.321632      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:21:21.365: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=services-3210 exec execpodkphht -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Jan 29 22:21:21.563: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Jan 29 22:21:21.563: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jan 29 22:21:21.564: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=services-3210 exec execpodkphht -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.104.41.0 80'
  Jan 29 22:21:21.760: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.104.41.0 80\nConnection to 10.104.41.0 80 port [tcp/http] succeeded!\n"
  Jan 29 22:21:21.760: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-3210 @ 01/29/24 22:21:21.76
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-3210 to expose endpoints map[pod2:[80]] @ 01/29/24 22:21:21.778
  Jan 29 22:21:21.790: INFO: successfully validated that service endpoint-test2 in namespace services-3210 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 01/29/24 22:21:21.79
  E0129 22:21:22.322733      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:21:22.792: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=services-3210 exec execpodkphht -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Jan 29 22:21:23.023: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Jan 29 22:21:23.023: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jan 29 22:21:23.024: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=services-3210 exec execpodkphht -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.104.41.0 80'
  Jan 29 22:21:23.231: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.104.41.0 80\nConnection to 10.104.41.0 80 port [tcp/http] succeeded!\n"
  Jan 29 22:21:23.231: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-3210 @ 01/29/24 22:21:23.231
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-3210 to expose endpoints map[] @ 01/29/24 22:21:23.249
  Jan 29 22:21:23.260: INFO: successfully validated that service endpoint-test2 in namespace services-3210 exposes endpoints map[]
  Jan 29 22:21:23.260: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3210" for this suite. @ 01/29/24 22:21:23.3
• [10.538 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance]
test/e2e/apimachinery/field_validation.go:622
  STEP: Creating a kubernetes client @ 01/29/24 22:21:23.309
  Jan 29 22:21:23.309: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename field-validation @ 01/29/24 22:21:23.311
  E0129 22:21:23.322865      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:21:23.328
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:21:23.333
  Jan 29 22:21:23.338: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  E0129 22:21:24.323252      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:21:25.324316      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0129 22:21:25.911271      23 warnings.go:70] unknown field "alpha"
  W0129 22:21:25.911313      23 warnings.go:70] unknown field "beta"
  W0129 22:21:25.911323      23 warnings.go:70] unknown field "delta"
  W0129 22:21:25.911333      23 warnings.go:70] unknown field "epsilon"
  W0129 22:21:25.911344      23 warnings.go:70] unknown field "gamma"
  E0129 22:21:26.325166      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:21:26.444: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-5570" for this suite. @ 01/29/24 22:21:26.465
• [3.163 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance]
test/e2e/network/dns.go:244
  STEP: Creating a kubernetes client @ 01/29/24 22:21:26.481
  Jan 29 22:21:26.482: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename dns @ 01/29/24 22:21:26.483
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:21:26.497
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:21:26.502
  STEP: Creating a test headless service @ 01/29/24 22:21:26.507
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-862.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-862.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
   @ 01/29/24 22:21:26.512
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-862.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-862.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 01/29/24 22:21:26.513
  STEP: creating a pod to probe DNS @ 01/29/24 22:21:26.513
  STEP: submitting the pod to kubernetes @ 01/29/24 22:21:26.513
  E0129 22:21:27.325442      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:21:28.326285      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 01/29/24 22:21:28.534
  STEP: looking for the results for each expected name from probers @ 01/29/24 22:21:28.538
  Jan 29 22:21:28.555: INFO: DNS probes using dns-862/dns-test-9b72e4a6-61ff-490f-b379-2fbac63180e0 succeeded

  Jan 29 22:21:28.556: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 01/29/24 22:21:28.56
  STEP: deleting the test headless service @ 01/29/24 22:21:28.572
  STEP: Destroying namespace "dns-862" for this suite. @ 01/29/24 22:21:28.58
• [2.105 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance]
test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 01/29/24 22:21:28.589
  Jan 29 22:21:28.589: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename csiinlinevolumes @ 01/29/24 22:21:28.59
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:21:28.604
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:21:28.609
  STEP: Creating two CSIDrivers @ 01/29/24 22:21:28.613
  STEP: Getting "inline-driver-bd224a5a-0eaf-4d29-b30c-ad888dff284d" & "inline-driver-4d5d6ca8-b8b2-401b-ac60-749495b79ccc" @ 01/29/24 22:21:28.627
  STEP: Patching the CSIDriver "inline-driver-4d5d6ca8-b8b2-401b-ac60-749495b79ccc" @ 01/29/24 22:21:28.633
  STEP: Updating the CSIDriver "inline-driver-4d5d6ca8-b8b2-401b-ac60-749495b79ccc" @ 01/29/24 22:21:28.644
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-3887" @ 01/29/24 22:21:28.655
  STEP: Deleting CSIDriver "inline-driver-bd224a5a-0eaf-4d29-b30c-ad888dff284d" @ 01/29/24 22:21:28.657
  STEP: Confirm deletion of CSIDriver "inline-driver-bd224a5a-0eaf-4d29-b30c-ad888dff284d" @ 01/29/24 22:21:28.662
  STEP: Deleting CSIDriver "inline-driver-4d5d6ca8-b8b2-401b-ac60-749495b79ccc" via DeleteCollection @ 01/29/24 22:21:28.666
  STEP: Confirm deletion of CSIDriver "inline-driver-4d5d6ca8-b8b2-401b-ac60-749495b79ccc" @ 01/29/24 22:21:28.674
  Jan 29 22:21:28.677: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-3887" for this suite. @ 01/29/24 22:21:28.682
• [0.100 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance]
test/e2e/apimachinery/webhook.go:238
  STEP: Creating a kubernetes client @ 01/29/24 22:21:28.691
  Jan 29 22:21:28.691: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename webhook @ 01/29/24 22:21:28.692
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:21:28.709
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:21:28.714
  STEP: Setting up server cert @ 01/29/24 22:21:28.736
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/29/24 22:21:29.146
  STEP: Deploying the webhook pod @ 01/29/24 22:21:29.154
  STEP: Wait for the deployment to be ready @ 01/29/24 22:21:29.17
  Jan 29 22:21:29.180: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0129 22:21:29.326391      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:21:30.327117      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 01/29/24 22:21:31.193
  STEP: Verifying the service has paired with the endpoint @ 01/29/24 22:21:31.214
  E0129 22:21:31.328110      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:21:32.215: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 01/29/24 22:21:32.224
  STEP: create a namespace for the webhook @ 01/29/24 22:21:32.249
  STEP: create a configmap should be unconditionally rejected by the webhook @ 01/29/24 22:21:32.261
  Jan 29 22:21:32.276: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1927" for this suite. @ 01/29/24 22:21:32.327
  E0129 22:21:32.328504      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "webhook-markers-9288" for this suite. @ 01/29/24 22:21:32.333
  STEP: Destroying namespace "fail-closed-namespace-5791" for this suite. @ 01/29/24 22:21:32.34
• [3.658 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance]
test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 01/29/24 22:21:32.349
  Jan 29 22:21:32.349: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename endpointslicemirroring @ 01/29/24 22:21:32.351
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:21:32.363
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:21:32.368
  STEP: mirroring a new custom Endpoint @ 01/29/24 22:21:32.389
  Jan 29 22:21:32.399: INFO: Waiting for at least 1 EndpointSlice to exist, got 0
  E0129 22:21:33.329071      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:21:34.329341      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: mirroring an update to a custom Endpoint @ 01/29/24 22:21:34.404
  Jan 29 22:21:34.415: INFO: Expected EndpointSlice to have 10.2.3.4 as address, got 10.1.2.3
  E0129 22:21:35.329546      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:21:36.329878      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: mirroring deletion of a custom Endpoint @ 01/29/24 22:21:36.42
  Jan 29 22:21:36.428: INFO: Waiting for 0 EndpointSlices to exist, got 1
  E0129 22:21:37.330113      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:21:38.330374      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:21:38.433: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-12" for this suite. @ 01/29/24 22:21:38.443
• [6.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
test/e2e/node/security_context.go:164
  STEP: Creating a kubernetes client @ 01/29/24 22:21:38.455
  Jan 29 22:21:38.455: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename security-context @ 01/29/24 22:21:38.457
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:21:38.471
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:21:38.476
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 01/29/24 22:21:38.481
  E0129 22:21:39.330958      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:21:40.331763      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:21:41.331751      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:21:42.332093      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/29/24 22:21:42.504
  Jan 29 22:21:42.508: INFO: Trying to get logs from node nodeb14 pod security-context-d329c8b9-8551-4294-81ef-13f5e8127ef7 container test-container: <nil>
  STEP: delete the pod @ 01/29/24 22:21:42.517
  Jan 29 22:21:42.530: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-2574" for this suite. @ 01/29/24 22:21:42.535
• [4.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance]
test/e2e/network/service.go:2224
  STEP: Creating a kubernetes client @ 01/29/24 22:21:42.556
  Jan 29 22:21:42.556: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename services @ 01/29/24 22:21:42.558
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:21:42.57
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:21:42.575
  STEP: creating service in namespace services-1873 @ 01/29/24 22:21:42.579
  STEP: creating service affinity-nodeport-transition in namespace services-1873 @ 01/29/24 22:21:42.58
  STEP: creating replication controller affinity-nodeport-transition in namespace services-1873 @ 01/29/24 22:21:42.596
  I0129 22:21:42.603597      23 runners.go:197] Created replication controller with name: affinity-nodeport-transition, namespace: services-1873, replica count: 3
  E0129 22:21:43.333039      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:21:44.333714      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:21:45.334805      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0129 22:21:45.655695      23 runners.go:197] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jan 29 22:21:45.671: INFO: Creating new exec pod
  E0129 22:21:46.334958      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:21:47.335472      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:21:48.336484      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:21:48.695: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=services-1873 exec execpod-affinity8rmv8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  Jan 29 22:21:48.927: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
  Jan 29 22:21:48.927: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jan 29 22:21:48.927: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=services-1873 exec execpod-affinity8rmv8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.103.124.141 80'
  Jan 29 22:21:49.133: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.103.124.141 80\nConnection to 10.103.124.141 80 port [tcp/http] succeeded!\n"
  Jan 29 22:21:49.133: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jan 29 22:21:49.133: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=services-1873 exec execpod-affinity8rmv8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.100.114 30859'
  Jan 29 22:21:49.334: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.100.114 30859\nConnection to 192.168.100.114 30859 port [tcp/*] succeeded!\n"
  Jan 29 22:21:49.335: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jan 29 22:21:49.335: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=services-1873 exec execpod-affinity8rmv8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.100.173 30859'
  E0129 22:21:49.336556      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:21:49.558: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.100.173 30859\nConnection to 192.168.100.173 30859 port [tcp/*] succeeded!\n"
  Jan 29 22:21:49.558: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jan 29 22:21:49.570: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=services-1873 exec execpod-affinity8rmv8 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.100.114:30859/ ; done'
  Jan 29 22:21:49.899: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.114:30859/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.114:30859/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.114:30859/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.114:30859/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.114:30859/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.114:30859/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.114:30859/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.114:30859/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.114:30859/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.114:30859/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.114:30859/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.114:30859/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.114:30859/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.114:30859/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.114:30859/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.114:30859/\n"
  Jan 29 22:21:49.899: INFO: stdout: "\naffinity-nodeport-transition-cz8bh\naffinity-nodeport-transition-cz8bh\naffinity-nodeport-transition-cz8bh\naffinity-nodeport-transition-lnnvj\naffinity-nodeport-transition-lnnvj\naffinity-nodeport-transition-cz8bh\naffinity-nodeport-transition-lnnvj\naffinity-nodeport-transition-lnnvj\naffinity-nodeport-transition-z7ts7\naffinity-nodeport-transition-lnnvj\naffinity-nodeport-transition-cz8bh\naffinity-nodeport-transition-lnnvj\naffinity-nodeport-transition-lnnvj\naffinity-nodeport-transition-lnnvj\naffinity-nodeport-transition-lnnvj\naffinity-nodeport-transition-cz8bh"
  Jan 29 22:21:49.899: INFO: Received response from host: affinity-nodeport-transition-cz8bh
  Jan 29 22:21:49.899: INFO: Received response from host: affinity-nodeport-transition-cz8bh
  Jan 29 22:21:49.899: INFO: Received response from host: affinity-nodeport-transition-cz8bh
  Jan 29 22:21:49.899: INFO: Received response from host: affinity-nodeport-transition-lnnvj
  Jan 29 22:21:49.899: INFO: Received response from host: affinity-nodeport-transition-lnnvj
  Jan 29 22:21:49.900: INFO: Received response from host: affinity-nodeport-transition-cz8bh
  Jan 29 22:21:49.900: INFO: Received response from host: affinity-nodeport-transition-lnnvj
  Jan 29 22:21:49.900: INFO: Received response from host: affinity-nodeport-transition-lnnvj
  Jan 29 22:21:49.900: INFO: Received response from host: affinity-nodeport-transition-z7ts7
  Jan 29 22:21:49.900: INFO: Received response from host: affinity-nodeport-transition-lnnvj
  Jan 29 22:21:49.900: INFO: Received response from host: affinity-nodeport-transition-cz8bh
  Jan 29 22:21:49.900: INFO: Received response from host: affinity-nodeport-transition-lnnvj
  Jan 29 22:21:49.900: INFO: Received response from host: affinity-nodeport-transition-lnnvj
  Jan 29 22:21:49.900: INFO: Received response from host: affinity-nodeport-transition-lnnvj
  Jan 29 22:21:49.900: INFO: Received response from host: affinity-nodeport-transition-lnnvj
  Jan 29 22:21:49.900: INFO: Received response from host: affinity-nodeport-transition-cz8bh
  Jan 29 22:21:49.913: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=services-1873 exec execpod-affinity8rmv8 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.100.114:30859/ ; done'
  Jan 29 22:21:50.215: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.114:30859/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.114:30859/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.114:30859/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.114:30859/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.114:30859/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.114:30859/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.114:30859/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.114:30859/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.114:30859/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.114:30859/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.114:30859/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.114:30859/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.114:30859/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.114:30859/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.114:30859/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.114:30859/\n"
  Jan 29 22:21:50.215: INFO: stdout: "\naffinity-nodeport-transition-lnnvj\naffinity-nodeport-transition-lnnvj\naffinity-nodeport-transition-lnnvj\naffinity-nodeport-transition-lnnvj\naffinity-nodeport-transition-lnnvj\naffinity-nodeport-transition-lnnvj\naffinity-nodeport-transition-lnnvj\naffinity-nodeport-transition-lnnvj\naffinity-nodeport-transition-lnnvj\naffinity-nodeport-transition-lnnvj\naffinity-nodeport-transition-lnnvj\naffinity-nodeport-transition-lnnvj\naffinity-nodeport-transition-lnnvj\naffinity-nodeport-transition-lnnvj\naffinity-nodeport-transition-lnnvj\naffinity-nodeport-transition-lnnvj"
  Jan 29 22:21:50.215: INFO: Received response from host: affinity-nodeport-transition-lnnvj
  Jan 29 22:21:50.215: INFO: Received response from host: affinity-nodeport-transition-lnnvj
  Jan 29 22:21:50.215: INFO: Received response from host: affinity-nodeport-transition-lnnvj
  Jan 29 22:21:50.215: INFO: Received response from host: affinity-nodeport-transition-lnnvj
  Jan 29 22:21:50.215: INFO: Received response from host: affinity-nodeport-transition-lnnvj
  Jan 29 22:21:50.215: INFO: Received response from host: affinity-nodeport-transition-lnnvj
  Jan 29 22:21:50.215: INFO: Received response from host: affinity-nodeport-transition-lnnvj
  Jan 29 22:21:50.215: INFO: Received response from host: affinity-nodeport-transition-lnnvj
  Jan 29 22:21:50.215: INFO: Received response from host: affinity-nodeport-transition-lnnvj
  Jan 29 22:21:50.215: INFO: Received response from host: affinity-nodeport-transition-lnnvj
  Jan 29 22:21:50.215: INFO: Received response from host: affinity-nodeport-transition-lnnvj
  Jan 29 22:21:50.215: INFO: Received response from host: affinity-nodeport-transition-lnnvj
  Jan 29 22:21:50.215: INFO: Received response from host: affinity-nodeport-transition-lnnvj
  Jan 29 22:21:50.215: INFO: Received response from host: affinity-nodeport-transition-lnnvj
  Jan 29 22:21:50.215: INFO: Received response from host: affinity-nodeport-transition-lnnvj
  Jan 29 22:21:50.215: INFO: Received response from host: affinity-nodeport-transition-lnnvj
  Jan 29 22:21:50.215: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Jan 29 22:21:50.222: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-1873, will wait for the garbage collector to delete the pods @ 01/29/24 22:21:50.234
  Jan 29 22:21:50.293: INFO: Deleting ReplicationController affinity-nodeport-transition took: 6.509815ms
  E0129 22:21:50.337395      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:21:50.394: INFO: Terminating ReplicationController affinity-nodeport-transition pods took: 100.94317ms
  E0129 22:21:51.338529      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:21:52.339394      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:21:53.340392      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "services-1873" for this suite. @ 01/29/24 22:21:53.617
• [11.065 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance]
test/e2e/apps/statefulset.go:854
  STEP: Creating a kubernetes client @ 01/29/24 22:21:53.633
  Jan 29 22:21:53.633: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename statefulset @ 01/29/24 22:21:53.634
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:21:53.653
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:21:53.657
  STEP: Creating service test in namespace statefulset-2832 @ 01/29/24 22:21:53.662
  STEP: Creating statefulset ss in namespace statefulset-2832 @ 01/29/24 22:21:53.667
  Jan 29 22:21:53.676: INFO: Found 0 stateful pods, waiting for 1
  E0129 22:21:54.341474      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:21:55.342168      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:21:56.342706      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:21:57.343350      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:21:58.343875      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:21:59.344965      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:22:00.345502      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:22:01.346001      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:22:02.346507      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:22:03.347182      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:22:03.686: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 01/29/24 22:22:03.693
  STEP: updating a scale subresource @ 01/29/24 22:22:03.696
  STEP: verifying the statefulset Spec.Replicas was modified @ 01/29/24 22:22:03.703
  STEP: Patch a scale subresource @ 01/29/24 22:22:03.705
  STEP: verifying the statefulset Spec.Replicas was modified @ 01/29/24 22:22:03.712
  Jan 29 22:22:03.715: INFO: Deleting all statefulset in ns statefulset-2832
  Jan 29 22:22:03.718: INFO: Scaling statefulset ss to 0
  E0129 22:22:04.348287      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:22:05.348894      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:22:06.349523      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:22:07.350065      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:22:08.350398      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:22:09.350688      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:22:10.350850      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:22:11.351084      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:22:12.351445      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:22:13.351528      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:22:13.737: INFO: Waiting for statefulset status.replicas updated to 0
  Jan 29 22:22:13.742: INFO: Deleting statefulset ss
  Jan 29 22:22:13.756: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2832" for this suite. @ 01/29/24 22:22:13.762
• [20.134 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions  [Conformance]
test/e2e/kubectl/kubectl.go:830
  STEP: Creating a kubernetes client @ 01/29/24 22:22:13.768
  Jan 29 22:22:13.768: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename kubectl @ 01/29/24 22:22:13.769
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:22:13.783
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:22:13.787
  STEP: validating api versions @ 01/29/24 22:22:13.792
  Jan 29 22:22:13.792: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=kubectl-9417 api-versions'
  Jan 29 22:22:13.890: INFO: stderr: ""
  Jan 29 22:22:13.890: INFO: stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta2\nflowcontrol.apiserver.k8s.io/v1beta3\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nv1\n"
  Jan 29 22:22:13.890: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9417" for this suite. @ 01/29/24 22:22:13.895
• [0.137 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed  [Conformance]
test/e2e/kubectl/kubectl.go:1674
  STEP: Creating a kubernetes client @ 01/29/24 22:22:13.908
  Jan 29 22:22:13.908: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename kubectl @ 01/29/24 22:22:13.91
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:22:13.922
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:22:13.927
  Jan 29 22:22:13.932: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=kubectl-9825 version'
  Jan 29 22:22:14.021: INFO: stderr: ""
  Jan 29 22:22:14.021: INFO: stdout: "Client Version: v1.28.3\nKustomize Version: v5.0.4-0.20230601165947-6ce0bf390ce3\nServer Version: v1.28.3-ckp\n"
  Jan 29 22:22:14.021: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9825" for this suite. @ 01/29/24 22:22:14.027
• [0.125 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:71
  STEP: Creating a kubernetes client @ 01/29/24 22:22:14.035
  Jan 29 22:22:14.035: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename container-probe @ 01/29/24 22:22:14.037
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:22:14.051
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:22:14.055
  E0129 22:22:14.351684      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:22:15.352124      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:22:16.352416      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:22:17.353008      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:22:18.353184      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:22:19.354261      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:22:20.354347      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:22:21.354955      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:22:22.355388      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:22:23.356338      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:22:24.357152      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:22:25.357894      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:22:26.358769      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:22:27.359296      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:22:28.360055      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:22:29.360904      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:22:30.362532      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:22:31.362180      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:22:32.363008      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:22:33.363623      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:22:34.364326      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:22:35.364605      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:22:36.141: INFO: Container started at 2024-01-29 22:22:14 +0000 UTC, pod became ready at 2024-01-29 22:22:34 +0000 UTC
  Jan 29 22:22:36.141: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3288" for this suite. @ 01/29/24 22:22:36.147
• [22.119 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance]
test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 01/29/24 22:22:36.157
  Jan 29 22:22:36.157: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 01/29/24 22:22:36.159
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:22:36.177
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:22:36.181
  STEP: creating a target pod @ 01/29/24 22:22:36.186
  E0129 22:22:36.365340      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:22:37.365843      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 01/29/24 22:22:38.212
  E0129 22:22:38.366706      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:22:39.367182      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 01/29/24 22:22:40.242
  Jan 29 22:22:40.242: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-3699 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jan 29 22:22:40.242: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  Jan 29 22:22:40.244: INFO: ExecWithOptions: Clientset creation
  Jan 29 22:22:40.244: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/ephemeral-containers-test-3699/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  Jan 29 22:22:40.357: INFO: Exec stderr: ""
  Jan 29 22:22:40.366: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0129 22:22:40.367309      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "ephemeral-containers-test-3699" for this suite. @ 01/29/24 22:22:40.371
• [4.222 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance]
test/e2e/apimachinery/field_validation.go:289
  STEP: Creating a kubernetes client @ 01/29/24 22:22:40.383
  Jan 29 22:22:40.383: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename field-validation @ 01/29/24 22:22:40.385
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:22:40.406
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:22:40.41
  Jan 29 22:22:40.414: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  E0129 22:22:41.368140      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:22:42.368697      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:22:43.369350      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:22:43.526: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-4274" for this suite. @ 01/29/24 22:22:43.545
• [3.167 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 01/29/24 22:22:43.551
  Jan 29 22:22:43.551: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename projected @ 01/29/24 22:22:43.553
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:22:43.564
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:22:43.569
  STEP: Creating projection with secret that has name projected-secret-test-9106f123-dea3-4975-bb89-52279abc90bd @ 01/29/24 22:22:43.574
  STEP: Creating a pod to test consume secrets @ 01/29/24 22:22:43.578
  E0129 22:22:44.370476      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:22:45.370573      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:22:46.370785      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:22:47.371210      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/29/24 22:22:47.605
  Jan 29 22:22:47.608: INFO: Trying to get logs from node nodeb14 pod pod-projected-secrets-36a69a68-4e47-4471-92fa-c375a82282fa container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 01/29/24 22:22:47.617
  Jan 29 22:22:47.632: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9523" for this suite. @ 01/29/24 22:22:47.637
• [4.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance]
test/e2e/network/dns.go:407
  STEP: Creating a kubernetes client @ 01/29/24 22:22:47.648
  Jan 29 22:22:47.648: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename dns @ 01/29/24 22:22:47.649
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:22:47.663
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:22:47.668
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 01/29/24 22:22:47.672
  Jan 29 22:22:47.685: INFO: Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-3750  52576834-5898-4e8b-b71c-b642291f5cba 28288 0 2024-01-29 22:22:47 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2024-01-29 22:22:47 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-wxh98,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.45,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-wxh98,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  E0129 22:22:48.372029      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:22:49.372138      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Verifying customized DNS suffix list is configured on pod... @ 01/29/24 22:22:49.694
  Jan 29 22:22:49.694: INFO: ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-3750 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jan 29 22:22:49.694: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  Jan 29 22:22:49.695: INFO: ExecWithOptions: Clientset creation
  Jan 29 22:22:49.695: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/dns-3750/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 01/29/24 22:22:49.823
  Jan 29 22:22:49.823: INFO: ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-3750 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jan 29 22:22:49.823: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  Jan 29 22:22:49.824: INFO: ExecWithOptions: Clientset creation
  Jan 29 22:22:49.825: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/dns-3750/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Jan 29 22:22:49.959: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Jan 29 22:22:49.965: INFO: Deleting pod test-dns-nameservers...
  STEP: Destroying namespace "dns-3750" for this suite. @ 01/29/24 22:22:49.977
• [2.338 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:423
  STEP: Creating a kubernetes client @ 01/29/24 22:22:49.987
  Jan 29 22:22:49.987: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename configmap @ 01/29/24 22:22:49.988
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:22:50.001
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:22:50.006
  STEP: Creating configMap with name configmap-test-volume-828239c2-784b-44f8-a570-76180d611137 @ 01/29/24 22:22:50.01
  STEP: Creating a pod to test consume configMaps @ 01/29/24 22:22:50.014
  E0129 22:22:50.372693      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:22:51.373632      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:22:52.373731      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:22:53.374656      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/29/24 22:22:54.037
  Jan 29 22:22:54.041: INFO: Trying to get logs from node nodeb14 pod pod-configmaps-b980bee1-c190-4c39-a078-6cce16c85662 container configmap-volume-test: <nil>
  STEP: delete the pod @ 01/29/24 22:22:54.05
  Jan 29 22:22:54.060: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2147" for this suite. @ 01/29/24 22:22:54.065
• [4.084 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance]
test/e2e/network/endpointslice.go:207
  STEP: Creating a kubernetes client @ 01/29/24 22:22:54.073
  Jan 29 22:22:54.073: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename endpointslice @ 01/29/24 22:22:54.075
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:22:54.087
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:22:54.091
  E0129 22:22:54.374872      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:22:55.375417      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:22:56.375915      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:22:57.376218      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:22:58.376858      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: referencing a single matching pod @ 01/29/24 22:22:59.158
  E0129 22:22:59.377153      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:23:00.378074      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:23:01.378669      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:23:02.379282      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:23:03.380339      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: referencing matching pods with named port @ 01/29/24 22:23:04.168
  E0129 22:23:04.380414      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:23:05.380939      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:23:06.382128      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:23:07.382905      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:23:08.382903      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 01/29/24 22:23:09.179
  E0129 22:23:09.383547      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:23:10.383766      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:23:11.384287      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:23:12.384899      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:23:13.385217      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: recreating EndpointSlices after they've been deleted @ 01/29/24 22:23:14.187
  Jan 29 22:23:14.209: INFO: EndpointSlice for Service endpointslice-5185/example-named-port not found
  E0129 22:23:14.385885      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:23:15.386534      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:23:16.387058      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:23:17.387662      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:23:18.388159      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:23:19.389308      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:23:20.389655      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:23:21.389802      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:23:22.390126      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:23:23.390709      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:23:24.219: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-5185" for this suite. @ 01/29/24 22:23:24.224
• [30.157 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:163
  STEP: Creating a kubernetes client @ 01/29/24 22:23:24.234
  Jan 29 22:23:24.234: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename projected @ 01/29/24 22:23:24.236
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:23:24.251
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:23:24.255
  STEP: Creating the pod @ 01/29/24 22:23:24.259
  E0129 22:23:24.391618      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:23:25.392338      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:23:26.392948      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:23:26.806: INFO: Successfully updated pod "annotationupdate28c593b5-ff94-487c-a4ca-220b148374fe"
  E0129 22:23:27.394145      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:23:28.395241      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:23:28.825: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1845" for this suite. @ 01/29/24 22:23:28.83
• [4.603 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:375
  STEP: Creating a kubernetes client @ 01/29/24 22:23:28.84
  Jan 29 22:23:28.840: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename projected @ 01/29/24 22:23:28.842
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:23:28.854
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:23:28.858
  STEP: Creating configMap with name projected-configmap-test-volume-f44b5661-4824-437a-84fc-5cf919773db7 @ 01/29/24 22:23:28.862
  STEP: Creating a pod to test consume configMaps @ 01/29/24 22:23:28.868
  E0129 22:23:29.395800      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:23:30.396755      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:23:31.397475      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:23:32.398079      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/29/24 22:23:32.894
  Jan 29 22:23:32.902: INFO: Trying to get logs from node nodeb14 pod pod-projected-configmaps-c66c79c0-990f-45b3-af6b-b1a09083c4d9 container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 01/29/24 22:23:32.91
  Jan 29 22:23:32.921: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3867" for this suite. @ 01/29/24 22:23:32.926
• [4.091 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance]
test/e2e/apimachinery/resource_quota.go:328
  STEP: Creating a kubernetes client @ 01/29/24 22:23:32.931
  Jan 29 22:23:32.931: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename resourcequota @ 01/29/24 22:23:32.933
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:23:32.945
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:23:32.95
  E0129 22:23:33.398158      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:23:34.399030      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:23:35.399107      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:23:36.400339      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:23:37.400364      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:23:38.401401      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:23:39.402522      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:23:40.403453      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:23:41.403578      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:23:42.403898      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:23:43.404028      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:23:44.404378      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:23:45.405135      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:23:46.405767      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:23:47.406599      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:23:48.407286      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:23:49.407459      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 01/29/24 22:23:49.961
  E0129 22:23:50.408403      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:23:51.409448      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:23:52.410248      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:23:53.411392      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:23:54.412266      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 01/29/24 22:23:54.966
  STEP: Ensuring resource quota status is calculated @ 01/29/24 22:23:54.974
  E0129 22:23:55.412808      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:23:56.413432      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ConfigMap @ 01/29/24 22:23:56.981
  STEP: Ensuring resource quota status captures configMap creation @ 01/29/24 22:23:56.995
  E0129 22:23:57.413511      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:23:58.414692      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ConfigMap @ 01/29/24 22:23:59
  STEP: Ensuring resource quota status released usage @ 01/29/24 22:23:59.008
  E0129 22:23:59.414986      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:24:00.415431      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:24:01.014: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7846" for this suite. @ 01/29/24 22:24:01.02
• [28.095 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 01/29/24 22:24:01.028
  Jan 29 22:24:01.028: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename secrets @ 01/29/24 22:24:01.03
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:24:01.045
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:24:01.05
  STEP: Creating secret with name secret-test-33ff228b-19e2-4378-9d10-c68745468dd4 @ 01/29/24 22:24:01.054
  STEP: Creating a pod to test consume secrets @ 01/29/24 22:24:01.059
  E0129 22:24:01.416190      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:24:02.417134      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:24:03.418171      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:24:04.418822      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/29/24 22:24:05.086
  Jan 29 22:24:05.090: INFO: Trying to get logs from node nodeb14 pod pod-secrets-1c617f94-24f6-4704-b2a8-b17c0ac920f5 container secret-volume-test: <nil>
  STEP: delete the pod @ 01/29/24 22:24:05.1
  Jan 29 22:24:05.115: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2164" for this suite. @ 01/29/24 22:24:05.12
• [4.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance]
test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 01/29/24 22:24:05.13
  Jan 29 22:24:05.130: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 01/29/24 22:24:05.132
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:24:05.145
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:24:05.149
  STEP: creating a target pod @ 01/29/24 22:24:05.154
  E0129 22:24:05.419704      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:24:06.420694      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 01/29/24 22:24:07.176
  E0129 22:24:07.421837      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:24:08.422668      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 01/29/24 22:24:09.197
  Jan 29 22:24:09.197: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-3631 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jan 29 22:24:09.197: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  Jan 29 22:24:09.198: INFO: ExecWithOptions: Clientset creation
  Jan 29 22:24:09.199: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/ephemeral-containers-test-3631/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  Jan 29 22:24:09.300: INFO: Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 01/29/24 22:24:09.309
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 01/29/24 22:24:09.314
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 01/29/24 22:24:09.327
  Jan 29 22:24:09.332: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-3631" for this suite. @ 01/29/24 22:24:09.337
• [4.213 seconds]
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance]
test/e2e/network/service.go:2165
  STEP: Creating a kubernetes client @ 01/29/24 22:24:09.344
  Jan 29 22:24:09.344: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename services @ 01/29/24 22:24:09.346
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:24:09.358
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:24:09.361
  STEP: creating service in namespace services-3033 @ 01/29/24 22:24:09.365
  STEP: creating service affinity-clusterip in namespace services-3033 @ 01/29/24 22:24:09.365
  STEP: creating replication controller affinity-clusterip in namespace services-3033 @ 01/29/24 22:24:09.378
  I0129 22:24:09.386796      23 runners.go:197] Created replication controller with name: affinity-clusterip, namespace: services-3033, replica count: 3
  E0129 22:24:09.422686      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:24:10.423242      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:24:11.424220      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:24:12.425703      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0129 22:24:12.438598      23 runners.go:197] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jan 29 22:24:12.448: INFO: Creating new exec pod
  E0129 22:24:13.424984      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:24:14.425765      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:24:15.425818      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:24:15.463: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=services-3033 exec execpod-affinity9xf58 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  E0129 22:24:16.426001      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:24:17.427107      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:24:17.703: INFO: rc: 1
  Jan 29 22:24:17.703: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=services-3033 exec execpod-affinity9xf58 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 affinity-clusterip 80
  nc: connect to affinity-clusterip port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  E0129 22:24:18.427910      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:24:18.703: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=services-3033 exec execpod-affinity9xf58 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  E0129 22:24:19.428441      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:24:20.428430      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:24:20.931: INFO: rc: 1
  Jan 29 22:24:20.931: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=services-3033 exec execpod-affinity9xf58 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 affinity-clusterip 80
  nc: connect to affinity-clusterip port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  E0129 22:24:21.429106      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:24:21.703: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=services-3033 exec execpod-affinity9xf58 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  E0129 22:24:22.430363      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:24:23.431063      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:24:23.925: INFO: rc: 1
  Jan 29 22:24:23.925: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=services-3033 exec execpod-affinity9xf58 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 affinity-clusterip 80
  nc: connect to affinity-clusterip port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  E0129 22:24:24.432385      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:24:24.704: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=services-3033 exec execpod-affinity9xf58 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  Jan 29 22:24:24.917: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
  Jan 29 22:24:24.917: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jan 29 22:24:24.917: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=services-3033 exec execpod-affinity9xf58 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.103.203.213 80'
  Jan 29 22:24:25.141: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.103.203.213 80\nConnection to 10.103.203.213 80 port [tcp/http] succeeded!\n"
  Jan 29 22:24:25.141: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jan 29 22:24:25.141: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=services-3033 exec execpod-affinity9xf58 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.103.203.213:80/ ; done'
  E0129 22:24:25.432385      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:24:25.466: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.103.203.213:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.103.203.213:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.103.203.213:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.103.203.213:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.103.203.213:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.103.203.213:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.103.203.213:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.103.203.213:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.103.203.213:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.103.203.213:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.103.203.213:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.103.203.213:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.103.203.213:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.103.203.213:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.103.203.213:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.103.203.213:80/\n"
  Jan 29 22:24:25.466: INFO: stdout: "\naffinity-clusterip-jvxw8\naffinity-clusterip-jvxw8\naffinity-clusterip-jvxw8\naffinity-clusterip-jvxw8\naffinity-clusterip-jvxw8\naffinity-clusterip-jvxw8\naffinity-clusterip-jvxw8\naffinity-clusterip-jvxw8\naffinity-clusterip-jvxw8\naffinity-clusterip-jvxw8\naffinity-clusterip-jvxw8\naffinity-clusterip-jvxw8\naffinity-clusterip-jvxw8\naffinity-clusterip-jvxw8\naffinity-clusterip-jvxw8\naffinity-clusterip-jvxw8"
  Jan 29 22:24:25.466: INFO: Received response from host: affinity-clusterip-jvxw8
  Jan 29 22:24:25.466: INFO: Received response from host: affinity-clusterip-jvxw8
  Jan 29 22:24:25.466: INFO: Received response from host: affinity-clusterip-jvxw8
  Jan 29 22:24:25.466: INFO: Received response from host: affinity-clusterip-jvxw8
  Jan 29 22:24:25.466: INFO: Received response from host: affinity-clusterip-jvxw8
  Jan 29 22:24:25.466: INFO: Received response from host: affinity-clusterip-jvxw8
  Jan 29 22:24:25.466: INFO: Received response from host: affinity-clusterip-jvxw8
  Jan 29 22:24:25.466: INFO: Received response from host: affinity-clusterip-jvxw8
  Jan 29 22:24:25.466: INFO: Received response from host: affinity-clusterip-jvxw8
  Jan 29 22:24:25.466: INFO: Received response from host: affinity-clusterip-jvxw8
  Jan 29 22:24:25.466: INFO: Received response from host: affinity-clusterip-jvxw8
  Jan 29 22:24:25.467: INFO: Received response from host: affinity-clusterip-jvxw8
  Jan 29 22:24:25.467: INFO: Received response from host: affinity-clusterip-jvxw8
  Jan 29 22:24:25.467: INFO: Received response from host: affinity-clusterip-jvxw8
  Jan 29 22:24:25.467: INFO: Received response from host: affinity-clusterip-jvxw8
  Jan 29 22:24:25.467: INFO: Received response from host: affinity-clusterip-jvxw8
  Jan 29 22:24:25.467: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Jan 29 22:24:25.473: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-3033, will wait for the garbage collector to delete the pods @ 01/29/24 22:24:25.484
  Jan 29 22:24:25.547: INFO: Deleting ReplicationController affinity-clusterip took: 8.45317ms
  Jan 29 22:24:25.647: INFO: Terminating ReplicationController affinity-clusterip pods took: 100.652443ms
  E0129 22:24:26.432739      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:24:27.432912      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:24:28.434005      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "services-3033" for this suite. @ 01/29/24 22:24:28.971
• [19.633 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance]
test/e2e/common/node/expansion.go:95
  STEP: Creating a kubernetes client @ 01/29/24 22:24:28.979
  Jan 29 22:24:28.979: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename var-expansion @ 01/29/24 22:24:28.981
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:24:28.995
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:24:28.999
  STEP: Creating a pod to test substitution in container's args @ 01/29/24 22:24:29.004
  E0129 22:24:29.434917      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:24:30.436448      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:24:31.436545      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:24:32.437125      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/29/24 22:24:33.031
  Jan 29 22:24:33.034: INFO: Trying to get logs from node nodeb14 pod var-expansion-14e0687f-3839-4cc7-a782-24064b646876 container dapi-container: <nil>
  STEP: delete the pod @ 01/29/24 22:24:33.043
  Jan 29 22:24:33.057: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-1554" for this suite. @ 01/29/24 22:24:33.062
• [4.089 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance]
test/e2e/common/node/expansion.go:76
  STEP: Creating a kubernetes client @ 01/29/24 22:24:33.071
  Jan 29 22:24:33.071: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename var-expansion @ 01/29/24 22:24:33.072
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:24:33.084
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:24:33.088
  STEP: Creating a pod to test substitution in container's command @ 01/29/24 22:24:33.093
  E0129 22:24:33.438111      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:24:34.438725      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:24:35.438923      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:24:36.439517      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/29/24 22:24:37.115
  Jan 29 22:24:37.118: INFO: Trying to get logs from node nodeb14 pod var-expansion-c97988e8-8a4c-4451-8a83-3cedbb301050 container dapi-container: <nil>
  STEP: delete the pod @ 01/29/24 22:24:37.125
  Jan 29 22:24:37.143: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-445" for this suite. @ 01/29/24 22:24:37.149
• [4.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance]
test/e2e/apimachinery/server_version.go:40
  STEP: Creating a kubernetes client @ 01/29/24 22:24:37.164
  Jan 29 22:24:37.164: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename server-version @ 01/29/24 22:24:37.165
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:24:37.181
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:24:37.185
  STEP: Request ServerVersion @ 01/29/24 22:24:37.189
  STEP: Confirm major version @ 01/29/24 22:24:37.191
  Jan 29 22:24:37.191: INFO: Major version: 1
  STEP: Confirm minor version @ 01/29/24 22:24:37.191
  Jan 29 22:24:37.191: INFO: cleanMinorVersion: 28
  Jan 29 22:24:37.191: INFO: Minor version: 28+
  Jan 29 22:24:37.191: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-897" for this suite. @ 01/29/24 22:24:37.195
• [0.038 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:109
  STEP: Creating a kubernetes client @ 01/29/24 22:24:37.203
  Jan 29 22:24:37.203: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename projected @ 01/29/24 22:24:37.204
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:24:37.219
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:24:37.223
  STEP: Creating configMap with name projected-configmap-test-volume-map-66eca3c5-d063-4fd6-b033-f0bc42362e23 @ 01/29/24 22:24:37.227
  STEP: Creating a pod to test consume configMaps @ 01/29/24 22:24:37.233
  E0129 22:24:37.439757      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:24:38.440038      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:24:39.440418      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:24:40.440965      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/29/24 22:24:41.26
  Jan 29 22:24:41.263: INFO: Trying to get logs from node nodeb14 pod pod-projected-configmaps-28c6bfa7-4d00-4f46-a9e2-2b15764320b3 container agnhost-container: <nil>
  STEP: delete the pod @ 01/29/24 22:24:41.273
  Jan 29 22:24:41.288: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1627" for this suite. @ 01/29/24 22:24:41.294
• [4.098 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 01/29/24 22:24:41.302
  Jan 29 22:24:41.302: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename pods @ 01/29/24 22:24:41.303
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:24:41.315
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:24:41.319
  STEP: creating pod @ 01/29/24 22:24:41.324
  E0129 22:24:41.440987      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:24:42.441879      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:24:43.355: INFO: Pod pod-hostip-93e8ed7d-c47d-476c-8b39-9db1e3e60228 has hostIP: 192.168.100.114
  Jan 29 22:24:43.355: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4255" for this suite. @ 01/29/24 22:24:43.362
• [2.068 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance]
test/e2e/apimachinery/field_validation.go:168
  STEP: Creating a kubernetes client @ 01/29/24 22:24:43.371
  Jan 29 22:24:43.371: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename field-validation @ 01/29/24 22:24:43.373
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:24:43.39
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:24:43.395
  Jan 29 22:24:43.401: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  E0129 22:24:43.442969      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:24:44.443396      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:24:45.443911      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0129 22:24:45.968598      23 warnings.go:70] unknown field "alpha"
  W0129 22:24:45.968650      23 warnings.go:70] unknown field "beta"
  W0129 22:24:45.968662      23 warnings.go:70] unknown field "delta"
  W0129 22:24:45.968673      23 warnings.go:70] unknown field "epsilon"
  W0129 22:24:45.968683      23 warnings.go:70] unknown field "gamma"
  E0129 22:24:46.444105      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:24:46.505: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-2766" for this suite. @ 01/29/24 22:24:46.522
• [3.158 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance]
test/e2e/apimachinery/webhook.go:273
  STEP: Creating a kubernetes client @ 01/29/24 22:24:46.531
  Jan 29 22:24:46.531: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename webhook @ 01/29/24 22:24:46.533
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:24:46.552
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:24:46.557
  STEP: Setting up server cert @ 01/29/24 22:24:46.578
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/29/24 22:24:46.919
  STEP: Deploying the webhook pod @ 01/29/24 22:24:46.929
  STEP: Wait for the deployment to be ready @ 01/29/24 22:24:46.945
  Jan 29 22:24:46.953: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0129 22:24:47.444543      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:24:48.445606      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 01/29/24 22:24:48.965
  STEP: Verifying the service has paired with the endpoint @ 01/29/24 22:24:48.981
  E0129 22:24:49.445758      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:24:49.982: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 01/29/24 22:24:49.992
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 01/29/24 22:24:50.021
  STEP: Creating a dummy validating-webhook-configuration object @ 01/29/24 22:24:50.043
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 01/29/24 22:24:50.053
  STEP: Creating a dummy mutating-webhook-configuration object @ 01/29/24 22:24:50.06
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 01/29/24 22:24:50.069
  Jan 29 22:24:50.075: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1739" for this suite. @ 01/29/24 22:24:50.13
  STEP: Destroying namespace "webhook-markers-6441" for this suite. @ 01/29/24 22:24:50.134
• [3.608 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance]
test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 01/29/24 22:24:50.14
  Jan 29 22:24:50.140: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename emptydir-wrapper @ 01/29/24 22:24:50.142
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:24:50.155
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:24:50.159
  E0129 22:24:50.446031      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:24:51.447058      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:24:52.198: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Cleaning up the secret @ 01/29/24 22:24:52.204
  STEP: Cleaning up the configmap @ 01/29/24 22:24:52.209
  STEP: Cleaning up the pod @ 01/29/24 22:24:52.217
  STEP: Destroying namespace "emptydir-wrapper-1759" for this suite. @ 01/29/24 22:24:52.228
• [2.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works  [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:269
  STEP: Creating a kubernetes client @ 01/29/24 22:24:52.238
  Jan 29 22:24:52.238: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename custom-resource-definition @ 01/29/24 22:24:52.239
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:24:52.251
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:24:52.255
  Jan 29 22:24:52.259: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  E0129 22:24:52.447238      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:24:53.447313      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:24:54.448232      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:24:55.384: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-1831" for this suite. @ 01/29/24 22:24:55.391
• [3.163 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:217
  STEP: Creating a kubernetes client @ 01/29/24 22:24:55.403
  Jan 29 22:24:55.403: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename emptydir @ 01/29/24 22:24:55.405
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:24:55.421
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:24:55.426
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 01/29/24 22:24:55.432
  E0129 22:24:55.448240      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:24:56.448328      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:24:57.448601      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:24:58.449230      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:24:59.449773      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/29/24 22:24:59.461
  Jan 29 22:24:59.465: INFO: Trying to get logs from node nodeb14 pod pod-8a06b056-f2be-4960-96e6-52acc53ad233 container test-container: <nil>
  STEP: delete the pod @ 01/29/24 22:24:59.477
  Jan 29 22:24:59.494: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7137" for this suite. @ 01/29/24 22:24:59.498
• [4.101 seconds]
------------------------------
SS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance]
test/e2e/apps/replica_set.go:165
  STEP: Creating a kubernetes client @ 01/29/24 22:24:59.505
  Jan 29 22:24:59.505: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename replicaset @ 01/29/24 22:24:59.507
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:24:59.523
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:24:59.528
  STEP: Create a ReplicaSet @ 01/29/24 22:24:59.533
  STEP: Verify that the required pods have come up @ 01/29/24 22:24:59.542
  Jan 29 22:24:59.546: INFO: Pod name sample-pod: Found 0 pods out of 3
  E0129 22:25:00.450744      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:25:01.451558      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:25:02.452105      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:25:03.452417      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:25:04.453490      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:25:04.550: INFO: Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 01/29/24 22:25:04.55
  E0129 22:25:05.453974      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:25:06.454466      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:25:06.563: INFO: Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 01/29/24 22:25:06.563
  STEP: DeleteCollection of the ReplicaSets @ 01/29/24 22:25:06.567
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 01/29/24 22:25:06.574
  Jan 29 22:25:06.578: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-1430" for this suite. @ 01/29/24 22:25:06.583
• [7.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 01/29/24 22:25:06.596
  Jan 29 22:25:06.596: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename projected @ 01/29/24 22:25:06.599
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:25:06.609
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:25:06.612
  STEP: Creating secret with name s-test-opt-del-0b831176-2b1c-4a32-9582-76f90719bb04 @ 01/29/24 22:25:06.62
  STEP: Creating secret with name s-test-opt-upd-5f6e913b-11a1-4c4f-afac-cbffdc8131c2 @ 01/29/24 22:25:06.624
  STEP: Creating the pod @ 01/29/24 22:25:06.628
  E0129 22:25:07.455349      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:25:08.455469      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-0b831176-2b1c-4a32-9582-76f90719bb04 @ 01/29/24 22:25:08.673
  STEP: Updating secret s-test-opt-upd-5f6e913b-11a1-4c4f-afac-cbffdc8131c2 @ 01/29/24 22:25:08.679
  STEP: Creating secret with name s-test-opt-create-caa19168-8f5c-4748-be6e-0120ae3b85bb @ 01/29/24 22:25:08.683
  STEP: waiting to observe update in volume @ 01/29/24 22:25:08.688
  E0129 22:25:09.455912      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:25:10.456428      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:25:11.457076      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:25:12.457647      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:25:13.458904      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:25:14.459642      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:25:15.460807      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:25:16.461278      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:25:17.461512      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:25:18.462438      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:25:19.463113      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:25:20.463255      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:25:21.464314      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:25:22.464891      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:25:23.465453      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:25:24.465933      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:25:25.466675      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:25:26.467521      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:25:27.468492      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:25:28.469613      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:25:29.470412      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:25:30.471021      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:25:31.471766      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:25:32.472284      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:25:33.472848      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:25:34.473476      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:25:35.474511      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:25:36.474993      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:25:37.475254      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:25:38.475400      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:25:39.475631      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:25:40.475841      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:25:41.476470      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:25:42.476914      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:25:43.477735      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:25:44.478402      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:25:45.478790      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:25:46.479266      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:25:47.479767      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:25:48.480006      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:25:49.480481      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:25:50.480755      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:25:51.481019      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:25:52.481573      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:25:53.482000      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:25:54.482937      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:25:55.483894      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:25:56.484898      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:25:57.485334      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:25:58.485418      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:25:59.486521      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:26:00.487086      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:26:01.487930      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:26:02.488475      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:26:03.489153      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:26:04.489770      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:26:05.490127      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:26:06.490656      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:26:07.491416      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:26:08.492397      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:26:09.492793      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:26:10.493382      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:26:11.493925      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:26:12.494311      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:26:13.495502      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:26:14.496126      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:26:15.496523      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:26:16.497035      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:26:17.497374      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:26:18.497454      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:26:19.498665      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:26:20.499271      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:26:21.499478      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:26:22.500110      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:26:23.500457      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:26:24.500989      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:26:25.501326      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:26:26.501855      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:26:27.502033      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:26:28.502981      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:26:29.504017      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:26:30.504694      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:26:31.504964      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:26:32.505609      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:26:33.246: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2964" for this suite. @ 01/29/24 22:26:33.251
• [86.666 seconds]
------------------------------
SSS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:167
  STEP: Creating a kubernetes client @ 01/29/24 22:26:33.263
  Jan 29 22:26:33.263: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename downward-api @ 01/29/24 22:26:33.265
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:26:33.279
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:26:33.284
  STEP: Creating a pod to test downward api env vars @ 01/29/24 22:26:33.288
  E0129 22:26:33.506459      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:26:34.506982      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:26:35.507038      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:26:36.507626      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/29/24 22:26:37.318
  Jan 29 22:26:37.321: INFO: Trying to get logs from node nodeb14 pod downward-api-273b8c29-6f63-4ef2-9296-229745906398 container dapi-container: <nil>
  STEP: delete the pod @ 01/29/24 22:26:37.333
  Jan 29 22:26:37.349: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2798" for this suite. @ 01/29/24 22:26:37.354
• [4.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/security_context.go:347
  STEP: Creating a kubernetes client @ 01/29/24 22:26:37.362
  Jan 29 22:26:37.362: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename security-context-test @ 01/29/24 22:26:37.364
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:26:37.381
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:26:37.385
  E0129 22:26:37.507701      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:26:38.508494      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:26:39.508674      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:26:40.509139      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:26:41.418: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-9798" for this suite. @ 01/29/24 22:26:41.423
• [4.067 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 01/29/24 22:26:41.43
  Jan 29 22:26:41.430: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename pods @ 01/29/24 22:26:41.432
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:26:41.447
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:26:41.452
  STEP: creating the pod @ 01/29/24 22:26:41.456
  STEP: submitting the pod to kubernetes @ 01/29/24 22:26:41.456
  W0129 22:26:41.466335      23 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  E0129 22:26:41.510142      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:26:42.511084      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 01/29/24 22:26:43.479
  STEP: updating the pod @ 01/29/24 22:26:43.483
  E0129 22:26:43.511808      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:26:44.001: INFO: Successfully updated pod "pod-update-activedeadlineseconds-2cac6ed1-82e5-461c-bfba-0e7e30c031dd"
  E0129 22:26:44.512486      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:26:45.513028      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:26:46.513365      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:26:47.513866      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:26:48.019: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-146" for this suite. @ 01/29/24 22:26:48.025
• [6.603 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:134
  STEP: Creating a kubernetes client @ 01/29/24 22:26:48.034
  Jan 29 22:26:48.035: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename container-probe @ 01/29/24 22:26:48.036
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:26:48.05
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:26:48.054
  STEP: Creating pod busybox-118f952d-cd70-448a-83da-bebeff078a12 in namespace container-probe-5652 @ 01/29/24 22:26:48.059
  E0129 22:26:48.514953      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:26:49.516060      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 01/29/24 22:26:50.078
  Jan 29 22:26:50.081: INFO: Initial restart count of pod busybox-118f952d-cd70-448a-83da-bebeff078a12 is 0
  Jan 29 22:26:50.085: INFO: Get pod busybox-118f952d-cd70-448a-83da-bebeff078a12 in namespace container-probe-5652
  E0129 22:26:50.517004      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:26:51.517210      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:26:52.090: INFO: Get pod busybox-118f952d-cd70-448a-83da-bebeff078a12 in namespace container-probe-5652
  E0129 22:26:52.517508      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:26:53.517618      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:26:54.096: INFO: Get pod busybox-118f952d-cd70-448a-83da-bebeff078a12 in namespace container-probe-5652
  E0129 22:26:54.517863      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:26:55.518291      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:26:56.105: INFO: Get pod busybox-118f952d-cd70-448a-83da-bebeff078a12 in namespace container-probe-5652
  E0129 22:26:56.519355      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:26:57.520036      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:26:58.112: INFO: Get pod busybox-118f952d-cd70-448a-83da-bebeff078a12 in namespace container-probe-5652
  E0129 22:26:58.520321      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:26:59.521578      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:27:00.119: INFO: Get pod busybox-118f952d-cd70-448a-83da-bebeff078a12 in namespace container-probe-5652
  E0129 22:27:00.522487      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:27:01.522994      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:27:02.125: INFO: Get pod busybox-118f952d-cd70-448a-83da-bebeff078a12 in namespace container-probe-5652
  E0129 22:27:02.523781      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:27:03.524019      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:27:04.131: INFO: Get pod busybox-118f952d-cd70-448a-83da-bebeff078a12 in namespace container-probe-5652
  E0129 22:27:04.524474      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:27:05.525519      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:27:06.136: INFO: Get pod busybox-118f952d-cd70-448a-83da-bebeff078a12 in namespace container-probe-5652
  E0129 22:27:06.525949      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:27:07.526914      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:27:08.141: INFO: Get pod busybox-118f952d-cd70-448a-83da-bebeff078a12 in namespace container-probe-5652
  E0129 22:27:08.528034      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:27:09.528458      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:27:10.148: INFO: Get pod busybox-118f952d-cd70-448a-83da-bebeff078a12 in namespace container-probe-5652
  E0129 22:27:10.529204      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:27:11.529800      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:27:12.153: INFO: Get pod busybox-118f952d-cd70-448a-83da-bebeff078a12 in namespace container-probe-5652
  E0129 22:27:12.529920      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:27:13.530030      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:27:14.159: INFO: Get pod busybox-118f952d-cd70-448a-83da-bebeff078a12 in namespace container-probe-5652
  E0129 22:27:14.530134      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:27:15.530579      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:27:16.168: INFO: Get pod busybox-118f952d-cd70-448a-83da-bebeff078a12 in namespace container-probe-5652
  E0129 22:27:16.531280      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:27:17.531862      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:27:18.174: INFO: Get pod busybox-118f952d-cd70-448a-83da-bebeff078a12 in namespace container-probe-5652
  E0129 22:27:18.532952      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:27:19.533614      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:27:20.182: INFO: Get pod busybox-118f952d-cd70-448a-83da-bebeff078a12 in namespace container-probe-5652
  E0129 22:27:20.534871      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:27:21.535404      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:27:22.187: INFO: Get pod busybox-118f952d-cd70-448a-83da-bebeff078a12 in namespace container-probe-5652
  E0129 22:27:22.536351      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:27:23.536579      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:27:24.193: INFO: Get pod busybox-118f952d-cd70-448a-83da-bebeff078a12 in namespace container-probe-5652
  E0129 22:27:24.537429      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:27:25.537931      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:27:26.200: INFO: Get pod busybox-118f952d-cd70-448a-83da-bebeff078a12 in namespace container-probe-5652
  E0129 22:27:26.538627      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:27:27.539135      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:27:28.207: INFO: Get pod busybox-118f952d-cd70-448a-83da-bebeff078a12 in namespace container-probe-5652
  E0129 22:27:28.540095      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:27:29.540609      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:27:30.213: INFO: Get pod busybox-118f952d-cd70-448a-83da-bebeff078a12 in namespace container-probe-5652
  E0129 22:27:30.540753      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:27:31.541084      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:27:32.219: INFO: Get pod busybox-118f952d-cd70-448a-83da-bebeff078a12 in namespace container-probe-5652
  E0129 22:27:32.541954      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:27:33.542501      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:27:34.223: INFO: Get pod busybox-118f952d-cd70-448a-83da-bebeff078a12 in namespace container-probe-5652
  E0129 22:27:34.543228      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:27:35.543912      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:27:36.229: INFO: Get pod busybox-118f952d-cd70-448a-83da-bebeff078a12 in namespace container-probe-5652
  E0129 22:27:36.544706      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:27:37.545719      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:27:38.233: INFO: Get pod busybox-118f952d-cd70-448a-83da-bebeff078a12 in namespace container-probe-5652
  E0129 22:27:38.545966      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:27:39.546458      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:27:40.247: INFO: Get pod busybox-118f952d-cd70-448a-83da-bebeff078a12 in namespace container-probe-5652
  Jan 29 22:27:40.247: INFO: Restart count of pod container-probe-5652/busybox-118f952d-cd70-448a-83da-bebeff078a12 is now 1 (50.165978967s elapsed)
  Jan 29 22:27:40.247: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 01/29/24 22:27:40.252
  STEP: Destroying namespace "container-probe-5652" for this suite. @ 01/29/24 22:27:40.263
• [52.235 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/kubelet_etc_hosts.go:64
  STEP: Creating a kubernetes client @ 01/29/24 22:27:40.273
  Jan 29 22:27:40.273: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 01/29/24 22:27:40.274
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:27:40.286
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:27:40.291
  STEP: Setting up the test @ 01/29/24 22:27:40.295
  STEP: Creating hostNetwork=false pod @ 01/29/24 22:27:40.295
  E0129 22:27:40.547452      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:27:41.548158      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating hostNetwork=true pod @ 01/29/24 22:27:42.32
  E0129 22:27:42.549289      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:27:43.549526      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Running the test @ 01/29/24 22:27:44.342
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 01/29/24 22:27:44.342
  Jan 29 22:27:44.342: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-1116 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jan 29 22:27:44.342: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  Jan 29 22:27:44.344: INFO: ExecWithOptions: Clientset creation
  Jan 29 22:27:44.344: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1116/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Jan 29 22:27:44.454: INFO: Exec stderr: ""
  Jan 29 22:27:44.454: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-1116 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jan 29 22:27:44.454: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  Jan 29 22:27:44.455: INFO: ExecWithOptions: Clientset creation
  Jan 29 22:27:44.455: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1116/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  E0129 22:27:44.549781      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:27:44.568: INFO: Exec stderr: ""
  Jan 29 22:27:44.568: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-1116 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jan 29 22:27:44.568: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  Jan 29 22:27:44.569: INFO: ExecWithOptions: Clientset creation
  Jan 29 22:27:44.569: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1116/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Jan 29 22:27:44.681: INFO: Exec stderr: ""
  Jan 29 22:27:44.681: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-1116 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jan 29 22:27:44.681: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  Jan 29 22:27:44.682: INFO: ExecWithOptions: Clientset creation
  Jan 29 22:27:44.682: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1116/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Jan 29 22:27:44.785: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 01/29/24 22:27:44.785
  Jan 29 22:27:44.785: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-1116 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jan 29 22:27:44.785: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  Jan 29 22:27:44.786: INFO: ExecWithOptions: Clientset creation
  Jan 29 22:27:44.786: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1116/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  E0129 22:27:45.550122      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:27:45.800: INFO: Exec stderr: ""
  Jan 29 22:27:45.801: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-1116 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jan 29 22:27:45.801: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  Jan 29 22:27:45.802: INFO: ExecWithOptions: Clientset creation
  Jan 29 22:27:45.802: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1116/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  Jan 29 22:27:45.912: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 01/29/24 22:27:45.912
  Jan 29 22:27:45.912: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-1116 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jan 29 22:27:45.912: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  Jan 29 22:27:45.913: INFO: ExecWithOptions: Clientset creation
  Jan 29 22:27:45.913: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1116/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Jan 29 22:27:46.025: INFO: Exec stderr: ""
  Jan 29 22:27:46.025: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-1116 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jan 29 22:27:46.025: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  Jan 29 22:27:46.026: INFO: ExecWithOptions: Clientset creation
  Jan 29 22:27:46.026: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1116/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Jan 29 22:27:46.148: INFO: Exec stderr: ""
  Jan 29 22:27:46.148: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-1116 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jan 29 22:27:46.148: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  Jan 29 22:27:46.149: INFO: ExecWithOptions: Clientset creation
  Jan 29 22:27:46.149: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1116/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Jan 29 22:27:46.250: INFO: Exec stderr: ""
  Jan 29 22:27:46.250: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-1116 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jan 29 22:27:46.250: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  Jan 29 22:27:46.251: INFO: ExecWithOptions: Clientset creation
  Jan 29 22:27:46.251: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-1116/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Jan 29 22:27:46.360: INFO: Exec stderr: ""
  Jan 29 22:27:46.360: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-1116" for this suite. @ 01/29/24 22:27:46.365
• [6.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance]
test/e2e/scheduling/limit_range.go:239
  STEP: Creating a kubernetes client @ 01/29/24 22:27:46.372
  Jan 29 22:27:46.372: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename limitrange @ 01/29/24 22:27:46.373
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:27:46.387
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:27:46.391
  STEP: Creating LimitRange "e2e-limitrange-7szrf" in namespace "limitrange-7478" @ 01/29/24 22:27:46.395
  STEP: Creating another limitRange in another namespace @ 01/29/24 22:27:46.401
  Jan 29 22:27:46.416: INFO: Namespace "e2e-limitrange-7szrf-4630" created
  Jan 29 22:27:46.416: INFO: Creating LimitRange "e2e-limitrange-7szrf" in namespace "e2e-limitrange-7szrf-4630"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-7szrf" @ 01/29/24 22:27:46.42
  Jan 29 22:27:46.424: INFO: Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-7szrf" in "limitrange-7478" namespace @ 01/29/24 22:27:46.424
  Jan 29 22:27:46.434: INFO: LimitRange "e2e-limitrange-7szrf" has been patched
  STEP: Delete LimitRange "e2e-limitrange-7szrf" by Collection with labelSelector: "e2e-limitrange-7szrf=patched" @ 01/29/24 22:27:46.434
  STEP: Confirm that the limitRange "e2e-limitrange-7szrf" has been deleted @ 01/29/24 22:27:46.442
  Jan 29 22:27:46.442: INFO: Requesting list of LimitRange to confirm quantity
  Jan 29 22:27:46.444: INFO: Found 0 LimitRange with label "e2e-limitrange-7szrf=patched"
  Jan 29 22:27:46.444: INFO: LimitRange "e2e-limitrange-7szrf" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-7szrf" @ 01/29/24 22:27:46.445
  Jan 29 22:27:46.448: INFO: Found 1 limitRange
  Jan 29 22:27:46.448: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-7478" for this suite. @ 01/29/24 22:27:46.452
  STEP: Destroying namespace "e2e-limitrange-7szrf-4630" for this suite. @ 01/29/24 22:27:46.457
• [0.094 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance]
test/e2e/apimachinery/garbage_collector.go:638
  STEP: Creating a kubernetes client @ 01/29/24 22:27:46.467
  Jan 29 22:27:46.467: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename gc @ 01/29/24 22:27:46.47
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:27:46.483
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:27:46.487
  STEP: create the rc @ 01/29/24 22:27:46.496
  W0129 22:27:46.502331      23 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0129 22:27:46.551268      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:27:47.551650      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:27:48.551927      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:27:49.552187      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:27:50.552798      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:27:51.553292      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 01/29/24 22:27:52.508
  STEP: wait for the rc to be deleted @ 01/29/24 22:27:52.514
  E0129 22:27:52.554464      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:27:53.533: INFO: 80 pods remaining
  Jan 29 22:27:53.533: INFO: 80 pods has nil DeletionTimestamp
  Jan 29 22:27:53.533: INFO: 
  E0129 22:27:53.556277      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:27:54.532: INFO: 71 pods remaining
  Jan 29 22:27:54.532: INFO: 71 pods has nil DeletionTimestamp
  Jan 29 22:27:54.532: INFO: 
  E0129 22:27:54.556699      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:27:55.533: INFO: 60 pods remaining
  Jan 29 22:27:55.533: INFO: 60 pods has nil DeletionTimestamp
  Jan 29 22:27:55.533: INFO: 
  E0129 22:27:55.557678      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:27:56.528: INFO: 40 pods remaining
  Jan 29 22:27:56.528: INFO: 40 pods has nil DeletionTimestamp
  Jan 29 22:27:56.528: INFO: 
  E0129 22:27:56.558776      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:27:57.526: INFO: 31 pods remaining
  Jan 29 22:27:57.526: INFO: 31 pods has nil DeletionTimestamp
  Jan 29 22:27:57.526: INFO: 
  E0129 22:27:57.559139      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:27:58.526: INFO: 20 pods remaining
  Jan 29 22:27:58.526: INFO: 20 pods has nil DeletionTimestamp
  Jan 29 22:27:58.526: INFO: 
  E0129 22:27:58.560261      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 01/29/24 22:27:59.522
  E0129 22:27:59.560220      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:27:59.672: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Jan 29 22:27:59.672: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-8545" for this suite. @ 01/29/24 22:27:59.676
• [13.215 seconds]
------------------------------
SS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 01/29/24 22:27:59.683
  Jan 29 22:27:59.683: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename container-runtime @ 01/29/24 22:27:59.684
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:27:59.699
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:27:59.704
  STEP: create the container @ 01/29/24 22:27:59.708
  W0129 22:27:59.715239      23 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 01/29/24 22:27:59.715
  E0129 22:28:00.561329      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:28:01.561422      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:28:02.561620      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 01/29/24 22:28:02.737
  STEP: the container should be terminated @ 01/29/24 22:28:02.741
  STEP: the termination message should be set @ 01/29/24 22:28:02.741
  Jan 29 22:28:02.741: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 01/29/24 22:28:02.741
  Jan 29 22:28:02.751: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-7975" for this suite. @ 01/29/24 22:28:02.761
• [3.087 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance]
test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 01/29/24 22:28:02.773
  Jan 29 22:28:02.773: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename tables @ 01/29/24 22:28:02.775
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:28:02.788
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:28:02.793
  Jan 29 22:28:02.802: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-5957" for this suite. @ 01/29/24 22:28:02.808
• [0.043 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 01/29/24 22:28:02.816
  Jan 29 22:28:02.816: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename projected @ 01/29/24 22:28:02.818
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:28:02.831
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:28:02.836
  STEP: Creating projection with secret that has name projected-secret-test-map-d947c1af-5abd-4a89-918e-7ecb961eaf36 @ 01/29/24 22:28:02.84
  STEP: Creating a pod to test consume secrets @ 01/29/24 22:28:02.846
  E0129 22:28:03.561857      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:28:04.562177      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:28:05.562272      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:28:06.562791      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/29/24 22:28:06.871
  Jan 29 22:28:06.875: INFO: Trying to get logs from node nodeb14 pod pod-projected-secrets-d9def183-865d-4c0f-baae-b0a755774731 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 01/29/24 22:28:06.885
  Jan 29 22:28:06.903: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2744" for this suite. @ 01/29/24 22:28:06.909
• [4.098 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance]
test/e2e/common/node/lease.go:72
  STEP: Creating a kubernetes client @ 01/29/24 22:28:06.915
  Jan 29 22:28:06.916: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename lease-test @ 01/29/24 22:28:06.917
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:28:06.93
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:28:06.935
  Jan 29 22:28:07.015: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-9081" for this suite. @ 01/29/24 22:28:07.021
• [0.112 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance]
test/e2e/common/node/sysctl.go:123
  STEP: Creating a kubernetes client @ 01/29/24 22:28:07.031
  Jan 29 22:28:07.032: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename sysctl @ 01/29/24 22:28:07.033
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:28:07.049
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:28:07.054
  STEP: Creating a pod with one valid and two invalid sysctls @ 01/29/24 22:28:07.059
  Jan 29 22:28:07.064: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-7185" for this suite. @ 01/29/24 22:28:07.069
• [0.045 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:131
  STEP: Creating a kubernetes client @ 01/29/24 22:28:07.077
  Jan 29 22:28:07.077: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename projected @ 01/29/24 22:28:07.079
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:28:07.092
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:28:07.097
  STEP: Creating the pod @ 01/29/24 22:28:07.101
  E0129 22:28:07.563290      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:28:08.564344      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:28:09.564672      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:28:09.663: INFO: Successfully updated pod "labelsupdate32aabcef-0012-4cf1-9085-3fd76b527a84"
  E0129 22:28:10.564865      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:28:11.565585      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:28:11.684: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5281" for this suite. @ 01/29/24 22:28:11.69
• [4.618 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 01/29/24 22:28:11.697
  Jan 29 22:28:11.697: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename secrets @ 01/29/24 22:28:11.699
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:28:11.719
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:28:11.724
  STEP: Creating secret with name s-test-opt-del-ecec9bf6-b1a6-46c4-b284-3229e6c4b726 @ 01/29/24 22:28:11.734
  STEP: Creating secret with name s-test-opt-upd-6d79f75b-10cf-4e13-af57-230d64609643 @ 01/29/24 22:28:11.74
  STEP: Creating the pod @ 01/29/24 22:28:11.745
  E0129 22:28:12.566302      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:28:13.566814      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-ecec9bf6-b1a6-46c4-b284-3229e6c4b726 @ 01/29/24 22:28:13.795
  STEP: Updating secret s-test-opt-upd-6d79f75b-10cf-4e13-af57-230d64609643 @ 01/29/24 22:28:13.801
  STEP: Creating secret with name s-test-opt-create-1a256cee-6a3f-4d8d-9769-88cf49f66e6b @ 01/29/24 22:28:13.807
  STEP: waiting to observe update in volume @ 01/29/24 22:28:13.811
  E0129 22:28:14.567915      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:28:15.568237      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:28:16.569242      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:28:17.569774      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:28:17.855: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7350" for this suite. @ 01/29/24 22:28:17.86
• [6.168 seconds]
------------------------------
S
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance]
test/e2e/apps/rc.go:424
  STEP: Creating a kubernetes client @ 01/29/24 22:28:17.866
  Jan 29 22:28:17.866: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename replication-controller @ 01/29/24 22:28:17.868
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:28:17.88
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:28:17.884
  STEP: Creating ReplicationController "e2e-rc-47k25" @ 01/29/24 22:28:17.889
  Jan 29 22:28:17.896: INFO: Get Replication Controller "e2e-rc-47k25" to confirm replicas
  E0129 22:28:18.570123      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:28:18.902: INFO: Get Replication Controller "e2e-rc-47k25" to confirm replicas
  Jan 29 22:28:18.907: INFO: Found 1 replicas for "e2e-rc-47k25" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-47k25" @ 01/29/24 22:28:18.907
  STEP: Updating a scale subresource @ 01/29/24 22:28:18.91
  STEP: Verifying replicas where modified for replication controller "e2e-rc-47k25" @ 01/29/24 22:28:18.919
  Jan 29 22:28:18.919: INFO: Get Replication Controller "e2e-rc-47k25" to confirm replicas
  E0129 22:28:19.570873      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:28:19.923: INFO: Get Replication Controller "e2e-rc-47k25" to confirm replicas
  Jan 29 22:28:19.927: INFO: Found 2 replicas for "e2e-rc-47k25" replication controller
  Jan 29 22:28:19.927: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-7250" for this suite. @ 01/29/24 22:28:19.933
• [2.072 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance]
test/e2e/network/service.go:1455
  STEP: Creating a kubernetes client @ 01/29/24 22:28:19.939
  Jan 29 22:28:19.939: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename services @ 01/29/24 22:28:19.941
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:28:19.952
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:28:19.957
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-320 @ 01/29/24 22:28:19.962
  STEP: changing the ExternalName service to type=NodePort @ 01/29/24 22:28:19.966
  STEP: creating replication controller externalname-service in namespace services-320 @ 01/29/24 22:28:19.989
  I0129 22:28:19.997026      23 runners.go:197] Created replication controller with name: externalname-service, namespace: services-320, replica count: 2
  E0129 22:28:20.570880      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:28:21.571757      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:28:22.572233      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0129 22:28:23.048199      23 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jan 29 22:28:23.048: INFO: Creating new exec pod
  E0129 22:28:23.572820      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:28:24.572952      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:28:25.573101      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:28:26.069: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=services-320 exec execpod956sz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  E0129 22:28:26.574249      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:28:27.575223      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:28:28.278: INFO: rc: 1
  Jan 29 22:28:28.279: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=services-320 exec execpod956sz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 externalname-service 80
  nc: connect to externalname-service port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  E0129 22:28:28.575745      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:28:29.280: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=services-320 exec execpod956sz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  E0129 22:28:29.576811      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:28:30.577196      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:28:31.495: INFO: rc: 1
  Jan 29 22:28:31.495: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=services-320 exec execpod956sz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 externalname-service 80
  nc: connect to externalname-service port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  E0129 22:28:31.577564      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:28:32.280: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=services-320 exec execpod956sz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  E0129 22:28:32.578346      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:28:33.579393      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:28:34.492: INFO: rc: 1
  Jan 29 22:28:34.492: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=services-320 exec execpod956sz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 externalname-service 80
  nc: connect to externalname-service port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  E0129 22:28:34.580239      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:28:35.279: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=services-320 exec execpod956sz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Jan 29 22:28:35.504: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Jan 29 22:28:35.504: INFO: stdout: "externalname-service-rgcbm"
  Jan 29 22:28:35.505: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=services-320 exec execpod956sz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.109.21.232 80'
  E0129 22:28:35.580676      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:28:35.716: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.109.21.232 80\nConnection to 10.109.21.232 80 port [tcp/http] succeeded!\n"
  Jan 29 22:28:35.716: INFO: stdout: "externalname-service-h6zzv"
  Jan 29 22:28:35.716: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=services-320 exec execpod956sz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.100.114 32612'
  Jan 29 22:28:35.919: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.100.114 32612\nConnection to 192.168.100.114 32612 port [tcp/*] succeeded!\n"
  Jan 29 22:28:35.919: INFO: stdout: ""
  E0129 22:28:36.580892      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:28:36.920: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=services-320 exec execpod956sz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.100.114 32612'
  Jan 29 22:28:37.144: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.100.114 32612\nConnection to 192.168.100.114 32612 port [tcp/*] succeeded!\n"
  Jan 29 22:28:37.144: INFO: stdout: "externalname-service-rgcbm"
  Jan 29 22:28:37.144: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=services-320 exec execpod956sz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.100.173 32612'
  Jan 29 22:28:37.366: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.100.173 32612\nConnection to 192.168.100.173 32612 port [tcp/*] succeeded!\n"
  Jan 29 22:28:37.366: INFO: stdout: ""
  E0129 22:28:37.581080      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:28:38.367: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=services-320 exec execpod956sz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.100.173 32612'
  Jan 29 22:28:38.580: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.100.173 32612\nConnection to 192.168.100.173 32612 port [tcp/*] succeeded!\n"
  Jan 29 22:28:38.580: INFO: stdout: ""
  E0129 22:28:38.581564      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:28:39.368: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=services-320 exec execpod956sz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.100.173 32612'
  E0129 22:28:39.582001      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:28:39.583: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.100.173 32612\nConnection to 192.168.100.173 32612 port [tcp/*] succeeded!\n"
  Jan 29 22:28:39.583: INFO: stdout: "externalname-service-h6zzv"
  Jan 29 22:28:39.583: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Jan 29 22:28:39.589: INFO: Cleaning up the ExternalName to NodePort test service
  STEP: Destroying namespace "services-320" for this suite. @ 01/29/24 22:28:39.612
• [19.679 seconds]
------------------------------
SSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods  [Conformance]
test/e2e/kubectl/kubectl.go:1342
  STEP: Creating a kubernetes client @ 01/29/24 22:28:39.619
  Jan 29 22:28:39.619: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename kubectl @ 01/29/24 22:28:39.621
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:28:39.644
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:28:39.648
  Jan 29 22:28:39.654: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=kubectl-9289 create -f -'
  Jan 29 22:28:39.974: INFO: stderr: ""
  Jan 29 22:28:39.974: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  Jan 29 22:28:39.974: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=kubectl-9289 create -f -'
  Jan 29 22:28:40.288: INFO: stderr: ""
  Jan 29 22:28:40.288: INFO: stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 01/29/24 22:28:40.288
  E0129 22:28:40.582472      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:28:41.294: INFO: Selector matched 1 pods for map[app:agnhost]
  Jan 29 22:28:41.294: INFO: Found 1 / 1
  Jan 29 22:28:41.294: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  Jan 29 22:28:41.298: INFO: Selector matched 1 pods for map[app:agnhost]
  Jan 29 22:28:41.298: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Jan 29 22:28:41.298: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=kubectl-9289 describe pod agnhost-primary-lkhnn'
  Jan 29 22:28:41.412: INFO: stderr: ""
  Jan 29 22:28:41.412: INFO: stdout: "Name:             agnhost-primary-lkhnn\nNamespace:        kubectl-9289\nPriority:         0\nService Account:  default\nNode:             nodeb14/192.168.100.114\nStart Time:       Mon, 29 Jan 2024 22:28:39 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               10.244.2.15\nIPs:\n  IP:           10.244.2.15\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://88cf993fbb0426f45f0e7def65b4f0adf2c81426e009682c05e4682d0cc96d47\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.45\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:2c5b5b056076334e4cf431d964d102e44cbca8f1e6b16ac1e477a0ffbe6caac4\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Mon, 29 Jan 2024 22:28:40 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-jdtzg (ro)\nConditions:\n  Type              Status\n  Initialized       True \n  Ready             True \n  ContainersReady   True \n  PodScheduled      True \nVolumes:\n  kube-api-access-jdtzg:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  2s    default-scheduler  Successfully assigned kubectl-9289/agnhost-primary-lkhnn to nodeb14\n  Normal  Pulled     1s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.45\" already present on machine\n  Normal  Created    1s    kubelet            Created container agnhost-primary\n  Normal  Started    1s    kubelet            Started container agnhost-primary\n"
  Jan 29 22:28:41.412: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=kubectl-9289 describe rc agnhost-primary'
  Jan 29 22:28:41.523: INFO: stderr: ""
  Jan 29 22:28:41.523: INFO: stdout: "Name:         agnhost-primary\nNamespace:    kubectl-9289\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:        registry.k8s.io/e2e-test-images/agnhost:2.45\n    Port:         6379/TCP\n    Host Port:    0/TCP\n    Environment:  <none>\n    Mounts:       <none>\n  Volumes:        <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  2s    replication-controller  Created pod: agnhost-primary-lkhnn\n"
  Jan 29 22:28:41.523: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=kubectl-9289 describe service agnhost-primary'
  E0129 22:28:41.583282      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:28:41.625: INFO: stderr: ""
  Jan 29 22:28:41.625: INFO: stdout: "Name:              agnhost-primary\nNamespace:         kubectl-9289\nLabels:            app=agnhost\n                   role=primary\nAnnotations:       <none>\nSelector:          app=agnhost,role=primary\nType:              ClusterIP\nIP Family Policy:  SingleStack\nIP Families:       IPv4\nIP:                10.108.112.190\nIPs:               10.108.112.190\nPort:              <unset>  6379/TCP\nTargetPort:        agnhost-server/TCP\nEndpoints:         10.244.2.15:6379\nSession Affinity:  None\nEvents:            <none>\n"
  Jan 29 22:28:41.630: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=kubectl-9289 describe node nodeb08'
  Jan 29 22:28:41.776: INFO: stderr: ""
  Jan 29 22:28:41.776: INFO: stdout: "Name:               nodeb08\nRoles:              control-plane\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=nodeb08\n                    kubernetes.io/os=linux\n                    node-role.kubernetes.io/control-plane=\n                    node.kubernetes.io/exclude-from-external-load-balancers=\nAnnotations:        flannel.alpha.coreos.com/backend-data: {\"VNI\":1,\"VtepMAC\":\"f6:56:69:01:c1:25\"}\n                    flannel.alpha.coreos.com/backend-type: vxlan\n                    flannel.alpha.coreos.com/kube-subnet-manager: true\n                    flannel.alpha.coreos.com/public-ip: 192.168.100.108\n                    kubeadm.alpha.kubernetes.io/cri-socket: unix:///var/run/containerd/containerd.sock\n                    node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Mon, 29 Jan 2024 20:51:09 +0000\nTaints:             node-role.kubernetes.io/control-plane:NoSchedule\nUnschedulable:      false\nLease:\n  HolderIdentity:  nodeb08\n  AcquireTime:     <unset>\n  RenewTime:       Mon, 29 Jan 2024 22:28:38 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Mon, 29 Jan 2024 20:51:38 +0000   Mon, 29 Jan 2024 20:51:38 +0000   FlannelIsUp                  Flannel is running on this node\n  MemoryPressure       False   Mon, 29 Jan 2024 22:24:06 +0000   Mon, 29 Jan 2024 20:51:07 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Mon, 29 Jan 2024 22:24:06 +0000   Mon, 29 Jan 2024 20:51:07 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Mon, 29 Jan 2024 22:24:06 +0000   Mon, 29 Jan 2024 20:51:07 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Mon, 29 Jan 2024 22:24:06 +0000   Mon, 29 Jan 2024 20:51:36 +0000   KubeletReady                 kubelet is posting ready status. AppArmor enabled\nAddresses:\n  InternalIP:  192.168.100.108\n  Hostname:    nodeb08\nCapacity:\n  cpu:                8\n  ephemeral-storage:  81106868Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             32862736Ki\n  pods:               110\nAllocatable:\n  cpu:                8\n  ephemeral-storage:  74748089426\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             32760336Ki\n  pods:               110\nSystem Info:\n  Machine ID:                 ec9a95c6be964afa9108c1b6b50aef85\n  System UUID:                ec9a95c6-be96-4afa-9108-c1b6b50aef85\n  Boot ID:                    bd8bab79-7222-4aa1-81ea-a1d5ef07d795\n  Kernel Version:             5.15.0-91-generic\n  OS Image:                   Ubuntu 22.04.3 LTS\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  containerd://1.6.18\n  Kubelet Version:            v1.28.3-ckp\n  Kube-Proxy Version:         v1.28.3-ckp\nPodCIDR:                      10.244.0.0/24\nPodCIDRs:                     10.244.0.0/24\nNon-terminated Pods:          (9 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  kube-flannel                kube-flannel-ds-rg7st                                      100m (1%)     0 (0%)      50Mi (0%)        0 (0%)         97m\n  kube-system                 coredns-64c5765b76-7m4j9                                   100m (1%)     0 (0%)      70Mi (0%)        170Mi (0%)     97m\n  kube-system                 coredns-64c5765b76-mxbcr                                   100m (1%)     0 (0%)      70Mi (0%)        170Mi (0%)     97m\n  kube-system                 etcd-nodeb08                                               100m (1%)     0 (0%)      100Mi (0%)       0 (0%)         97m\n  kube-system                 kube-apiserver-nodeb08                                     250m (3%)     0 (0%)      0 (0%)           0 (0%)         97m\n  kube-system                 kube-controller-manager-nodeb08                            200m (2%)     0 (0%)      0 (0%)           0 (0%)         97m\n  kube-system                 kube-proxy-lx4xs                                           0 (0%)        0 (0%)      0 (0%)           0 (0%)         97m\n  kube-system                 kube-scheduler-nodeb08                                     100m (1%)     0 (0%)      0 (0%)           0 (0%)         97m\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-f2be670d44c14602-4tw7b    0 (0%)        0 (0%)      0 (0%)           0 (0%)         92m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests    Limits\n  --------           --------    ------\n  cpu                950m (11%)  0 (0%)\n  memory             290Mi (0%)  340Mi (1%)\n  ephemeral-storage  0 (0%)      0 (0%)\n  hugepages-1Gi      0 (0%)      0 (0%)\n  hugepages-2Mi      0 (0%)      0 (0%)\nEvents:              <none>\n"
  Jan 29 22:28:41.777: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=kubectl-9289 describe namespace kubectl-9289'
  Jan 29 22:28:41.886: INFO: stderr: ""
  Jan 29 22:28:41.886: INFO: stdout: "Name:         kubectl-9289\nLabels:       e2e-framework=kubectl\n              e2e-run=49806411-f3fa-4688-a28f-4a30d2c0e24c\n              kubernetes.io/metadata.name=kubectl-9289\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  Jan 29 22:28:41.886: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9289" for this suite. @ 01/29/24 22:28:41.891
• [2.277 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource  [Conformance]
test/e2e/kubectl/kubectl.go:1575
  STEP: Creating a kubernetes client @ 01/29/24 22:28:41.899
  Jan 29 22:28:41.899: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename kubectl @ 01/29/24 22:28:41.9
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:28:41.912
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:28:41.916
  STEP: creating the pod @ 01/29/24 22:28:41.921
  Jan 29 22:28:41.921: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=kubectl-8003 create -f -'
  Jan 29 22:28:42.227: INFO: stderr: ""
  Jan 29 22:28:42.227: INFO: stdout: "pod/pause created\n"
  E0129 22:28:42.584272      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:28:43.584924      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 01/29/24 22:28:44.236
  Jan 29 22:28:44.237: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=kubectl-8003 label pods pause testing-label=testing-label-value'
  Jan 29 22:28:44.357: INFO: stderr: ""
  Jan 29 22:28:44.357: INFO: stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 01/29/24 22:28:44.357
  Jan 29 22:28:44.357: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=kubectl-8003 get pod pause -L testing-label'
  Jan 29 22:28:44.458: INFO: stderr: ""
  Jan 29 22:28:44.458: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 01/29/24 22:28:44.458
  Jan 29 22:28:44.459: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=kubectl-8003 label pods pause testing-label-'
  Jan 29 22:28:44.565: INFO: stderr: ""
  Jan 29 22:28:44.565: INFO: stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 01/29/24 22:28:44.565
  Jan 29 22:28:44.565: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=kubectl-8003 get pod pause -L testing-label'
  E0129 22:28:44.585899      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:28:44.664: INFO: stderr: ""
  Jan 29 22:28:44.664: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    \n"
  STEP: using delete to clean up resources @ 01/29/24 22:28:44.664
  Jan 29 22:28:44.665: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=kubectl-8003 delete --grace-period=0 --force -f -'
  Jan 29 22:28:44.773: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jan 29 22:28:44.773: INFO: stdout: "pod \"pause\" force deleted\n"
  Jan 29 22:28:44.773: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=kubectl-8003 get rc,svc -l name=pause --no-headers'
  Jan 29 22:28:44.883: INFO: stderr: "No resources found in kubectl-8003 namespace.\n"
  Jan 29 22:28:44.883: INFO: stdout: ""
  Jan 29 22:28:44.883: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=kubectl-8003 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Jan 29 22:28:44.978: INFO: stderr: ""
  Jan 29 22:28:44.978: INFO: stdout: ""
  Jan 29 22:28:44.979: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8003" for this suite. @ 01/29/24 22:28:44.983
• [3.090 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance]
test/e2e/common/node/lifecycle_hook.go:213
  STEP: Creating a kubernetes client @ 01/29/24 22:28:44.99
  Jan 29 22:28:44.990: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 01/29/24 22:28:44.991
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:28:45.005
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:28:45.009
  STEP: create the container to handle the HTTPGet hook request. @ 01/29/24 22:28:45.016
  E0129 22:28:45.586211      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:28:46.586456      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 01/29/24 22:28:47.033
  E0129 22:28:47.587617      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:28:48.588656      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 01/29/24 22:28:49.052
  E0129 22:28:49.588881      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:28:50.589835      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 01/29/24 22:28:51.07
  Jan 29 22:28:51.099: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-2981" for this suite. @ 01/29/24 22:28:51.105
• [6.121 seconds]
------------------------------
S
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance]
test/e2e/apps/rc.go:103
  STEP: Creating a kubernetes client @ 01/29/24 22:28:51.111
  Jan 29 22:28:51.111: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename replication-controller @ 01/29/24 22:28:51.112
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:28:51.125
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:28:51.129
  STEP: Given a ReplicationController is created @ 01/29/24 22:28:51.134
  STEP: When the matched label of one of its pods change @ 01/29/24 22:28:51.14
  Jan 29 22:28:51.143: INFO: Pod name pod-release: Found 0 pods out of 1
  E0129 22:28:51.590820      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:28:52.591733      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:28:53.591911      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:28:54.592204      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:28:55.592499      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:28:56.148: INFO: Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 01/29/24 22:28:56.16
  E0129 22:28:56.592931      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:28:57.168: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-7244" for this suite. @ 01/29/24 22:28:57.175
• [6.071 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance]
test/e2e/apimachinery/webhook.go:371
  STEP: Creating a kubernetes client @ 01/29/24 22:28:57.182
  Jan 29 22:28:57.182: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename webhook @ 01/29/24 22:28:57.184
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:28:57.197
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:28:57.201
  STEP: Setting up server cert @ 01/29/24 22:28:57.224
  E0129 22:28:57.594009      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/29/24 22:28:57.895
  STEP: Deploying the webhook pod @ 01/29/24 22:28:57.906
  STEP: Wait for the deployment to be ready @ 01/29/24 22:28:57.917
  Jan 29 22:28:57.926: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0129 22:28:58.595016      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:28:59.595605      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 01/29/24 22:28:59.946
  STEP: Verifying the service has paired with the endpoint @ 01/29/24 22:28:59.966
  E0129 22:29:00.595799      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:29:00.967: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 01/29/24 22:29:00.975
  STEP: Registering slow webhook via the AdmissionRegistration API @ 01/29/24 22:29:00.976
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 01/29/24 22:29:01.001
  E0129 22:29:01.595918      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 01/29/24 22:29:02.013
  STEP: Registering slow webhook via the AdmissionRegistration API @ 01/29/24 22:29:02.013
  E0129 22:29:02.595977      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is longer than webhook latency @ 01/29/24 22:29:03.052
  STEP: Registering slow webhook via the AdmissionRegistration API @ 01/29/24 22:29:03.052
  E0129 22:29:03.596363      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:29:04.596918      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:29:05.597959      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:29:06.598500      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:29:07.599202      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 01/29/24 22:29:08.1
  STEP: Registering slow webhook via the AdmissionRegistration API @ 01/29/24 22:29:08.101
  E0129 22:29:08.600325      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:29:09.601218      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:29:10.602264      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:29:11.602754      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:29:12.603494      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:29:13.136: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3991" for this suite. @ 01/29/24 22:29:13.184
  STEP: Destroying namespace "webhook-markers-7798" for this suite. @ 01/29/24 22:29:13.189
• [16.012 seconds]
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance]
test/e2e/apimachinery/field_validation.go:350
  STEP: Creating a kubernetes client @ 01/29/24 22:29:13.193
  Jan 29 22:29:13.194: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename field-validation @ 01/29/24 22:29:13.195
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:29:13.211
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:29:13.215
  Jan 29 22:29:13.218: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  W0129 22:29:13.219500      23 field_validation.go:423] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc00637f930 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  E0129 22:29:13.603661      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:29:14.604233      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:29:15.604779      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0129 22:29:15.793569      23 warnings.go:70] unknown field "alpha"
  W0129 22:29:15.793633      23 warnings.go:70] unknown field "beta"
  W0129 22:29:15.793668      23 warnings.go:70] unknown field "delta"
  W0129 22:29:15.793680      23 warnings.go:70] unknown field "epsilon"
  W0129 22:29:15.793691      23 warnings.go:70] unknown field "gamma"
  Jan 29 22:29:16.327: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-4400" for this suite. @ 01/29/24 22:29:16.349
• [3.160 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance]
test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 01/29/24 22:29:16.355
  Jan 29 22:29:16.355: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename daemonsets @ 01/29/24 22:29:16.357
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:29:16.368
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:29:16.373
  Jan 29 22:29:16.396: INFO: Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 01/29/24 22:29:16.402
  Jan 29 22:29:16.406: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jan 29 22:29:16.406: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 01/29/24 22:29:16.406
  Jan 29 22:29:16.427: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jan 29 22:29:16.427: INFO: Node nodeb14 is running 0 daemon pod, expected 1
  E0129 22:29:16.604976      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:29:17.433: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jan 29 22:29:17.433: INFO: Node nodeb14 is running 0 daemon pod, expected 1
  E0129 22:29:17.605122      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:29:18.432: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jan 29 22:29:18.432: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 01/29/24 22:29:18.435
  Jan 29 22:29:18.458: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jan 29 22:29:18.458: INFO: Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
  E0129 22:29:18.605210      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:29:19.463: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jan 29 22:29:19.463: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 01/29/24 22:29:19.463
  Jan 29 22:29:19.474: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jan 29 22:29:19.474: INFO: Node nodeb14 is running 0 daemon pod, expected 1
  E0129 22:29:19.605996      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:29:20.481: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jan 29 22:29:20.481: INFO: Node nodeb14 is running 0 daemon pod, expected 1
  E0129 22:29:20.606181      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:29:21.478: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jan 29 22:29:21.478: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 01/29/24 22:29:21.485
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-3396, will wait for the garbage collector to delete the pods @ 01/29/24 22:29:21.485
  Jan 29 22:29:21.544: INFO: Deleting DaemonSet.extensions daemon-set took: 6.076851ms
  E0129 22:29:21.606732      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:29:21.645: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.9346ms
  E0129 22:29:22.606925      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:29:23.050: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jan 29 22:29:23.050: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Jan 29 22:29:23.054: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"32210"},"items":null}

  Jan 29 22:29:23.057: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"32210"},"items":null}

  Jan 29 22:29:23.081: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-3396" for this suite. @ 01/29/24 22:29:23.087
• [6.739 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should provide secure master service  [Conformance]
test/e2e/network/service.go:775
  STEP: Creating a kubernetes client @ 01/29/24 22:29:23.095
  Jan 29 22:29:23.095: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename services @ 01/29/24 22:29:23.097
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:29:23.108
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:29:23.112
  Jan 29 22:29:23.119: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1896" for this suite. @ 01/29/24 22:29:23.124
• [0.035 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller  [Conformance]
test/e2e/kubectl/kubectl.go:341
  STEP: Creating a kubernetes client @ 01/29/24 22:29:23.131
  Jan 29 22:29:23.131: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename kubectl @ 01/29/24 22:29:23.132
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:29:23.149
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:29:23.154
  STEP: creating a replication controller @ 01/29/24 22:29:23.158
  Jan 29 22:29:23.158: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=kubectl-3557 create -f -'
  Jan 29 22:29:23.442: INFO: stderr: ""
  Jan 29 22:29:23.442: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 01/29/24 22:29:23.442
  Jan 29 22:29:23.442: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=kubectl-3557 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jan 29 22:29:23.547: INFO: stderr: ""
  Jan 29 22:29:23.547: INFO: stdout: "update-demo-nautilus-dqc2l update-demo-nautilus-p4ck8 "
  Jan 29 22:29:23.547: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=kubectl-3557 get pods update-demo-nautilus-dqc2l -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  E0129 22:29:23.606950      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:29:23.642: INFO: stderr: ""
  Jan 29 22:29:23.642: INFO: stdout: ""
  Jan 29 22:29:23.642: INFO: update-demo-nautilus-dqc2l is created but not running
  E0129 22:29:24.608017      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:29:25.608524      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:29:26.609108      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:29:27.609679      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:29:28.611060      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:29:28.642: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=kubectl-3557 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jan 29 22:29:28.759: INFO: stderr: ""
  Jan 29 22:29:28.759: INFO: stdout: "update-demo-nautilus-dqc2l update-demo-nautilus-p4ck8 "
  Jan 29 22:29:28.759: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=kubectl-3557 get pods update-demo-nautilus-dqc2l -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jan 29 22:29:28.861: INFO: stderr: ""
  Jan 29 22:29:28.861: INFO: stdout: "true"
  Jan 29 22:29:28.861: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=kubectl-3557 get pods update-demo-nautilus-dqc2l -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jan 29 22:29:28.955: INFO: stderr: ""
  Jan 29 22:29:28.955: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jan 29 22:29:28.955: INFO: validating pod update-demo-nautilus-dqc2l
  Jan 29 22:29:28.963: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jan 29 22:29:28.963: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jan 29 22:29:28.963: INFO: update-demo-nautilus-dqc2l is verified up and running
  Jan 29 22:29:28.963: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=kubectl-3557 get pods update-demo-nautilus-p4ck8 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jan 29 22:29:29.057: INFO: stderr: ""
  Jan 29 22:29:29.057: INFO: stdout: "true"
  Jan 29 22:29:29.057: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=kubectl-3557 get pods update-demo-nautilus-p4ck8 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jan 29 22:29:29.156: INFO: stderr: ""
  Jan 29 22:29:29.156: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jan 29 22:29:29.156: INFO: validating pod update-demo-nautilus-p4ck8
  Jan 29 22:29:29.163: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jan 29 22:29:29.163: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jan 29 22:29:29.163: INFO: update-demo-nautilus-p4ck8 is verified up and running
  STEP: using delete to clean up resources @ 01/29/24 22:29:29.163
  Jan 29 22:29:29.163: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=kubectl-3557 delete --grace-period=0 --force -f -'
  Jan 29 22:29:29.260: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jan 29 22:29:29.260: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  Jan 29 22:29:29.261: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=kubectl-3557 get rc,svc -l name=update-demo --no-headers'
  Jan 29 22:29:29.368: INFO: stderr: "No resources found in kubectl-3557 namespace.\n"
  Jan 29 22:29:29.368: INFO: stdout: ""
  Jan 29 22:29:29.368: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1341570320 --namespace=kubectl-3557 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Jan 29 22:29:29.474: INFO: stderr: ""
  Jan 29 22:29:29.474: INFO: stdout: ""
  Jan 29 22:29:29.474: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3557" for this suite. @ 01/29/24 22:29:29.48
• [6.355 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance]
test/e2e/apimachinery/webhook.go:285
  STEP: Creating a kubernetes client @ 01/29/24 22:29:29.488
  Jan 29 22:29:29.488: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename webhook @ 01/29/24 22:29:29.49
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:29:29.502
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:29:29.509
  STEP: Setting up server cert @ 01/29/24 22:29:29.528
  E0129 22:29:29.610882      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/29/24 22:29:30.026
  STEP: Deploying the webhook pod @ 01/29/24 22:29:30.035
  STEP: Wait for the deployment to be ready @ 01/29/24 22:29:30.045
  Jan 29 22:29:30.051: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0129 22:29:30.611417      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:29:31.611900      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 01/29/24 22:29:32.065
  STEP: Verifying the service has paired with the endpoint @ 01/29/24 22:29:32.079
  E0129 22:29:32.612242      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:29:33.080: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Jan 29 22:29:33.091: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-3323-crds.webhook.example.com via the AdmissionRegistration API @ 01/29/24 22:29:33.606
  E0129 22:29:33.612543      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a custom resource that should be mutated by the webhook @ 01/29/24 22:29:33.632
  E0129 22:29:34.613609      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:29:35.614026      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:29:35.682: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1243" for this suite. @ 01/29/24 22:29:36.245
  STEP: Destroying namespace "webhook-markers-9695" for this suite. @ 01/29/24 22:29:36.251
• [6.769 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance]
test/e2e/common/node/expansion.go:189
  STEP: Creating a kubernetes client @ 01/29/24 22:29:36.261
  Jan 29 22:29:36.261: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename var-expansion @ 01/29/24 22:29:36.263
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:29:36.276
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:29:36.281
  E0129 22:29:36.617795      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:29:37.618778      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:29:38.310: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Jan 29 22:29:38.317: INFO: Deleting pod "var-expansion-39f77ce2-ad3f-4308-b091-aad22b917a50" in namespace "var-expansion-6711"
  Jan 29 22:29:38.324: INFO: Wait up to 5m0s for pod "var-expansion-39f77ce2-ad3f-4308-b091-aad22b917a50" to be fully deleted
  E0129 22:29:38.619164      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:29:39.620040      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "var-expansion-6711" for this suite. @ 01/29/24 22:29:40.336
• [4.083 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:187
  STEP: Creating a kubernetes client @ 01/29/24 22:29:40.353
  Jan 29 22:29:40.353: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename emptydir @ 01/29/24 22:29:40.355
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:29:40.371
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:29:40.376
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 01/29/24 22:29:40.381
  E0129 22:29:40.620202      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:29:41.621089      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:29:42.621832      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:29:43.622011      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/29/24 22:29:44.404
  Jan 29 22:29:44.407: INFO: Trying to get logs from node nodeb14 pod pod-9659cdad-1e93-483c-8982-740e9f25d694 container test-container: <nil>
  STEP: delete the pod @ 01/29/24 22:29:44.415
  Jan 29 22:29:44.428: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7510" for this suite. @ 01/29/24 22:29:44.433
• [4.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance]
test/e2e/apps/replica_set.go:176
  STEP: Creating a kubernetes client @ 01/29/24 22:29:44.449
  Jan 29 22:29:44.449: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename replicaset @ 01/29/24 22:29:44.451
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:29:44.472
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:29:44.476
  STEP: Create a Replicaset @ 01/29/24 22:29:44.484
  STEP: Verify that the required pods have come up. @ 01/29/24 22:29:44.49
  Jan 29 22:29:44.493: INFO: Pod name sample-pod: Found 0 pods out of 1
  E0129 22:29:44.622009      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:29:45.622801      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:29:46.623329      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:29:47.624152      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:29:48.624388      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:29:49.498: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 01/29/24 22:29:49.498
  STEP: Getting /status @ 01/29/24 22:29:49.498
  Jan 29 22:29:49.503: INFO: Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 01/29/24 22:29:49.503
  Jan 29 22:29:49.515: INFO: updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 01/29/24 22:29:49.516
  Jan 29 22:29:49.520: INFO: Observed &ReplicaSet event: ADDED
  Jan 29 22:29:49.520: INFO: Observed &ReplicaSet event: MODIFIED
  Jan 29 22:29:49.520: INFO: Observed &ReplicaSet event: MODIFIED
  Jan 29 22:29:49.521: INFO: Observed &ReplicaSet event: MODIFIED
  Jan 29 22:29:49.521: INFO: Found replicaset test-rs in namespace replicaset-1289 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Jan 29 22:29:49.521: INFO: Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 01/29/24 22:29:49.521
  Jan 29 22:29:49.521: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Jan 29 22:29:49.528: INFO: Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 01/29/24 22:29:49.528
  Jan 29 22:29:49.531: INFO: Observed &ReplicaSet event: ADDED
  Jan 29 22:29:49.531: INFO: Observed &ReplicaSet event: MODIFIED
  Jan 29 22:29:49.531: INFO: Observed &ReplicaSet event: MODIFIED
  Jan 29 22:29:49.532: INFO: Observed &ReplicaSet event: MODIFIED
  Jan 29 22:29:49.532: INFO: Observed replicaset test-rs in namespace replicaset-1289 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Jan 29 22:29:49.532: INFO: Observed &ReplicaSet event: MODIFIED
  Jan 29 22:29:49.532: INFO: Found replicaset test-rs in namespace replicaset-1289 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  Jan 29 22:29:49.532: INFO: Replicaset test-rs has a patched status
  Jan 29 22:29:49.532: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-1289" for this suite. @ 01/29/24 22:29:49.538
• [5.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run  [Conformance]
test/e2e/scheduling/predicates.go:332
  STEP: Creating a kubernetes client @ 01/29/24 22:29:49.548
  Jan 29 22:29:49.548: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename sched-pred @ 01/29/24 22:29:49.55
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:29:49.564
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:29:49.568
  Jan 29 22:29:49.572: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Jan 29 22:29:49.581: INFO: Waiting for terminating namespaces to be deleted...
  Jan 29 22:29:49.584: INFO: 
  Logging pods the apiserver thinks is on node nodeb14 before test
  Jan 29 22:29:49.590: INFO: kube-flannel-ds-5ft7f from kube-flannel started at 2024-01-29 22:06:50 +0000 UTC (1 container statuses recorded)
  Jan 29 22:29:49.590: INFO: 	Container kube-flannel ready: true, restart count 0
  Jan 29 22:29:49.590: INFO: kube-proxy-7rw4k from kube-system started at 2024-01-29 20:54:07 +0000 UTC (1 container statuses recorded)
  Jan 29 22:29:49.590: INFO: 	Container kube-proxy ready: true, restart count 0
  Jan 29 22:29:49.590: INFO: test-rs-b76pj from replicaset-1289 started at 2024-01-29 22:29:44 +0000 UTC (1 container statuses recorded)
  Jan 29 22:29:49.590: INFO: 	Container httpd ready: true, restart count 0
  Jan 29 22:29:49.590: INFO: sonobuoy from sonobuoy started at 2024-01-29 20:56:14 +0000 UTC (1 container statuses recorded)
  Jan 29 22:29:49.590: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Jan 29 22:29:49.590: INFO: sonobuoy-e2e-job-c5ce82f9c8fc4251 from sonobuoy started at 2024-01-29 20:56:20 +0000 UTC (2 container statuses recorded)
  Jan 29 22:29:49.590: INFO: 	Container e2e ready: true, restart count 0
  Jan 29 22:29:49.590: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jan 29 22:29:49.590: INFO: sonobuoy-systemd-logs-daemon-set-f2be670d44c14602-jkm8t from sonobuoy started at 2024-01-29 20:56:20 +0000 UTC (2 container statuses recorded)
  Jan 29 22:29:49.591: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jan 29 22:29:49.591: INFO: 	Container systemd-logs ready: true, restart count 0
  Jan 29 22:29:49.591: INFO: 
  Logging pods the apiserver thinks is on node nodec03 before test
  Jan 29 22:29:49.596: INFO: kube-flannel-ds-rdqsr from kube-flannel started at 2024-01-29 20:54:05 +0000 UTC (1 container statuses recorded)
  Jan 29 22:29:49.596: INFO: 	Container kube-flannel ready: true, restart count 0
  Jan 29 22:29:49.596: INFO: kube-proxy-49d8w from kube-system started at 2024-01-29 20:54:05 +0000 UTC (1 container statuses recorded)
  Jan 29 22:29:49.596: INFO: 	Container kube-proxy ready: true, restart count 0
  Jan 29 22:29:49.596: INFO: sonobuoy-systemd-logs-daemon-set-f2be670d44c14602-478zt from sonobuoy started at 2024-01-29 20:56:20 +0000 UTC (2 container statuses recorded)
  Jan 29 22:29:49.596: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jan 29 22:29:49.597: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node nodeb14 @ 01/29/24 22:29:49.616
  E0129 22:29:49.625080      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the node has the label node nodec03 @ 01/29/24 22:29:49.63
  Jan 29 22:29:49.643: INFO: Pod kube-flannel-ds-5ft7f requesting resource cpu=100m on Node nodeb14
  Jan 29 22:29:49.643: INFO: Pod kube-flannel-ds-rdqsr requesting resource cpu=100m on Node nodec03
  Jan 29 22:29:49.643: INFO: Pod kube-proxy-49d8w requesting resource cpu=0m on Node nodec03
  Jan 29 22:29:49.643: INFO: Pod kube-proxy-7rw4k requesting resource cpu=0m on Node nodeb14
  Jan 29 22:29:49.643: INFO: Pod test-rs-b76pj requesting resource cpu=0m on Node nodeb14
  Jan 29 22:29:49.643: INFO: Pod sonobuoy requesting resource cpu=0m on Node nodeb14
  Jan 29 22:29:49.643: INFO: Pod sonobuoy-e2e-job-c5ce82f9c8fc4251 requesting resource cpu=0m on Node nodeb14
  Jan 29 22:29:49.643: INFO: Pod sonobuoy-systemd-logs-daemon-set-f2be670d44c14602-478zt requesting resource cpu=0m on Node nodec03
  Jan 29 22:29:49.643: INFO: Pod sonobuoy-systemd-logs-daemon-set-f2be670d44c14602-jkm8t requesting resource cpu=0m on Node nodeb14
  STEP: Starting Pods to consume most of the cluster CPU. @ 01/29/24 22:29:49.643
  Jan 29 22:29:49.643: INFO: Creating a pod which consumes cpu=5530m on Node nodeb14
  Jan 29 22:29:49.651: INFO: Creating a pod which consumes cpu=2730m on Node nodec03
  E0129 22:29:50.625732      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:29:51.626275      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating another pod that requires unavailable amount of CPU. @ 01/29/24 22:29:51.676
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-13cc9fa5-2fc5-4e52-91d0-73014bd8465f.17aef1ffc5fce102], Reason = [Scheduled], Message = [Successfully assigned sched-pred-6833/filler-pod-13cc9fa5-2fc5-4e52-91d0-73014bd8465f to nodec03] @ 01/29/24 22:29:51.681
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-13cc9fa5-2fc5-4e52-91d0-73014bd8465f.17aef1ffe5a82105], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 01/29/24 22:29:51.681
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-13cc9fa5-2fc5-4e52-91d0-73014bd8465f.17aef1ffe6d0cfbd], Reason = [Created], Message = [Created container filler-pod-13cc9fa5-2fc5-4e52-91d0-73014bd8465f] @ 01/29/24 22:29:51.681
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-13cc9fa5-2fc5-4e52-91d0-73014bd8465f.17aef1ffeda31247], Reason = [Started], Message = [Started container filler-pod-13cc9fa5-2fc5-4e52-91d0-73014bd8465f] @ 01/29/24 22:29:51.681
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-9d9faa8a-6156-4ae5-9622-b10277b5054a.17aef1ffc58dfba0], Reason = [Scheduled], Message = [Successfully assigned sched-pred-6833/filler-pod-9d9faa8a-6156-4ae5-9622-b10277b5054a to nodeb14] @ 01/29/24 22:29:51.681
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-9d9faa8a-6156-4ae5-9622-b10277b5054a.17aef1ffe5cce33e], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 01/29/24 22:29:51.681
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-9d9faa8a-6156-4ae5-9622-b10277b5054a.17aef1ffe7270e58], Reason = [Created], Message = [Created container filler-pod-9d9faa8a-6156-4ae5-9622-b10277b5054a] @ 01/29/24 22:29:51.681
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-9d9faa8a-6156-4ae5-9622-b10277b5054a.17aef1ffeefc7926], Reason = [Started], Message = [Started container filler-pod-9d9faa8a-6156-4ae5-9622-b10277b5054a] @ 01/29/24 22:29:51.681
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.17aef2003eb0a28b], Reason = [FailedScheduling], Message = [0/3 nodes are available: 1 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 2 Insufficient cpu. preemption: 0/3 nodes are available: 1 Preemption is not helpful for scheduling, 2 No preemption victims found for incoming pod..] @ 01/29/24 22:29:51.693
  E0129 22:29:52.627251      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label node off the node nodec03 @ 01/29/24 22:29:52.697
  STEP: verifying the node doesn't have the label node @ 01/29/24 22:29:52.716
  STEP: removing the label node off the node nodeb14 @ 01/29/24 22:29:52.721
  STEP: verifying the node doesn't have the label node @ 01/29/24 22:29:52.734
  Jan 29 22:29:52.743: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-6833" for this suite. @ 01/29/24 22:29:52.749
• [3.206 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance]
test/e2e/apps/job.go:513
  STEP: Creating a kubernetes client @ 01/29/24 22:29:52.755
  Jan 29 22:29:52.755: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename job @ 01/29/24 22:29:52.756
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:29:52.768
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:29:52.772
  STEP: Creating a job @ 01/29/24 22:29:52.776
  STEP: Ensuring active pods == parallelism @ 01/29/24 22:29:52.782
  E0129 22:29:53.628062      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:29:54.628968      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Orphaning one of the Job's Pods @ 01/29/24 22:29:54.788
  Jan 29 22:29:55.311: INFO: Successfully updated pod "adopt-release-7d8vd"
  STEP: Checking that the Job readopts the Pod @ 01/29/24 22:29:55.311
  E0129 22:29:55.629726      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:29:56.630316      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing the labels from the Job's Pod @ 01/29/24 22:29:57.32
  E0129 22:29:57.630367      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:29:57.834: INFO: Successfully updated pod "adopt-release-7d8vd"
  STEP: Checking that the Job releases the Pod @ 01/29/24 22:29:57.835
  E0129 22:29:58.631198      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:29:59.631788      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:29:59.844: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9110" for this suite. @ 01/29/24 22:29:59.85
• [7.102 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 01/29/24 22:29:59.857
  Jan 29 22:29:59.857: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename pods @ 01/29/24 22:29:59.859
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:29:59.87
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:29:59.875
  E0129 22:30:00.632005      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:30:01.632219      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:30:02.633258      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:30:03.633451      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:30:04.633528      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:30:05.634111      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/29/24 22:30:05.94
  Jan 29 22:30:05.944: INFO: Trying to get logs from node nodeb14 pod client-envvars-625cd069-234f-488a-9ee3-f0bf654a7a1d container env3cont: <nil>
  STEP: delete the pod @ 01/29/24 22:30:05.953
  Jan 29 22:30:05.972: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7750" for this suite. @ 01/29/24 22:30:05.977
• [6.126 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance]
test/e2e/common/node/secrets.go:46
  STEP: Creating a kubernetes client @ 01/29/24 22:30:05.985
  Jan 29 22:30:05.985: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename secrets @ 01/29/24 22:30:05.986
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:30:06.002
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:30:06.006
  STEP: Creating secret with name secret-test-b7d7aa99-4008-4a26-bad8-dbe4cfa05f73 @ 01/29/24 22:30:06.011
  STEP: Creating a pod to test consume secrets @ 01/29/24 22:30:06.015
  E0129 22:30:06.635211      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:30:07.635380      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:30:08.635593      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:30:09.636581      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/29/24 22:30:10.047
  Jan 29 22:30:10.050: INFO: Trying to get logs from node nodeb14 pod pod-secrets-cad13cd2-c9cd-4db7-9ccb-350dbd36ec88 container secret-env-test: <nil>
  STEP: delete the pod @ 01/29/24 22:30:10.06
  Jan 29 22:30:10.076: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5764" for this suite. @ 01/29/24 22:30:10.081
• [4.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance]
test/e2e/scheduling/predicates.go:705
  STEP: Creating a kubernetes client @ 01/29/24 22:30:10.09
  Jan 29 22:30:10.090: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename sched-pred @ 01/29/24 22:30:10.092
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:30:10.108
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:30:10.111
  Jan 29 22:30:10.116: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Jan 29 22:30:10.124: INFO: Waiting for terminating namespaces to be deleted...
  Jan 29 22:30:10.127: INFO: 
  Logging pods the apiserver thinks is on node nodeb14 before test
  Jan 29 22:30:10.134: INFO: adopt-release-7d8vd from job-9110 started at 2024-01-29 22:29:52 +0000 UTC (1 container statuses recorded)
  Jan 29 22:30:10.134: INFO: 	Container c ready: true, restart count 0
  Jan 29 22:30:10.134: INFO: adopt-release-fh87w from job-9110 started at 2024-01-29 22:29:52 +0000 UTC (1 container statuses recorded)
  Jan 29 22:30:10.134: INFO: 	Container c ready: true, restart count 0
  Jan 29 22:30:10.134: INFO: adopt-release-q4845 from job-9110 started at 2024-01-29 22:29:58 +0000 UTC (1 container statuses recorded)
  Jan 29 22:30:10.134: INFO: 	Container c ready: true, restart count 0
  Jan 29 22:30:10.134: INFO: kube-flannel-ds-5ft7f from kube-flannel started at 2024-01-29 22:06:50 +0000 UTC (1 container statuses recorded)
  Jan 29 22:30:10.134: INFO: 	Container kube-flannel ready: true, restart count 0
  Jan 29 22:30:10.134: INFO: kube-proxy-7rw4k from kube-system started at 2024-01-29 20:54:07 +0000 UTC (1 container statuses recorded)
  Jan 29 22:30:10.134: INFO: 	Container kube-proxy ready: true, restart count 0
  Jan 29 22:30:10.134: INFO: server-envvars-29e65ea9-2ac6-45fc-8f03-f731afc60f58 from pods-7750 started at 2024-01-29 22:29:59 +0000 UTC (1 container statuses recorded)
  Jan 29 22:30:10.134: INFO: 	Container srv ready: true, restart count 0
  Jan 29 22:30:10.134: INFO: sonobuoy from sonobuoy started at 2024-01-29 20:56:14 +0000 UTC (1 container statuses recorded)
  Jan 29 22:30:10.134: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Jan 29 22:30:10.134: INFO: sonobuoy-e2e-job-c5ce82f9c8fc4251 from sonobuoy started at 2024-01-29 20:56:20 +0000 UTC (2 container statuses recorded)
  Jan 29 22:30:10.134: INFO: 	Container e2e ready: true, restart count 0
  Jan 29 22:30:10.134: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jan 29 22:30:10.134: INFO: sonobuoy-systemd-logs-daemon-set-f2be670d44c14602-jkm8t from sonobuoy started at 2024-01-29 20:56:20 +0000 UTC (2 container statuses recorded)
  Jan 29 22:30:10.134: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jan 29 22:30:10.134: INFO: 	Container systemd-logs ready: true, restart count 0
  Jan 29 22:30:10.134: INFO: 
  Logging pods the apiserver thinks is on node nodec03 before test
  Jan 29 22:30:10.140: INFO: kube-flannel-ds-rdqsr from kube-flannel started at 2024-01-29 20:54:05 +0000 UTC (1 container statuses recorded)
  Jan 29 22:30:10.141: INFO: 	Container kube-flannel ready: true, restart count 0
  Jan 29 22:30:10.141: INFO: kube-proxy-49d8w from kube-system started at 2024-01-29 20:54:05 +0000 UTC (1 container statuses recorded)
  Jan 29 22:30:10.141: INFO: 	Container kube-proxy ready: true, restart count 0
  Jan 29 22:30:10.141: INFO: sonobuoy-systemd-logs-daemon-set-f2be670d44c14602-478zt from sonobuoy started at 2024-01-29 20:56:20 +0000 UTC (2 container statuses recorded)
  Jan 29 22:30:10.141: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jan 29 22:30:10.141: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 01/29/24 22:30:10.141
  E0129 22:30:10.637084      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:30:11.637804      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 01/29/24 22:30:12.161
  STEP: Trying to apply a random label on the found node. @ 01/29/24 22:30:12.179
  STEP: verifying the node has the label kubernetes.io/e2e-0f0e48ff-3edf-4445-a45a-613dce6ba511 95 @ 01/29/24 22:30:12.192
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 01/29/24 22:30:12.197
  E0129 22:30:12.638858      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:30:13.639876      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 192.168.100.114 on the node which pod4 resides and expect not scheduled @ 01/29/24 22:30:14.212
  E0129 22:30:14.640237      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:30:15.640801      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:30:16.641075      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:30:17.641639      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:30:18.642237      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:30:19.642869      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:30:20.643159      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:30:21.643745      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:30:22.643828      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:30:23.644003      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:30:24.644983      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:30:25.645483      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:30:26.645561      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:30:27.645994      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:30:28.646923      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:30:29.647449      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:30:30.648500      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:30:31.648119      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:30:32.648143      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:30:33.649199      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:30:34.649977      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:30:35.650431      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:30:36.651252      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:30:37.651796      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:30:38.652118      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:30:39.652582      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:30:40.653751      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:30:41.655158      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:30:42.655408      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:30:43.655570      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:30:44.655698      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:30:45.656234      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:30:46.656474      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:30:47.657107      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:30:48.657105      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:30:49.657650      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:30:50.657858      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:30:51.658436      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:30:52.658718      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:30:53.658865      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:30:54.659589      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:30:55.660145      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:30:56.660222      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:30:57.660748      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:30:58.661726      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:30:59.661988      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:31:00.662636      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:31:01.663293      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:31:02.664002      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:31:03.664216      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:31:04.665311      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:31:05.665864      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:31:06.666771      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:31:07.667594      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:31:08.668547      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:31:09.669159      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:31:10.670402      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:31:11.671002      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:31:12.671314      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:31:13.671420      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:31:14.671706      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:31:15.672266      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:31:16.673062      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:31:17.673643      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:31:18.674346      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:31:19.674823      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:31:20.676099      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:31:21.676665      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:31:22.677830      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:31:23.678250      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:31:24.679120      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:31:25.679785      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:31:26.680551      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:31:27.681515      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:31:28.681928      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:31:29.682782      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:31:30.683714      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:31:31.684291      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:31:32.684460      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:31:33.685217      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:31:34.685524      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:31:35.686101      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:31:36.687167      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:31:37.688095      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:31:38.688227      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:31:39.688705      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:31:40.689712      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:31:41.690651      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:31:42.690877      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:31:43.691502      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:31:44.692399      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:31:45.693057      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:31:46.694148      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:31:47.694590      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:31:48.695372      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:31:49.696316      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:31:50.696791      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:31:51.697353      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:31:52.697753      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:31:53.698065      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:31:54.698815      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:31:55.699244      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:31:56.699373      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:31:57.699870      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:31:58.700932      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:31:59.701201      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:32:00.701911      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:32:01.702143      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:32:02.702947      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:32:03.703055      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:32:04.703349      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:32:05.703899      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:32:06.704106      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:32:07.704330      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:32:08.705423      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:32:09.705992      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:32:10.706853      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:32:11.707388      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:32:12.707743      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:32:13.707938      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:32:14.708775      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:32:15.709264      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:32:16.709572      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:32:17.710029      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:32:18.710263      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:32:19.710802      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:32:20.711126      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:32:21.711919      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:32:22.712044      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:32:23.712101      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:32:24.712260      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:32:25.712770      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:32:26.713641      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:32:27.714273      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:32:28.714373      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:32:29.714927      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:32:30.716622      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:32:31.716218      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:32:32.716673      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:32:33.717917      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:32:34.718546      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:32:35.719030      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:32:36.719245      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:32:37.719581      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:32:38.720198      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:32:39.720364      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:32:40.721450      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:32:41.721956      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:32:42.722353      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:32:43.722598      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:32:44.723620      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:32:45.724289      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:32:46.725086      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:32:47.725661      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:32:48.726408      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:32:49.726873      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:32:50.726969      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:32:51.727567      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:32:52.728198      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:32:53.728641      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:32:54.729128      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:32:55.729634      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:32:56.730510      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:32:57.731071      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:32:58.731394      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:32:59.732589      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:33:00.733734      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:33:01.734184      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:33:02.735182      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:33:03.735618      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:33:04.736087      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:33:05.736592      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:33:06.736910      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:33:07.737564      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:33:08.738669      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:33:09.739154      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:33:10.739225      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:33:11.739575      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:33:12.740376      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:33:13.741389      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:33:14.741726      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:33:15.742239      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:33:16.743227      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:33:17.743624      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:33:18.744663      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:33:19.745060      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:33:20.745699      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:33:21.746765      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:33:22.747482      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:33:23.747589      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:33:24.748175      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:33:25.748538      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:33:26.749139      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:33:27.750070      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:33:28.751171      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:33:29.751985      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:33:30.752587      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:33:31.752976      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:33:32.753604      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:33:33.753697      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:33:34.754255      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:33:35.754558      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:33:36.755156      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:33:37.755561      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:33:38.755513      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:33:39.756018      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:33:40.756926      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:33:41.757264      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:33:42.758474      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:33:43.759325      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:33:44.759986      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:33:45.760253      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:33:46.760837      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:33:47.761543      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:33:48.761693      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:33:49.762248      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:33:50.762742      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:33:51.763598      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:33:52.764159      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:33:53.765197      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:33:54.765670      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:33:55.766268      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:33:56.766788      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:33:57.767592      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:33:58.768673      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:33:59.769299      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:34:00.769896      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:34:01.770159      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:34:02.770716      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:34:03.771501      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:34:04.771898      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:34:05.772341      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:34:06.772934      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:34:07.773861      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:34:08.774890      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:34:09.775743      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:34:10.776322      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:34:11.776411      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:34:12.776873      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:34:13.777156      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:34:14.777662      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:34:15.780369      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:34:16.780970      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:34:17.781869      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:34:18.782860      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:34:19.782993      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:34:20.783162      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:34:21.783400      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:34:22.783646      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:34:23.784278      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:34:24.784880      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:34:25.785224      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:34:26.785723      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:34:27.786303      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:34:28.787474      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:34:29.788235      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:34:30.789100      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:34:31.790150      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:34:32.790701      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:34:33.790741      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:34:34.791330      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:34:35.792067      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:34:36.792546      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:34:37.792723      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:34:38.792865      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:34:39.793204      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:34:40.793515      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:34:41.794324      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:34:42.794779      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:34:43.795165      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:34:44.795440      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:34:45.795473      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:34:46.795741      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:34:47.796090      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:34:48.796411      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:34:49.796494      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:34:50.796638      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:34:51.796816      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:34:52.797118      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:34:53.798170      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:34:54.799081      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:34:55.799894      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:34:56.800394      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:34:57.801066      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:34:58.802157      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:34:59.802720      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:35:00.803434      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:35:01.803664      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:35:02.804570      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:35:03.804834      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:35:04.805318      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:35:05.805528      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:35:06.806301      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:35:07.806427      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:35:08.806524      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:35:09.807102      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:35:10.807596      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:35:11.808243      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:35:12.809002      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:35:13.809944      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-0f0e48ff-3edf-4445-a45a-613dce6ba511 off the node nodeb14 @ 01/29/24 22:35:14.228
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-0f0e48ff-3edf-4445-a45a-613dce6ba511 @ 01/29/24 22:35:14.248
  Jan 29 22:35:14.252: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-4332" for this suite. @ 01/29/24 22:35:14.256
• [304.171 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance]
test/e2e/common/node/configmap.go:45
  STEP: Creating a kubernetes client @ 01/29/24 22:35:14.262
  Jan 29 22:35:14.262: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename configmap @ 01/29/24 22:35:14.264
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:35:14.278
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:35:14.282
  STEP: Creating configMap configmap-7187/configmap-test-9e961a8f-d894-4765-b83d-9045da93e190 @ 01/29/24 22:35:14.288
  STEP: Creating a pod to test consume configMaps @ 01/29/24 22:35:14.292
  E0129 22:35:14.810916      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:35:15.811766      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:35:16.812216      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:35:17.812749      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/29/24 22:35:18.315
  Jan 29 22:35:18.319: INFO: Trying to get logs from node nodeb14 pod pod-configmaps-8c4a1cbf-a788-4bda-87cc-ff7d0481fe32 container env-test: <nil>
  STEP: delete the pod @ 01/29/24 22:35:18.348
  Jan 29 22:35:18.362: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7187" for this suite. @ 01/29/24 22:35:18.367
• [4.109 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 01/29/24 22:35:18.375
  Jan 29 22:35:18.375: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename container-runtime @ 01/29/24 22:35:18.376
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:35:18.39
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:35:18.394
  STEP: create the container @ 01/29/24 22:35:18.398
  W0129 22:35:18.409225      23 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 01/29/24 22:35:18.409
  E0129 22:35:18.813050      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:35:19.813446      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:35:20.814576      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 01/29/24 22:35:21.429
  STEP: the container should be terminated @ 01/29/24 22:35:21.433
  STEP: the termination message should be set @ 01/29/24 22:35:21.434
  Jan 29 22:35:21.434: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 01/29/24 22:35:21.434
  Jan 29 22:35:21.445: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-7630" for this suite. @ 01/29/24 22:35:21.454
• [3.085 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance]
test/e2e/scheduling/preemption.go:624
  STEP: Creating a kubernetes client @ 01/29/24 22:35:21.462
  Jan 29 22:35:21.462: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename sched-preemption @ 01/29/24 22:35:21.464
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:35:21.477
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:35:21.481
  Jan 29 22:35:21.499: INFO: Waiting up to 1m0s for all nodes to be ready
  E0129 22:35:21.815073      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:35:22.816037      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:35:23.816527      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:35:24.817002      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:35:25.817165      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:35:26.817437      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:35:27.817588      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:35:28.818775      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:35:29.819616      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:35:30.823035      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:35:31.824160      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:35:32.824682      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:35:33.825700      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:35:34.826561      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:35:35.826962      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:35:36.827577      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:35:37.828034      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:35:38.828251      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:35:39.829031      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:35:40.829697      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:35:41.830627      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:35:42.831123      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:35:43.832284      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:35:44.832805      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:35:45.832881      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:35:46.833095      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:35:47.833430      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:35:48.834576      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:35:49.834942      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:35:50.835390      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:35:51.836135      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:35:52.836668      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:35:53.837159      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:35:54.837669      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:35:55.838589      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:35:56.839217      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:35:57.840207      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:35:58.840338      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:35:59.840648      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:36:00.841120      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:36:01.842221      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:36:02.842794      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:36:03.842930      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:36:04.843203      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:36:05.844151      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:36:06.844370      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:36:07.844604      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:36:08.845766      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:36:09.846469      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:36:10.846969      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:36:11.847602      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:36:12.848124      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:36:13.848786      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:36:14.849305      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:36:15.849461      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:36:16.849944      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:36:17.850430      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:36:18.851450      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:36:19.851608      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:36:20.852119      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:36:21.533: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 01/29/24 22:36:21.537
  Jan 29 22:36:21.537: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename sched-preemption-path @ 01/29/24 22:36:21.539
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:36:21.553
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:36:21.558
  STEP: Finding an available node @ 01/29/24 22:36:21.563
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 01/29/24 22:36:21.563
  E0129 22:36:21.853294      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:36:22.853983      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 01/29/24 22:36:23.584
  Jan 29 22:36:23.597: INFO: found a healthy node: nodeb14
  E0129 22:36:23.854828      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:36:24.855580      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:36:25.856512      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:36:26.857638      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:36:27.858333      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:36:28.858642      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:36:29.681: INFO: pods created so far: [1 1 1]
  Jan 29 22:36:29.681: INFO: length of pods created so far: 3
  E0129 22:36:29.859061      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:36:30.859703      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:36:31.695: INFO: pods created so far: [2 2 1]
  E0129 22:36:31.860359      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:36:32.860373      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:36:33.860581      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:36:34.861114      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:36:35.861961      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:36:36.862443      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:36:37.862912      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:36:38.696: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Jan 29 22:36:38.740: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-1773" for this suite. @ 01/29/24 22:36:38.779
  STEP: Destroying namespace "sched-preemption-2051" for this suite. @ 01/29/24 22:36:38.787
• [77.332 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod  [Conformance]
test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 01/29/24 22:36:38.799
  Jan 29 22:36:38.799: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename proxy @ 01/29/24 22:36:38.801
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:36:38.816
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:36:38.824
  STEP: starting an echo server on multiple ports @ 01/29/24 22:36:38.855
  STEP: creating replication controller proxy-service-72wxq in namespace proxy-6149 @ 01/29/24 22:36:38.855
  E0129 22:36:38.862897      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0129 22:36:38.863267      23 runners.go:197] Created replication controller with name: proxy-service-72wxq, namespace: proxy-6149, replica count: 1
  E0129 22:36:39.864048      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0129 22:36:39.915597      23 runners.go:197] proxy-service-72wxq Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  E0129 22:36:40.864956      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0129 22:36:40.916616      23 runners.go:197] proxy-service-72wxq Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jan 29 22:36:40.921: INFO: setup took 2.092874595s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 01/29/24 22:36:40.921
  Jan 29 22:36:40.929: INFO: (0) /api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c:1080/proxy/: <a href="/api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c:1080/proxy/rewriteme">test<... (200; 7.500539ms)
  Jan 29 22:36:40.932: INFO: (0) /api/v1/namespaces/proxy-6149/services/http:proxy-service-72wxq:portname1/proxy/: foo (200; 9.543035ms)
  Jan 29 22:36:40.932: INFO: (0) /api/v1/namespaces/proxy-6149/pods/http:proxy-service-72wxq-q682c:160/proxy/: foo (200; 9.522995ms)
  Jan 29 22:36:40.932: INFO: (0) /api/v1/namespaces/proxy-6149/services/proxy-service-72wxq:portname1/proxy/: foo (200; 10.342951ms)
  Jan 29 22:36:40.932: INFO: (0) /api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c/proxy/: <a href="/api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c/proxy/rewriteme">test</a> (200; 10.232682ms)
  Jan 29 22:36:40.932: INFO: (0) /api/v1/namespaces/proxy-6149/services/proxy-service-72wxq:portname2/proxy/: bar (200; 9.86378ms)
  Jan 29 22:36:40.932: INFO: (0) /api/v1/namespaces/proxy-6149/pods/http:proxy-service-72wxq-q682c:1080/proxy/: <a href="/api/v1/namespaces/proxy-6149/pods/http:proxy-service-72wxq-q682c:1080/proxy/rewriteme">... (200; 9.934923ms)
  Jan 29 22:36:40.932: INFO: (0) /api/v1/namespaces/proxy-6149/pods/http:proxy-service-72wxq-q682c:162/proxy/: bar (200; 10.172663ms)
  Jan 29 22:36:40.935: INFO: (0) /api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c:160/proxy/: foo (200; 13.138296ms)
  Jan 29 22:36:40.935: INFO: (0) /api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c:162/proxy/: bar (200; 13.025359ms)
  Jan 29 22:36:40.936: INFO: (0) /api/v1/namespaces/proxy-6149/services/http:proxy-service-72wxq:portname2/proxy/: bar (200; 13.384972ms)
  Jan 29 22:36:40.942: INFO: (0) /api/v1/namespaces/proxy-6149/services/https:proxy-service-72wxq:tlsportname2/proxy/: tls qux (200; 20.094537ms)
  Jan 29 22:36:40.942: INFO: (0) /api/v1/namespaces/proxy-6149/pods/https:proxy-service-72wxq-q682c:462/proxy/: tls qux (200; 19.815406ms)
  Jan 29 22:36:40.942: INFO: (0) /api/v1/namespaces/proxy-6149/pods/https:proxy-service-72wxq-q682c:443/proxy/: <a href="/api/v1/namespaces/proxy-6149/pods/https:proxy-service-72wxq-q682c:443/proxy/tlsrewritem... (200; 20.592837ms)
  Jan 29 22:36:40.943: INFO: (0) /api/v1/namespaces/proxy-6149/services/https:proxy-service-72wxq:tlsportname1/proxy/: tls baz (200; 20.803237ms)
  Jan 29 22:36:40.943: INFO: (0) /api/v1/namespaces/proxy-6149/pods/https:proxy-service-72wxq-q682c:460/proxy/: tls baz (200; 21.454619ms)
  Jan 29 22:36:40.949: INFO: (1) /api/v1/namespaces/proxy-6149/pods/https:proxy-service-72wxq-q682c:460/proxy/: tls baz (200; 6.271527ms)
  Jan 29 22:36:40.949: INFO: (1) /api/v1/namespaces/proxy-6149/pods/http:proxy-service-72wxq-q682c:1080/proxy/: <a href="/api/v1/namespaces/proxy-6149/pods/http:proxy-service-72wxq-q682c:1080/proxy/rewriteme">... (200; 6.164652ms)
  Jan 29 22:36:40.949: INFO: (1) /api/v1/namespaces/proxy-6149/pods/https:proxy-service-72wxq-q682c:443/proxy/: <a href="/api/v1/namespaces/proxy-6149/pods/https:proxy-service-72wxq-q682c:443/proxy/tlsrewritem... (200; 6.142137ms)
  Jan 29 22:36:40.949: INFO: (1) /api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c/proxy/: <a href="/api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c/proxy/rewriteme">test</a> (200; 6.312422ms)
  Jan 29 22:36:40.950: INFO: (1) /api/v1/namespaces/proxy-6149/pods/http:proxy-service-72wxq-q682c:160/proxy/: foo (200; 6.279883ms)
  Jan 29 22:36:40.950: INFO: (1) /api/v1/namespaces/proxy-6149/pods/https:proxy-service-72wxq-q682c:462/proxy/: tls qux (200; 6.341455ms)
  Jan 29 22:36:40.950: INFO: (1) /api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c:162/proxy/: bar (200; 6.626512ms)
  Jan 29 22:36:40.950: INFO: (1) /api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c:1080/proxy/: <a href="/api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c:1080/proxy/rewriteme">test<... (200; 6.595239ms)
  Jan 29 22:36:40.950: INFO: (1) /api/v1/namespaces/proxy-6149/pods/http:proxy-service-72wxq-q682c:162/proxy/: bar (200; 6.864994ms)
  Jan 29 22:36:40.950: INFO: (1) /api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c:160/proxy/: foo (200; 6.624284ms)
  Jan 29 22:36:40.951: INFO: (1) /api/v1/namespaces/proxy-6149/services/proxy-service-72wxq:portname1/proxy/: foo (200; 7.519378ms)
  Jan 29 22:36:40.951: INFO: (1) /api/v1/namespaces/proxy-6149/services/https:proxy-service-72wxq:tlsportname2/proxy/: tls qux (200; 7.628179ms)
  Jan 29 22:36:40.951: INFO: (1) /api/v1/namespaces/proxy-6149/services/proxy-service-72wxq:portname2/proxy/: bar (200; 7.799881ms)
  Jan 29 22:36:40.951: INFO: (1) /api/v1/namespaces/proxy-6149/services/http:proxy-service-72wxq:portname2/proxy/: bar (200; 7.692799ms)
  Jan 29 22:36:40.951: INFO: (1) /api/v1/namespaces/proxy-6149/services/http:proxy-service-72wxq:portname1/proxy/: foo (200; 7.640698ms)
  Jan 29 22:36:40.951: INFO: (1) /api/v1/namespaces/proxy-6149/services/https:proxy-service-72wxq:tlsportname1/proxy/: tls baz (200; 7.726382ms)
  Jan 29 22:36:40.957: INFO: (2) /api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c:1080/proxy/: <a href="/api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c:1080/proxy/rewriteme">test<... (200; 5.901122ms)
  Jan 29 22:36:40.957: INFO: (2) /api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c:162/proxy/: bar (200; 5.693287ms)
  Jan 29 22:36:40.957: INFO: (2) /api/v1/namespaces/proxy-6149/pods/https:proxy-service-72wxq-q682c:460/proxy/: tls baz (200; 5.971152ms)
  Jan 29 22:36:40.957: INFO: (2) /api/v1/namespaces/proxy-6149/pods/http:proxy-service-72wxq-q682c:162/proxy/: bar (200; 5.723054ms)
  Jan 29 22:36:40.957: INFO: (2) /api/v1/namespaces/proxy-6149/pods/http:proxy-service-72wxq-q682c:1080/proxy/: <a href="/api/v1/namespaces/proxy-6149/pods/http:proxy-service-72wxq-q682c:1080/proxy/rewriteme">... (200; 5.985396ms)
  Jan 29 22:36:40.958: INFO: (2) /api/v1/namespaces/proxy-6149/pods/https:proxy-service-72wxq-q682c:462/proxy/: tls qux (200; 6.657146ms)
  Jan 29 22:36:40.958: INFO: (2) /api/v1/namespaces/proxy-6149/pods/http:proxy-service-72wxq-q682c:160/proxy/: foo (200; 6.440961ms)
  Jan 29 22:36:40.958: INFO: (2) /api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c/proxy/: <a href="/api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c/proxy/rewriteme">test</a> (200; 6.650745ms)
  Jan 29 22:36:40.958: INFO: (2) /api/v1/namespaces/proxy-6149/pods/https:proxy-service-72wxq-q682c:443/proxy/: <a href="/api/v1/namespaces/proxy-6149/pods/https:proxy-service-72wxq-q682c:443/proxy/tlsrewritem... (200; 6.802044ms)
  Jan 29 22:36:40.958: INFO: (2) /api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c:160/proxy/: foo (200; 6.911467ms)
  Jan 29 22:36:40.959: INFO: (2) /api/v1/namespaces/proxy-6149/services/http:proxy-service-72wxq:portname2/proxy/: bar (200; 7.712921ms)
  Jan 29 22:36:40.959: INFO: (2) /api/v1/namespaces/proxy-6149/services/proxy-service-72wxq:portname1/proxy/: foo (200; 7.967607ms)
  Jan 29 22:36:40.960: INFO: (2) /api/v1/namespaces/proxy-6149/services/https:proxy-service-72wxq:tlsportname2/proxy/: tls qux (200; 8.268575ms)
  Jan 29 22:36:40.960: INFO: (2) /api/v1/namespaces/proxy-6149/services/https:proxy-service-72wxq:tlsportname1/proxy/: tls baz (200; 8.180957ms)
  Jan 29 22:36:40.960: INFO: (2) /api/v1/namespaces/proxy-6149/services/http:proxy-service-72wxq:portname1/proxy/: foo (200; 8.219395ms)
  Jan 29 22:36:40.960: INFO: (2) /api/v1/namespaces/proxy-6149/services/proxy-service-72wxq:portname2/proxy/: bar (200; 8.246144ms)
  Jan 29 22:36:40.964: INFO: (3) /api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c:162/proxy/: bar (200; 4.012435ms)
  Jan 29 22:36:40.966: INFO: (3) /api/v1/namespaces/proxy-6149/pods/http:proxy-service-72wxq-q682c:160/proxy/: foo (200; 5.288523ms)
  Jan 29 22:36:40.966: INFO: (3) /api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c/proxy/: <a href="/api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c/proxy/rewriteme">test</a> (200; 5.609699ms)
  Jan 29 22:36:40.966: INFO: (3) /api/v1/namespaces/proxy-6149/pods/https:proxy-service-72wxq-q682c:460/proxy/: tls baz (200; 5.541965ms)
  Jan 29 22:36:40.966: INFO: (3) /api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c:1080/proxy/: <a href="/api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c:1080/proxy/rewriteme">test<... (200; 6.281708ms)
  Jan 29 22:36:40.967: INFO: (3) /api/v1/namespaces/proxy-6149/services/http:proxy-service-72wxq:portname2/proxy/: bar (200; 6.424631ms)
  Jan 29 22:36:40.967: INFO: (3) /api/v1/namespaces/proxy-6149/pods/http:proxy-service-72wxq-q682c:162/proxy/: bar (200; 6.572198ms)
  Jan 29 22:36:40.967: INFO: (3) /api/v1/namespaces/proxy-6149/services/https:proxy-service-72wxq:tlsportname2/proxy/: tls qux (200; 6.390953ms)
  Jan 29 22:36:40.967: INFO: (3) /api/v1/namespaces/proxy-6149/services/https:proxy-service-72wxq:tlsportname1/proxy/: tls baz (200; 6.451089ms)
  Jan 29 22:36:40.967: INFO: (3) /api/v1/namespaces/proxy-6149/pods/https:proxy-service-72wxq-q682c:462/proxy/: tls qux (200; 6.404757ms)
  Jan 29 22:36:40.967: INFO: (3) /api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c:160/proxy/: foo (200; 6.452294ms)
  Jan 29 22:36:40.967: INFO: (3) /api/v1/namespaces/proxy-6149/services/http:proxy-service-72wxq:portname1/proxy/: foo (200; 6.744805ms)
  Jan 29 22:36:40.967: INFO: (3) /api/v1/namespaces/proxy-6149/pods/http:proxy-service-72wxq-q682c:1080/proxy/: <a href="/api/v1/namespaces/proxy-6149/pods/http:proxy-service-72wxq-q682c:1080/proxy/rewriteme">... (200; 6.378121ms)
  Jan 29 22:36:40.967: INFO: (3) /api/v1/namespaces/proxy-6149/pods/https:proxy-service-72wxq-q682c:443/proxy/: <a href="/api/v1/namespaces/proxy-6149/pods/https:proxy-service-72wxq-q682c:443/proxy/tlsrewritem... (200; 6.590679ms)
  Jan 29 22:36:40.967: INFO: (3) /api/v1/namespaces/proxy-6149/services/proxy-service-72wxq:portname1/proxy/: foo (200; 6.895847ms)
  Jan 29 22:36:40.967: INFO: (3) /api/v1/namespaces/proxy-6149/services/proxy-service-72wxq:portname2/proxy/: bar (200; 7.063642ms)
  Jan 29 22:36:40.972: INFO: (4) /api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c/proxy/: <a href="/api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c/proxy/rewriteme">test</a> (200; 4.152577ms)
  Jan 29 22:36:40.973: INFO: (4) /api/v1/namespaces/proxy-6149/pods/http:proxy-service-72wxq-q682c:1080/proxy/: <a href="/api/v1/namespaces/proxy-6149/pods/http:proxy-service-72wxq-q682c:1080/proxy/rewriteme">... (200; 5.330611ms)
  Jan 29 22:36:40.973: INFO: (4) /api/v1/namespaces/proxy-6149/pods/https:proxy-service-72wxq-q682c:460/proxy/: tls baz (200; 5.013201ms)
  Jan 29 22:36:40.973: INFO: (4) /api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c:1080/proxy/: <a href="/api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c:1080/proxy/rewriteme">test<... (200; 4.997292ms)
  Jan 29 22:36:40.973: INFO: (4) /api/v1/namespaces/proxy-6149/pods/http:proxy-service-72wxq-q682c:162/proxy/: bar (200; 4.999285ms)
  Jan 29 22:36:40.973: INFO: (4) /api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c:160/proxy/: foo (200; 5.389676ms)
  Jan 29 22:36:40.973: INFO: (4) /api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c:162/proxy/: bar (200; 5.34822ms)
  Jan 29 22:36:40.973: INFO: (4) /api/v1/namespaces/proxy-6149/pods/https:proxy-service-72wxq-q682c:443/proxy/: <a href="/api/v1/namespaces/proxy-6149/pods/https:proxy-service-72wxq-q682c:443/proxy/tlsrewritem... (200; 5.179159ms)
  Jan 29 22:36:40.973: INFO: (4) /api/v1/namespaces/proxy-6149/pods/https:proxy-service-72wxq-q682c:462/proxy/: tls qux (200; 5.204615ms)
  Jan 29 22:36:40.973: INFO: (4) /api/v1/namespaces/proxy-6149/pods/http:proxy-service-72wxq-q682c:160/proxy/: foo (200; 5.437223ms)
  Jan 29 22:36:40.973: INFO: (4) /api/v1/namespaces/proxy-6149/services/https:proxy-service-72wxq:tlsportname2/proxy/: tls qux (200; 5.753319ms)
  Jan 29 22:36:40.973: INFO: (4) /api/v1/namespaces/proxy-6149/services/https:proxy-service-72wxq:tlsportname1/proxy/: tls baz (200; 5.861323ms)
  Jan 29 22:36:40.974: INFO: (4) /api/v1/namespaces/proxy-6149/services/proxy-service-72wxq:portname2/proxy/: bar (200; 5.849262ms)
  Jan 29 22:36:40.974: INFO: (4) /api/v1/namespaces/proxy-6149/services/proxy-service-72wxq:portname1/proxy/: foo (200; 5.890916ms)
  Jan 29 22:36:40.974: INFO: (4) /api/v1/namespaces/proxy-6149/services/http:proxy-service-72wxq:portname2/proxy/: bar (200; 5.870125ms)
  Jan 29 22:36:40.974: INFO: (4) /api/v1/namespaces/proxy-6149/services/http:proxy-service-72wxq:portname1/proxy/: foo (200; 5.813304ms)
  Jan 29 22:36:40.980: INFO: (5) /api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c:162/proxy/: bar (200; 4.692572ms)
  Jan 29 22:36:40.980: INFO: (5) /api/v1/namespaces/proxy-6149/pods/https:proxy-service-72wxq-q682c:460/proxy/: tls baz (200; 4.837881ms)
  Jan 29 22:36:40.980: INFO: (5) /api/v1/namespaces/proxy-6149/pods/https:proxy-service-72wxq-q682c:462/proxy/: tls qux (200; 4.974585ms)
  Jan 29 22:36:40.981: INFO: (5) /api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c:1080/proxy/: <a href="/api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c:1080/proxy/rewriteme">test<... (200; 4.90778ms)
  Jan 29 22:36:40.981: INFO: (5) /api/v1/namespaces/proxy-6149/pods/https:proxy-service-72wxq-q682c:443/proxy/: <a href="/api/v1/namespaces/proxy-6149/pods/https:proxy-service-72wxq-q682c:443/proxy/tlsrewritem... (200; 5.253133ms)
  Jan 29 22:36:40.981: INFO: (5) /api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c:160/proxy/: foo (200; 5.196723ms)
  Jan 29 22:36:40.981: INFO: (5) /api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c/proxy/: <a href="/api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c/proxy/rewriteme">test</a> (200; 5.037417ms)
  Jan 29 22:36:40.981: INFO: (5) /api/v1/namespaces/proxy-6149/pods/http:proxy-service-72wxq-q682c:162/proxy/: bar (200; 5.008115ms)
  Jan 29 22:36:40.982: INFO: (5) /api/v1/namespaces/proxy-6149/pods/http:proxy-service-72wxq-q682c:160/proxy/: foo (200; 5.923979ms)
  Jan 29 22:36:40.982: INFO: (5) /api/v1/namespaces/proxy-6149/pods/http:proxy-service-72wxq-q682c:1080/proxy/: <a href="/api/v1/namespaces/proxy-6149/pods/http:proxy-service-72wxq-q682c:1080/proxy/rewriteme">... (200; 6.586407ms)
  Jan 29 22:36:40.983: INFO: (5) /api/v1/namespaces/proxy-6149/services/proxy-service-72wxq:portname2/proxy/: bar (200; 6.935343ms)
  Jan 29 22:36:40.983: INFO: (5) /api/v1/namespaces/proxy-6149/services/https:proxy-service-72wxq:tlsportname2/proxy/: tls qux (200; 6.964888ms)
  Jan 29 22:36:40.983: INFO: (5) /api/v1/namespaces/proxy-6149/services/https:proxy-service-72wxq:tlsportname1/proxy/: tls baz (200; 7.1939ms)
  Jan 29 22:36:40.983: INFO: (5) /api/v1/namespaces/proxy-6149/services/http:proxy-service-72wxq:portname1/proxy/: foo (200; 7.345011ms)
  Jan 29 22:36:40.983: INFO: (5) /api/v1/namespaces/proxy-6149/services/proxy-service-72wxq:portname1/proxy/: foo (200; 7.627338ms)
  Jan 29 22:36:40.984: INFO: (5) /api/v1/namespaces/proxy-6149/services/http:proxy-service-72wxq:portname2/proxy/: bar (200; 7.981432ms)
  Jan 29 22:36:40.990: INFO: (6) /api/v1/namespaces/proxy-6149/pods/https:proxy-service-72wxq-q682c:462/proxy/: tls qux (200; 6.667937ms)
  Jan 29 22:36:40.991: INFO: (6) /api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c:1080/proxy/: <a href="/api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c:1080/proxy/rewriteme">test<... (200; 6.652415ms)
  Jan 29 22:36:40.991: INFO: (6) /api/v1/namespaces/proxy-6149/pods/https:proxy-service-72wxq-q682c:443/proxy/: <a href="/api/v1/namespaces/proxy-6149/pods/https:proxy-service-72wxq-q682c:443/proxy/tlsrewritem... (200; 6.766519ms)
  Jan 29 22:36:40.991: INFO: (6) /api/v1/namespaces/proxy-6149/pods/https:proxy-service-72wxq-q682c:460/proxy/: tls baz (200; 7.025171ms)
  Jan 29 22:36:40.991: INFO: (6) /api/v1/namespaces/proxy-6149/pods/http:proxy-service-72wxq-q682c:162/proxy/: bar (200; 7.040478ms)
  Jan 29 22:36:40.991: INFO: (6) /api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c:162/proxy/: bar (200; 7.211091ms)
  Jan 29 22:36:40.991: INFO: (6) /api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c:160/proxy/: foo (200; 7.147789ms)
  Jan 29 22:36:40.991: INFO: (6) /api/v1/namespaces/proxy-6149/pods/http:proxy-service-72wxq-q682c:1080/proxy/: <a href="/api/v1/namespaces/proxy-6149/pods/http:proxy-service-72wxq-q682c:1080/proxy/rewriteme">... (200; 7.488655ms)
  Jan 29 22:36:40.992: INFO: (6) /api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c/proxy/: <a href="/api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c/proxy/rewriteme">test</a> (200; 7.509424ms)
  Jan 29 22:36:40.992: INFO: (6) /api/v1/namespaces/proxy-6149/pods/http:proxy-service-72wxq-q682c:160/proxy/: foo (200; 7.459937ms)
  Jan 29 22:36:40.992: INFO: (6) /api/v1/namespaces/proxy-6149/services/https:proxy-service-72wxq:tlsportname2/proxy/: tls qux (200; 7.749406ms)
  Jan 29 22:36:40.992: INFO: (6) /api/v1/namespaces/proxy-6149/services/http:proxy-service-72wxq:portname1/proxy/: foo (200; 8.018165ms)
  Jan 29 22:36:40.992: INFO: (6) /api/v1/namespaces/proxy-6149/services/http:proxy-service-72wxq:portname2/proxy/: bar (200; 8.452535ms)
  Jan 29 22:36:40.992: INFO: (6) /api/v1/namespaces/proxy-6149/services/proxy-service-72wxq:portname2/proxy/: bar (200; 8.618212ms)
  Jan 29 22:36:40.993: INFO: (6) /api/v1/namespaces/proxy-6149/services/https:proxy-service-72wxq:tlsportname1/proxy/: tls baz (200; 8.402664ms)
  Jan 29 22:36:40.993: INFO: (6) /api/v1/namespaces/proxy-6149/services/proxy-service-72wxq:portname1/proxy/: foo (200; 8.57982ms)
  Jan 29 22:36:40.996: INFO: (7) /api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c:1080/proxy/: <a href="/api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c:1080/proxy/rewriteme">test<... (200; 3.395409ms)
  Jan 29 22:36:40.998: INFO: (7) /api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c:160/proxy/: foo (200; 5.241874ms)
  Jan 29 22:36:40.998: INFO: (7) /api/v1/namespaces/proxy-6149/pods/https:proxy-service-72wxq-q682c:443/proxy/: <a href="/api/v1/namespaces/proxy-6149/pods/https:proxy-service-72wxq-q682c:443/proxy/tlsrewritem... (200; 5.382351ms)
  Jan 29 22:36:40.998: INFO: (7) /api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c:162/proxy/: bar (200; 5.430732ms)
  Jan 29 22:36:41.001: INFO: (7) /api/v1/namespaces/proxy-6149/pods/http:proxy-service-72wxq-q682c:1080/proxy/: <a href="/api/v1/namespaces/proxy-6149/pods/http:proxy-service-72wxq-q682c:1080/proxy/rewriteme">... (200; 7.862557ms)
  Jan 29 22:36:41.001: INFO: (7) /api/v1/namespaces/proxy-6149/services/http:proxy-service-72wxq:portname1/proxy/: foo (200; 8.143285ms)
  Jan 29 22:36:41.001: INFO: (7) /api/v1/namespaces/proxy-6149/pods/http:proxy-service-72wxq-q682c:160/proxy/: foo (200; 8.172893ms)
  Jan 29 22:36:41.001: INFO: (7) /api/v1/namespaces/proxy-6149/services/http:proxy-service-72wxq:portname2/proxy/: bar (200; 8.218043ms)
  Jan 29 22:36:41.001: INFO: (7) /api/v1/namespaces/proxy-6149/services/https:proxy-service-72wxq:tlsportname1/proxy/: tls baz (200; 8.195356ms)
  Jan 29 22:36:41.002: INFO: (7) /api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c/proxy/: <a href="/api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c/proxy/rewriteme">test</a> (200; 8.42836ms)
  Jan 29 22:36:41.002: INFO: (7) /api/v1/namespaces/proxy-6149/pods/http:proxy-service-72wxq-q682c:162/proxy/: bar (200; 8.391972ms)
  Jan 29 22:36:41.002: INFO: (7) /api/v1/namespaces/proxy-6149/services/proxy-service-72wxq:portname1/proxy/: foo (200; 8.85969ms)
  Jan 29 22:36:41.002: INFO: (7) /api/v1/namespaces/proxy-6149/services/proxy-service-72wxq:portname2/proxy/: bar (200; 8.970228ms)
  Jan 29 22:36:41.002: INFO: (7) /api/v1/namespaces/proxy-6149/services/https:proxy-service-72wxq:tlsportname2/proxy/: tls qux (200; 9.083566ms)
  Jan 29 22:36:41.002: INFO: (7) /api/v1/namespaces/proxy-6149/pods/https:proxy-service-72wxq-q682c:462/proxy/: tls qux (200; 9.037739ms)
  Jan 29 22:36:41.002: INFO: (7) /api/v1/namespaces/proxy-6149/pods/https:proxy-service-72wxq-q682c:460/proxy/: tls baz (200; 9.109359ms)
  Jan 29 22:36:41.008: INFO: (8) /api/v1/namespaces/proxy-6149/pods/https:proxy-service-72wxq-q682c:443/proxy/: <a href="/api/v1/namespaces/proxy-6149/pods/https:proxy-service-72wxq-q682c:443/proxy/tlsrewritem... (200; 5.061483ms)
  Jan 29 22:36:41.008: INFO: (8) /api/v1/namespaces/proxy-6149/pods/https:proxy-service-72wxq-q682c:460/proxy/: tls baz (200; 5.877084ms)
  Jan 29 22:36:41.008: INFO: (8) /api/v1/namespaces/proxy-6149/pods/http:proxy-service-72wxq-q682c:162/proxy/: bar (200; 5.527405ms)
  Jan 29 22:36:41.008: INFO: (8) /api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c:1080/proxy/: <a href="/api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c:1080/proxy/rewriteme">test<... (200; 5.283751ms)
  Jan 29 22:36:41.008: INFO: (8) /api/v1/namespaces/proxy-6149/pods/http:proxy-service-72wxq-q682c:1080/proxy/: <a href="/api/v1/namespaces/proxy-6149/pods/http:proxy-service-72wxq-q682c:1080/proxy/rewriteme">... (200; 5.813051ms)
  Jan 29 22:36:41.008: INFO: (8) /api/v1/namespaces/proxy-6149/pods/https:proxy-service-72wxq-q682c:462/proxy/: tls qux (200; 5.801022ms)
  Jan 29 22:36:41.008: INFO: (8) /api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c:162/proxy/: bar (200; 5.407865ms)
  Jan 29 22:36:41.008: INFO: (8) /api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c/proxy/: <a href="/api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c/proxy/rewriteme">test</a> (200; 5.295522ms)
  Jan 29 22:36:41.009: INFO: (8) /api/v1/namespaces/proxy-6149/services/proxy-service-72wxq:portname1/proxy/: foo (200; 6.918871ms)
  Jan 29 22:36:41.010: INFO: (8) /api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c:160/proxy/: foo (200; 6.683324ms)
  Jan 29 22:36:41.010: INFO: (8) /api/v1/namespaces/proxy-6149/services/https:proxy-service-72wxq:tlsportname1/proxy/: tls baz (200; 7.057403ms)
  Jan 29 22:36:41.010: INFO: (8) /api/v1/namespaces/proxy-6149/services/http:proxy-service-72wxq:portname2/proxy/: bar (200; 7.139067ms)
  Jan 29 22:36:41.010: INFO: (8) /api/v1/namespaces/proxy-6149/services/https:proxy-service-72wxq:tlsportname2/proxy/: tls qux (200; 7.008802ms)
  Jan 29 22:36:41.010: INFO: (8) /api/v1/namespaces/proxy-6149/services/http:proxy-service-72wxq:portname1/proxy/: foo (200; 7.524071ms)
  Jan 29 22:36:41.010: INFO: (8) /api/v1/namespaces/proxy-6149/services/proxy-service-72wxq:portname2/proxy/: bar (200; 7.488132ms)
  Jan 29 22:36:41.011: INFO: (8) /api/v1/namespaces/proxy-6149/pods/http:proxy-service-72wxq-q682c:160/proxy/: foo (200; 7.696646ms)
  Jan 29 22:36:41.016: INFO: (9) /api/v1/namespaces/proxy-6149/pods/https:proxy-service-72wxq-q682c:462/proxy/: tls qux (200; 5.446647ms)
  Jan 29 22:36:41.016: INFO: (9) /api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c:1080/proxy/: <a href="/api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c:1080/proxy/rewriteme">test<... (200; 5.536431ms)
  Jan 29 22:36:41.017: INFO: (9) /api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c:162/proxy/: bar (200; 5.856514ms)
  Jan 29 22:36:41.017: INFO: (9) /api/v1/namespaces/proxy-6149/pods/http:proxy-service-72wxq-q682c:1080/proxy/: <a href="/api/v1/namespaces/proxy-6149/pods/http:proxy-service-72wxq-q682c:1080/proxy/rewriteme">... (200; 6.014494ms)
  Jan 29 22:36:41.017: INFO: (9) /api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c:160/proxy/: foo (200; 5.994656ms)
  Jan 29 22:36:41.017: INFO: (9) /api/v1/namespaces/proxy-6149/pods/http:proxy-service-72wxq-q682c:162/proxy/: bar (200; 6.153647ms)
  Jan 29 22:36:41.017: INFO: (9) /api/v1/namespaces/proxy-6149/pods/http:proxy-service-72wxq-q682c:160/proxy/: foo (200; 6.124463ms)
  Jan 29 22:36:41.017: INFO: (9) /api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c/proxy/: <a href="/api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c/proxy/rewriteme">test</a> (200; 6.720117ms)
  Jan 29 22:36:41.018: INFO: (9) /api/v1/namespaces/proxy-6149/pods/https:proxy-service-72wxq-q682c:443/proxy/: <a href="/api/v1/namespaces/proxy-6149/pods/https:proxy-service-72wxq-q682c:443/proxy/tlsrewritem... (200; 6.557173ms)
  Jan 29 22:36:41.018: INFO: (9) /api/v1/namespaces/proxy-6149/pods/https:proxy-service-72wxq-q682c:460/proxy/: tls baz (200; 6.751274ms)
  Jan 29 22:36:41.018: INFO: (9) /api/v1/namespaces/proxy-6149/services/proxy-service-72wxq:portname2/proxy/: bar (200; 7.146267ms)
  Jan 29 22:36:41.018: INFO: (9) /api/v1/namespaces/proxy-6149/services/http:proxy-service-72wxq:portname1/proxy/: foo (200; 7.300468ms)
  Jan 29 22:36:41.018: INFO: (9) /api/v1/namespaces/proxy-6149/services/https:proxy-service-72wxq:tlsportname1/proxy/: tls baz (200; 7.453097ms)
  Jan 29 22:36:41.019: INFO: (9) /api/v1/namespaces/proxy-6149/services/http:proxy-service-72wxq:portname2/proxy/: bar (200; 7.936308ms)
  Jan 29 22:36:41.019: INFO: (9) /api/v1/namespaces/proxy-6149/services/https:proxy-service-72wxq:tlsportname2/proxy/: tls qux (200; 7.853687ms)
  Jan 29 22:36:41.019: INFO: (9) /api/v1/namespaces/proxy-6149/services/proxy-service-72wxq:portname1/proxy/: foo (200; 7.903144ms)
  Jan 29 22:36:41.024: INFO: (10) /api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c:160/proxy/: foo (200; 3.335484ms)
  Jan 29 22:36:41.025: INFO: (10) /api/v1/namespaces/proxy-6149/pods/https:proxy-service-72wxq-q682c:462/proxy/: tls qux (200; 4.912841ms)
  Jan 29 22:36:41.025: INFO: (10) /api/v1/namespaces/proxy-6149/pods/https:proxy-service-72wxq-q682c:443/proxy/: <a href="/api/v1/namespaces/proxy-6149/pods/https:proxy-service-72wxq-q682c:443/proxy/tlsrewritem... (200; 4.997051ms)
  Jan 29 22:36:41.026: INFO: (10) /api/v1/namespaces/proxy-6149/pods/https:proxy-service-72wxq-q682c:460/proxy/: tls baz (200; 5.180462ms)
  Jan 29 22:36:41.026: INFO: (10) /api/v1/namespaces/proxy-6149/pods/http:proxy-service-72wxq-q682c:160/proxy/: foo (200; 5.140948ms)
  Jan 29 22:36:41.026: INFO: (10) /api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c:1080/proxy/: <a href="/api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c:1080/proxy/rewriteme">test<... (200; 5.268862ms)
  Jan 29 22:36:41.026: INFO: (10) /api/v1/namespaces/proxy-6149/pods/http:proxy-service-72wxq-q682c:1080/proxy/: <a href="/api/v1/namespaces/proxy-6149/pods/http:proxy-service-72wxq-q682c:1080/proxy/rewriteme">... (200; 5.494751ms)
  Jan 29 22:36:41.026: INFO: (10) /api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c:162/proxy/: bar (200; 5.393607ms)
  Jan 29 22:36:41.026: INFO: (10) /api/v1/namespaces/proxy-6149/services/https:proxy-service-72wxq:tlsportname2/proxy/: tls qux (200; 5.40914ms)
  Jan 29 22:36:41.026: INFO: (10) /api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c/proxy/: <a href="/api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c/proxy/rewriteme">test</a> (200; 5.728627ms)
  Jan 29 22:36:41.026: INFO: (10) /api/v1/namespaces/proxy-6149/pods/http:proxy-service-72wxq-q682c:162/proxy/: bar (200; 5.680147ms)
  Jan 29 22:36:41.027: INFO: (10) /api/v1/namespaces/proxy-6149/services/http:proxy-service-72wxq:portname2/proxy/: bar (200; 6.680477ms)
  Jan 29 22:36:41.027: INFO: (10) /api/v1/namespaces/proxy-6149/services/proxy-service-72wxq:portname1/proxy/: foo (200; 6.817346ms)
  Jan 29 22:36:41.027: INFO: (10) /api/v1/namespaces/proxy-6149/services/https:proxy-service-72wxq:tlsportname1/proxy/: tls baz (200; 6.900258ms)
  Jan 29 22:36:41.028: INFO: (10) /api/v1/namespaces/proxy-6149/services/http:proxy-service-72wxq:portname1/proxy/: foo (200; 7.928762ms)
  Jan 29 22:36:41.029: INFO: (10) /api/v1/namespaces/proxy-6149/services/proxy-service-72wxq:portname2/proxy/: bar (200; 8.131798ms)
  Jan 29 22:36:41.032: INFO: (11) /api/v1/namespaces/proxy-6149/pods/http:proxy-service-72wxq-q682c:1080/proxy/: <a href="/api/v1/namespaces/proxy-6149/pods/http:proxy-service-72wxq-q682c:1080/proxy/rewriteme">... (200; 3.321942ms)
  Jan 29 22:36:41.034: INFO: (11) /api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c:1080/proxy/: <a href="/api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c:1080/proxy/rewriteme">test<... (200; 5.15196ms)
  Jan 29 22:36:41.034: INFO: (11) /api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c:160/proxy/: foo (200; 5.337274ms)
  Jan 29 22:36:41.035: INFO: (11) /api/v1/namespaces/proxy-6149/services/http:proxy-service-72wxq:portname1/proxy/: foo (200; 6.261351ms)
  Jan 29 22:36:41.036: INFO: (11) /api/v1/namespaces/proxy-6149/pods/http:proxy-service-72wxq-q682c:160/proxy/: foo (200; 6.753988ms)
  Jan 29 22:36:41.036: INFO: (11) /api/v1/namespaces/proxy-6149/pods/https:proxy-service-72wxq-q682c:462/proxy/: tls qux (200; 6.737649ms)
  Jan 29 22:36:41.036: INFO: (11) /api/v1/namespaces/proxy-6149/pods/https:proxy-service-72wxq-q682c:460/proxy/: tls baz (200; 6.807096ms)
  Jan 29 22:36:41.036: INFO: (11) /api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c/proxy/: <a href="/api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c/proxy/rewriteme">test</a> (200; 6.961009ms)
  Jan 29 22:36:41.036: INFO: (11) /api/v1/namespaces/proxy-6149/pods/https:proxy-service-72wxq-q682c:443/proxy/: <a href="/api/v1/namespaces/proxy-6149/pods/https:proxy-service-72wxq-q682c:443/proxy/tlsrewritem... (200; 6.94124ms)
  Jan 29 22:36:41.036: INFO: (11) /api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c:162/proxy/: bar (200; 6.874574ms)
  Jan 29 22:36:41.036: INFO: (11) /api/v1/namespaces/proxy-6149/pods/http:proxy-service-72wxq-q682c:162/proxy/: bar (200; 6.872851ms)
  Jan 29 22:36:41.036: INFO: (11) /api/v1/namespaces/proxy-6149/services/proxy-service-72wxq:portname2/proxy/: bar (200; 7.118504ms)
  Jan 29 22:36:41.036: INFO: (11) /api/v1/namespaces/proxy-6149/services/https:proxy-service-72wxq:tlsportname2/proxy/: tls qux (200; 7.294956ms)
  Jan 29 22:36:41.036: INFO: (11) /api/v1/namespaces/proxy-6149/services/proxy-service-72wxq:portname1/proxy/: foo (200; 7.298986ms)
  Jan 29 22:36:41.036: INFO: (11) /api/v1/namespaces/proxy-6149/services/http:proxy-service-72wxq:portname2/proxy/: bar (200; 7.437404ms)
  Jan 29 22:36:41.037: INFO: (11) /api/v1/namespaces/proxy-6149/services/https:proxy-service-72wxq:tlsportname1/proxy/: tls baz (200; 8.470352ms)
  Jan 29 22:36:41.043: INFO: (12) /api/v1/namespaces/proxy-6149/pods/http:proxy-service-72wxq-q682c:162/proxy/: bar (200; 5.54578ms)
  Jan 29 22:36:41.043: INFO: (12) /api/v1/namespaces/proxy-6149/pods/http:proxy-service-72wxq-q682c:1080/proxy/: <a href="/api/v1/namespaces/proxy-6149/pods/http:proxy-service-72wxq-q682c:1080/proxy/rewriteme">... (200; 5.59739ms)
  Jan 29 22:36:41.043: INFO: (12) /api/v1/namespaces/proxy-6149/pods/http:proxy-service-72wxq-q682c:160/proxy/: foo (200; 5.668771ms)
  Jan 29 22:36:41.043: INFO: (12) /api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c:162/proxy/: bar (200; 5.774731ms)
  Jan 29 22:36:41.043: INFO: (12) /api/v1/namespaces/proxy-6149/pods/https:proxy-service-72wxq-q682c:460/proxy/: tls baz (200; 5.640054ms)
  Jan 29 22:36:41.043: INFO: (12) /api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c/proxy/: <a href="/api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c/proxy/rewriteme">test</a> (200; 5.719986ms)
  Jan 29 22:36:41.043: INFO: (12) /api/v1/namespaces/proxy-6149/pods/https:proxy-service-72wxq-q682c:443/proxy/: <a href="/api/v1/namespaces/proxy-6149/pods/https:proxy-service-72wxq-q682c:443/proxy/tlsrewritem... (200; 5.887392ms)
  Jan 29 22:36:41.043: INFO: (12) /api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c:160/proxy/: foo (200; 5.75356ms)
  Jan 29 22:36:41.043: INFO: (12) /api/v1/namespaces/proxy-6149/pods/https:proxy-service-72wxq-q682c:462/proxy/: tls qux (200; 5.644056ms)
  Jan 29 22:36:41.043: INFO: (12) /api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c:1080/proxy/: <a href="/api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c:1080/proxy/rewriteme">test<... (200; 5.693608ms)
  Jan 29 22:36:41.045: INFO: (12) /api/v1/namespaces/proxy-6149/services/http:proxy-service-72wxq:portname1/proxy/: foo (200; 7.268211ms)
  Jan 29 22:36:41.045: INFO: (12) /api/v1/namespaces/proxy-6149/services/https:proxy-service-72wxq:tlsportname2/proxy/: tls qux (200; 7.052998ms)
  Jan 29 22:36:41.045: INFO: (12) /api/v1/namespaces/proxy-6149/services/http:proxy-service-72wxq:portname2/proxy/: bar (200; 7.023077ms)
  Jan 29 22:36:41.045: INFO: (12) /api/v1/namespaces/proxy-6149/services/proxy-service-72wxq:portname2/proxy/: bar (200; 7.252813ms)
  Jan 29 22:36:41.045: INFO: (12) /api/v1/namespaces/proxy-6149/services/https:proxy-service-72wxq:tlsportname1/proxy/: tls baz (200; 7.059787ms)
  Jan 29 22:36:41.045: INFO: (12) /api/v1/namespaces/proxy-6149/services/proxy-service-72wxq:portname1/proxy/: foo (200; 7.207704ms)
  Jan 29 22:36:41.049: INFO: (13) /api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c:1080/proxy/: <a href="/api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c:1080/proxy/rewriteme">test<... (200; 3.992445ms)
  Jan 29 22:36:41.049: INFO: (13) /api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c:160/proxy/: foo (200; 4.324285ms)
  Jan 29 22:36:41.051: INFO: (13) /api/v1/namespaces/proxy-6149/pods/http:proxy-service-72wxq-q682c:1080/proxy/: <a href="/api/v1/namespaces/proxy-6149/pods/http:proxy-service-72wxq-q682c:1080/proxy/rewriteme">... (200; 6.010492ms)
  Jan 29 22:36:41.051: INFO: (13) /api/v1/namespaces/proxy-6149/pods/https:proxy-service-72wxq-q682c:443/proxy/: <a href="/api/v1/namespaces/proxy-6149/pods/https:proxy-service-72wxq-q682c:443/proxy/tlsrewritem... (200; 5.971855ms)
  Jan 29 22:36:41.051: INFO: (13) /api/v1/namespaces/proxy-6149/pods/https:proxy-service-72wxq-q682c:460/proxy/: tls baz (200; 6.357785ms)
  Jan 29 22:36:41.051: INFO: (13) /api/v1/namespaces/proxy-6149/pods/http:proxy-service-72wxq-q682c:160/proxy/: foo (200; 6.304015ms)
  Jan 29 22:36:41.051: INFO: (13) /api/v1/namespaces/proxy-6149/services/http:proxy-service-72wxq:portname2/proxy/: bar (200; 6.46767ms)
  Jan 29 22:36:41.051: INFO: (13) /api/v1/namespaces/proxy-6149/pods/http:proxy-service-72wxq-q682c:162/proxy/: bar (200; 6.193677ms)
  Jan 29 22:36:41.052: INFO: (13) /api/v1/namespaces/proxy-6149/pods/https:proxy-service-72wxq-q682c:462/proxy/: tls qux (200; 6.698378ms)
  Jan 29 22:36:41.052: INFO: (13) /api/v1/namespaces/proxy-6149/services/http:proxy-service-72wxq:portname1/proxy/: foo (200; 6.651637ms)
  Jan 29 22:36:41.052: INFO: (13) /api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c/proxy/: <a href="/api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c/proxy/rewriteme">test</a> (200; 6.784465ms)
  Jan 29 22:36:41.052: INFO: (13) /api/v1/namespaces/proxy-6149/services/https:proxy-service-72wxq:tlsportname1/proxy/: tls baz (200; 6.823974ms)
  Jan 29 22:36:41.052: INFO: (13) /api/v1/namespaces/proxy-6149/services/https:proxy-service-72wxq:tlsportname2/proxy/: tls qux (200; 6.898788ms)
  Jan 29 22:36:41.052: INFO: (13) /api/v1/namespaces/proxy-6149/services/proxy-service-72wxq:portname2/proxy/: bar (200; 6.942891ms)
  Jan 29 22:36:41.052: INFO: (13) /api/v1/namespaces/proxy-6149/services/proxy-service-72wxq:portname1/proxy/: foo (200; 7.02387ms)
  Jan 29 22:36:41.053: INFO: (13) /api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c:162/proxy/: bar (200; 7.622658ms)
  Jan 29 22:36:41.059: INFO: (14) /api/v1/namespaces/proxy-6149/pods/http:proxy-service-72wxq-q682c:162/proxy/: bar (200; 5.646662ms)
  Jan 29 22:36:41.060: INFO: (14) /api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c:1080/proxy/: <a href="/api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c:1080/proxy/rewriteme">test<... (200; 7.394057ms)
  Jan 29 22:36:41.060: INFO: (14) /api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c/proxy/: <a href="/api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c/proxy/rewriteme">test</a> (200; 7.424714ms)
  Jan 29 22:36:41.060: INFO: (14) /api/v1/namespaces/proxy-6149/services/proxy-service-72wxq:portname1/proxy/: foo (200; 7.412182ms)
  Jan 29 22:36:41.060: INFO: (14) /api/v1/namespaces/proxy-6149/pods/http:proxy-service-72wxq-q682c:1080/proxy/: <a href="/api/v1/namespaces/proxy-6149/pods/http:proxy-service-72wxq-q682c:1080/proxy/rewriteme">... (200; 7.481695ms)
  Jan 29 22:36:41.061: INFO: (14) /api/v1/namespaces/proxy-6149/pods/https:proxy-service-72wxq-q682c:443/proxy/: <a href="/api/v1/namespaces/proxy-6149/pods/https:proxy-service-72wxq-q682c:443/proxy/tlsrewritem... (200; 7.478682ms)
  Jan 29 22:36:41.060: INFO: (14) /api/v1/namespaces/proxy-6149/pods/http:proxy-service-72wxq-q682c:160/proxy/: foo (200; 7.486165ms)
  Jan 29 22:36:41.061: INFO: (14) /api/v1/namespaces/proxy-6149/pods/https:proxy-service-72wxq-q682c:460/proxy/: tls baz (200; 7.62729ms)
  Jan 29 22:36:41.061: INFO: (14) /api/v1/namespaces/proxy-6149/services/proxy-service-72wxq:portname2/proxy/: bar (200; 7.573755ms)
  Jan 29 22:36:41.061: INFO: (14) /api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c:162/proxy/: bar (200; 7.51767ms)
  Jan 29 22:36:41.061: INFO: (14) /api/v1/namespaces/proxy-6149/services/https:proxy-service-72wxq:tlsportname2/proxy/: tls qux (200; 7.702779ms)
  Jan 29 22:36:41.061: INFO: (14) /api/v1/namespaces/proxy-6149/pods/https:proxy-service-72wxq-q682c:462/proxy/: tls qux (200; 7.659689ms)
  Jan 29 22:36:41.061: INFO: (14) /api/v1/namespaces/proxy-6149/services/https:proxy-service-72wxq:tlsportname1/proxy/: tls baz (200; 8.271184ms)
  Jan 29 22:36:41.061: INFO: (14) /api/v1/namespaces/proxy-6149/services/http:proxy-service-72wxq:portname2/proxy/: bar (200; 8.226441ms)
  Jan 29 22:36:41.061: INFO: (14) /api/v1/namespaces/proxy-6149/services/http:proxy-service-72wxq:portname1/proxy/: foo (200; 8.299571ms)
  Jan 29 22:36:41.061: INFO: (14) /api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c:160/proxy/: foo (200; 8.327976ms)
  Jan 29 22:36:41.065: INFO: (15) /api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c:1080/proxy/: <a href="/api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c:1080/proxy/rewriteme">test<... (200; 4.09787ms)
  Jan 29 22:36:41.065: INFO: (15) /api/v1/namespaces/proxy-6149/pods/https:proxy-service-72wxq-q682c:462/proxy/: tls qux (200; 4.090212ms)
  Jan 29 22:36:41.066: INFO: (15) /api/v1/namespaces/proxy-6149/pods/https:proxy-service-72wxq-q682c:443/proxy/: <a href="/api/v1/namespaces/proxy-6149/pods/https:proxy-service-72wxq-q682c:443/proxy/tlsrewritem... (200; 4.774547ms)
  Jan 29 22:36:41.068: INFO: (15) /api/v1/namespaces/proxy-6149/pods/http:proxy-service-72wxq-q682c:1080/proxy/: <a href="/api/v1/namespaces/proxy-6149/pods/http:proxy-service-72wxq-q682c:1080/proxy/rewriteme">... (200; 6.118675ms)
  Jan 29 22:36:41.068: INFO: (15) /api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c:160/proxy/: foo (200; 6.084106ms)
  Jan 29 22:36:41.068: INFO: (15) /api/v1/namespaces/proxy-6149/pods/http:proxy-service-72wxq-q682c:162/proxy/: bar (200; 6.327328ms)
  Jan 29 22:36:41.068: INFO: (15) /api/v1/namespaces/proxy-6149/pods/http:proxy-service-72wxq-q682c:160/proxy/: foo (200; 6.277452ms)
  Jan 29 22:36:41.068: INFO: (15) /api/v1/namespaces/proxy-6149/services/http:proxy-service-72wxq:portname1/proxy/: foo (200; 6.495779ms)
  Jan 29 22:36:41.068: INFO: (15) /api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c:162/proxy/: bar (200; 6.887925ms)
  Jan 29 22:36:41.069: INFO: (15) /api/v1/namespaces/proxy-6149/services/proxy-service-72wxq:portname2/proxy/: bar (200; 7.113376ms)
  Jan 29 22:36:41.069: INFO: (15) /api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c/proxy/: <a href="/api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c/proxy/rewriteme">test</a> (200; 6.88665ms)
  Jan 29 22:36:41.069: INFO: (15) /api/v1/namespaces/proxy-6149/pods/https:proxy-service-72wxq-q682c:460/proxy/: tls baz (200; 6.950559ms)
  Jan 29 22:36:41.069: INFO: (15) /api/v1/namespaces/proxy-6149/services/http:proxy-service-72wxq:portname2/proxy/: bar (200; 7.350649ms)
  Jan 29 22:36:41.069: INFO: (15) /api/v1/namespaces/proxy-6149/services/proxy-service-72wxq:portname1/proxy/: foo (200; 7.828867ms)
  Jan 29 22:36:41.069: INFO: (15) /api/v1/namespaces/proxy-6149/services/https:proxy-service-72wxq:tlsportname1/proxy/: tls baz (200; 8.285871ms)
  Jan 29 22:36:41.070: INFO: (15) /api/v1/namespaces/proxy-6149/services/https:proxy-service-72wxq:tlsportname2/proxy/: tls qux (200; 7.904641ms)
  Jan 29 22:36:41.076: INFO: (16) /api/v1/namespaces/proxy-6149/pods/https:proxy-service-72wxq-q682c:460/proxy/: tls baz (200; 5.772699ms)
  Jan 29 22:36:41.077: INFO: (16) /api/v1/namespaces/proxy-6149/pods/http:proxy-service-72wxq-q682c:1080/proxy/: <a href="/api/v1/namespaces/proxy-6149/pods/http:proxy-service-72wxq-q682c:1080/proxy/rewriteme">... (200; 6.960863ms)
  Jan 29 22:36:41.077: INFO: (16) /api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c:162/proxy/: bar (200; 6.948083ms)
  Jan 29 22:36:41.077: INFO: (16) /api/v1/namespaces/proxy-6149/pods/http:proxy-service-72wxq-q682c:162/proxy/: bar (200; 6.958906ms)
  Jan 29 22:36:41.077: INFO: (16) /api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c:1080/proxy/: <a href="/api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c:1080/proxy/rewriteme">test<... (200; 7.178175ms)
  Jan 29 22:36:41.077: INFO: (16) /api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c/proxy/: <a href="/api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c/proxy/rewriteme">test</a> (200; 7.33766ms)
  Jan 29 22:36:41.077: INFO: (16) /api/v1/namespaces/proxy-6149/pods/https:proxy-service-72wxq-q682c:462/proxy/: tls qux (200; 7.306717ms)
  Jan 29 22:36:41.077: INFO: (16) /api/v1/namespaces/proxy-6149/services/https:proxy-service-72wxq:tlsportname1/proxy/: tls baz (200; 7.569186ms)
  Jan 29 22:36:41.077: INFO: (16) /api/v1/namespaces/proxy-6149/services/https:proxy-service-72wxq:tlsportname2/proxy/: tls qux (200; 7.477648ms)
  Jan 29 22:36:41.077: INFO: (16) /api/v1/namespaces/proxy-6149/pods/http:proxy-service-72wxq-q682c:160/proxy/: foo (200; 7.310775ms)
  Jan 29 22:36:41.077: INFO: (16) /api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c:160/proxy/: foo (200; 7.781842ms)
  Jan 29 22:36:41.078: INFO: (16) /api/v1/namespaces/proxy-6149/services/http:proxy-service-72wxq:portname2/proxy/: bar (200; 7.583061ms)
  Jan 29 22:36:41.078: INFO: (16) /api/v1/namespaces/proxy-6149/services/http:proxy-service-72wxq:portname1/proxy/: foo (200; 7.637386ms)
  Jan 29 22:36:41.078: INFO: (16) /api/v1/namespaces/proxy-6149/services/proxy-service-72wxq:portname2/proxy/: bar (200; 7.681067ms)
  Jan 29 22:36:41.078: INFO: (16) /api/v1/namespaces/proxy-6149/services/proxy-service-72wxq:portname1/proxy/: foo (200; 7.793542ms)
  Jan 29 22:36:41.078: INFO: (16) /api/v1/namespaces/proxy-6149/pods/https:proxy-service-72wxq-q682c:443/proxy/: <a href="/api/v1/namespaces/proxy-6149/pods/https:proxy-service-72wxq-q682c:443/proxy/tlsrewritem... (200; 8.037413ms)
  Jan 29 22:36:41.087: INFO: (17) /api/v1/namespaces/proxy-6149/pods/https:proxy-service-72wxq-q682c:460/proxy/: tls baz (200; 8.652261ms)
  Jan 29 22:36:41.087: INFO: (17) /api/v1/namespaces/proxy-6149/services/http:proxy-service-72wxq:portname1/proxy/: foo (200; 8.738672ms)
  Jan 29 22:36:41.087: INFO: (17) /api/v1/namespaces/proxy-6149/pods/http:proxy-service-72wxq-q682c:162/proxy/: bar (200; 8.617243ms)
  Jan 29 22:36:41.087: INFO: (17) /api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c:162/proxy/: bar (200; 8.916592ms)
  Jan 29 22:36:41.088: INFO: (17) /api/v1/namespaces/proxy-6149/pods/http:proxy-service-72wxq-q682c:160/proxy/: foo (200; 9.344799ms)
  Jan 29 22:36:41.088: INFO: (17) /api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c:1080/proxy/: <a href="/api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c:1080/proxy/rewriteme">test<... (200; 9.473319ms)
  Jan 29 22:36:41.088: INFO: (17) /api/v1/namespaces/proxy-6149/services/https:proxy-service-72wxq:tlsportname1/proxy/: tls baz (200; 9.47595ms)
  Jan 29 22:36:41.088: INFO: (17) /api/v1/namespaces/proxy-6149/pods/https:proxy-service-72wxq-q682c:443/proxy/: <a href="/api/v1/namespaces/proxy-6149/pods/https:proxy-service-72wxq-q682c:443/proxy/tlsrewritem... (200; 9.574467ms)
  Jan 29 22:36:41.088: INFO: (17) /api/v1/namespaces/proxy-6149/pods/http:proxy-service-72wxq-q682c:1080/proxy/: <a href="/api/v1/namespaces/proxy-6149/pods/http:proxy-service-72wxq-q682c:1080/proxy/rewriteme">... (200; 9.592132ms)
  Jan 29 22:36:41.088: INFO: (17) /api/v1/namespaces/proxy-6149/services/https:proxy-service-72wxq:tlsportname2/proxy/: tls qux (200; 9.96663ms)
  Jan 29 22:36:41.088: INFO: (17) /api/v1/namespaces/proxy-6149/pods/https:proxy-service-72wxq-q682c:462/proxy/: tls qux (200; 10.035015ms)
  Jan 29 22:36:41.088: INFO: (17) /api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c:160/proxy/: foo (200; 9.943236ms)
  Jan 29 22:36:41.088: INFO: (17) /api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c/proxy/: <a href="/api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c/proxy/rewriteme">test</a> (200; 10.05202ms)
  Jan 29 22:36:41.088: INFO: (17) /api/v1/namespaces/proxy-6149/services/proxy-service-72wxq:portname2/proxy/: bar (200; 9.9352ms)
  Jan 29 22:36:41.088: INFO: (17) /api/v1/namespaces/proxy-6149/services/http:proxy-service-72wxq:portname2/proxy/: bar (200; 9.999928ms)
  Jan 29 22:36:41.089: INFO: (17) /api/v1/namespaces/proxy-6149/services/proxy-service-72wxq:portname1/proxy/: foo (200; 10.219648ms)
  Jan 29 22:36:41.093: INFO: (18) /api/v1/namespaces/proxy-6149/pods/https:proxy-service-72wxq-q682c:443/proxy/: <a href="/api/v1/namespaces/proxy-6149/pods/https:proxy-service-72wxq-q682c:443/proxy/tlsrewritem... (200; 3.564523ms)
  Jan 29 22:36:41.094: INFO: (18) /api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c/proxy/: <a href="/api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c/proxy/rewriteme">test</a> (200; 4.766564ms)
  Jan 29 22:36:41.094: INFO: (18) /api/v1/namespaces/proxy-6149/pods/https:proxy-service-72wxq-q682c:462/proxy/: tls qux (200; 4.867932ms)
  Jan 29 22:36:41.094: INFO: (18) /api/v1/namespaces/proxy-6149/pods/http:proxy-service-72wxq-q682c:162/proxy/: bar (200; 5.077295ms)
  Jan 29 22:36:41.094: INFO: (18) /api/v1/namespaces/proxy-6149/pods/https:proxy-service-72wxq-q682c:460/proxy/: tls baz (200; 5.002008ms)
  Jan 29 22:36:41.094: INFO: (18) /api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c:162/proxy/: bar (200; 4.938882ms)
  Jan 29 22:36:41.094: INFO: (18) /api/v1/namespaces/proxy-6149/pods/http:proxy-service-72wxq-q682c:160/proxy/: foo (200; 4.958145ms)
  Jan 29 22:36:41.094: INFO: (18) /api/v1/namespaces/proxy-6149/pods/http:proxy-service-72wxq-q682c:1080/proxy/: <a href="/api/v1/namespaces/proxy-6149/pods/http:proxy-service-72wxq-q682c:1080/proxy/rewriteme">... (200; 5.053197ms)
  Jan 29 22:36:41.094: INFO: (18) /api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c:160/proxy/: foo (200; 5.109279ms)
  Jan 29 22:36:41.094: INFO: (18) /api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c:1080/proxy/: <a href="/api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c:1080/proxy/rewriteme">test<... (200; 5.064472ms)
  Jan 29 22:36:41.095: INFO: (18) /api/v1/namespaces/proxy-6149/services/proxy-service-72wxq:portname1/proxy/: foo (200; 5.428549ms)
  Jan 29 22:36:41.096: INFO: (18) /api/v1/namespaces/proxy-6149/services/http:proxy-service-72wxq:portname2/proxy/: bar (200; 7.089559ms)
  Jan 29 22:36:41.096: INFO: (18) /api/v1/namespaces/proxy-6149/services/http:proxy-service-72wxq:portname1/proxy/: foo (200; 7.099921ms)
  Jan 29 22:36:41.096: INFO: (18) /api/v1/namespaces/proxy-6149/services/https:proxy-service-72wxq:tlsportname2/proxy/: tls qux (200; 7.160764ms)
  Jan 29 22:36:41.096: INFO: (18) /api/v1/namespaces/proxy-6149/services/https:proxy-service-72wxq:tlsportname1/proxy/: tls baz (200; 7.131881ms)
  Jan 29 22:36:41.096: INFO: (18) /api/v1/namespaces/proxy-6149/services/proxy-service-72wxq:portname2/proxy/: bar (200; 7.215473ms)
  Jan 29 22:36:41.104: INFO: (19) /api/v1/namespaces/proxy-6149/pods/http:proxy-service-72wxq-q682c:1080/proxy/: <a href="/api/v1/namespaces/proxy-6149/pods/http:proxy-service-72wxq-q682c:1080/proxy/rewriteme">... (200; 5.203429ms)
  Jan 29 22:36:41.104: INFO: (19) /api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c:160/proxy/: foo (200; 5.317214ms)
  Jan 29 22:36:41.104: INFO: (19) /api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c:162/proxy/: bar (200; 5.478222ms)
  Jan 29 22:36:41.104: INFO: (19) /api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c/proxy/: <a href="/api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c/proxy/rewriteme">test</a> (200; 5.654202ms)
  Jan 29 22:36:41.104: INFO: (19) /api/v1/namespaces/proxy-6149/pods/https:proxy-service-72wxq-q682c:462/proxy/: tls qux (200; 5.945495ms)
  Jan 29 22:36:41.104: INFO: (19) /api/v1/namespaces/proxy-6149/pods/http:proxy-service-72wxq-q682c:160/proxy/: foo (200; 5.884639ms)
  Jan 29 22:36:41.104: INFO: (19) /api/v1/namespaces/proxy-6149/services/http:proxy-service-72wxq:portname2/proxy/: bar (200; 5.871197ms)
  Jan 29 22:36:41.104: INFO: (19) /api/v1/namespaces/proxy-6149/pods/http:proxy-service-72wxq-q682c:162/proxy/: bar (200; 5.847331ms)
  Jan 29 22:36:41.104: INFO: (19) /api/v1/namespaces/proxy-6149/pods/https:proxy-service-72wxq-q682c:443/proxy/: <a href="/api/v1/namespaces/proxy-6149/pods/https:proxy-service-72wxq-q682c:443/proxy/tlsrewritem... (200; 5.780413ms)
  Jan 29 22:36:41.104: INFO: (19) /api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c:1080/proxy/: <a href="/api/v1/namespaces/proxy-6149/pods/proxy-service-72wxq-q682c:1080/proxy/rewriteme">test<... (200; 5.704973ms)
  Jan 29 22:36:41.104: INFO: (19) /api/v1/namespaces/proxy-6149/pods/https:proxy-service-72wxq-q682c:460/proxy/: tls baz (200; 5.747017ms)
  Jan 29 22:36:41.105: INFO: (19) /api/v1/namespaces/proxy-6149/services/http:proxy-service-72wxq:portname1/proxy/: foo (200; 5.954218ms)
  Jan 29 22:36:41.105: INFO: (19) /api/v1/namespaces/proxy-6149/services/proxy-service-72wxq:portname1/proxy/: foo (200; 6.150123ms)
  Jan 29 22:36:41.105: INFO: (19) /api/v1/namespaces/proxy-6149/services/https:proxy-service-72wxq:tlsportname1/proxy/: tls baz (200; 6.236557ms)
  Jan 29 22:36:41.105: INFO: (19) /api/v1/namespaces/proxy-6149/services/proxy-service-72wxq:portname2/proxy/: bar (200; 6.428704ms)
  Jan 29 22:36:41.105: INFO: (19) /api/v1/namespaces/proxy-6149/services/https:proxy-service-72wxq:tlsportname2/proxy/: tls qux (200; 6.371439ms)
  Jan 29 22:36:41.105: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController proxy-service-72wxq in namespace proxy-6149, will wait for the garbage collector to delete the pods @ 01/29/24 22:36:41.109
  Jan 29 22:36:41.173: INFO: Deleting ReplicationController proxy-service-72wxq took: 10.631365ms
  Jan 29 22:36:41.274: INFO: Terminating ReplicationController proxy-service-72wxq pods took: 101.202876ms
  E0129 22:36:41.865410      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:36:42.866503      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "proxy-6149" for this suite. @ 01/29/24 22:36:43.676
• [4.883 seconds]
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance]
test/e2e/apimachinery/discovery.go:169
  STEP: Creating a kubernetes client @ 01/29/24 22:36:43.683
  Jan 29 22:36:43.683: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename discovery @ 01/29/24 22:36:43.684
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:36:43.699
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:36:43.703
  STEP: Setting up server cert @ 01/29/24 22:36:43.71
  E0129 22:36:43.866947      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Requesting APIResourceList from "/api/v1" @ 01/29/24 22:36:44.059
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 01/29/24 22:36:44.062
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 01/29/24 22:36:44.063
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 01/29/24 22:36:44.065
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 01/29/24 22:36:44.067
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 01/29/24 22:36:44.068
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 01/29/24 22:36:44.07
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 01/29/24 22:36:44.071
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 01/29/24 22:36:44.073
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 01/29/24 22:36:44.074
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 01/29/24 22:36:44.076
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 01/29/24 22:36:44.077
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 01/29/24 22:36:44.079
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 01/29/24 22:36:44.08
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 01/29/24 22:36:44.081
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 01/29/24 22:36:44.083
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 01/29/24 22:36:44.085
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 01/29/24 22:36:44.087
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 01/29/24 22:36:44.088
  Jan 29 22:36:44.090: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-3686" for this suite. @ 01/29/24 22:36:44.094
• [0.419 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance]
test/e2e/network/service.go:3117
  STEP: Creating a kubernetes client @ 01/29/24 22:36:44.109
  Jan 29 22:36:44.109: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename services @ 01/29/24 22:36:44.11
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:36:44.121
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:36:44.124
  STEP: fetching services @ 01/29/24 22:36:44.128
  Jan 29 22:36:44.130: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9907" for this suite. @ 01/29/24 22:36:44.134
• [0.030 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance]
test/e2e/apimachinery/resource_quota.go:806
  STEP: Creating a kubernetes client @ 01/29/24 22:36:44.153
  Jan 29 22:36:44.153: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename resourcequota @ 01/29/24 22:36:44.154
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:36:44.169
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:36:44.172
  STEP: Creating a ResourceQuota with best effort scope @ 01/29/24 22:36:44.175
  STEP: Ensuring ResourceQuota status is calculated @ 01/29/24 22:36:44.179
  E0129 22:36:44.867807      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:36:45.868492      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not best effort scope @ 01/29/24 22:36:46.185
  STEP: Ensuring ResourceQuota status is calculated @ 01/29/24 22:36:46.19
  E0129 22:36:46.869404      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:36:47.869625      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a best-effort pod @ 01/29/24 22:36:48.196
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 01/29/24 22:36:48.211
  E0129 22:36:48.870068      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:36:49.870632      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 01/29/24 22:36:50.218
  E0129 22:36:50.870878      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:36:51.871407      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 01/29/24 22:36:52.224
  STEP: Ensuring resource quota status released the pod usage @ 01/29/24 22:36:52.235
  E0129 22:36:52.872215      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:36:53.872365      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a not best-effort pod @ 01/29/24 22:36:54.24
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 01/29/24 22:36:54.255
  E0129 22:36:54.873366      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:36:55.874002      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 01/29/24 22:36:56.262
  E0129 22:36:56.874375      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:36:57.874964      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 01/29/24 22:36:58.267
  STEP: Ensuring resource quota status released the pod usage @ 01/29/24 22:36:58.281
  E0129 22:36:58.875108      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:36:59.875221      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:37:00.287: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2294" for this suite. @ 01/29/24 22:37:00.292
• [16.147 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance]
test/e2e/common/node/runtimeclass.go:156
  STEP: Creating a kubernetes client @ 01/29/24 22:37:00.304
  Jan 29 22:37:00.304: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename runtimeclass @ 01/29/24 22:37:00.305
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:37:00.319
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:37:00.324
  STEP: Deleting RuntimeClass runtimeclass-2189-delete-me @ 01/29/24 22:37:00.332
  STEP: Waiting for the RuntimeClass to disappear @ 01/29/24 22:37:00.338
  Jan 29 22:37:00.348: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-2189" for this suite. @ 01/29/24 22:37:00.352
• [0.055 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image  [Conformance]
test/e2e/apps/replica_set.go:111
  STEP: Creating a kubernetes client @ 01/29/24 22:37:00.36
  Jan 29 22:37:00.360: INFO: >>> kubeConfig: /tmp/kubeconfig-1341570320
  STEP: Building a namespace api object, basename replicaset @ 01/29/24 22:37:00.362
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/29/24 22:37:00.372
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/29/24 22:37:00.376
  Jan 29 22:37:00.381: INFO: Creating ReplicaSet my-hostname-basic-2595eb12-c810-4f87-8af6-416ba05f66c4
  Jan 29 22:37:00.394: INFO: Pod name my-hostname-basic-2595eb12-c810-4f87-8af6-416ba05f66c4: Found 0 pods out of 1
  E0129 22:37:00.875510      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:37:01.876320      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:37:02.876689      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:37:03.876811      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0129 22:37:04.877068      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jan 29 22:37:05.398: INFO: Pod name my-hostname-basic-2595eb12-c810-4f87-8af6-416ba05f66c4: Found 1 pods out of 1
  Jan 29 22:37:05.398: INFO: Ensuring a pod for ReplicaSet "my-hostname-basic-2595eb12-c810-4f87-8af6-416ba05f66c4" is running
  Jan 29 22:37:05.401: INFO: Pod "my-hostname-basic-2595eb12-c810-4f87-8af6-416ba05f66c4-jdwtj" is running (conditions: [{Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-01-29 22:37:00 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-01-29 22:37:01 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-01-29 22:37:01 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-01-29 22:37:00 +0000 UTC Reason: Message:}])
  Jan 29 22:37:05.402: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 01/29/24 22:37:05.402
  Jan 29 22:37:05.414: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-4865" for this suite. @ 01/29/24 22:37:05.419
• [5.064 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[SynchronizedAfterSuite] 
test/e2e/e2e.go:88
  Jan 29 22:37:05.430: INFO: Running AfterSuite actions on node 1
  Jan 29 22:37:05.430: INFO: Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
test/e2e/e2e_test.go:157
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
test/e2e/framework/test_context.go:585
[ReportAfterSuite] PASSED [0.077 seconds]
------------------------------

Ran 380 of 7387 Specs in 6011.725 seconds
SUCCESS! -- 380 Passed | 0 Failed | 0 Pending | 7007 Skipped
PASS

Ginkgo ran 1 suite in 1h40m12.298908903s
Test Suite Passed
