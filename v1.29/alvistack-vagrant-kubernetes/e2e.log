  I1219 10:02:06.184055      14 e2e.go:117] Starting e2e run "1d5a44d0-9df6-4f8e-9b48-0ec920a51630" on Ginkgo node 1
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1702980124 - will randomize all specs

Will run 388 of 7407 specs
------------------------------
[ReportBeforeSuite] 
test/e2e/e2e_test.go:157
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
test/e2e/e2e.go:77
  Dec 19 10:02:06.675: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  Dec 19 10:02:06.681: INFO: Waiting up to 30m0s for all (but 0) nodes to be schedulable
  Dec 19 10:02:06.759: INFO: Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  Dec 19 10:02:06.771: INFO: 3 / 3 pods ready in namespace 'kube-system' in daemonset 'kube-flannel-ds' (0 seconds elapsed)
  Dec 19 10:02:06.771: INFO: 3 / 3 pods ready in namespace 'kube-system' in daemonset 'kube-proxy' (0 seconds elapsed)
  Dec 19 10:02:06.771: INFO: e2e test version: v1.29.0
  Dec 19 10:02:06.772: INFO: kube-apiserver version: v1.29.0
  Dec 19 10:02:06.773: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  Dec 19 10:02:06.782: INFO: Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.108 seconds]
------------------------------
S
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/configmap.go:46
  STEP: Creating a kubernetes client @ 12/19/23 10:02:07.106
  Dec 19 10:02:07.106: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename configmap @ 12/19/23 10:02:07.109
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:02:07.179
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:02:07.185
  STEP: Creating configMap configmap-9648/configmap-test-75e6b9c5-ada8-42e8-98b9-6126e259694b @ 12/19/23 10:02:07.191
  STEP: Creating a pod to test consume configMaps @ 12/19/23 10:02:07.203
  STEP: Saw pod success @ 12/19/23 10:02:31.456
  Dec 19 10:02:31.461: INFO: Trying to get logs from node dah7vaemeeho-3 pod pod-configmaps-4143ee33-88d4-44fd-a5df-0182ffe2f812 container env-test: <nil>
  STEP: delete the pod @ 12/19/23 10:02:31.495
  Dec 19 10:02:31.531: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9648" for this suite. @ 12/19/23 10:02:31.539
• [24.454 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/field_validation.go:117
  STEP: Creating a kubernetes client @ 12/19/23 10:02:31.568
  Dec 19 10:02:31.568: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename field-validation @ 12/19/23 10:02:31.574
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:02:31.607
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:02:31.613
  STEP: apply creating a deployment @ 12/19/23 10:02:31.626
  Dec 19 10:02:31.661: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-7423" for this suite. @ 12/19/23 10:02:31.672
• [0.116 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 12/19/23 10:02:31.686
  Dec 19 10:02:31.686: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename endpointslicemirroring @ 12/19/23 10:02:31.689
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:02:31.722
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:02:31.726
  STEP: mirroring a new custom Endpoint @ 12/19/23 10:02:31.758
  Dec 19 10:02:31.773: INFO: Waiting for at least 1 EndpointSlice to exist, got 0
  STEP: mirroring an update to a custom Endpoint @ 12/19/23 10:02:33.787
  Dec 19 10:02:33.813: INFO: Expected EndpointSlice to have 10.2.3.4 as address, got 10.1.2.3
  STEP: mirroring deletion of a custom Endpoint @ 12/19/23 10:02:35.842
  Dec 19 10:02:35.885: INFO: Waiting for 0 EndpointSlices to exist, got 1
  Dec 19 10:02:37.894: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-6376" for this suite. @ 12/19/23 10:02:37.908
• [6.239 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/custom_resource_definition.go:86
  STEP: Creating a kubernetes client @ 12/19/23 10:02:37.932
  Dec 19 10:02:37.932: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename custom-resource-definition @ 12/19/23 10:02:37.938
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:02:37.987
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:02:38.003
  Dec 19 10:02:38.009: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  Dec 19 10:02:44.516: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-4417" for this suite. @ 12/19/23 10:02:44.53
• [6.617 seconds]
------------------------------
S
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 12/19/23 10:02:44.55
  Dec 19 10:02:44.550: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename subpath @ 12/19/23 10:02:44.56
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:02:44.593
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:02:44.601
  STEP: Setting up data @ 12/19/23 10:02:44.61
  STEP: Creating pod pod-subpath-test-configmap-nw6r @ 12/19/23 10:02:44.637
  STEP: Creating a pod to test atomic-volume-subpath @ 12/19/23 10:02:44.637
  STEP: Saw pod success @ 12/19/23 10:03:22.852
  Dec 19 10:03:22.860: INFO: Trying to get logs from node dah7vaemeeho-3 pod pod-subpath-test-configmap-nw6r container test-container-subpath-configmap-nw6r: <nil>
  STEP: delete the pod @ 12/19/23 10:03:22.878
  STEP: Deleting pod pod-subpath-test-configmap-nw6r @ 12/19/23 10:03:22.91
  Dec 19 10:03:22.910: INFO: Deleting pod "pod-subpath-test-configmap-nw6r" in namespace "subpath-8733"
  Dec 19 10:03:22.917: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-8733" for this suite. @ 12/19/23 10:03:22.928
• [38.396 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:2199
  STEP: Creating a kubernetes client @ 12/19/23 10:03:22.95
  Dec 19 10:03:22.950: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename services @ 12/19/23 10:03:22.955
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:03:22.994
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:03:22.999
  STEP: creating service in namespace services-3680 @ 12/19/23 10:03:23.007
  STEP: creating service affinity-clusterip-transition in namespace services-3680 @ 12/19/23 10:03:23.007
  STEP: creating replication controller affinity-clusterip-transition in namespace services-3680 @ 12/19/23 10:03:23.031
  I1219 10:03:23.062294      14 runners.go:197] Created replication controller with name: affinity-clusterip-transition, namespace: services-3680, replica count: 3
  I1219 10:03:26.119738      14 runners.go:197] affinity-clusterip-transition Pods: 3 out of 3 created, 1 running, 2 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1219 10:03:29.121389      14 runners.go:197] affinity-clusterip-transition Pods: 3 out of 3 created, 1 running, 2 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1219 10:03:32.122297      14 runners.go:197] affinity-clusterip-transition Pods: 3 out of 3 created, 1 running, 2 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1219 10:03:35.123781      14 runners.go:197] affinity-clusterip-transition Pods: 3 out of 3 created, 1 running, 2 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1219 10:03:38.125979      14 runners.go:197] affinity-clusterip-transition Pods: 3 out of 3 created, 1 running, 2 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1219 10:03:41.127736      14 runners.go:197] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Dec 19 10:03:41.144: INFO: Creating new exec pod
  Dec 19 10:03:44.177: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=services-3680 exec execpod-affinityt2hj9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  Dec 19 10:03:44.665: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
  Dec 19 10:03:44.665: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Dec 19 10:03:44.665: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=services-3680 exec execpod-affinityt2hj9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.20.233 80'
  Dec 19 10:03:44.934: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.20.233 80\nConnection to 10.233.20.233 80 port [tcp/http] succeeded!\n"
  Dec 19 10:03:44.934: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Dec 19 10:03:44.952: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=services-3680 exec execpod-affinityt2hj9 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.233.20.233:80/ ; done'
  Dec 19 10:03:45.473: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.20.233:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.20.233:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.20.233:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.20.233:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.20.233:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.20.233:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.20.233:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.20.233:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.20.233:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.20.233:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.20.233:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.20.233:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.20.233:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.20.233:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.20.233:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.20.233:80/\n"
  Dec 19 10:03:45.473: INFO: stdout: "\naffinity-clusterip-transition-m6qgt\naffinity-clusterip-transition-s27fp\naffinity-clusterip-transition-s27fp\naffinity-clusterip-transition-s27fp\naffinity-clusterip-transition-jgr5r\naffinity-clusterip-transition-jgr5r\naffinity-clusterip-transition-jgr5r\naffinity-clusterip-transition-jgr5r\naffinity-clusterip-transition-m6qgt\naffinity-clusterip-transition-jgr5r\naffinity-clusterip-transition-s27fp\naffinity-clusterip-transition-s27fp\naffinity-clusterip-transition-m6qgt\naffinity-clusterip-transition-jgr5r\naffinity-clusterip-transition-jgr5r\naffinity-clusterip-transition-s27fp"
  Dec 19 10:03:45.473: INFO: Received response from host: affinity-clusterip-transition-m6qgt
  Dec 19 10:03:45.473: INFO: Received response from host: affinity-clusterip-transition-s27fp
  Dec 19 10:03:45.473: INFO: Received response from host: affinity-clusterip-transition-s27fp
  Dec 19 10:03:45.473: INFO: Received response from host: affinity-clusterip-transition-s27fp
  Dec 19 10:03:45.473: INFO: Received response from host: affinity-clusterip-transition-jgr5r
  Dec 19 10:03:45.473: INFO: Received response from host: affinity-clusterip-transition-jgr5r
  Dec 19 10:03:45.473: INFO: Received response from host: affinity-clusterip-transition-jgr5r
  Dec 19 10:03:45.473: INFO: Received response from host: affinity-clusterip-transition-jgr5r
  Dec 19 10:03:45.473: INFO: Received response from host: affinity-clusterip-transition-m6qgt
  Dec 19 10:03:45.473: INFO: Received response from host: affinity-clusterip-transition-jgr5r
  Dec 19 10:03:45.473: INFO: Received response from host: affinity-clusterip-transition-s27fp
  Dec 19 10:03:45.473: INFO: Received response from host: affinity-clusterip-transition-s27fp
  Dec 19 10:03:45.473: INFO: Received response from host: affinity-clusterip-transition-m6qgt
  Dec 19 10:03:45.473: INFO: Received response from host: affinity-clusterip-transition-jgr5r
  Dec 19 10:03:45.473: INFO: Received response from host: affinity-clusterip-transition-jgr5r
  Dec 19 10:03:45.473: INFO: Received response from host: affinity-clusterip-transition-s27fp
  Dec 19 10:03:45.490: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=services-3680 exec execpod-affinityt2hj9 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.233.20.233:80/ ; done'
  Dec 19 10:03:45.992: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.20.233:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.20.233:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.20.233:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.20.233:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.20.233:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.20.233:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.20.233:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.20.233:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.20.233:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.20.233:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.20.233:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.20.233:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.20.233:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.20.233:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.20.233:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.20.233:80/\n"
  Dec 19 10:03:45.993: INFO: stdout: "\naffinity-clusterip-transition-m6qgt\naffinity-clusterip-transition-m6qgt\naffinity-clusterip-transition-m6qgt\naffinity-clusterip-transition-m6qgt\naffinity-clusterip-transition-m6qgt\naffinity-clusterip-transition-m6qgt\naffinity-clusterip-transition-m6qgt\naffinity-clusterip-transition-m6qgt\naffinity-clusterip-transition-m6qgt\naffinity-clusterip-transition-m6qgt\naffinity-clusterip-transition-m6qgt\naffinity-clusterip-transition-m6qgt\naffinity-clusterip-transition-m6qgt\naffinity-clusterip-transition-m6qgt\naffinity-clusterip-transition-m6qgt\naffinity-clusterip-transition-m6qgt"
  Dec 19 10:03:45.993: INFO: Received response from host: affinity-clusterip-transition-m6qgt
  Dec 19 10:03:45.993: INFO: Received response from host: affinity-clusterip-transition-m6qgt
  Dec 19 10:03:45.993: INFO: Received response from host: affinity-clusterip-transition-m6qgt
  Dec 19 10:03:45.993: INFO: Received response from host: affinity-clusterip-transition-m6qgt
  Dec 19 10:03:45.993: INFO: Received response from host: affinity-clusterip-transition-m6qgt
  Dec 19 10:03:45.993: INFO: Received response from host: affinity-clusterip-transition-m6qgt
  Dec 19 10:03:45.993: INFO: Received response from host: affinity-clusterip-transition-m6qgt
  Dec 19 10:03:45.993: INFO: Received response from host: affinity-clusterip-transition-m6qgt
  Dec 19 10:03:45.993: INFO: Received response from host: affinity-clusterip-transition-m6qgt
  Dec 19 10:03:45.993: INFO: Received response from host: affinity-clusterip-transition-m6qgt
  Dec 19 10:03:45.993: INFO: Received response from host: affinity-clusterip-transition-m6qgt
  Dec 19 10:03:45.993: INFO: Received response from host: affinity-clusterip-transition-m6qgt
  Dec 19 10:03:45.993: INFO: Received response from host: affinity-clusterip-transition-m6qgt
  Dec 19 10:03:45.993: INFO: Received response from host: affinity-clusterip-transition-m6qgt
  Dec 19 10:03:45.993: INFO: Received response from host: affinity-clusterip-transition-m6qgt
  Dec 19 10:03:45.993: INFO: Received response from host: affinity-clusterip-transition-m6qgt
  Dec 19 10:03:45.993: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-3680, will wait for the garbage collector to delete the pods @ 12/19/23 10:03:46.019
  Dec 19 10:03:46.092: INFO: Deleting ReplicationController affinity-clusterip-transition took: 13.312681ms
  Dec 19 10:03:46.193: INFO: Terminating ReplicationController affinity-clusterip-transition pods took: 101.238913ms
  Dec 19 10:03:49.140: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3680" for this suite. @ 12/19/23 10:03:49.153
• [26.234 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/runtimeclass.go:158
  STEP: Creating a kubernetes client @ 12/19/23 10:03:49.197
  Dec 19 10:03:49.198: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename runtimeclass @ 12/19/23 10:03:49.205
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:03:49.235
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:03:49.241
  STEP: Deleting RuntimeClass runtimeclass-1525-delete-me @ 12/19/23 10:03:49.261
  STEP: Waiting for the RuntimeClass to disappear @ 12/19/23 10:03:49.276
  Dec 19 10:03:49.298: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-1525" for this suite. @ 12/19/23 10:03:49.306
• [0.118 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 12/19/23 10:03:49.318
  Dec 19 10:03:49.319: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename emptydir-wrapper @ 12/19/23 10:03:49.323
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:03:49.352
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:03:49.358
  STEP: Cleaning up the secret @ 12/19/23 10:03:51.453
  STEP: Cleaning up the configmap @ 12/19/23 10:03:51.476
  STEP: Cleaning up the pod @ 12/19/23 10:03:51.487
  Dec 19 10:03:51.522: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-5994" for this suite. @ 12/19/23 10:03:51.541
• [2.243 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 12/19/23 10:03:51.57
  Dec 19 10:03:51.570: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename daemonsets @ 12/19/23 10:03:51.574
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:03:51.615
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:03:51.621
  STEP: Creating simple DaemonSet "daemon-set" @ 12/19/23 10:03:51.678
  STEP: Check that daemon pods launch on every node of the cluster. @ 12/19/23 10:03:51.694
  Dec 19 10:03:51.711: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 19 10:03:51.711: INFO: Node dah7vaemeeho-1 is running 0 daemon pod, expected 1
  Dec 19 10:03:52.715: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 19 10:03:52.716: INFO: Node dah7vaemeeho-1 is running 0 daemon pod, expected 1
  Dec 19 10:03:53.718: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 19 10:03:53.719: INFO: Node dah7vaemeeho-1 is running 0 daemon pod, expected 1
  Dec 19 10:03:54.715: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 19 10:03:54.716: INFO: Node dah7vaemeeho-1 is running 0 daemon pod, expected 1
  Dec 19 10:03:55.716: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 19 10:03:55.717: INFO: Node dah7vaemeeho-1 is running 0 daemon pod, expected 1
  Dec 19 10:03:56.716: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 19 10:03:56.716: INFO: Node dah7vaemeeho-1 is running 0 daemon pod, expected 1
  Dec 19 10:03:57.720: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 19 10:03:57.721: INFO: Node dah7vaemeeho-1 is running 0 daemon pod, expected 1
  Dec 19 10:03:58.714: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 19 10:03:58.714: INFO: Node dah7vaemeeho-1 is running 0 daemon pod, expected 1
  Dec 19 10:03:59.710: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 19 10:03:59.710: INFO: Node dah7vaemeeho-1 is running 0 daemon pod, expected 1
  Dec 19 10:04:00.713: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 19 10:04:00.713: INFO: Node dah7vaemeeho-1 is running 0 daemon pod, expected 1
  Dec 19 10:04:01.713: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 19 10:04:01.716: INFO: Node dah7vaemeeho-1 is running 0 daemon pod, expected 1
  Dec 19 10:04:02.715: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 19 10:04:02.715: INFO: Node dah7vaemeeho-1 is running 0 daemon pod, expected 1
  Dec 19 10:04:03.713: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 19 10:04:03.713: INFO: Node dah7vaemeeho-1 is running 0 daemon pod, expected 1
  Dec 19 10:04:04.711: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 19 10:04:04.711: INFO: Node dah7vaemeeho-1 is running 0 daemon pod, expected 1
  Dec 19 10:04:05.717: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 19 10:04:05.717: INFO: Node dah7vaemeeho-1 is running 0 daemon pod, expected 1
  Dec 19 10:04:06.712: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Dec 19 10:04:06.712: INFO: Node dah7vaemeeho-1 is running 0 daemon pod, expected 1
  Dec 19 10:04:07.716: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Dec 19 10:04:07.716: INFO: Node dah7vaemeeho-1 is running 0 daemon pod, expected 1
  Dec 19 10:04:08.716: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Dec 19 10:04:08.716: INFO: Node dah7vaemeeho-1 is running 0 daemon pod, expected 1
  Dec 19 10:04:09.711: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Dec 19 10:04:09.711: INFO: Node dah7vaemeeho-1 is running 0 daemon pod, expected 1
  Dec 19 10:04:10.714: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Dec 19 10:04:10.714: INFO: Node dah7vaemeeho-1 is running 0 daemon pod, expected 1
  Dec 19 10:04:11.712: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Dec 19 10:04:11.713: INFO: Node dah7vaemeeho-1 is running 0 daemon pod, expected 1
  Dec 19 10:04:12.722: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Dec 19 10:04:12.722: INFO: Node dah7vaemeeho-1 is running 0 daemon pod, expected 1
  Dec 19 10:04:13.719: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Dec 19 10:04:13.720: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 12/19/23 10:04:13.733
  Dec 19 10:04:13.819: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Dec 19 10:04:13.819: INFO: Node dah7vaemeeho-3 is running 0 daemon pod, expected 1
  Dec 19 10:04:14.799: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Dec 19 10:04:14.800: INFO: Node dah7vaemeeho-3 is running 0 daemon pod, expected 1
  Dec 19 10:04:15.806: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Dec 19 10:04:15.806: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 12/19/23 10:04:15.817
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-5713, will wait for the garbage collector to delete the pods @ 12/19/23 10:04:15.818
  Dec 19 10:04:15.897: INFO: Deleting DaemonSet.extensions daemon-set took: 16.020088ms
  Dec 19 10:04:15.999: INFO: Terminating DaemonSet.extensions daemon-set pods took: 102.13731ms
  Dec 19 10:04:17.307: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 19 10:04:17.307: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Dec 19 10:04:17.322: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"4493"},"items":null}

  Dec 19 10:04:17.330: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"4493"},"items":null}

  Dec 19 10:04:17.363: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-5713" for this suite. @ 12/19/23 10:04:17.371
• [25.822 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 12/19/23 10:04:17.395
  Dec 19 10:04:17.396: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename secrets @ 12/19/23 10:04:17.4
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:04:17.431
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:04:17.436
  STEP: Creating secret with name secret-test-bd06af83-8852-40fd-a0b1-f6c8d2d63ee7 @ 12/19/23 10:04:17.443
  STEP: Creating a pod to test consume secrets @ 12/19/23 10:04:17.453
  STEP: Saw pod success @ 12/19/23 10:04:21.504
  Dec 19 10:04:21.515: INFO: Trying to get logs from node dah7vaemeeho-3 pod pod-secrets-f7cd2dfa-c0d1-4a04-b9b3-a261b85fb81a container secret-volume-test: <nil>
  STEP: delete the pod @ 12/19/23 10:04:21.54
  Dec 19 10:04:21.585: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7633" for this suite. @ 12/19/23 10:04:21.595
• [4.231 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/container_probe.go:134
  STEP: Creating a kubernetes client @ 12/19/23 10:04:21.629
  Dec 19 10:04:21.629: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename container-probe @ 12/19/23 10:04:21.633
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:04:21.673
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:04:21.68
  STEP: Creating pod busybox-19f0a5e4-11c1-45c6-b3b0-a1ef82dceadf in namespace container-probe-2203 @ 12/19/23 10:04:21.686
  STEP: checking the pod's current state and verifying that restartCount is present @ 12/19/23 10:04:23.728
  Dec 19 10:04:23.735: INFO: Initial restart count of pod busybox-19f0a5e4-11c1-45c6-b3b0-a1ef82dceadf is 0
  Dec 19 10:04:23.744: INFO: Get pod busybox-19f0a5e4-11c1-45c6-b3b0-a1ef82dceadf in namespace container-probe-2203
  Dec 19 10:04:25.762: INFO: Get pod busybox-19f0a5e4-11c1-45c6-b3b0-a1ef82dceadf in namespace container-probe-2203
  Dec 19 10:04:27.777: INFO: Get pod busybox-19f0a5e4-11c1-45c6-b3b0-a1ef82dceadf in namespace container-probe-2203
  Dec 19 10:04:29.786: INFO: Get pod busybox-19f0a5e4-11c1-45c6-b3b0-a1ef82dceadf in namespace container-probe-2203
  Dec 19 10:04:31.799: INFO: Get pod busybox-19f0a5e4-11c1-45c6-b3b0-a1ef82dceadf in namespace container-probe-2203
  Dec 19 10:04:33.811: INFO: Get pod busybox-19f0a5e4-11c1-45c6-b3b0-a1ef82dceadf in namespace container-probe-2203
  Dec 19 10:04:35.825: INFO: Get pod busybox-19f0a5e4-11c1-45c6-b3b0-a1ef82dceadf in namespace container-probe-2203
  Dec 19 10:04:37.840: INFO: Get pod busybox-19f0a5e4-11c1-45c6-b3b0-a1ef82dceadf in namespace container-probe-2203
  Dec 19 10:04:39.849: INFO: Get pod busybox-19f0a5e4-11c1-45c6-b3b0-a1ef82dceadf in namespace container-probe-2203
  Dec 19 10:04:41.860: INFO: Get pod busybox-19f0a5e4-11c1-45c6-b3b0-a1ef82dceadf in namespace container-probe-2203
  Dec 19 10:04:43.869: INFO: Get pod busybox-19f0a5e4-11c1-45c6-b3b0-a1ef82dceadf in namespace container-probe-2203
  Dec 19 10:04:45.883: INFO: Get pod busybox-19f0a5e4-11c1-45c6-b3b0-a1ef82dceadf in namespace container-probe-2203
  Dec 19 10:04:47.893: INFO: Get pod busybox-19f0a5e4-11c1-45c6-b3b0-a1ef82dceadf in namespace container-probe-2203
  Dec 19 10:04:49.904: INFO: Get pod busybox-19f0a5e4-11c1-45c6-b3b0-a1ef82dceadf in namespace container-probe-2203
  Dec 19 10:04:51.920: INFO: Get pod busybox-19f0a5e4-11c1-45c6-b3b0-a1ef82dceadf in namespace container-probe-2203
  Dec 19 10:04:53.932: INFO: Get pod busybox-19f0a5e4-11c1-45c6-b3b0-a1ef82dceadf in namespace container-probe-2203
  Dec 19 10:04:55.941: INFO: Get pod busybox-19f0a5e4-11c1-45c6-b3b0-a1ef82dceadf in namespace container-probe-2203
  Dec 19 10:04:57.949: INFO: Get pod busybox-19f0a5e4-11c1-45c6-b3b0-a1ef82dceadf in namespace container-probe-2203
  Dec 19 10:04:59.957: INFO: Get pod busybox-19f0a5e4-11c1-45c6-b3b0-a1ef82dceadf in namespace container-probe-2203
  Dec 19 10:05:01.967: INFO: Get pod busybox-19f0a5e4-11c1-45c6-b3b0-a1ef82dceadf in namespace container-probe-2203
  Dec 19 10:05:03.978: INFO: Get pod busybox-19f0a5e4-11c1-45c6-b3b0-a1ef82dceadf in namespace container-probe-2203
  Dec 19 10:05:05.989: INFO: Get pod busybox-19f0a5e4-11c1-45c6-b3b0-a1ef82dceadf in namespace container-probe-2203
  Dec 19 10:05:08.003: INFO: Get pod busybox-19f0a5e4-11c1-45c6-b3b0-a1ef82dceadf in namespace container-probe-2203
  Dec 19 10:05:10.016: INFO: Get pod busybox-19f0a5e4-11c1-45c6-b3b0-a1ef82dceadf in namespace container-probe-2203
  Dec 19 10:05:12.038: INFO: Get pod busybox-19f0a5e4-11c1-45c6-b3b0-a1ef82dceadf in namespace container-probe-2203
  Dec 19 10:05:14.047: INFO: Get pod busybox-19f0a5e4-11c1-45c6-b3b0-a1ef82dceadf in namespace container-probe-2203
  Dec 19 10:05:14.047: INFO: Restart count of pod container-probe-2203/busybox-19f0a5e4-11c1-45c6-b3b0-a1ef82dceadf is now 1 (50.311624148s elapsed)
  STEP: deleting the pod @ 12/19/23 10:05:14.048
  Dec 19 10:05:14.080: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2203" for this suite. @ 12/19/23 10:05:14.095
• [52.487 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:130
  STEP: Creating a kubernetes client @ 12/19/23 10:05:14.126
  Dec 19 10:05:14.126: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename emptydir @ 12/19/23 10:05:14.131
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:05:14.17
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:05:14.175
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 12/19/23 10:05:14.183
  STEP: Saw pod success @ 12/19/23 10:05:18.236
  Dec 19 10:05:18.244: INFO: Trying to get logs from node dah7vaemeeho-3 pod pod-5f88ce68-0b23-401e-9fec-e2a81932e73a container test-container: <nil>
  STEP: delete the pod @ 12/19/23 10:05:18.261
  Dec 19 10:05:18.339: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4856" for this suite. @ 12/19/23 10:05:18.351
• [4.251 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/runtimeclass.go:106
  STEP: Creating a kubernetes client @ 12/19/23 10:05:18.377
  Dec 19 10:05:18.377: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename runtimeclass @ 12/19/23 10:05:18.38
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:05:18.426
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:05:18.434
  Dec 19 10:05:20.519: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-4777" for this suite. @ 12/19/23 10:05:20.529
• [2.165 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:285
  STEP: Creating a kubernetes client @ 12/19/23 10:05:20.547
  Dec 19 10:05:20.547: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename webhook @ 12/19/23 10:05:20.551
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:05:20.585
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:05:20.592
  STEP: Setting up server cert @ 12/19/23 10:05:20.65
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/19/23 10:05:21.644
  STEP: Deploying the webhook pod @ 12/19/23 10:05:21.671
  STEP: Wait for the deployment to be ready @ 12/19/23 10:05:21.706
  Dec 19 10:05:21.742: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/19/23 10:05:23.764
  STEP: Verifying the service has paired with the endpoint @ 12/19/23 10:05:23.781
  Dec 19 10:05:24.782: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Dec 19 10:05:24.794: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-5041-crds.webhook.example.com via the AdmissionRegistration API @ 12/19/23 10:05:25.317
  STEP: Creating a custom resource that should be mutated by the webhook @ 12/19/23 10:05:25.365
  Dec 19 10:05:28.182: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6565" for this suite. @ 12/19/23 10:05:28.194
  STEP: Destroying namespace "webhook-markers-1258" for this suite. @ 12/19/23 10:05:28.206
• [7.672 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
test/e2e/apps/statefulset.go:1031
  STEP: Creating a kubernetes client @ 12/19/23 10:05:28.221
  Dec 19 10:05:28.221: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename statefulset @ 12/19/23 10:05:28.224
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:05:28.259
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:05:28.268
  STEP: Creating service test in namespace statefulset-1104 @ 12/19/23 10:05:28.274
  STEP: Creating statefulset ss in namespace statefulset-1104 @ 12/19/23 10:05:28.293
  Dec 19 10:05:28.319: INFO: Found 0 stateful pods, waiting for 1
  Dec 19 10:05:38.335: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 12/19/23 10:05:38.352
  STEP: Getting /status @ 12/19/23 10:05:38.388
  Dec 19 10:05:38.403: INFO: StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 12/19/23 10:05:38.403
  Dec 19 10:05:38.428: INFO: updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 12/19/23 10:05:38.428
  Dec 19 10:05:38.436: INFO: Observed &StatefulSet event: ADDED
  Dec 19 10:05:38.436: INFO: Found Statefulset ss in namespace statefulset-1104 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Dec 19 10:05:38.436: INFO: Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 12/19/23 10:05:38.436
  Dec 19 10:05:38.437: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Dec 19 10:05:38.456: INFO: Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 12/19/23 10:05:38.456
  Dec 19 10:05:38.460: INFO: Observed &StatefulSet event: ADDED
  Dec 19 10:05:38.460: INFO: Observed Statefulset ss in namespace statefulset-1104 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Dec 19 10:05:38.461: INFO: Observed &StatefulSet event: MODIFIED
  Dec 19 10:05:38.462: INFO: Deleting all statefulset in ns statefulset-1104
  Dec 19 10:05:38.469: INFO: Scaling statefulset ss to 0
  Dec 19 10:05:48.518: INFO: Waiting for statefulset status.replicas updated to 0
  Dec 19 10:05:48.527: INFO: Deleting statefulset ss
  Dec 19 10:05:48.582: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1104" for this suite. @ 12/19/23 10:05:48.596
• [20.394 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:273
  STEP: Creating a kubernetes client @ 12/19/23 10:05:48.618
  Dec 19 10:05:48.618: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename webhook @ 12/19/23 10:05:48.622
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:05:48.66
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:05:48.665
  STEP: Setting up server cert @ 12/19/23 10:05:48.706
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/19/23 10:05:49.76
  STEP: Deploying the webhook pod @ 12/19/23 10:05:49.769
  STEP: Wait for the deployment to be ready @ 12/19/23 10:05:49.793
  Dec 19 10:05:49.808: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/19/23 10:05:51.833
  STEP: Verifying the service has paired with the endpoint @ 12/19/23 10:05:51.857
  Dec 19 10:05:52.858: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 12/19/23 10:05:52.875
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 12/19/23 10:05:52.915
  STEP: Creating a dummy validating-webhook-configuration object @ 12/19/23 10:05:52.944
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 12/19/23 10:05:52.959
  STEP: Creating a dummy mutating-webhook-configuration object @ 12/19/23 10:05:52.974
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 12/19/23 10:05:52.997
  Dec 19 10:05:53.175: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7841" for this suite. @ 12/19/23 10:05:53.185
  STEP: Destroying namespace "webhook-markers-5925" for this suite. @ 12/19/23 10:05:53.199
• [4.592 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:100
  STEP: Creating a kubernetes client @ 12/19/23 10:05:53.214
  Dec 19 10:05:53.214: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename emptydir @ 12/19/23 10:05:53.219
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:05:53.292
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:05:53.299
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 12/19/23 10:05:53.304
  STEP: Saw pod success @ 12/19/23 10:05:57.353
  Dec 19 10:05:57.361: INFO: Trying to get logs from node dah7vaemeeho-3 pod pod-6a958dd5-c967-4727-bad5-2298d696de4f container test-container: <nil>
  STEP: delete the pod @ 12/19/23 10:05:57.376
  Dec 19 10:05:57.420: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-927" for this suite. @ 12/19/23 10:05:57.435
• [4.246 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:397
  STEP: Creating a kubernetes client @ 12/19/23 10:05:57.46
  Dec 19 10:05:57.461: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename resourcequota @ 12/19/23 10:05:57.463
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:05:57.497
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:05:57.503
  STEP: Counting existing ResourceQuota @ 12/19/23 10:05:57.509
  STEP: Creating a ResourceQuota @ 12/19/23 10:06:02.517
  STEP: Ensuring resource quota status is calculated @ 12/19/23 10:06:02.527
  STEP: Creating a ReplicationController @ 12/19/23 10:06:04.54
  STEP: Ensuring resource quota status captures replication controller creation @ 12/19/23 10:06:04.584
  STEP: Deleting a ReplicationController @ 12/19/23 10:06:06.592
  STEP: Ensuring resource quota status released usage @ 12/19/23 10:06:06.605
  Dec 19 10:06:08.616: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6281" for this suite. @ 12/19/23 10:06:08.63
• [11.185 seconds]
------------------------------
SSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
test/e2e/scheduling/preemption.go:130
  STEP: Creating a kubernetes client @ 12/19/23 10:06:08.648
  Dec 19 10:06:08.648: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename sched-preemption @ 12/19/23 10:06:08.653
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:06:08.696
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:06:08.701
  Dec 19 10:06:08.758: INFO: Waiting up to 1m0s for all nodes to be ready
  Dec 19 10:07:08.770: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 12/19/23 10:07:08.782
  Dec 19 10:07:08.839: INFO: Created pod: pod0-0-sched-preemption-low-priority
  Dec 19 10:07:08.848: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  Dec 19 10:07:08.906: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  Dec 19 10:07:08.922: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  Dec 19 10:07:08.970: INFO: Created pod: pod2-0-sched-preemption-medium-priority
  Dec 19 10:07:09.000: INFO: Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 12/19/23 10:07:09
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 12/19/23 10:07:13.098
  Dec 19 10:07:19.348: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-5024" for this suite. @ 12/19/23 10:07:19.361
• [70.736 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
test/e2e/apps/replica_set.go:177
  STEP: Creating a kubernetes client @ 12/19/23 10:07:19.394
  Dec 19 10:07:19.394: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename replicaset @ 12/19/23 10:07:19.4
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:07:19.449
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:07:19.457
  STEP: Create a Replicaset @ 12/19/23 10:07:19.475
  STEP: Verify that the required pods have come up. @ 12/19/23 10:07:19.489
  Dec 19 10:07:19.501: INFO: Pod name sample-pod: Found 0 pods out of 1
  Dec 19 10:07:24.510: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 12/19/23 10:07:24.51
  STEP: Getting /status @ 12/19/23 10:07:24.511
  Dec 19 10:07:24.520: INFO: Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 12/19/23 10:07:24.521
  Dec 19 10:07:24.541: INFO: updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 12/19/23 10:07:24.541
  Dec 19 10:07:24.548: INFO: Observed &ReplicaSet event: ADDED
  Dec 19 10:07:24.549: INFO: Observed &ReplicaSet event: MODIFIED
  Dec 19 10:07:24.549: INFO: Observed &ReplicaSet event: MODIFIED
  Dec 19 10:07:24.550: INFO: Observed &ReplicaSet event: MODIFIED
  Dec 19 10:07:24.550: INFO: Found replicaset test-rs in namespace replicaset-5902 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Dec 19 10:07:24.551: INFO: Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 12/19/23 10:07:24.551
  Dec 19 10:07:24.551: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Dec 19 10:07:24.568: INFO: Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 12/19/23 10:07:24.568
  Dec 19 10:07:24.574: INFO: Observed &ReplicaSet event: ADDED
  Dec 19 10:07:24.575: INFO: Observed &ReplicaSet event: MODIFIED
  Dec 19 10:07:24.575: INFO: Observed &ReplicaSet event: MODIFIED
  Dec 19 10:07:24.576: INFO: Observed &ReplicaSet event: MODIFIED
  Dec 19 10:07:24.576: INFO: Observed replicaset test-rs in namespace replicaset-5902 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Dec 19 10:07:24.577: INFO: Observed &ReplicaSet event: MODIFIED
  Dec 19 10:07:24.577: INFO: Found replicaset test-rs in namespace replicaset-5902 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  Dec 19 10:07:24.577: INFO: Replicaset test-rs has a patched status
  Dec 19 10:07:24.577: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-5902" for this suite. @ 12/19/23 10:07:24.59
• [5.210 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 12/19/23 10:07:24.605
  Dec 19 10:07:24.605: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename daemonsets @ 12/19/23 10:07:24.608
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:07:24.654
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:07:24.66
  Dec 19 10:07:24.801: INFO: Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 12/19/23 10:07:24.821
  Dec 19 10:07:24.850: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 19 10:07:24.851: INFO: Node dah7vaemeeho-1 is running 0 daemon pod, expected 1
  Dec 19 10:07:25.865: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 19 10:07:25.866: INFO: Node dah7vaemeeho-1 is running 0 daemon pod, expected 1
  Dec 19 10:07:26.844: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Dec 19 10:07:26.845: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Update daemon pods image. @ 12/19/23 10:07:26.88
  STEP: Check that daemon pods images are updated. @ 12/19/23 10:07:26.909
  Dec 19 10:07:26.915: INFO: Wrong image for pod: daemon-set-gpdf7. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Dec 19 10:07:26.916: INFO: Wrong image for pod: daemon-set-nj2jc. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Dec 19 10:07:26.916: INFO: Wrong image for pod: daemon-set-zmg4p. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Dec 19 10:07:27.920: INFO: Wrong image for pod: daemon-set-gpdf7. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Dec 19 10:07:27.920: INFO: Wrong image for pod: daemon-set-nj2jc. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Dec 19 10:07:28.923: INFO: Wrong image for pod: daemon-set-gpdf7. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Dec 19 10:07:29.926: INFO: Pod daemon-set-86gf7 is not available
  Dec 19 10:07:29.927: INFO: Wrong image for pod: daemon-set-gpdf7. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Dec 19 10:07:30.924: INFO: Pod daemon-set-86gf7 is not available
  Dec 19 10:07:30.924: INFO: Wrong image for pod: daemon-set-gpdf7. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Dec 19 10:07:31.920: INFO: Pod daemon-set-9w9wk is not available
  STEP: Check that daemon pods are still running on every node of the cluster. @ 12/19/23 10:07:31.93
  Dec 19 10:07:31.948: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Dec 19 10:07:31.948: INFO: Node dah7vaemeeho-3 is running 0 daemon pod, expected 1
  Dec 19 10:07:32.950: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Dec 19 10:07:32.950: INFO: Node dah7vaemeeho-3 is running 0 daemon pod, expected 1
  Dec 19 10:07:33.951: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Dec 19 10:07:33.951: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 12/19/23 10:07:33.985
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-1190, will wait for the garbage collector to delete the pods @ 12/19/23 10:07:33.986
  Dec 19 10:07:34.060: INFO: Deleting DaemonSet.extensions daemon-set took: 17.814774ms
  Dec 19 10:07:34.161: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.982568ms
  Dec 19 10:07:35.669: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 19 10:07:35.669: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Dec 19 10:07:35.676: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"5510"},"items":null}

  Dec 19 10:07:35.682: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"5510"},"items":null}

  Dec 19 10:07:35.712: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-1190" for this suite. @ 12/19/23 10:07:35.725
• [11.135 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
test/e2e/common/node/podtemplates.go:177
  STEP: Creating a kubernetes client @ 12/19/23 10:07:35.742
  Dec 19 10:07:35.742: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename podtemplate @ 12/19/23 10:07:35.752
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:07:35.788
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:07:35.793
  STEP: Create a pod template @ 12/19/23 10:07:35.797
  STEP: Replace a pod template @ 12/19/23 10:07:35.82
  Dec 19 10:07:35.843: INFO: Found updated podtemplate annotation: "true"

  Dec 19 10:07:35.844: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-9727" for this suite. @ 12/19/23 10:07:35.852
• [0.123 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:150
  STEP: Creating a kubernetes client @ 12/19/23 10:07:35.866
  Dec 19 10:07:35.866: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename emptydir @ 12/19/23 10:07:35.869
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:07:35.905
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:07:35.91
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 12/19/23 10:07:35.915
  STEP: Saw pod success @ 12/19/23 10:07:39.959
  Dec 19 10:07:39.966: INFO: Trying to get logs from node dah7vaemeeho-3 pod pod-36cdbbf7-fedd-47d6-85c1-f8138b8e9ece container test-container: <nil>
  STEP: delete the pod @ 12/19/23 10:07:40.007
  Dec 19 10:07:40.043: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2853" for this suite. @ 12/19/23 10:07:40.06
• [4.220 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/configmap_volume.go:90
  STEP: Creating a kubernetes client @ 12/19/23 10:07:40.094
  Dec 19 10:07:40.094: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename configmap @ 12/19/23 10:07:40.097
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:07:40.132
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:07:40.137
  STEP: Creating configMap with name configmap-test-volume-map-171159e2-f0e1-41eb-a099-4af13be5d2f5 @ 12/19/23 10:07:40.143
  STEP: Creating a pod to test consume configMaps @ 12/19/23 10:07:40.152
  STEP: Saw pod success @ 12/19/23 10:07:44.196
  Dec 19 10:07:44.205: INFO: Trying to get logs from node dah7vaemeeho-3 pod pod-configmaps-3570b5a1-0702-425d-89bb-adc149a8bd8b container agnhost-container: <nil>
  STEP: delete the pod @ 12/19/23 10:07:44.219
  Dec 19 10:07:44.248: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7999" for this suite. @ 12/19/23 10:07:44.259
• [4.181 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/containers.go:89
  STEP: Creating a kubernetes client @ 12/19/23 10:07:44.277
  Dec 19 10:07:44.277: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename containers @ 12/19/23 10:07:44.28
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:07:44.309
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:07:44.314
  STEP: Creating a pod to test override all @ 12/19/23 10:07:44.32
  STEP: Saw pod success @ 12/19/23 10:07:48.363
  Dec 19 10:07:48.369: INFO: Trying to get logs from node dah7vaemeeho-3 pod client-containers-d832ceeb-6b47-4df6-a1e0-42941ea2eb0b container agnhost-container: <nil>
  STEP: delete the pod @ 12/19/23 10:07:48.38
  Dec 19 10:07:48.405: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-8517" for this suite. @ 12/19/23 10:07:48.413
• [4.146 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:170
  STEP: Creating a kubernetes client @ 12/19/23 10:07:48.423
  Dec 19 10:07:48.423: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename emptydir @ 12/19/23 10:07:48.426
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:07:48.457
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:07:48.463
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 12/19/23 10:07:48.474
  STEP: Saw pod success @ 12/19/23 10:07:50.505
  Dec 19 10:07:50.514: INFO: Trying to get logs from node dah7vaemeeho-3 pod pod-d60befac-6e1d-4794-bfe2-edac80181582 container test-container: <nil>
  STEP: delete the pod @ 12/19/23 10:07:50.525
  Dec 19 10:07:50.545: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8491" for this suite. @ 12/19/23 10:07:50.552
• [2.141 seconds]
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
test/e2e/scheduling/limit_range.go:62
  STEP: Creating a kubernetes client @ 12/19/23 10:07:50.564
  Dec 19 10:07:50.564: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename limitrange @ 12/19/23 10:07:50.567
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:07:50.593
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:07:50.596
  STEP: Creating a LimitRange @ 12/19/23 10:07:50.601
  STEP: Setting up watch @ 12/19/23 10:07:50.602
  STEP: Submitting a LimitRange @ 12/19/23 10:07:50.707
  STEP: Verifying LimitRange creation was observed @ 12/19/23 10:07:50.718
  STEP: Fetching the LimitRange to ensure it has proper values @ 12/19/23 10:07:50.718
  Dec 19 10:07:50.724: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  Dec 19 10:07:50.724: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 12/19/23 10:07:50.724
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 12/19/23 10:07:50.734
  Dec 19 10:07:50.748: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  Dec 19 10:07:50.749: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 12/19/23 10:07:50.75
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 12/19/23 10:07:50.759
  Dec 19 10:07:50.769: INFO: Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  Dec 19 10:07:50.770: INFO: Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 12/19/23 10:07:50.771
  STEP: Failing to create a Pod with more than max resources @ 12/19/23 10:07:50.777
  STEP: Updating a LimitRange @ 12/19/23 10:07:50.78
  STEP: Verifying LimitRange updating is effective @ 12/19/23 10:07:50.788
  STEP: Creating a Pod with less than former min resources @ 12/19/23 10:07:52.796
  STEP: Failing to create a Pod with more than max resources @ 12/19/23 10:07:52.808
  STEP: Deleting a LimitRange @ 12/19/23 10:07:52.814
  STEP: Verifying the LimitRange was deleted @ 12/19/23 10:07:52.835
  Dec 19 10:07:57.846: INFO: limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 12/19/23 10:07:57.846
  Dec 19 10:07:57.867: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-9157" for this suite. @ 12/19/23 10:07:57.883
• [7.336 seconds]
------------------------------
SSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
test/e2e/apps/replica_set.go:155
  STEP: Creating a kubernetes client @ 12/19/23 10:07:57.902
  Dec 19 10:07:57.902: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename replicaset @ 12/19/23 10:07:57.907
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:07:57.95
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:07:57.956
  Dec 19 10:07:58.019: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 12/19/23 10:07:58.019
  STEP: Scaling up "test-rs" replicaset @ 12/19/23 10:08:00.038
  Dec 19 10:08:00.054: INFO: Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 12/19/23 10:08:00.055
  Dec 19 10:08:00.082: INFO: observed ReplicaSet test-rs in namespace replicaset-6138 with ReadyReplicas 1, AvailableReplicas 1
  Dec 19 10:08:00.114: INFO: observed ReplicaSet test-rs in namespace replicaset-6138 with ReadyReplicas 1, AvailableReplicas 1
  Dec 19 10:08:00.182: INFO: observed ReplicaSet test-rs in namespace replicaset-6138 with ReadyReplicas 1, AvailableReplicas 1
  Dec 19 10:08:00.200: INFO: observed ReplicaSet test-rs in namespace replicaset-6138 with ReadyReplicas 1, AvailableReplicas 1
  Dec 19 10:08:00.960: INFO: observed ReplicaSet test-rs in namespace replicaset-6138 with ReadyReplicas 2, AvailableReplicas 2
  Dec 19 10:08:01.645: INFO: observed Replicaset test-rs in namespace replicaset-6138 with ReadyReplicas 3 found true
  Dec 19 10:08:01.647: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-6138" for this suite. @ 12/19/23 10:08:01.657
• [3.766 seconds]
------------------------------
SSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
test/e2e/common/node/sysctl.go:79
  STEP: Creating a kubernetes client @ 12/19/23 10:08:01.67
  Dec 19 10:08:01.670: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename sysctl @ 12/19/23 10:08:01.677
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:08:01.706
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:08:01.71
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 12/19/23 10:08:01.714
  STEP: Watching for error events or started pod @ 12/19/23 10:08:01.729
  STEP: Waiting for pod completion @ 12/19/23 10:08:03.738
  STEP: Checking that the pod succeeded @ 12/19/23 10:08:05.761
  STEP: Getting logs from the pod @ 12/19/23 10:08:05.761
  STEP: Checking that the sysctl is actually updated @ 12/19/23 10:08:05.775
  Dec 19 10:08:05.775: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-3052" for this suite. @ 12/19/23 10:08:05.785
• [4.128 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
test/e2e/apps/job.go:627
  STEP: Creating a kubernetes client @ 12/19/23 10:08:05.798
  Dec 19 10:08:05.798: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename job @ 12/19/23 10:08:05.801
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:08:05.835
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:08:05.84
  STEP: Creating a job @ 12/19/23 10:08:05.845
  STEP: Ensuring active pods == parallelism @ 12/19/23 10:08:05.862
  STEP: delete a job @ 12/19/23 10:08:07.873
  STEP: deleting Job.batch foo in namespace job-4631, will wait for the garbage collector to delete the pods @ 12/19/23 10:08:07.874
  Dec 19 10:08:07.959: INFO: Deleting Job.batch foo took: 23.448113ms
  Dec 19 10:08:08.060: INFO: Terminating Job.batch foo pods took: 100.604241ms
  STEP: Ensuring job was deleted @ 12/19/23 10:08:09.661
  Dec 19 10:08:09.667: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-4631" for this suite. @ 12/19/23 10:08:09.674
• [3.887 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
test/e2e/network/ingress.go:558
  STEP: Creating a kubernetes client @ 12/19/23 10:08:09.687
  Dec 19 10:08:09.687: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename ingress @ 12/19/23 10:08:09.69
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:08:09.726
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:08:09.732
  STEP: getting /apis @ 12/19/23 10:08:09.739
  STEP: getting /apis/networking.k8s.io @ 12/19/23 10:08:09.749
  STEP: getting /apis/networking.k8s.iov1 @ 12/19/23 10:08:09.753
  STEP: creating @ 12/19/23 10:08:09.756
  STEP: getting @ 12/19/23 10:08:09.789
  STEP: listing @ 12/19/23 10:08:09.796
  STEP: watching @ 12/19/23 10:08:09.804
  Dec 19 10:08:09.804: INFO: starting watch
  STEP: cluster-wide listing @ 12/19/23 10:08:09.809
  STEP: cluster-wide watching @ 12/19/23 10:08:09.817
  Dec 19 10:08:09.817: INFO: starting watch
  STEP: patching @ 12/19/23 10:08:09.821
  STEP: updating @ 12/19/23 10:08:09.837
  Dec 19 10:08:09.856: INFO: waiting for watch events with expected annotations
  Dec 19 10:08:09.856: INFO: saw patched and updated annotations
  STEP: patching /status @ 12/19/23 10:08:09.858
  STEP: updating /status @ 12/19/23 10:08:09.88
  STEP: get /status @ 12/19/23 10:08:09.906
  STEP: deleting @ 12/19/23 10:08:09.914
  STEP: deleting a collection @ 12/19/23 10:08:09.936
  Dec 19 10:08:09.968: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-5111" for this suite. @ 12/19/23 10:08:09.976
• [0.306 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
test/e2e/node/taints.go:290
  STEP: Creating a kubernetes client @ 12/19/23 10:08:09.996
  Dec 19 10:08:09.996: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename taint-single-pod @ 12/19/23 10:08:10.001
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:08:10.052
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:08:10.057
  Dec 19 10:08:10.063: INFO: Waiting up to 1m0s for all nodes to be ready
  Dec 19 10:09:10.063: INFO: Waiting for terminating namespaces to be deleted...
  Dec 19 10:09:10.071: INFO: Starting informer...
  STEP: Starting pod... @ 12/19/23 10:09:10.071
  Dec 19 10:09:10.303: INFO: Pod is running on dah7vaemeeho-3. Tainting Node
  STEP: Trying to apply a taint on the Node @ 12/19/23 10:09:10.303
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 12/19/23 10:09:10.326
  STEP: Waiting short time to make sure Pod is queued for deletion @ 12/19/23 10:09:10.35
  Dec 19 10:09:10.350: INFO: Pod wasn't evicted. Proceeding
  Dec 19 10:09:10.350: INFO: Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 12/19/23 10:09:10.376
  STEP: Waiting some time to make sure that toleration time passed. @ 12/19/23 10:09:10.385
  Dec 19 10:10:25.387: INFO: Pod wasn't evicted. Test successful
  Dec 19 10:10:25.388: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-6072" for this suite. @ 12/19/23 10:10:25.401
• [135.421 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:775
  STEP: Creating a kubernetes client @ 12/19/23 10:10:25.419
  Dec 19 10:10:25.419: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename services @ 12/19/23 10:10:25.424
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:10:25.462
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:10:25.467
  Dec 19 10:10:25.479: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4043" for this suite. @ 12/19/23 10:10:25.494
• [0.095 seconds]
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
test/e2e/network/endpointslice.go:69
  STEP: Creating a kubernetes client @ 12/19/23 10:10:25.513
  Dec 19 10:10:25.513: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename endpointslice @ 12/19/23 10:10:25.517
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:10:25.572
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:10:25.587
  Dec 19 10:10:25.621: INFO: Endpoints addresses: [192.168.121.147 192.168.121.226] , ports: [6443]
  Dec 19 10:10:25.622: INFO: EndpointSlices addresses: [192.168.121.147 192.168.121.226] , ports: [6443]
  Dec 19 10:10:25.622: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-4457" for this suite. @ 12/19/23 10:10:25.631
• [0.136 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:195
  STEP: Creating a kubernetes client @ 12/19/23 10:10:25.651
  Dec 19 10:10:25.651: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename projected @ 12/19/23 10:10:25.655
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:10:25.7
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:10:25.71
  STEP: Creating a pod to test downward API volume plugin @ 12/19/23 10:10:25.718
  STEP: Saw pod success @ 12/19/23 10:10:29.768
  Dec 19 10:10:29.775: INFO: Trying to get logs from node dah7vaemeeho-3 pod downwardapi-volume-d54dbe24-ab5f-4ba6-8489-ce4b032a74fd container client-container: <nil>
  STEP: delete the pod @ 12/19/23 10:10:29.811
  Dec 19 10:10:29.845: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7060" for this suite. @ 12/19/23 10:10:29.858
• [4.225 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
test/e2e/apps/job.go:784
  STEP: Creating a kubernetes client @ 12/19/23 10:10:29.879
  Dec 19 10:10:29.879: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename job @ 12/19/23 10:10:29.884
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:10:29.927
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:10:29.935
  STEP: Creating a job @ 12/19/23 10:10:29.944
  STEP: Ensure pods equal to parallelism count is attached to the job @ 12/19/23 10:10:29.959
  STEP: patching /status @ 12/19/23 10:10:33.968
  STEP: updating /status @ 12/19/23 10:10:33.994
  STEP: get /status @ 12/19/23 10:10:34.013
  Dec 19 10:10:34.027: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-4428" for this suite. @ 12/19/23 10:10:34.038
• [4.179 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
test/e2e/apps/statefulset.go:793
  STEP: Creating a kubernetes client @ 12/19/23 10:10:34.064
  Dec 19 10:10:34.064: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename statefulset @ 12/19/23 10:10:34.067
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:10:34.116
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:10:34.122
  STEP: Creating service test in namespace statefulset-8481 @ 12/19/23 10:10:34.129
  STEP: Looking for a node to schedule stateful set and pod @ 12/19/23 10:10:34.144
  STEP: Creating pod with conflicting port in namespace statefulset-8481 @ 12/19/23 10:10:34.156
  STEP: Waiting until pod test-pod will start running in namespace statefulset-8481 @ 12/19/23 10:10:34.185
  STEP: Creating statefulset with conflicting port in namespace statefulset-8481 @ 12/19/23 10:10:36.207
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-8481 @ 12/19/23 10:10:36.217
  Dec 19 10:10:36.254: INFO: Observed stateful pod in namespace: statefulset-8481, name: ss-0, uid: e03e8e2b-abfa-4716-b286-0333614e661b, status phase: Pending. Waiting for statefulset controller to delete.
  Dec 19 10:10:36.286: INFO: Observed stateful pod in namespace: statefulset-8481, name: ss-0, uid: e03e8e2b-abfa-4716-b286-0333614e661b, status phase: Failed. Waiting for statefulset controller to delete.
  Dec 19 10:10:36.309: INFO: Observed stateful pod in namespace: statefulset-8481, name: ss-0, uid: e03e8e2b-abfa-4716-b286-0333614e661b, status phase: Failed. Waiting for statefulset controller to delete.
  Dec 19 10:10:36.319: INFO: Observed delete event for stateful pod ss-0 in namespace statefulset-8481
  STEP: Removing pod with conflicting port in namespace statefulset-8481 @ 12/19/23 10:10:36.319
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-8481 and will be in running state @ 12/19/23 10:10:36.354
  Dec 19 10:10:38.371: INFO: Deleting all statefulset in ns statefulset-8481
  Dec 19 10:10:38.377: INFO: Scaling statefulset ss to 0
  Dec 19 10:10:48.404: INFO: Waiting for statefulset status.replicas updated to 0
  Dec 19 10:10:48.411: INFO: Deleting statefulset ss
  Dec 19 10:10:48.444: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-8481" for this suite. @ 12/19/23 10:10:48.453
• [14.413 seconds]
------------------------------
SS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/configmap_volume.go:100
  STEP: Creating a kubernetes client @ 12/19/23 10:10:48.478
  Dec 19 10:10:48.479: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename configmap @ 12/19/23 10:10:48.482
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:10:48.529
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:10:48.535
  STEP: Creating configMap with name configmap-test-volume-map-2078d48e-4512-481b-9556-8fe4f5a2c433 @ 12/19/23 10:10:48.543
  STEP: Creating a pod to test consume configMaps @ 12/19/23 10:10:48.555
  STEP: Saw pod success @ 12/19/23 10:10:52.606
  Dec 19 10:10:52.614: INFO: Trying to get logs from node dah7vaemeeho-3 pod pod-configmaps-e001e3d2-018b-4bca-b6e8-640de4ed23ea container agnhost-container: <nil>
  STEP: delete the pod @ 12/19/23 10:10:52.634
  Dec 19 10:10:52.674: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4999" for this suite. @ 12/19/23 10:10:52.689
• [4.229 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1399
  STEP: Creating a kubernetes client @ 12/19/23 10:10:52.709
  Dec 19 10:10:52.709: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename kubectl @ 12/19/23 10:10:52.715
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:10:52.76
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:10:52.765
  Dec 19 10:10:52.772: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=kubectl-130 create -f -'
  Dec 19 10:10:53.170: INFO: stderr: ""
  Dec 19 10:10:53.170: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  Dec 19 10:10:53.170: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=kubectl-130 create -f -'
  Dec 19 10:10:53.579: INFO: stderr: ""
  Dec 19 10:10:53.579: INFO: stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 12/19/23 10:10:53.579
  Dec 19 10:10:54.590: INFO: Selector matched 1 pods for map[app:agnhost]
  Dec 19 10:10:54.590: INFO: Found 1 / 1
  Dec 19 10:10:54.590: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  Dec 19 10:10:54.597: INFO: Selector matched 1 pods for map[app:agnhost]
  Dec 19 10:10:54.597: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Dec 19 10:10:54.598: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=kubectl-130 describe pod agnhost-primary-k92q2'
  Dec 19 10:10:54.827: INFO: stderr: ""
  Dec 19 10:10:54.827: INFO: stdout: "Name:             agnhost-primary-k92q2\nNamespace:        kubectl-130\nPriority:         0\nService Account:  default\nNode:             dah7vaemeeho-3/192.168.121.250\nStart Time:       Tue, 19 Dec 2023 10:10:53 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               10.233.66.39\nIPs:\n  IP:           10.233.66.39\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   cri-o://cd3277a3b79826be92186342244eb187d73269bc1c58fdf94c1ba45863111eaa\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.45\n    Image ID:       077cda6b1f5995dcc056c00f92d40b5147132839f522d46d9ca84acd44ad76a7\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Tue, 19 Dec 2023 10:10:53 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-4lqb2 (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-4lqb2:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  1s    default-scheduler  Successfully assigned kubectl-130/agnhost-primary-k92q2 to dah7vaemeeho-3\n  Normal  Pulled     1s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.45\" already present on machine\n  Normal  Created    1s    kubelet            Created container agnhost-primary\n  Normal  Started    1s    kubelet            Started container agnhost-primary\n"
  Dec 19 10:10:54.828: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=kubectl-130 describe rc agnhost-primary'
  Dec 19 10:10:55.044: INFO: stderr: ""
  Dec 19 10:10:55.044: INFO: stdout: "Name:         agnhost-primary\nNamespace:    kubectl-130\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:        registry.k8s.io/e2e-test-images/agnhost:2.45\n    Port:         6379/TCP\n    Host Port:    0/TCP\n    Environment:  <none>\n    Mounts:       <none>\n  Volumes:        <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  2s    replication-controller  Created pod: agnhost-primary-k92q2\n"
  Dec 19 10:10:55.044: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=kubectl-130 describe service agnhost-primary'
  Dec 19 10:10:55.244: INFO: stderr: ""
  Dec 19 10:10:55.244: INFO: stdout: "Name:              agnhost-primary\nNamespace:         kubectl-130\nLabels:            app=agnhost\n                   role=primary\nAnnotations:       <none>\nSelector:          app=agnhost,role=primary\nType:              ClusterIP\nIP Family Policy:  SingleStack\nIP Families:       IPv4\nIP:                10.233.10.193\nIPs:               10.233.10.193\nPort:              <unset>  6379/TCP\nTargetPort:        agnhost-server/TCP\nEndpoints:         10.233.66.39:6379\nSession Affinity:  None\nEvents:            <none>\n"
  Dec 19 10:10:55.254: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=kubectl-130 describe node dah7vaemeeho-1'
  Dec 19 10:10:55.502: INFO: stderr: ""
  Dec 19 10:10:55.502: INFO: stdout: "Name:               dah7vaemeeho-1\nRoles:              control-plane\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=dah7vaemeeho-1\n                    kubernetes.io/os=linux\n                    node-role.kubernetes.io/control-plane=\n                    node.kubernetes.io/exclude-from-external-load-balancers=\nAnnotations:        flannel.alpha.coreos.com/backend-data: {\"VNI\":1,\"VtepMAC\":\"1e:30:d6:ed:5b:bb\"}\n                    flannel.alpha.coreos.com/backend-type: vxlan\n                    flannel.alpha.coreos.com/kube-subnet-manager: true\n                    flannel.alpha.coreos.com/public-ip: 192.168.121.226\n                    kubeadm.alpha.kubernetes.io/cri-socket: unix:///var/run/crio/crio.sock\n                    node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Tue, 19 Dec 2023 09:34:37 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  dah7vaemeeho-1\n  AcquireTime:     <unset>\n  RenewTime:       Tue, 19 Dec 2023 10:10:46 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Tue, 19 Dec 2023 09:40:49 +0000   Tue, 19 Dec 2023 09:40:49 +0000   FlannelIsUp                  Flannel is running on this node\n  MemoryPressure       False   Tue, 19 Dec 2023 10:09:27 +0000   Tue, 19 Dec 2023 09:40:04 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Tue, 19 Dec 2023 10:09:27 +0000   Tue, 19 Dec 2023 09:40:04 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Tue, 19 Dec 2023 10:09:27 +0000   Tue, 19 Dec 2023 09:40:04 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Tue, 19 Dec 2023 10:09:27 +0000   Tue, 19 Dec 2023 09:47:28 +0000   KubeletReady                 kubelet is posting ready status. AppArmor enabled\nAddresses:\n  InternalIP:  192.168.121.226\n  Hostname:    dah7vaemeeho-1\nCapacity:\n  cpu:                    2\n  ephemeral-storage:      115008636Ki\n  hugepages-1Gi:          0\n  hugepages-2Mi:          0\n  memory:                 8123984Ki\n  pods:                   110\n  scheduling.k8s.io/foo:  5\nAllocatable:\n  cpu:                    1600m\n  ephemeral-storage:      111880401014\n  hugepages-1Gi:          0\n  hugepages-2Mi:          0\n  memory:                 3274320Ki\n  pods:                   110\n  scheduling.k8s.io/foo:  5\nSystem Info:\n  Machine ID:                 2ebac8e79b624038b3cca0e9913b774b\n  System UUID:                2ebac8e7-9b62-4038-b3cc-a0e9913b774b\n  Boot ID:                    b4a721ba-4853-4205-a7e7-3b1afe96805d\n  Kernel Version:             6.2.0-39-generic\n  OS Image:                   Ubuntu 22.04.3 LTS\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  cri-o://1.29.0\n  Kubelet Version:            v1.29.0\n  Kube-Proxy Version:         v1.29.0\nPodCIDR:                      10.233.64.0/24\nPodCIDRs:                     10.233.64.0/24\nNon-terminated Pods:          (9 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  kube-system                 coredns-76f75df574-k2zr4                                   100m (6%)     0 (0%)      70Mi (2%)        170Mi (5%)     36m\n  kube-system                 coredns-76f75df574-sc56n                                   100m (6%)     0 (0%)      70Mi (2%)        170Mi (5%)     36m\n  kube-system                 kube-addon-manager-dah7vaemeeho-1                          5m (0%)       0 (0%)      50Mi (1%)        0 (0%)         34m\n  kube-system                 kube-apiserver-dah7vaemeeho-1                              250m (15%)    0 (0%)      0 (0%)           0 (0%)         36m\n  kube-system                 kube-controller-manager-dah7vaemeeho-1                     200m (12%)    0 (0%)      0 (0%)           0 (0%)         36m\n  kube-system                 kube-flannel-ds-r2kgn                                      100m (6%)     0 (0%)      50Mi (1%)        0 (0%)         34m\n  kube-system                 kube-proxy-xscgp                                           0 (0%)        0 (0%)      0 (0%)           0 (0%)         36m\n  kube-system                 kube-scheduler-dah7vaemeeho-1                              100m (6%)     0 (0%)      0 (0%)           0 (0%)         36m\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-ec23f534379c4b15-9ftzt    0 (0%)        0 (0%)      0 (0%)           0 (0%)         9m46s\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource               Requests    Limits\n  --------               --------    ------\n  cpu                    855m (53%)  0 (0%)\n  memory                 240Mi (7%)  340Mi (10%)\n  ephemeral-storage      0 (0%)      0 (0%)\n  hugepages-1Gi          0 (0%)      0 (0%)\n  hugepages-2Mi          0 (0%)      0 (0%)\n  scheduling.k8s.io/foo  0           0\nEvents:\n  Type    Reason                   Age                From             Message\n  ----    ------                   ----               ----             -------\n  Normal  Starting                 35m                kube-proxy       \n  Normal  Starting                 30m                kube-proxy       \n  Normal  Starting                 36m                kubelet          Starting kubelet.\n  Normal  NodeHasNoDiskPressure    36m (x8 over 36m)  kubelet          Node dah7vaemeeho-1 status is now: NodeHasNoDiskPressure\n  Normal  NodeHasSufficientMemory  36m (x8 over 36m)  kubelet          Node dah7vaemeeho-1 status is now: NodeHasSufficientMemory\n  Normal  NodeHasSufficientPID     36m (x7 over 36m)  kubelet          Node dah7vaemeeho-1 status is now: NodeHasSufficientPID\n  Normal  NodeAllocatableEnforced  36m                kubelet          Updated Node Allocatable limit across pods\n  Normal  NodeAllocatableEnforced  36m                kubelet          Updated Node Allocatable limit across pods\n  Normal  Starting                 36m                kubelet          Starting kubelet.\n  Normal  NodeHasSufficientMemory  36m                kubelet          Node dah7vaemeeho-1 status is now: NodeHasSufficientMemory\n  Normal  NodeHasNoDiskPressure    36m                kubelet          Node dah7vaemeeho-1 status is now: NodeHasNoDiskPressure\n  Normal  NodeHasSufficientPID     36m                kubelet          Node dah7vaemeeho-1 status is now: NodeHasSufficientPID\n  Normal  NodeNotReady             36m                kubelet          Node dah7vaemeeho-1 status is now: NodeNotReady\n  Normal  NodeReady                36m                kubelet          Node dah7vaemeeho-1 status is now: NodeReady\n  Normal  RegisteredNode           36m                node-controller  Node dah7vaemeeho-1 event: Registered Node dah7vaemeeho-1 in Controller\n  Normal  NodeAllocatableEnforced  34m                kubelet          Updated Node Allocatable limit across pods\n  Normal  Starting                 34m                kubelet          Starting kubelet.\n  Normal  NodeHasSufficientMemory  34m                kubelet          Node dah7vaemeeho-1 status is now: NodeHasSufficientMemory\n  Normal  NodeHasNoDiskPressure    34m                kubelet          Node dah7vaemeeho-1 status is now: NodeHasNoDiskPressure\n  Normal  NodeHasSufficientPID     34m                kubelet          Node dah7vaemeeho-1 status is now: NodeHasSufficientPID\n  Normal  NodeNotReady             34m                kubelet          Node dah7vaemeeho-1 status is now: NodeNotReady\n  Normal  NodeReady                34m                kubelet          Node dah7vaemeeho-1 status is now: NodeReady\n  Normal  RegisteredNode           32m                node-controller  Node dah7vaemeeho-1 event: Registered Node dah7vaemeeho-1 in Controller\n  Normal  NodeNotReady             31m                node-controller  Node dah7vaemeeho-1 status is now: NodeNotReady\n  Normal  Starting                 31m                kubelet          Starting kubelet.\n  Normal  NodeHasSufficientMemory  31m (x8 over 31m)  kubelet          Node dah7vaemeeho-1 status is now: NodeHasSufficientMemory\n  Normal  NodeHasNoDiskPressure    31m (x8 over 31m)  kubelet          Node dah7vaemeeho-1 status is now: NodeHasNoDiskPressure\n  Normal  NodeHasSufficientPID     31m (x7 over 31m)  kubelet          Node dah7vaemeeho-1 status is now: NodeHasSufficientPID\n  Normal  NodeAllocatableEnforced  31m                kubelet          Updated Node Allocatable limit across pods\n  Normal  RegisteredNode           28m                node-controller  Node dah7vaemeeho-1 event: Registered Node dah7vaemeeho-1 in Controller\n  Normal  Starting                 23m                kubelet          Starting kubelet.\n  Normal  NodeHasSufficientMemory  23m                kubelet          Node dah7vaemeeho-1 status is now: NodeHasSufficientMemory\n  Normal  NodeHasNoDiskPressure    23m                kubelet          Node dah7vaemeeho-1 status is now: NodeHasNoDiskPressure\n  Normal  NodeHasSufficientPID     23m                kubelet          Node dah7vaemeeho-1 status is now: NodeHasSufficientPID\n  Normal  NodeNotReady             23m                kubelet          Node dah7vaemeeho-1 status is now: NodeNotReady\n  Normal  NodeAllocatableEnforced  23m                kubelet          Updated Node Allocatable limit across pods\n  Normal  NodeReady                23m                kubelet          Node dah7vaemeeho-1 status is now: NodeReady\n  Normal  Starting                 23m                kubelet          Starting kubelet.\n  Normal  NodeHasSufficientMemory  23m                kubelet          Node dah7vaemeeho-1 status is now: NodeHasSufficientMemory\n  Normal  NodeHasNoDiskPressure    23m                kubelet          Node dah7vaemeeho-1 status is now: NodeHasNoDiskPressure\n  Normal  NodeHasSufficientPID     23m                kubelet          Node dah7vaemeeho-1 status is now: NodeHasSufficientPID\n  Normal  NodeNotReady             23m                kubelet          Node dah7vaemeeho-1 status is now: NodeNotReady\n  Normal  NodeAllocatableEnforced  23m                kubelet          Updated Node Allocatable limit across pods\n  Normal  NodeReady                23m                kubelet          Node dah7vaemeeho-1 status is now: NodeReady\n"
  Dec 19 10:10:55.503: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=kubectl-130 describe namespace kubectl-130'
  Dec 19 10:10:55.668: INFO: stderr: ""
  Dec 19 10:10:55.668: INFO: stdout: "Name:         kubectl-130\nLabels:       e2e-framework=kubectl\n              e2e-run=1d5a44d0-9df6-4f8e-9b48-0ec920a51630\n              kubernetes.io/metadata.name=kubectl-130\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  Dec 19 10:10:55.668: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-130" for this suite. @ 12/19/23 10:10:55.681
• [2.993 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 12/19/23 10:10:55.706
  Dec 19 10:10:55.707: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename svc-latency @ 12/19/23 10:10:55.713
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:10:55.757
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:10:55.762
  Dec 19 10:10:55.769: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-168 @ 12/19/23 10:10:55.772
  I1219 10:10:55.786537      14 runners.go:197] Created replication controller with name: svc-latency-rc, namespace: svc-latency-168, replica count: 1
  I1219 10:10:56.838413      14 runners.go:197] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1219 10:10:57.839154      14 runners.go:197] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Dec 19 10:10:57.980: INFO: Created: latency-svc-w9gkt
  Dec 19 10:10:57.998: INFO: Got endpoints: latency-svc-w9gkt [58.207534ms]
  Dec 19 10:10:58.022: INFO: Created: latency-svc-grthh
  Dec 19 10:10:58.040: INFO: Created: latency-svc-hs69x
  Dec 19 10:10:58.078: INFO: Created: latency-svc-6pjlx
  Dec 19 10:10:58.080: INFO: Got endpoints: latency-svc-hs69x [79.394132ms]
  Dec 19 10:10:58.082: INFO: Got endpoints: latency-svc-grthh [82.49628ms]
  Dec 19 10:10:58.097: INFO: Created: latency-svc-226gj
  Dec 19 10:10:58.119: INFO: Created: latency-svc-csbt2
  Dec 19 10:10:58.143: INFO: Created: latency-svc-kg97v
  Dec 19 10:10:58.164: INFO: Got endpoints: latency-svc-6pjlx [162.587958ms]
  Dec 19 10:10:58.177: INFO: Created: latency-svc-f68zs
  Dec 19 10:10:58.178: INFO: Got endpoints: latency-svc-226gj [177.251291ms]
  Dec 19 10:10:58.179: INFO: Got endpoints: latency-svc-csbt2 [177.613116ms]
  Dec 19 10:10:58.196: INFO: Created: latency-svc-7hh7w
  Dec 19 10:10:58.214: INFO: Created: latency-svc-fjlqh
  Dec 19 10:10:58.228: INFO: Got endpoints: latency-svc-kg97v [224.615706ms]
  Dec 19 10:10:58.230: INFO: Created: latency-svc-8wtwt
  Dec 19 10:10:58.259: INFO: Got endpoints: latency-svc-f68zs [256.645398ms]
  Dec 19 10:10:58.272: INFO: Got endpoints: latency-svc-7hh7w [269.422327ms]
  Dec 19 10:10:58.274: INFO: Created: latency-svc-t7rm8
  Dec 19 10:10:58.295: INFO: Created: latency-svc-kpdpt
  Dec 19 10:10:58.315: INFO: Created: latency-svc-jghpq
  Dec 19 10:10:58.347: INFO: Created: latency-svc-jzjd9
  Dec 19 10:10:58.351: INFO: Got endpoints: latency-svc-fjlqh [347.182872ms]
  Dec 19 10:10:58.367: INFO: Got endpoints: latency-svc-t7rm8 [365.85455ms]
  Dec 19 10:10:58.400: INFO: Got endpoints: latency-svc-8wtwt [396.172345ms]
  Dec 19 10:10:58.402: INFO: Got endpoints: latency-svc-jghpq [396.972571ms]
  Dec 19 10:10:58.412: INFO: Got endpoints: latency-svc-kpdpt [407.956395ms]
  Dec 19 10:10:58.423: INFO: Created: latency-svc-6lvxv
  Dec 19 10:10:58.441: INFO: Created: latency-svc-pbxzp
  Dec 19 10:10:58.443: INFO: Got endpoints: latency-svc-jzjd9 [438.03157ms]
  Dec 19 10:10:58.474: INFO: Created: latency-svc-w7qkq
  Dec 19 10:10:58.490: INFO: Got endpoints: latency-svc-6lvxv [485.003937ms]
  Dec 19 10:10:58.491: INFO: Got endpoints: latency-svc-pbxzp [410.388473ms]
  Dec 19 10:10:58.491: INFO: Got endpoints: latency-svc-w7qkq [407.666916ms]
  Dec 19 10:10:58.499: INFO: Created: latency-svc-fp7t6
  Dec 19 10:10:58.525: INFO: Created: latency-svc-mkfqx
  Dec 19 10:10:58.542: INFO: Created: latency-svc-nk78k
  Dec 19 10:10:58.551: INFO: Created: latency-svc-wblhf
  Dec 19 10:10:58.559: INFO: Got endpoints: latency-svc-fp7t6 [394.490503ms]
  Dec 19 10:10:58.579: INFO: Created: latency-svc-jcgr2
  Dec 19 10:10:58.599: INFO: Created: latency-svc-d5zfg
  Dec 19 10:10:58.599: INFO: Got endpoints: latency-svc-mkfqx [418.936608ms]
  Dec 19 10:10:58.646: INFO: Created: latency-svc-9v22s
  Dec 19 10:10:58.648: INFO: Created: latency-svc-xk2b6
  Dec 19 10:10:58.677: INFO: Created: latency-svc-ngfsr
  Dec 19 10:10:58.685: INFO: Got endpoints: latency-svc-nk78k [457.254441ms]
  Dec 19 10:10:58.692: INFO: Created: latency-svc-bc488
  Dec 19 10:10:58.715: INFO: Created: latency-svc-7bcg4
  Dec 19 10:10:58.717: INFO: Got endpoints: latency-svc-wblhf [457.433942ms]
  Dec 19 10:10:58.717: INFO: Got endpoints: latency-svc-jcgr2 [444.706015ms]
  Dec 19 10:10:58.717: INFO: Got endpoints: latency-svc-d5zfg [365.784476ms]
  Dec 19 10:10:58.726: INFO: Got endpoints: latency-svc-xk2b6 [358.911971ms]
  Dec 19 10:10:58.763: INFO: Got endpoints: latency-svc-9v22s [360.484392ms]
  Dec 19 10:10:58.774: INFO: Got endpoints: latency-svc-ngfsr [374.179634ms]
  Dec 19 10:10:58.781: INFO: Got endpoints: latency-svc-7bcg4 [337.398085ms]
  Dec 19 10:10:58.781: INFO: Got endpoints: latency-svc-bc488 [368.578898ms]
  Dec 19 10:10:58.806: INFO: Created: latency-svc-6g8st
  Dec 19 10:10:58.819: INFO: Got endpoints: latency-svc-6g8st [641.494915ms]
  Dec 19 10:10:58.983: INFO: Created: latency-svc-h4rtx
  Dec 19 10:10:58.983: INFO: Created: latency-svc-5d76l
  Dec 19 10:10:58.984: INFO: Created: latency-svc-cgk5z
  Dec 19 10:10:58.984: INFO: Created: latency-svc-btp7b
  Dec 19 10:10:58.984: INFO: Created: latency-svc-zs75l
  Dec 19 10:10:58.997: INFO: Created: latency-svc-pkd9c
  Dec 19 10:10:58.999: INFO: Created: latency-svc-n9pp8
  Dec 19 10:10:59.000: INFO: Created: latency-svc-788rv
  Dec 19 10:10:59.001: INFO: Created: latency-svc-qdmqm
  Dec 19 10:10:59.006: INFO: Created: latency-svc-fz7fp
  Dec 19 10:10:59.011: INFO: Created: latency-svc-v9lwf
  Dec 19 10:10:59.011: INFO: Created: latency-svc-bmmg9
  Dec 19 10:10:59.012: INFO: Created: latency-svc-vh8t9
  Dec 19 10:10:59.013: INFO: Created: latency-svc-h9f5r
  Dec 19 10:10:59.014: INFO: Created: latency-svc-dgj9k
  Dec 19 10:10:59.084: INFO: Got endpoints: latency-svc-h9f5r [366.638199ms]
  Dec 19 10:10:59.087: INFO: Got endpoints: latency-svc-788rv [323.903036ms]
  Dec 19 10:10:59.088: INFO: Got endpoints: latency-svc-n9pp8 [268.418601ms]
  Dec 19 10:10:59.089: INFO: Got endpoints: latency-svc-qdmqm [403.40079ms]
  Dec 19 10:10:59.102: INFO: Got endpoints: latency-svc-pkd9c [375.356536ms]
  Dec 19 10:10:59.135: INFO: Created: latency-svc-66h5w
  Dec 19 10:10:59.146: INFO: Got endpoints: latency-svc-zs75l [546.420743ms]
  Dec 19 10:10:59.165: INFO: Created: latency-svc-t9jbb
  Dec 19 10:10:59.169: INFO: Got endpoints: latency-svc-5d76l [678.310916ms]
  Dec 19 10:10:59.171: INFO: Got endpoints: latency-svc-h4rtx [680.061234ms]
  Dec 19 10:10:59.172: INFO: Got endpoints: latency-svc-cgk5z [390.420443ms]
  Dec 19 10:10:59.172: INFO: Got endpoints: latency-svc-btp7b [454.436218ms]
  Dec 19 10:10:59.201: INFO: Created: latency-svc-t5sxs
  Dec 19 10:10:59.209: INFO: Got endpoints: latency-svc-v9lwf [491.925114ms]
  Dec 19 10:10:59.225: INFO: Got endpoints: latency-svc-bmmg9 [450.7454ms]
  Dec 19 10:10:59.227: INFO: Got endpoints: latency-svc-fz7fp [446.141932ms]
  Dec 19 10:10:59.228: INFO: Got endpoints: latency-svc-dgj9k [737.995055ms]
  Dec 19 10:10:59.229: INFO: Got endpoints: latency-svc-vh8t9 [669.59629ms]
  Dec 19 10:10:59.254: INFO: Got endpoints: latency-svc-66h5w [169.061718ms]
  Dec 19 10:10:59.270: INFO: Got endpoints: latency-svc-t5sxs [183.137764ms]
  Dec 19 10:10:59.270: INFO: Got endpoints: latency-svc-t9jbb [181.610272ms]
  Dec 19 10:10:59.456: INFO: Created: latency-svc-v4p7k
  Dec 19 10:10:59.475: INFO: Created: latency-svc-qq627
  Dec 19 10:10:59.491: INFO: Created: latency-svc-txxlc
  Dec 19 10:10:59.492: INFO: Created: latency-svc-5z64n
  Dec 19 10:10:59.492: INFO: Created: latency-svc-96rss
  Dec 19 10:10:59.492: INFO: Created: latency-svc-s9z66
  Dec 19 10:10:59.493: INFO: Created: latency-svc-86bmz
  Dec 19 10:10:59.515: INFO: Created: latency-svc-crcwr
  Dec 19 10:10:59.523: INFO: Created: latency-svc-zcww7
  Dec 19 10:10:59.524: INFO: Created: latency-svc-d4k4z
  Dec 19 10:10:59.524: INFO: Created: latency-svc-8hb6d
  Dec 19 10:10:59.525: INFO: Created: latency-svc-w5n5b
  Dec 19 10:10:59.525: INFO: Created: latency-svc-6qcvw
  Dec 19 10:10:59.526: INFO: Created: latency-svc-65jk8
  Dec 19 10:10:59.527: INFO: Got endpoints: latency-svc-s9z66 [356.033281ms]
  Dec 19 10:10:59.527: INFO: Created: latency-svc-5rmh6
  Dec 19 10:10:59.527: INFO: Got endpoints: latency-svc-v4p7k [358.090019ms]
  Dec 19 10:10:59.534: INFO: Got endpoints: latency-svc-96rss [262.244794ms]
  Dec 19 10:10:59.552: INFO: Created: latency-svc-pc4m4
  Dec 19 10:10:59.576: INFO: Created: latency-svc-7mht4
  Dec 19 10:10:59.580: INFO: Got endpoints: latency-svc-qq627 [367.335721ms]
  Dec 19 10:10:59.587: INFO: Got endpoints: latency-svc-txxlc [497.806531ms]
  Dec 19 10:10:59.588: INFO: Created: latency-svc-pwrzj
  Dec 19 10:10:59.590: INFO: Got endpoints: latency-svc-86bmz [362.583975ms]
  Dec 19 10:10:59.611: INFO: Created: latency-svc-zgnpd
  Dec 19 10:10:59.630: INFO: Created: latency-svc-zmbzz
  Dec 19 10:10:59.636: INFO: Got endpoints: latency-svc-zcww7 [363.751496ms]
  Dec 19 10:10:59.638: INFO: Got endpoints: latency-svc-d4k4z [464.819185ms]
  Dec 19 10:10:59.651: INFO: Created: latency-svc-xcfjr
  Dec 19 10:10:59.668: INFO: Got endpoints: latency-svc-8hb6d [438.93725ms]
  Dec 19 10:10:59.673: INFO: Got endpoints: latency-svc-crcwr [418.970576ms]
  Dec 19 10:10:59.684: INFO: Created: latency-svc-8fw4v
  Dec 19 10:10:59.693: INFO: Created: latency-svc-dffxh
  Dec 19 10:10:59.714: INFO: Created: latency-svc-7h2zt
  Dec 19 10:10:59.722: INFO: Got endpoints: latency-svc-5z64n [575.800159ms]
  Dec 19 10:10:59.722: INFO: Created: latency-svc-l4vlq
  Dec 19 10:10:59.742: INFO: Created: latency-svc-vgkdx
  Dec 19 10:10:59.752: INFO: Got endpoints: latency-svc-5rmh6 [524.167035ms]
  Dec 19 10:10:59.754: INFO: Got endpoints: latency-svc-6qcvw [528.520954ms]
  Dec 19 10:10:59.762: INFO: Got endpoints: latency-svc-w5n5b [589.857991ms]
  Dec 19 10:10:59.764: INFO: Got endpoints: latency-svc-65jk8 [661.871536ms]
  Dec 19 10:10:59.786: INFO: Created: latency-svc-pgvnc
  Dec 19 10:10:59.810: INFO: Created: latency-svc-d278b
  Dec 19 10:10:59.812: INFO: Got endpoints: latency-svc-pc4m4 [284.050113ms]
  Dec 19 10:10:59.813: INFO: Got endpoints: latency-svc-7mht4 [285.737262ms]
  Dec 19 10:10:59.822: INFO: Created: latency-svc-6jlmr
  Dec 19 10:10:59.832: INFO: Got endpoints: latency-svc-pwrzj [297.601917ms]
  Dec 19 10:10:59.843: INFO: Created: latency-svc-gfvmb
  Dec 19 10:10:59.853: INFO: Got endpoints: latency-svc-zgnpd [273.098305ms]
  Dec 19 10:10:59.861: INFO: Created: latency-svc-rcvjx
  Dec 19 10:10:59.881: INFO: Created: latency-svc-255l8
  Dec 19 10:10:59.893: INFO: Got endpoints: latency-svc-zmbzz [301.920507ms]
  Dec 19 10:10:59.899: INFO: Created: latency-svc-x28fk
  Dec 19 10:10:59.924: INFO: Created: latency-svc-4qhg2
  Dec 19 10:10:59.934: INFO: Created: latency-svc-4vhj7
  Dec 19 10:10:59.952: INFO: Got endpoints: latency-svc-xcfjr [362.738334ms]
  Dec 19 10:10:59.974: INFO: Created: latency-svc-6nrn6
  Dec 19 10:10:59.988: INFO: Got endpoints: latency-svc-8fw4v [349.462466ms]
  Dec 19 10:11:00.017: INFO: Created: latency-svc-7qrc6
  Dec 19 10:11:00.046: INFO: Got endpoints: latency-svc-dffxh [407.683887ms]
  Dec 19 10:11:00.082: INFO: Created: latency-svc-6gkxp
  Dec 19 10:11:00.098: INFO: Got endpoints: latency-svc-7h2zt [430.621099ms]
  Dec 19 10:11:00.126: INFO: Created: latency-svc-vh8pb
  Dec 19 10:11:00.140: INFO: Got endpoints: latency-svc-l4vlq [467.638825ms]
  Dec 19 10:11:00.163: INFO: Created: latency-svc-856zm
  Dec 19 10:11:00.196: INFO: Got endpoints: latency-svc-vgkdx [472.945002ms]
  Dec 19 10:11:00.219: INFO: Created: latency-svc-kv5j8
  Dec 19 10:11:00.241: INFO: Got endpoints: latency-svc-pgvnc [488.299559ms]
  Dec 19 10:11:00.266: INFO: Created: latency-svc-ppfvc
  Dec 19 10:11:00.295: INFO: Got endpoints: latency-svc-d278b [541.035042ms]
  Dec 19 10:11:00.315: INFO: Created: latency-svc-jzbtm
  Dec 19 10:11:00.345: INFO: Got endpoints: latency-svc-6jlmr [582.680201ms]
  Dec 19 10:11:00.369: INFO: Created: latency-svc-zzjdt
  Dec 19 10:11:00.393: INFO: Got endpoints: latency-svc-gfvmb [628.144124ms]
  Dec 19 10:11:00.423: INFO: Created: latency-svc-7mvhh
  Dec 19 10:11:00.442: INFO: Got endpoints: latency-svc-rcvjx [629.657462ms]
  Dec 19 10:11:00.471: INFO: Created: latency-svc-nwtm7
  Dec 19 10:11:00.492: INFO: Got endpoints: latency-svc-255l8 [678.472018ms]
  Dec 19 10:11:00.515: INFO: Created: latency-svc-cddsk
  Dec 19 10:11:00.545: INFO: Got endpoints: latency-svc-x28fk [713.406088ms]
  Dec 19 10:11:00.571: INFO: Created: latency-svc-j6khj
  Dec 19 10:11:00.593: INFO: Got endpoints: latency-svc-4qhg2 [739.871712ms]
  Dec 19 10:11:00.614: INFO: Created: latency-svc-tdphk
  Dec 19 10:11:00.638: INFO: Got endpoints: latency-svc-4vhj7 [745.710133ms]
  Dec 19 10:11:00.668: INFO: Created: latency-svc-2mkvj
  Dec 19 10:11:00.686: INFO: Got endpoints: latency-svc-6nrn6 [733.879146ms]
  Dec 19 10:11:00.709: INFO: Created: latency-svc-ft7k5
  Dec 19 10:11:00.767: INFO: Got endpoints: latency-svc-7qrc6 [778.508156ms]
  Dec 19 10:11:00.800: INFO: Got endpoints: latency-svc-6gkxp [753.634885ms]
  Dec 19 10:11:00.813: INFO: Created: latency-svc-ff2xx
  Dec 19 10:11:00.845: INFO: Got endpoints: latency-svc-vh8pb [745.980672ms]
  Dec 19 10:11:00.861: INFO: Created: latency-svc-cmbwf
  Dec 19 10:11:00.896: INFO: Created: latency-svc-5j5d5
  Dec 19 10:11:00.903: INFO: Got endpoints: latency-svc-856zm [762.730571ms]
  Dec 19 10:11:00.938: INFO: Created: latency-svc-bwhfv
  Dec 19 10:11:00.942: INFO: Got endpoints: latency-svc-kv5j8 [744.218176ms]
  Dec 19 10:11:00.966: INFO: Created: latency-svc-9r5x5
  Dec 19 10:11:00.990: INFO: Got endpoints: latency-svc-ppfvc [746.827334ms]
  Dec 19 10:11:01.015: INFO: Created: latency-svc-42jm8
  Dec 19 10:11:01.059: INFO: Got endpoints: latency-svc-jzbtm [762.544478ms]
  Dec 19 10:11:01.105: INFO: Got endpoints: latency-svc-zzjdt [759.980315ms]
  Dec 19 10:11:01.118: INFO: Created: latency-svc-w8m8l
  Dec 19 10:11:01.142: INFO: Created: latency-svc-gpdxc
  Dec 19 10:11:01.144: INFO: Got endpoints: latency-svc-7mvhh [750.634711ms]
  Dec 19 10:11:01.165: INFO: Created: latency-svc-zmj97
  Dec 19 10:11:01.194: INFO: Got endpoints: latency-svc-nwtm7 [751.940105ms]
  Dec 19 10:11:01.221: INFO: Created: latency-svc-94c29
  Dec 19 10:11:01.240: INFO: Got endpoints: latency-svc-cddsk [747.412831ms]
  Dec 19 10:11:01.266: INFO: Created: latency-svc-w2ndf
  Dec 19 10:11:01.290: INFO: Got endpoints: latency-svc-j6khj [744.423197ms]
  Dec 19 10:11:01.318: INFO: Created: latency-svc-6lds8
  Dec 19 10:11:01.346: INFO: Got endpoints: latency-svc-tdphk [752.374578ms]
  Dec 19 10:11:01.373: INFO: Created: latency-svc-sj6xh
  Dec 19 10:11:01.397: INFO: Got endpoints: latency-svc-2mkvj [757.900805ms]
  Dec 19 10:11:01.421: INFO: Created: latency-svc-cl87n
  Dec 19 10:11:01.440: INFO: Got endpoints: latency-svc-ft7k5 [754.326287ms]
  Dec 19 10:11:01.462: INFO: Created: latency-svc-rzhsd
  Dec 19 10:11:01.500: INFO: Got endpoints: latency-svc-ff2xx [732.904076ms]
  Dec 19 10:11:01.549: INFO: Created: latency-svc-gwc4v
  Dec 19 10:11:01.564: INFO: Got endpoints: latency-svc-cmbwf [762.913067ms]
  Dec 19 10:11:01.597: INFO: Created: latency-svc-npwmp
  Dec 19 10:11:01.603: INFO: Got endpoints: latency-svc-5j5d5 [757.41268ms]
  Dec 19 10:11:01.644: INFO: Created: latency-svc-c6mpl
  Dec 19 10:11:01.644: INFO: Got endpoints: latency-svc-bwhfv [740.334623ms]
  Dec 19 10:11:01.687: INFO: Created: latency-svc-wj89j
  Dec 19 10:11:01.706: INFO: Got endpoints: latency-svc-9r5x5 [764.476627ms]
  Dec 19 10:11:01.742: INFO: Created: latency-svc-mxbn6
  Dec 19 10:11:01.747: INFO: Got endpoints: latency-svc-42jm8 [756.597909ms]
  Dec 19 10:11:01.767: INFO: Created: latency-svc-c8fkh
  Dec 19 10:11:01.791: INFO: Got endpoints: latency-svc-w8m8l [731.819466ms]
  Dec 19 10:11:01.817: INFO: Created: latency-svc-xkk79
  Dec 19 10:11:01.848: INFO: Got endpoints: latency-svc-gpdxc [742.299935ms]
  Dec 19 10:11:01.878: INFO: Created: latency-svc-gk28t
  Dec 19 10:11:01.909: INFO: Got endpoints: latency-svc-zmj97 [764.813987ms]
  Dec 19 10:11:01.939: INFO: Created: latency-svc-bllft
  Dec 19 10:11:01.948: INFO: Got endpoints: latency-svc-94c29 [753.772024ms]
  Dec 19 10:11:01.970: INFO: Created: latency-svc-x6n8t
  Dec 19 10:11:02.002: INFO: Got endpoints: latency-svc-w2ndf [761.495511ms]
  Dec 19 10:11:02.033: INFO: Created: latency-svc-thm2g
  Dec 19 10:11:02.057: INFO: Got endpoints: latency-svc-6lds8 [767.020648ms]
  Dec 19 10:11:02.097: INFO: Created: latency-svc-7ddfr
  Dec 19 10:11:02.151: INFO: Got endpoints: latency-svc-sj6xh [804.870088ms]
  Dec 19 10:11:02.172: INFO: Created: latency-svc-w5xlf
  Dec 19 10:11:02.201: INFO: Got endpoints: latency-svc-cl87n [803.040503ms]
  Dec 19 10:11:02.242: INFO: Got endpoints: latency-svc-rzhsd [801.442028ms]
  Dec 19 10:11:02.244: INFO: Created: latency-svc-mt7cg
  Dec 19 10:11:02.281: INFO: Created: latency-svc-5tmn5
  Dec 19 10:11:02.315: INFO: Got endpoints: latency-svc-gwc4v [814.308916ms]
  Dec 19 10:11:02.355: INFO: Created: latency-svc-zkvf8
  Dec 19 10:11:02.359: INFO: Got endpoints: latency-svc-npwmp [794.673761ms]
  Dec 19 10:11:02.397: INFO: Created: latency-svc-wkszh
  Dec 19 10:11:02.407: INFO: Got endpoints: latency-svc-c6mpl [803.119153ms]
  Dec 19 10:11:02.450: INFO: Created: latency-svc-vqnkb
  Dec 19 10:11:02.464: INFO: Got endpoints: latency-svc-wj89j [819.164165ms]
  Dec 19 10:11:02.492: INFO: Created: latency-svc-r7kkq
  Dec 19 10:11:02.494: INFO: Got endpoints: latency-svc-mxbn6 [787.14266ms]
  Dec 19 10:11:02.526: INFO: Created: latency-svc-k2n7r
  Dec 19 10:11:02.541: INFO: Got endpoints: latency-svc-c8fkh [794.669531ms]
  Dec 19 10:11:02.567: INFO: Created: latency-svc-4c7tc
  Dec 19 10:11:02.587: INFO: Got endpoints: latency-svc-xkk79 [795.528175ms]
  Dec 19 10:11:02.610: INFO: Created: latency-svc-b2kkn
  Dec 19 10:11:02.642: INFO: Got endpoints: latency-svc-gk28t [794.392919ms]
  Dec 19 10:11:02.667: INFO: Created: latency-svc-4j46x
  Dec 19 10:11:02.692: INFO: Got endpoints: latency-svc-bllft [781.944919ms]
  Dec 19 10:11:02.719: INFO: Created: latency-svc-tjvcn
  Dec 19 10:11:02.738: INFO: Got endpoints: latency-svc-x6n8t [790.450174ms]
  Dec 19 10:11:02.762: INFO: Created: latency-svc-89nc9
  Dec 19 10:11:02.799: INFO: Got endpoints: latency-svc-thm2g [797.634262ms]
  Dec 19 10:11:02.829: INFO: Created: latency-svc-268t5
  Dec 19 10:11:02.838: INFO: Got endpoints: latency-svc-7ddfr [780.359153ms]
  Dec 19 10:11:02.860: INFO: Created: latency-svc-jtrjk
  Dec 19 10:11:02.887: INFO: Got endpoints: latency-svc-w5xlf [735.746641ms]
  Dec 19 10:11:02.916: INFO: Created: latency-svc-pchrz
  Dec 19 10:11:02.938: INFO: Got endpoints: latency-svc-mt7cg [736.866847ms]
  Dec 19 10:11:02.964: INFO: Created: latency-svc-w4682
  Dec 19 10:11:02.989: INFO: Got endpoints: latency-svc-5tmn5 [746.716452ms]
  Dec 19 10:11:03.023: INFO: Created: latency-svc-xp7jm
  Dec 19 10:11:03.039: INFO: Got endpoints: latency-svc-zkvf8 [723.977946ms]
  Dec 19 10:11:03.070: INFO: Created: latency-svc-tlxlx
  Dec 19 10:11:03.105: INFO: Got endpoints: latency-svc-wkszh [745.950195ms]
  Dec 19 10:11:03.138: INFO: Created: latency-svc-jr27w
  Dec 19 10:11:03.141: INFO: Got endpoints: latency-svc-vqnkb [733.979079ms]
  Dec 19 10:11:03.164: INFO: Created: latency-svc-thwnp
  Dec 19 10:11:03.190: INFO: Got endpoints: latency-svc-r7kkq [725.823213ms]
  Dec 19 10:11:03.216: INFO: Created: latency-svc-8qr9n
  Dec 19 10:11:03.239: INFO: Got endpoints: latency-svc-k2n7r [744.792878ms]
  Dec 19 10:11:03.264: INFO: Created: latency-svc-2872s
  Dec 19 10:11:03.294: INFO: Got endpoints: latency-svc-4c7tc [751.931604ms]
  Dec 19 10:11:03.323: INFO: Created: latency-svc-bd4m2
  Dec 19 10:11:03.352: INFO: Got endpoints: latency-svc-b2kkn [764.425364ms]
  Dec 19 10:11:03.377: INFO: Created: latency-svc-rzhth
  Dec 19 10:11:03.400: INFO: Got endpoints: latency-svc-4j46x [757.354397ms]
  Dec 19 10:11:03.426: INFO: Created: latency-svc-cjkxj
  Dec 19 10:11:03.457: INFO: Got endpoints: latency-svc-tjvcn [764.996365ms]
  Dec 19 10:11:03.495: INFO: Got endpoints: latency-svc-89nc9 [756.996374ms]
  Dec 19 10:11:03.496: INFO: Created: latency-svc-ps6xp
  Dec 19 10:11:03.523: INFO: Created: latency-svc-rs9vl
  Dec 19 10:11:03.536: INFO: Got endpoints: latency-svc-268t5 [735.770637ms]
  Dec 19 10:11:03.559: INFO: Created: latency-svc-4fs62
  Dec 19 10:11:03.595: INFO: Got endpoints: latency-svc-jtrjk [757.121982ms]
  Dec 19 10:11:03.642: INFO: Created: latency-svc-tx69s
  Dec 19 10:11:03.659: INFO: Got endpoints: latency-svc-pchrz [771.561468ms]
  Dec 19 10:11:03.690: INFO: Created: latency-svc-n29l6
  Dec 19 10:11:03.708: INFO: Got endpoints: latency-svc-w4682 [769.494397ms]
  Dec 19 10:11:03.728: INFO: Created: latency-svc-z7v59
  Dec 19 10:11:03.744: INFO: Got endpoints: latency-svc-xp7jm [754.991835ms]
  Dec 19 10:11:03.766: INFO: Created: latency-svc-h2gpp
  Dec 19 10:11:03.789: INFO: Got endpoints: latency-svc-tlxlx [748.489495ms]
  Dec 19 10:11:03.818: INFO: Created: latency-svc-vvlbh
  Dec 19 10:11:03.839: INFO: Got endpoints: latency-svc-jr27w [732.392821ms]
  Dec 19 10:11:03.867: INFO: Created: latency-svc-9gnff
  Dec 19 10:11:03.888: INFO: Got endpoints: latency-svc-thwnp [745.600199ms]
  Dec 19 10:11:03.913: INFO: Created: latency-svc-fc69b
  Dec 19 10:11:03.942: INFO: Got endpoints: latency-svc-8qr9n [750.952113ms]
  Dec 19 10:11:03.967: INFO: Created: latency-svc-dw26q
  Dec 19 10:11:03.989: INFO: Got endpoints: latency-svc-2872s [748.885396ms]
  Dec 19 10:11:04.022: INFO: Created: latency-svc-8x7np
  Dec 19 10:11:04.046: INFO: Got endpoints: latency-svc-bd4m2 [750.62824ms]
  Dec 19 10:11:04.093: INFO: Created: latency-svc-vblwl
  Dec 19 10:11:04.096: INFO: Got endpoints: latency-svc-rzhth [743.609639ms]
  Dec 19 10:11:04.125: INFO: Created: latency-svc-k8h4p
  Dec 19 10:11:04.140: INFO: Got endpoints: latency-svc-cjkxj [740.357097ms]
  Dec 19 10:11:04.178: INFO: Created: latency-svc-tzpz5
  Dec 19 10:11:04.186: INFO: Got endpoints: latency-svc-ps6xp [728.620882ms]
  Dec 19 10:11:04.206: INFO: Created: latency-svc-n8gmv
  Dec 19 10:11:04.238: INFO: Got endpoints: latency-svc-rs9vl [741.593856ms]
  Dec 19 10:11:04.262: INFO: Created: latency-svc-sr4ql
  Dec 19 10:11:04.288: INFO: Got endpoints: latency-svc-4fs62 [752.04482ms]
  Dec 19 10:11:04.313: INFO: Created: latency-svc-sbwln
  Dec 19 10:11:04.337: INFO: Got endpoints: latency-svc-tx69s [741.085111ms]
  Dec 19 10:11:04.360: INFO: Created: latency-svc-dj76j
  Dec 19 10:11:04.401: INFO: Got endpoints: latency-svc-n29l6 [739.527583ms]
  Dec 19 10:11:04.424: INFO: Created: latency-svc-7grgd
  Dec 19 10:11:04.439: INFO: Got endpoints: latency-svc-z7v59 [731.794904ms]
  Dec 19 10:11:04.465: INFO: Created: latency-svc-zf77n
  Dec 19 10:11:04.491: INFO: Got endpoints: latency-svc-h2gpp [745.996511ms]
  Dec 19 10:11:04.518: INFO: Created: latency-svc-4gv2q
  Dec 19 10:11:04.537: INFO: Got endpoints: latency-svc-vvlbh [746.86424ms]
  Dec 19 10:11:04.564: INFO: Created: latency-svc-76wp7
  Dec 19 10:11:04.593: INFO: Got endpoints: latency-svc-9gnff [754.287616ms]
  Dec 19 10:11:04.616: INFO: Created: latency-svc-rgjtm
  Dec 19 10:11:04.642: INFO: Got endpoints: latency-svc-fc69b [752.915239ms]
  Dec 19 10:11:04.666: INFO: Created: latency-svc-5kgks
  Dec 19 10:11:04.692: INFO: Got endpoints: latency-svc-dw26q [750.00331ms]
  Dec 19 10:11:04.711: INFO: Created: latency-svc-8phn6
  Dec 19 10:11:04.751: INFO: Got endpoints: latency-svc-8x7np [762.238639ms]
  Dec 19 10:11:04.776: INFO: Created: latency-svc-qskwm
  Dec 19 10:11:04.789: INFO: Got endpoints: latency-svc-vblwl [743.667257ms]
  Dec 19 10:11:04.821: INFO: Created: latency-svc-nk7h9
  Dec 19 10:11:04.844: INFO: Got endpoints: latency-svc-k8h4p [747.811253ms]
  Dec 19 10:11:04.870: INFO: Created: latency-svc-lbm8r
  Dec 19 10:11:04.904: INFO: Got endpoints: latency-svc-tzpz5 [762.601612ms]
  Dec 19 10:11:04.934: INFO: Created: latency-svc-xw2bj
  Dec 19 10:11:04.946: INFO: Got endpoints: latency-svc-n8gmv [759.739457ms]
  Dec 19 10:11:04.965: INFO: Created: latency-svc-kbbvv
  Dec 19 10:11:04.994: INFO: Got endpoints: latency-svc-sr4ql [755.382027ms]
  Dec 19 10:11:05.080: INFO: Got endpoints: latency-svc-sbwln [791.901532ms]
  Dec 19 10:11:05.123: INFO: Got endpoints: latency-svc-dj76j [785.671054ms]
  Dec 19 10:11:05.137: INFO: Created: latency-svc-ddzkc
  Dec 19 10:11:05.169: INFO: Got endpoints: latency-svc-7grgd [766.864468ms]
  Dec 19 10:11:05.195: INFO: Got endpoints: latency-svc-zf77n [755.341479ms]
  Dec 19 10:11:05.210: INFO: Created: latency-svc-c5fgt
  Dec 19 10:11:05.230: INFO: Created: latency-svc-xxzt6
  Dec 19 10:11:05.255: INFO: Created: latency-svc-h5xrd
  Dec 19 10:11:05.267: INFO: Got endpoints: latency-svc-4gv2q [775.688436ms]
  Dec 19 10:11:05.278: INFO: Created: latency-svc-79q8h
  Dec 19 10:11:05.301: INFO: Got endpoints: latency-svc-76wp7 [764.676449ms]
  Dec 19 10:11:05.304: INFO: Created: latency-svc-f7k95
  Dec 19 10:11:05.351: INFO: Got endpoints: latency-svc-rgjtm [757.066389ms]
  Dec 19 10:11:05.377: INFO: Created: latency-svc-g2dr5
  Dec 19 10:11:05.403: INFO: Created: latency-svc-25xdb
  Dec 19 10:11:05.406: INFO: Got endpoints: latency-svc-5kgks [764.246371ms]
  Dec 19 10:11:05.443: INFO: Created: latency-svc-4grvt
  Dec 19 10:11:05.461: INFO: Got endpoints: latency-svc-8phn6 [768.392168ms]
  Dec 19 10:11:05.491: INFO: Created: latency-svc-h9kh6
  Dec 19 10:11:05.493: INFO: Got endpoints: latency-svc-qskwm [741.397802ms]
  Dec 19 10:11:05.527: INFO: Created: latency-svc-5hzvv
  Dec 19 10:11:05.551: INFO: Got endpoints: latency-svc-nk7h9 [761.461642ms]
  Dec 19 10:11:05.577: INFO: Created: latency-svc-npd82
  Dec 19 10:11:05.587: INFO: Got endpoints: latency-svc-lbm8r [741.860987ms]
  Dec 19 10:11:05.610: INFO: Created: latency-svc-p525d
  Dec 19 10:11:05.639: INFO: Got endpoints: latency-svc-xw2bj [735.045176ms]
  Dec 19 10:11:05.659: INFO: Created: latency-svc-kks26
  Dec 19 10:11:05.688: INFO: Got endpoints: latency-svc-kbbvv [741.113279ms]
  Dec 19 10:11:05.712: INFO: Created: latency-svc-vfwqp
  Dec 19 10:11:05.740: INFO: Got endpoints: latency-svc-ddzkc [746.488579ms]
  Dec 19 10:11:05.762: INFO: Created: latency-svc-mj2gt
  Dec 19 10:11:05.794: INFO: Got endpoints: latency-svc-c5fgt [713.399702ms]
  Dec 19 10:11:05.817: INFO: Created: latency-svc-ldq29
  Dec 19 10:11:05.838: INFO: Got endpoints: latency-svc-xxzt6 [714.619163ms]
  Dec 19 10:11:05.863: INFO: Created: latency-svc-69mt4
  Dec 19 10:11:05.886: INFO: Got endpoints: latency-svc-h5xrd [717.19525ms]
  Dec 19 10:11:05.939: INFO: Got endpoints: latency-svc-79q8h [743.720146ms]
  Dec 19 10:11:05.992: INFO: Got endpoints: latency-svc-f7k95 [724.239021ms]
  Dec 19 10:11:06.052: INFO: Got endpoints: latency-svc-g2dr5 [749.652272ms]
  Dec 19 10:11:06.088: INFO: Got endpoints: latency-svc-25xdb [736.115415ms]
  Dec 19 10:11:06.157: INFO: Got endpoints: latency-svc-4grvt [749.928543ms]
  Dec 19 10:11:06.193: INFO: Got endpoints: latency-svc-h9kh6 [731.919265ms]
  Dec 19 10:11:06.248: INFO: Got endpoints: latency-svc-5hzvv [754.735814ms]
  Dec 19 10:11:06.305: INFO: Got endpoints: latency-svc-npd82 [753.718205ms]
  Dec 19 10:11:06.344: INFO: Got endpoints: latency-svc-p525d [755.899918ms]
  Dec 19 10:11:06.391: INFO: Got endpoints: latency-svc-kks26 [752.010493ms]
  Dec 19 10:11:06.443: INFO: Got endpoints: latency-svc-vfwqp [755.305247ms]
  Dec 19 10:11:06.487: INFO: Got endpoints: latency-svc-mj2gt [745.998561ms]
  Dec 19 10:11:06.552: INFO: Got endpoints: latency-svc-ldq29 [757.099888ms]
  Dec 19 10:11:06.588: INFO: Got endpoints: latency-svc-69mt4 [749.827303ms]
  Dec 19 10:11:06.589: INFO: Latencies: [79.394132ms 82.49628ms 162.587958ms 169.061718ms 177.251291ms 177.613116ms 181.610272ms 183.137764ms 224.615706ms 256.645398ms 262.244794ms 268.418601ms 269.422327ms 273.098305ms 284.050113ms 285.737262ms 297.601917ms 301.920507ms 323.903036ms 337.398085ms 347.182872ms 349.462466ms 356.033281ms 358.090019ms 358.911971ms 360.484392ms 362.583975ms 362.738334ms 363.751496ms 365.784476ms 365.85455ms 366.638199ms 367.335721ms 368.578898ms 374.179634ms 375.356536ms 390.420443ms 394.490503ms 396.172345ms 396.972571ms 403.40079ms 407.666916ms 407.683887ms 407.956395ms 410.388473ms 418.936608ms 418.970576ms 430.621099ms 438.03157ms 438.93725ms 444.706015ms 446.141932ms 450.7454ms 454.436218ms 457.254441ms 457.433942ms 464.819185ms 467.638825ms 472.945002ms 485.003937ms 488.299559ms 491.925114ms 497.806531ms 524.167035ms 528.520954ms 541.035042ms 546.420743ms 575.800159ms 582.680201ms 589.857991ms 628.144124ms 629.657462ms 641.494915ms 661.871536ms 669.59629ms 678.310916ms 678.472018ms 680.061234ms 713.399702ms 713.406088ms 714.619163ms 717.19525ms 723.977946ms 724.239021ms 725.823213ms 728.620882ms 731.794904ms 731.819466ms 731.919265ms 732.392821ms 732.904076ms 733.879146ms 733.979079ms 735.045176ms 735.746641ms 735.770637ms 736.115415ms 736.866847ms 737.995055ms 739.527583ms 739.871712ms 740.334623ms 740.357097ms 741.085111ms 741.113279ms 741.397802ms 741.593856ms 741.860987ms 742.299935ms 743.609639ms 743.667257ms 743.720146ms 744.218176ms 744.423197ms 744.792878ms 745.600199ms 745.710133ms 745.950195ms 745.980672ms 745.996511ms 745.998561ms 746.488579ms 746.716452ms 746.827334ms 746.86424ms 747.412831ms 747.811253ms 748.489495ms 748.885396ms 749.652272ms 749.827303ms 749.928543ms 750.00331ms 750.62824ms 750.634711ms 750.952113ms 751.931604ms 751.940105ms 752.010493ms 752.04482ms 752.374578ms 752.915239ms 753.634885ms 753.718205ms 753.772024ms 754.287616ms 754.326287ms 754.735814ms 754.991835ms 755.305247ms 755.341479ms 755.382027ms 755.899918ms 756.597909ms 756.996374ms 757.066389ms 757.099888ms 757.121982ms 757.354397ms 757.41268ms 757.900805ms 759.739457ms 759.980315ms 761.461642ms 761.495511ms 762.238639ms 762.544478ms 762.601612ms 762.730571ms 762.913067ms 764.246371ms 764.425364ms 764.476627ms 764.676449ms 764.813987ms 764.996365ms 766.864468ms 767.020648ms 768.392168ms 769.494397ms 771.561468ms 775.688436ms 778.508156ms 780.359153ms 781.944919ms 785.671054ms 787.14266ms 790.450174ms 791.901532ms 794.392919ms 794.669531ms 794.673761ms 795.528175ms 797.634262ms 801.442028ms 803.040503ms 803.119153ms 804.870088ms 814.308916ms 819.164165ms]
  Dec 19 10:11:06.590: INFO: 50 %ile: 739.871712ms
  Dec 19 10:11:06.590: INFO: 90 %ile: 771.561468ms
  Dec 19 10:11:06.590: INFO: 99 %ile: 814.308916ms
  Dec 19 10:11:06.591: INFO: Total sample count: 200
  Dec 19 10:11:06.591: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-168" for this suite. @ 12/19/23 10:11:06.605
• [10.916 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/lifecycle_hook.go:169
  STEP: Creating a kubernetes client @ 12/19/23 10:11:06.628
  Dec 19 10:11:06.628: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 12/19/23 10:11:06.631
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:11:06.691
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:11:06.707
  STEP: create the container to handle the HTTPGet hook request. @ 12/19/23 10:11:06.733
  STEP: create the pod with lifecycle hook @ 12/19/23 10:11:10.804
  STEP: check poststart hook @ 12/19/23 10:11:12.847
  STEP: delete the pod with lifecycle hook @ 12/19/23 10:11:12.897
  Dec 19 10:11:16.996: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-1235" for this suite. @ 12/19/23 10:11:17.063
• [10.512 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:3338
  STEP: Creating a kubernetes client @ 12/19/23 10:11:17.154
  Dec 19 10:11:17.155: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename services @ 12/19/23 10:11:17.159
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:11:17.316
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:11:17.322
  STEP: creating a Service @ 12/19/23 10:11:17.357
  STEP: watching for the Service to be added @ 12/19/23 10:11:17.431
  Dec 19 10:11:17.435: INFO: Found Service test-service-27hwn in namespace services-7060 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 31449}]
  Dec 19 10:11:17.436: INFO: Service test-service-27hwn created
  STEP: Getting /status @ 12/19/23 10:11:17.437
  Dec 19 10:11:17.447: INFO: Service test-service-27hwn has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 12/19/23 10:11:17.449
  STEP: watching for the Service to be patched @ 12/19/23 10:11:17.474
  Dec 19 10:11:17.478: INFO: observed Service test-service-27hwn in namespace services-7060 with annotations: map[] & LoadBalancer: {[]}
  Dec 19 10:11:17.479: INFO: Found Service test-service-27hwn in namespace services-7060 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  <nil> []}]}
  Dec 19 10:11:17.479: INFO: Service test-service-27hwn has service status patched
  STEP: updating the ServiceStatus @ 12/19/23 10:11:17.479
  Dec 19 10:11:17.504: INFO: updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 12/19/23 10:11:17.505
  Dec 19 10:11:17.512: INFO: Observed Service test-service-27hwn in namespace services-7060 with annotations: map[] & Conditions: {[]}
  Dec 19 10:11:17.514: INFO: Observed event: &Service{ObjectMeta:{test-service-27hwn  services-7060  941d673a-faf1-4087-ace0-613977748e29 8006 0 2023-12-19 10:11:17 +0000 UTC <nil> <nil> map[test-service-static:true] map[patchedstatus:true] [] [] [{e2e.test Update v1 2023-12-19 10:11:17 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:test-service-static":{}}},"f:spec":{"f:allocateLoadBalancerNodePorts":{},"f:externalTrafficPolicy":{},"f:internalTrafficPolicy":{},"f:loadBalancerClass":{},"f:ports":{".":{},"k:{\"port\":80,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:sessionAffinity":{},"f:type":{}}} } {e2e.test Update v1 2023-12-19 10:11:17 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:patchedstatus":{}}},"f:status":{"f:loadBalancer":{"f:ingress":{}}}} status}]},Spec:ServiceSpec{Ports:[]ServicePort{ServicePort{Name:http,Protocol:TCP,Port:80,TargetPort:{0 80 },NodePort:31449,AppProtocol:nil,},},Selector:map[string]string{},ClusterIP:10.233.58.235,Type:LoadBalancer,ExternalIPs:[],SessionAffinity:None,LoadBalancerIP:,LoadBalancerSourceRanges:[],ExternalName:,ExternalTrafficPolicy:Cluster,HealthCheckNodePort:0,PublishNotReadyAddresses:false,SessionAffinityConfig:nil,IPFamilyPolicy:*SingleStack,ClusterIPs:[10.233.58.235],IPFamilies:[IPv4],AllocateLoadBalancerNodePorts:*true,LoadBalancerClass:*example.com/internal-vip,InternalTrafficPolicy:*Cluster,},Status:ServiceStatus{LoadBalancer:LoadBalancerStatus{Ingress:[]LoadBalancerIngress{LoadBalancerIngress{IP:203.0.113.1,Hostname:,IPMode:nil,Ports:[]PortStatus{},},},},Conditions:[]Condition{},},}
  Dec 19 10:11:17.515: INFO: Found Service test-service-27hwn in namespace services-7060 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Dec 19 10:11:17.515: INFO: Service test-service-27hwn has service status updated
  STEP: patching the service @ 12/19/23 10:11:17.515
  STEP: watching for the Service to be patched @ 12/19/23 10:11:17.542
  Dec 19 10:11:17.547: INFO: observed Service test-service-27hwn in namespace services-7060 with labels: map[test-service-static:true]
  Dec 19 10:11:17.547: INFO: observed Service test-service-27hwn in namespace services-7060 with labels: map[test-service-static:true]
  Dec 19 10:11:17.548: INFO: observed Service test-service-27hwn in namespace services-7060 with labels: map[test-service-static:true]
  Dec 19 10:11:17.548: INFO: Found Service test-service-27hwn in namespace services-7060 with labels: map[test-service:patched test-service-static:true]
  Dec 19 10:11:17.548: INFO: Service test-service-27hwn patched
  STEP: deleting the service @ 12/19/23 10:11:17.548
  STEP: watching for the Service to be deleted @ 12/19/23 10:11:17.643
  Dec 19 10:11:17.647: INFO: Observed event: ADDED
  Dec 19 10:11:17.648: INFO: Observed event: MODIFIED
  Dec 19 10:11:17.648: INFO: Observed event: MODIFIED
  Dec 19 10:11:17.649: INFO: Observed event: MODIFIED
  Dec 19 10:11:17.649: INFO: Found Service test-service-27hwn in namespace services-7060 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  Dec 19 10:11:17.649: INFO: Service test-service-27hwn deleted
  Dec 19 10:11:17.649: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7060" for this suite. @ 12/19/23 10:11:17.661
• [0.529 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
test/e2e/common/network/networking.go:85
  STEP: Creating a kubernetes client @ 12/19/23 10:11:17.687
  Dec 19 10:11:17.687: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename pod-network-test @ 12/19/23 10:11:17.69
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:11:17.755
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:11:17.761
  STEP: Performing setup for networking test in namespace pod-network-test-5887 @ 12/19/23 10:11:17.769
  STEP: creating a selector @ 12/19/23 10:11:17.769
  STEP: Creating the service pods in kubernetes @ 12/19/23 10:11:17.77
  Dec 19 10:11:17.770: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 12/19/23 10:11:29.999
  Dec 19 10:11:32.038: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Dec 19 10:11:32.038: INFO: Breadth first check of 10.233.64.14 on host 192.168.121.226...
  Dec 19 10:11:32.045: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.66.42:9080/dial?request=hostname&protocol=http&host=10.233.64.14&port=8083&tries=1'] Namespace:pod-network-test-5887 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 19 10:11:32.045: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  Dec 19 10:11:32.048: INFO: ExecWithOptions: Clientset creation
  Dec 19 10:11:32.049: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-5887/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.66.42%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.233.64.14%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Dec 19 10:11:32.215: INFO: Waiting for responses: map[]
  Dec 19 10:11:32.215: INFO: reached 10.233.64.14 after 0/1 tries
  Dec 19 10:11:32.215: INFO: Breadth first check of 10.233.65.9 on host 192.168.121.147...
  Dec 19 10:11:32.223: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.66.42:9080/dial?request=hostname&protocol=http&host=10.233.65.9&port=8083&tries=1'] Namespace:pod-network-test-5887 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 19 10:11:32.224: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  Dec 19 10:11:32.227: INFO: ExecWithOptions: Clientset creation
  Dec 19 10:11:32.227: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-5887/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.66.42%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.233.65.9%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Dec 19 10:11:32.374: INFO: Waiting for responses: map[]
  Dec 19 10:11:32.374: INFO: reached 10.233.65.9 after 0/1 tries
  Dec 19 10:11:32.374: INFO: Breadth first check of 10.233.66.41 on host 192.168.121.250...
  Dec 19 10:11:32.383: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.66.42:9080/dial?request=hostname&protocol=http&host=10.233.66.41&port=8083&tries=1'] Namespace:pod-network-test-5887 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 19 10:11:32.383: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  Dec 19 10:11:32.385: INFO: ExecWithOptions: Clientset creation
  Dec 19 10:11:32.385: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-5887/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.66.42%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.233.66.41%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Dec 19 10:11:32.523: INFO: Waiting for responses: map[]
  Dec 19 10:11:32.523: INFO: reached 10.233.66.41 after 0/1 tries
  Dec 19 10:11:32.523: INFO: Going to retry 0 out of 3 pods....
  Dec 19 10:11:32.523: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-5887" for this suite. @ 12/19/23 10:11:32.534
• [14.864 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 12/19/23 10:11:32.554
  Dec 19 10:11:32.554: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename hostport @ 12/19/23 10:11:32.557
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:11:32.656
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:11:32.662
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 12/19/23 10:11:32.681
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 192.168.121.226 on the node which pod1 resides and expect scheduled @ 12/19/23 10:11:34.757
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 192.168.121.226 but use UDP protocol on the node which pod2 resides @ 12/19/23 10:11:46.845
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 12/19/23 10:11:50.919
  Dec 19 10:11:50.919: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 192.168.121.226 http://127.0.0.1:54323/hostname] Namespace:hostport-5534 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 19 10:11:50.919: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  Dec 19 10:11:50.923: INFO: ExecWithOptions: Clientset creation
  Dec 19 10:11:50.923: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/hostport-5534/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+192.168.121.226+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 192.168.121.226, port: 54323 @ 12/19/23 10:11:51.144
  Dec 19 10:11:51.144: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://192.168.121.226:54323/hostname] Namespace:hostport-5534 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 19 10:11:51.144: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  Dec 19 10:11:51.146: INFO: ExecWithOptions: Clientset creation
  Dec 19 10:11:51.146: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/hostport-5534/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F192.168.121.226%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 192.168.121.226, port: 54323 UDP @ 12/19/23 10:11:51.326
  Dec 19 10:11:51.327: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 192.168.121.226 54323] Namespace:hostport-5534 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 19 10:11:51.327: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  Dec 19 10:11:51.330: INFO: ExecWithOptions: Clientset creation
  Dec 19 10:11:51.330: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/hostport-5534/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+192.168.121.226+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  Dec 19 10:11:56.436: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-5534" for this suite. @ 12/19/23 10:11:56.446
• [23.907 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 12/19/23 10:11:56.463
  Dec 19 10:11:56.463: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename container-runtime @ 12/19/23 10:11:56.466
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:11:56.495
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:11:56.499
  STEP: create the container @ 12/19/23 10:11:56.504
  W1219 10:11:56.521722      14 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 12/19/23 10:11:56.522
  STEP: get the container status @ 12/19/23 10:11:59.562
  STEP: the container should be terminated @ 12/19/23 10:11:59.571
  STEP: the termination message should be set @ 12/19/23 10:11:59.571
  Dec 19 10:11:59.571: INFO: Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 12/19/23 10:11:59.572
  Dec 19 10:11:59.616: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-4424" for this suite. @ 12/19/23 10:11:59.626
• [3.183 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
test/e2e/apps/disruption.go:141
  STEP: Creating a kubernetes client @ 12/19/23 10:11:59.651
  Dec 19 10:11:59.651: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename disruption @ 12/19/23 10:11:59.654
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:11:59.704
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:11:59.71
  STEP: Waiting for the pdb to be processed @ 12/19/23 10:11:59.728
  STEP: Waiting for all pods to be running @ 12/19/23 10:12:01.812
  Dec 19 10:12:01.840: INFO: running pods: 0 < 3
  Dec 19 10:12:03.827: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-611" for this suite. @ 12/19/23 10:12:03.835
• [4.195 seconds]
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/field_validation.go:622
  STEP: Creating a kubernetes client @ 12/19/23 10:12:03.847
  Dec 19 10:12:03.847: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename field-validation @ 12/19/23 10:12:03.849
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:12:03.878
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:12:03.882
  Dec 19 10:12:03.887: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  W1219 10:12:06.748002      14 warnings.go:70] unknown field "alpha"
  W1219 10:12:06.748062      14 warnings.go:70] unknown field "beta"
  W1219 10:12:06.748078      14 warnings.go:70] unknown field "delta"
  W1219 10:12:06.748089      14 warnings.go:70] unknown field "epsilon"
  W1219 10:12:06.748099      14 warnings.go:70] unknown field "gamma"
  Dec 19 10:12:07.330: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-5044" for this suite. @ 12/19/23 10:12:07.341
• [3.509 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
test/e2e/apimachinery/namespace.go:245
  STEP: Creating a kubernetes client @ 12/19/23 10:12:07.357
  Dec 19 10:12:07.357: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename namespaces @ 12/19/23 10:12:07.36
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:12:07.396
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:12:07.401
  STEP: Creating a test namespace @ 12/19/23 10:12:07.406
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:12:07.433
  STEP: Creating a pod in the namespace @ 12/19/23 10:12:07.439
  STEP: Waiting for the pod to have running status @ 12/19/23 10:12:07.455
  STEP: Deleting the namespace @ 12/19/23 10:12:09.47
  STEP: Waiting for the namespace to be removed. @ 12/19/23 10:12:09.485
  STEP: Recreating the namespace @ 12/19/23 10:12:21.494
  STEP: Verifying there are no pods in the namespace @ 12/19/23 10:12:21.53
  Dec 19 10:12:21.538: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-8900" for this suite. @ 12/19/23 10:12:21.548
  STEP: Destroying namespace "nsdeletetest-5116" for this suite. @ 12/19/23 10:12:21.56
  Dec 19 10:12:21.565: INFO: Namespace nsdeletetest-5116 was already deleted
  STEP: Destroying namespace "nsdeletetest-324" for this suite. @ 12/19/23 10:12:21.566
• [14.219 seconds]
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 12/19/23 10:12:21.577
  Dec 19 10:12:21.577: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename init-container @ 12/19/23 10:12:21.581
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:12:21.617
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:12:21.624
  STEP: creating the pod @ 12/19/23 10:12:21.635
  Dec 19 10:12:21.636: INFO: PodSpec: initContainers in spec.initContainers
  Dec 19 10:12:24.814: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-6288" for this suite. @ 12/19/23 10:12:24.822
• [3.258 seconds]
------------------------------
SSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
test/e2e/scheduling/preemption.go:624
  STEP: Creating a kubernetes client @ 12/19/23 10:12:24.836
  Dec 19 10:12:24.836: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename sched-preemption @ 12/19/23 10:12:24.839
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:12:24.872
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:12:24.878
  Dec 19 10:12:24.910: INFO: Waiting up to 1m0s for all nodes to be ready
  Dec 19 10:13:24.920: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 12/19/23 10:13:24.93
  Dec 19 10:13:24.931: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename sched-preemption-path @ 12/19/23 10:13:24.936
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:13:24.979
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:13:24.986
  STEP: Finding an available node @ 12/19/23 10:13:24.996
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 12/19/23 10:13:24.996
  STEP: Explicitly delete pod here to free the resource it takes. @ 12/19/23 10:13:27.035
  Dec 19 10:13:27.055: INFO: found a healthy node: dah7vaemeeho-3
  Dec 19 10:13:33.239: INFO: pods created so far: [1 1 1]
  Dec 19 10:13:33.240: INFO: length of pods created so far: 3
  Dec 19 10:13:35.264: INFO: pods created so far: [2 2 1]
  Dec 19 10:13:42.447: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-1308" for this suite. @ 12/19/23 10:13:42.458
  Dec 19 10:13:42.471: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-8734" for this suite. @ 12/19/23 10:13:42.479
• [77.658 seconds]
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:194
  STEP: Creating a kubernetes client @ 12/19/23 10:13:42.495
  Dec 19 10:13:42.495: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/19/23 10:13:42.5
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:13:42.533
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:13:42.538
  Dec 19 10:13:42.544: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 12/19/23 10:13:44.919
  Dec 19 10:13:44.920: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=crd-publish-openapi-5789 --namespace=crd-publish-openapi-5789 create -f -'
  Dec 19 10:13:45.350: INFO: stderr: ""
  Dec 19 10:13:45.350: INFO: stdout: "e2e-test-crd-publish-openapi-7077-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  Dec 19 10:13:45.350: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=crd-publish-openapi-5789 --namespace=crd-publish-openapi-5789 delete e2e-test-crd-publish-openapi-7077-crds test-cr'
  Dec 19 10:13:45.556: INFO: stderr: ""
  Dec 19 10:13:45.557: INFO: stdout: "e2e-test-crd-publish-openapi-7077-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  Dec 19 10:13:45.557: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=crd-publish-openapi-5789 --namespace=crd-publish-openapi-5789 apply -f -'
  Dec 19 10:13:45.836: INFO: stderr: ""
  Dec 19 10:13:45.836: INFO: stdout: "e2e-test-crd-publish-openapi-7077-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  Dec 19 10:13:45.836: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=crd-publish-openapi-5789 --namespace=crd-publish-openapi-5789 delete e2e-test-crd-publish-openapi-7077-crds test-cr'
  Dec 19 10:13:46.024: INFO: stderr: ""
  Dec 19 10:13:46.024: INFO: stdout: "e2e-test-crd-publish-openapi-7077-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 12/19/23 10:13:46.024
  Dec 19 10:13:46.025: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=crd-publish-openapi-5789 explain e2e-test-crd-publish-openapi-7077-crds'
  Dec 19 10:13:46.182: INFO: stderr: ""
  Dec 19 10:13:46.182: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-7077-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  Dec 19 10:13:48.085: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5789" for this suite. @ 12/19/23 10:13:48.115
• [5.638 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
test/e2e/apps/statefulset.go:332
  STEP: Creating a kubernetes client @ 12/19/23 10:13:48.133
  Dec 19 10:13:48.133: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename statefulset @ 12/19/23 10:13:48.137
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:13:48.176
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:13:48.186
  STEP: Creating service test in namespace statefulset-2021 @ 12/19/23 10:13:48.205
  STEP: Creating a new StatefulSet @ 12/19/23 10:13:48.219
  Dec 19 10:13:48.256: INFO: Found 0 stateful pods, waiting for 3
  Dec 19 10:13:58.282: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Dec 19 10:13:58.282: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Dec 19 10:13:58.282: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 12/19/23 10:13:58.334
  Dec 19 10:13:58.367: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 12/19/23 10:13:58.367
  STEP: Not applying an update when the partition is greater than the number of replicas @ 12/19/23 10:14:08.396
  STEP: Performing a canary update @ 12/19/23 10:14:08.397
  Dec 19 10:14:08.434: INFO: Updating stateful set ss2
  Dec 19 10:14:08.489: INFO: Waiting for Pod statefulset-2021/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  STEP: Restoring Pods to the correct revision when they are deleted @ 12/19/23 10:14:18.456
  Dec 19 10:14:18.599: INFO: Found 2 stateful pods, waiting for 3
  Dec 19 10:14:28.590: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Dec 19 10:14:28.590: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Dec 19 10:14:28.590: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 12/19/23 10:14:28.604
  Dec 19 10:14:28.633: INFO: Updating stateful set ss2
  Dec 19 10:14:28.651: INFO: Waiting for Pod statefulset-2021/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  Dec 19 10:14:38.678: INFO: Updating stateful set ss2
  Dec 19 10:14:38.703: INFO: Waiting for StatefulSet statefulset-2021/ss2 to complete update
  Dec 19 10:14:38.703: INFO: Waiting for Pod statefulset-2021/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  Dec 19 10:14:48.711: INFO: Waiting for StatefulSet statefulset-2021/ss2 to complete update
  Dec 19 10:14:58.695: INFO: Deleting all statefulset in ns statefulset-2021
  Dec 19 10:14:58.702: INFO: Scaling statefulset ss2 to 0
  Dec 19 10:15:08.744: INFO: Waiting for statefulset status.replicas updated to 0
  Dec 19 10:15:08.752: INFO: Deleting statefulset ss2
  Dec 19 10:15:08.786: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2021" for this suite. @ 12/19/23 10:15:08.795
• [80.680 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 12/19/23 10:15:08.815
  Dec 19 10:15:08.815: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename projected @ 12/19/23 10:15:08.82
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:15:08.846
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:15:08.853
  STEP: Creating configMap with name configmap-projected-all-test-volume-4596e2bd-3dc8-42b2-a0e0-986172fe7fcd @ 12/19/23 10:15:08.859
  STEP: Creating secret with name secret-projected-all-test-volume-729fdefa-5f30-4b6f-8773-54d435ab4d72 @ 12/19/23 10:15:08.87
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 12/19/23 10:15:08.88
  STEP: Saw pod success @ 12/19/23 10:15:10.928
  Dec 19 10:15:10.935: INFO: Trying to get logs from node dah7vaemeeho-3 pod projected-volume-1528f47c-d555-448c-81d2-4b26239eb8ca container projected-all-volume-test: <nil>
  STEP: delete the pod @ 12/19/23 10:15:10.972
  Dec 19 10:15:11.001: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8379" for this suite. @ 12/19/23 10:15:11.011
• [2.211 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 12/19/23 10:15:11.029
  Dec 19 10:15:11.030: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename pods @ 12/19/23 10:15:11.033
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:15:11.067
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:15:11.073
  STEP: Create set of pods @ 12/19/23 10:15:11.082
  Dec 19 10:15:11.105: INFO: created test-pod-1
  Dec 19 10:15:11.116: INFO: created test-pod-2
  Dec 19 10:15:11.143: INFO: created test-pod-3
  STEP: waiting for all 3 pods to be running @ 12/19/23 10:15:11.143
  STEP: waiting for all pods to be deleted @ 12/19/23 10:15:13.234
  Dec 19 10:15:13.242: INFO: Pod quantity 3 is different from expected quantity 0
  Dec 19 10:15:14.243: INFO: Pod quantity 3 is different from expected quantity 0
  Dec 19 10:15:15.243: INFO: Pod quantity 1 is different from expected quantity 0
  Dec 19 10:15:16.242: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4192" for this suite. @ 12/19/23 10:15:16.254
• [5.248 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1053
  STEP: Creating a kubernetes client @ 12/19/23 10:15:16.277
  Dec 19 10:15:16.277: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename kubectl @ 12/19/23 10:15:16.28
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:15:16.313
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:15:16.32
  STEP: create deployment with httpd image @ 12/19/23 10:15:16.325
  Dec 19 10:15:16.326: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=kubectl-8714 create -f -'
  Dec 19 10:15:16.633: INFO: stderr: ""
  Dec 19 10:15:16.633: INFO: stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 12/19/23 10:15:16.633
  Dec 19 10:15:16.634: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=kubectl-8714 diff -f -'
  Dec 19 10:15:17.017: INFO: rc: 1
  Dec 19 10:15:17.018: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=kubectl-8714 delete -f -'
  Dec 19 10:15:17.332: INFO: stderr: ""
  Dec 19 10:15:17.332: INFO: stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  Dec 19 10:15:17.336: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8714" for this suite. @ 12/19/23 10:15:17.363
• [1.112 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/garbage_collector.go:380
  STEP: Creating a kubernetes client @ 12/19/23 10:15:17.39
  Dec 19 10:15:17.390: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename gc @ 12/19/23 10:15:17.395
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:15:17.431
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:15:17.437
  STEP: create the rc @ 12/19/23 10:15:17.46
  W1219 10:15:17.477149      14 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 12/19/23 10:15:23.494
  STEP: wait for the rc to be deleted @ 12/19/23 10:15:23.563
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 12/19/23 10:15:28.576
  STEP: Gathering metrics @ 12/19/23 10:15:58.626
  Dec 19 10:15:58.847: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Dec 19 10:15:58.854: INFO: Deleting pod "simpletest.rc-26nml" in namespace "gc-5251"
  Dec 19 10:15:58.882: INFO: Deleting pod "simpletest.rc-27sb9" in namespace "gc-5251"
  Dec 19 10:15:58.945: INFO: Deleting pod "simpletest.rc-2f2cj" in namespace "gc-5251"
  Dec 19 10:15:59.034: INFO: Deleting pod "simpletest.rc-2gl7z" in namespace "gc-5251"
  Dec 19 10:15:59.096: INFO: Deleting pod "simpletest.rc-2qpvj" in namespace "gc-5251"
  Dec 19 10:15:59.207: INFO: Deleting pod "simpletest.rc-46c7t" in namespace "gc-5251"
  Dec 19 10:15:59.296: INFO: Deleting pod "simpletest.rc-4tcmv" in namespace "gc-5251"
  Dec 19 10:15:59.477: INFO: Deleting pod "simpletest.rc-52x6c" in namespace "gc-5251"
  Dec 19 10:15:59.581: INFO: Deleting pod "simpletest.rc-57bf6" in namespace "gc-5251"
  Dec 19 10:15:59.648: INFO: Deleting pod "simpletest.rc-672l4" in namespace "gc-5251"
  Dec 19 10:15:59.710: INFO: Deleting pod "simpletest.rc-6cmfx" in namespace "gc-5251"
  Dec 19 10:15:59.780: INFO: Deleting pod "simpletest.rc-6vxnw" in namespace "gc-5251"
  Dec 19 10:15:59.864: INFO: Deleting pod "simpletest.rc-74p5s" in namespace "gc-5251"
  Dec 19 10:15:59.916: INFO: Deleting pod "simpletest.rc-7ghsj" in namespace "gc-5251"
  Dec 19 10:15:59.974: INFO: Deleting pod "simpletest.rc-7h64q" in namespace "gc-5251"
  Dec 19 10:16:00.045: INFO: Deleting pod "simpletest.rc-7qz44" in namespace "gc-5251"
  Dec 19 10:16:00.185: INFO: Deleting pod "simpletest.rc-85l6k" in namespace "gc-5251"
  Dec 19 10:16:00.231: INFO: Deleting pod "simpletest.rc-8dt79" in namespace "gc-5251"
  Dec 19 10:16:00.313: INFO: Deleting pod "simpletest.rc-8kzwp" in namespace "gc-5251"
  Dec 19 10:16:00.346: INFO: Deleting pod "simpletest.rc-97rd9" in namespace "gc-5251"
  Dec 19 10:16:00.452: INFO: Deleting pod "simpletest.rc-97rq5" in namespace "gc-5251"
  Dec 19 10:16:00.548: INFO: Deleting pod "simpletest.rc-9s5fc" in namespace "gc-5251"
  Dec 19 10:16:00.599: INFO: Deleting pod "simpletest.rc-c7nhh" in namespace "gc-5251"
  Dec 19 10:16:00.736: INFO: Deleting pod "simpletest.rc-cvcsp" in namespace "gc-5251"
  Dec 19 10:16:00.816: INFO: Deleting pod "simpletest.rc-ddtqd" in namespace "gc-5251"
  Dec 19 10:16:00.994: INFO: Deleting pod "simpletest.rc-djm27" in namespace "gc-5251"
  Dec 19 10:16:01.188: INFO: Deleting pod "simpletest.rc-ffvc6" in namespace "gc-5251"
  Dec 19 10:16:01.304: INFO: Deleting pod "simpletest.rc-fpjtc" in namespace "gc-5251"
  Dec 19 10:16:01.452: INFO: Deleting pod "simpletest.rc-frn62" in namespace "gc-5251"
  Dec 19 10:16:01.600: INFO: Deleting pod "simpletest.rc-fvchq" in namespace "gc-5251"
  Dec 19 10:16:01.759: INFO: Deleting pod "simpletest.rc-ggmlc" in namespace "gc-5251"
  Dec 19 10:16:01.835: INFO: Deleting pod "simpletest.rc-gjmhj" in namespace "gc-5251"
  Dec 19 10:16:01.892: INFO: Deleting pod "simpletest.rc-glgvk" in namespace "gc-5251"
  Dec 19 10:16:01.973: INFO: Deleting pod "simpletest.rc-hs2bm" in namespace "gc-5251"
  Dec 19 10:16:02.064: INFO: Deleting pod "simpletest.rc-hslw5" in namespace "gc-5251"
  Dec 19 10:16:02.170: INFO: Deleting pod "simpletest.rc-htr2l" in namespace "gc-5251"
  Dec 19 10:16:02.290: INFO: Deleting pod "simpletest.rc-j2svn" in namespace "gc-5251"
  Dec 19 10:16:02.376: INFO: Deleting pod "simpletest.rc-jfzrg" in namespace "gc-5251"
  Dec 19 10:16:02.457: INFO: Deleting pod "simpletest.rc-jkhxz" in namespace "gc-5251"
  Dec 19 10:16:02.517: INFO: Deleting pod "simpletest.rc-jqpj5" in namespace "gc-5251"
  Dec 19 10:16:02.618: INFO: Deleting pod "simpletest.rc-kc4vf" in namespace "gc-5251"
  Dec 19 10:16:02.780: INFO: Deleting pod "simpletest.rc-kj9ps" in namespace "gc-5251"
  Dec 19 10:16:02.905: INFO: Deleting pod "simpletest.rc-l5v45" in namespace "gc-5251"
  Dec 19 10:16:03.058: INFO: Deleting pod "simpletest.rc-lc4tk" in namespace "gc-5251"
  Dec 19 10:16:03.189: INFO: Deleting pod "simpletest.rc-lhs5k" in namespace "gc-5251"
  Dec 19 10:16:03.285: INFO: Deleting pod "simpletest.rc-lj62g" in namespace "gc-5251"
  Dec 19 10:16:03.407: INFO: Deleting pod "simpletest.rc-ln8q4" in namespace "gc-5251"
  Dec 19 10:16:03.484: INFO: Deleting pod "simpletest.rc-lts6v" in namespace "gc-5251"
  Dec 19 10:16:03.623: INFO: Deleting pod "simpletest.rc-lvgtw" in namespace "gc-5251"
  Dec 19 10:16:03.697: INFO: Deleting pod "simpletest.rc-lxd7d" in namespace "gc-5251"
  Dec 19 10:16:03.757: INFO: Deleting pod "simpletest.rc-m26v4" in namespace "gc-5251"
  Dec 19 10:16:03.825: INFO: Deleting pod "simpletest.rc-m7d8p" in namespace "gc-5251"
  Dec 19 10:16:03.868: INFO: Deleting pod "simpletest.rc-m8h7k" in namespace "gc-5251"
  Dec 19 10:16:03.988: INFO: Deleting pod "simpletest.rc-mff8q" in namespace "gc-5251"
  Dec 19 10:16:04.130: INFO: Deleting pod "simpletest.rc-mxjtq" in namespace "gc-5251"
  Dec 19 10:16:04.233: INFO: Deleting pod "simpletest.rc-nck6m" in namespace "gc-5251"
  Dec 19 10:16:04.285: INFO: Deleting pod "simpletest.rc-nlvmg" in namespace "gc-5251"
  Dec 19 10:16:04.433: INFO: Deleting pod "simpletest.rc-nrskc" in namespace "gc-5251"
  Dec 19 10:16:04.496: INFO: Deleting pod "simpletest.rc-ntvcl" in namespace "gc-5251"
  Dec 19 10:16:04.611: INFO: Deleting pod "simpletest.rc-pbnnx" in namespace "gc-5251"
  Dec 19 10:16:04.746: INFO: Deleting pod "simpletest.rc-pgxbg" in namespace "gc-5251"
  Dec 19 10:16:04.909: INFO: Deleting pod "simpletest.rc-pmspw" in namespace "gc-5251"
  Dec 19 10:16:05.125: INFO: Deleting pod "simpletest.rc-pqj8v" in namespace "gc-5251"
  Dec 19 10:16:05.576: INFO: Deleting pod "simpletest.rc-qbw9d" in namespace "gc-5251"
  Dec 19 10:16:05.672: INFO: Deleting pod "simpletest.rc-qnc8k" in namespace "gc-5251"
  Dec 19 10:16:05.751: INFO: Deleting pod "simpletest.rc-qpjfb" in namespace "gc-5251"
  Dec 19 10:16:05.815: INFO: Deleting pod "simpletest.rc-qx46w" in namespace "gc-5251"
  Dec 19 10:16:05.884: INFO: Deleting pod "simpletest.rc-qzzwq" in namespace "gc-5251"
  Dec 19 10:16:06.005: INFO: Deleting pod "simpletest.rc-r9bmz" in namespace "gc-5251"
  Dec 19 10:16:06.083: INFO: Deleting pod "simpletest.rc-rbl72" in namespace "gc-5251"
  Dec 19 10:16:06.170: INFO: Deleting pod "simpletest.rc-rcjtn" in namespace "gc-5251"
  Dec 19 10:16:06.379: INFO: Deleting pod "simpletest.rc-rg5xr" in namespace "gc-5251"
  Dec 19 10:16:06.552: INFO: Deleting pod "simpletest.rc-rjlzc" in namespace "gc-5251"
  Dec 19 10:16:06.633: INFO: Deleting pod "simpletest.rc-rjw7p" in namespace "gc-5251"
  Dec 19 10:16:06.804: INFO: Deleting pod "simpletest.rc-rnttk" in namespace "gc-5251"
  Dec 19 10:16:06.955: INFO: Deleting pod "simpletest.rc-rrmdt" in namespace "gc-5251"
  Dec 19 10:16:07.139: INFO: Deleting pod "simpletest.rc-rz2nx" in namespace "gc-5251"
  Dec 19 10:16:07.268: INFO: Deleting pod "simpletest.rc-s2qcm" in namespace "gc-5251"
  Dec 19 10:16:07.394: INFO: Deleting pod "simpletest.rc-s4tjb" in namespace "gc-5251"
  Dec 19 10:16:07.527: INFO: Deleting pod "simpletest.rc-s54tb" in namespace "gc-5251"
  Dec 19 10:16:07.685: INFO: Deleting pod "simpletest.rc-s5k2k" in namespace "gc-5251"
  Dec 19 10:16:07.737: INFO: Deleting pod "simpletest.rc-s5vb5" in namespace "gc-5251"
  Dec 19 10:16:07.810: INFO: Deleting pod "simpletest.rc-scrlp" in namespace "gc-5251"
  Dec 19 10:16:07.878: INFO: Deleting pod "simpletest.rc-t27tj" in namespace "gc-5251"
  Dec 19 10:16:07.938: INFO: Deleting pod "simpletest.rc-tl9nq" in namespace "gc-5251"
  Dec 19 10:16:08.052: INFO: Deleting pod "simpletest.rc-tvrxs" in namespace "gc-5251"
  Dec 19 10:16:08.137: INFO: Deleting pod "simpletest.rc-vjqqz" in namespace "gc-5251"
  Dec 19 10:16:08.224: INFO: Deleting pod "simpletest.rc-vl62p" in namespace "gc-5251"
  Dec 19 10:16:08.313: INFO: Deleting pod "simpletest.rc-vptjc" in namespace "gc-5251"
  Dec 19 10:16:08.419: INFO: Deleting pod "simpletest.rc-vw495" in namespace "gc-5251"
  Dec 19 10:16:08.518: INFO: Deleting pod "simpletest.rc-vwp9p" in namespace "gc-5251"
  Dec 19 10:16:08.566: INFO: Deleting pod "simpletest.rc-vxgsz" in namespace "gc-5251"
  Dec 19 10:16:08.668: INFO: Deleting pod "simpletest.rc-wdssc" in namespace "gc-5251"
  Dec 19 10:16:08.783: INFO: Deleting pod "simpletest.rc-wmxvd" in namespace "gc-5251"
  Dec 19 10:16:08.953: INFO: Deleting pod "simpletest.rc-xj72d" in namespace "gc-5251"
  Dec 19 10:16:09.270: INFO: Deleting pod "simpletest.rc-xk9tj" in namespace "gc-5251"
  Dec 19 10:16:09.455: INFO: Deleting pod "simpletest.rc-xqkkd" in namespace "gc-5251"
  Dec 19 10:16:09.592: INFO: Deleting pod "simpletest.rc-z8n54" in namespace "gc-5251"
  Dec 19 10:16:09.669: INFO: Deleting pod "simpletest.rc-z9t2t" in namespace "gc-5251"
  Dec 19 10:16:09.741: INFO: Deleting pod "simpletest.rc-zh6lt" in namespace "gc-5251"
  Dec 19 10:16:09.839: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-5251" for this suite. @ 12/19/23 10:16:09.889
• [52.580 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
test/e2e/apps/replica_set.go:112
  STEP: Creating a kubernetes client @ 12/19/23 10:16:09.973
  Dec 19 10:16:09.974: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename replicaset @ 12/19/23 10:16:09.978
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:16:10.093
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:16:10.102
  Dec 19 10:16:10.114: INFO: Creating ReplicaSet my-hostname-basic-c386ec47-7873-4908-bc86-2232fb700109
  Dec 19 10:16:10.269: INFO: Pod name my-hostname-basic-c386ec47-7873-4908-bc86-2232fb700109: Found 1 pods out of 1
  Dec 19 10:16:10.269: INFO: Ensuring a pod for ReplicaSet "my-hostname-basic-c386ec47-7873-4908-bc86-2232fb700109" is running
  Dec 19 10:16:12.329: INFO: Pod "my-hostname-basic-c386ec47-7873-4908-bc86-2232fb700109-n2qnk" is running (conditions: [])
  Dec 19 10:16:12.330: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 12/19/23 10:16:12.331
  Dec 19 10:16:12.370: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-8529" for this suite. @ 12/19/23 10:16:12.387
• [2.435 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 12/19/23 10:16:12.411
  Dec 19 10:16:12.412: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename watch @ 12/19/23 10:16:12.416
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:16:12.496
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:16:12.527
  STEP: creating a watch on configmaps @ 12/19/23 10:16:12.542
  STEP: creating a new configmap @ 12/19/23 10:16:12.548
  STEP: modifying the configmap once @ 12/19/23 10:16:12.566
  STEP: closing the watch once it receives two notifications @ 12/19/23 10:16:12.588
  Dec 19 10:16:12.588: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3895  800cca07-72ac-41fb-ac12-0c43f9dd023d 11454 0 2023-12-19 10:16:12 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-12-19 10:16:12 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Dec 19 10:16:12.589: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3895  800cca07-72ac-41fb-ac12-0c43f9dd023d 11455 0 2023-12-19 10:16:12 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-12-19 10:16:12 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 12/19/23 10:16:12.59
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 12/19/23 10:16:12.622
  STEP: deleting the configmap @ 12/19/23 10:16:12.626
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 12/19/23 10:16:12.663
  Dec 19 10:16:12.663: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3895  800cca07-72ac-41fb-ac12-0c43f9dd023d 11456 0 2023-12-19 10:16:12 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-12-19 10:16:12 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Dec 19 10:16:12.663: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3895  800cca07-72ac-41fb-ac12-0c43f9dd023d 11457 0 2023-12-19 10:16:12 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-12-19 10:16:12 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Dec 19 10:16:12.664: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-3895" for this suite. @ 12/19/23 10:16:12.682
• [0.347 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 12/19/23 10:16:12.769
  Dec 19 10:16:12.769: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename projected @ 12/19/23 10:16:12.771
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:16:12.874
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:16:12.903
  STEP: Creating projection with secret that has name projected-secret-test-map-14935f70-4349-4ca6-a742-8ba1f77f12a0 @ 12/19/23 10:16:12.914
  STEP: Creating a pod to test consume secrets @ 12/19/23 10:16:12.955
  STEP: Saw pod success @ 12/19/23 10:16:17.247
  Dec 19 10:16:17.258: INFO: Trying to get logs from node dah7vaemeeho-3 pod pod-projected-secrets-e4fb8c8f-975e-4c45-88b1-3b9a330e3aa2 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 12/19/23 10:16:17.293
  Dec 19 10:16:17.350: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2076" for this suite. @ 12/19/23 10:16:17.373
• [4.628 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 12/19/23 10:16:17.399
  Dec 19 10:16:17.399: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename secrets @ 12/19/23 10:16:17.403
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:16:17.468
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:16:17.484
  STEP: Creating secret with name secret-test-83ab14de-4369-4966-b984-08bf20464edc @ 12/19/23 10:16:17.497
  STEP: Creating a pod to test consume secrets @ 12/19/23 10:16:17.507
  STEP: Saw pod success @ 12/19/23 10:16:21.612
  Dec 19 10:16:21.617: INFO: Trying to get logs from node dah7vaemeeho-3 pod pod-secrets-5677e936-0f7f-41cb-a2c1-16a1c13e6a29 container secret-volume-test: <nil>
  STEP: delete the pod @ 12/19/23 10:16:21.638
  Dec 19 10:16:21.685: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4465" for this suite. @ 12/19/23 10:16:21.695
• [4.315 seconds]
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 12/19/23 10:16:21.715
  Dec 19 10:16:21.716: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename deployment @ 12/19/23 10:16:21.722
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:16:21.759
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:16:21.766
  Dec 19 10:16:21.773: INFO: Creating deployment "webserver-deployment"
  Dec 19 10:16:21.787: INFO: Waiting for observed generation 1
  Dec 19 10:16:23.817: INFO: Waiting for all required pods to come up
  Dec 19 10:16:23.848: INFO: Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 12/19/23 10:16:23.848
  Dec 19 10:16:25.935: INFO: Waiting for deployment "webserver-deployment" to complete
  Dec 19 10:16:25.958: INFO: Updating deployment "webserver-deployment" with a non-existent image
  Dec 19 10:16:26.008: INFO: Updating deployment webserver-deployment
  Dec 19 10:16:26.008: INFO: Waiting for observed generation 2
  Dec 19 10:16:28.033: INFO: Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  Dec 19 10:16:28.040: INFO: Waiting for the first rollout's replicaset to have .spec.replicas = 8
  Dec 19 10:16:28.047: INFO: Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  Dec 19 10:16:28.076: INFO: Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  Dec 19 10:16:28.076: INFO: Waiting for the second rollout's replicaset to have .spec.replicas = 5
  Dec 19 10:16:28.082: INFO: Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  Dec 19 10:16:28.106: INFO: Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  Dec 19 10:16:28.107: INFO: Scaling up the deployment "webserver-deployment" from 10 to 30
  Dec 19 10:16:28.136: INFO: Updating deployment webserver-deployment
  Dec 19 10:16:28.137: INFO: Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  Dec 19 10:16:28.183: INFO: Verifying that first rollout's replicaset has .spec.replicas = 20
  Dec 19 10:16:28.218: INFO: Verifying that second rollout's replicaset has .spec.replicas = 13
  Dec 19 10:16:28.246: INFO: Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8981",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "10a75e77-31bb-4ffa-bd09-c38032c92789",
      ResourceVersion: (string) (len=5) "12340",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838577781,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577786,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577788,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 13,
      UpdatedReplicas: (int32) 5,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      UnavailableReplicas: (int32) 5,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577785,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577785,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577786,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577781,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=59) "ReplicaSet \"webserver-deployment-9b4f5bf69\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Dec 19 10:16:28.366: INFO: New ReplicaSet "webserver-deployment-9b4f5bf69" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8981",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1806fc93-9365-4b4a-99f6-86eb7a5acf1b",
      ResourceVersion: (string) (len=5) "12344",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838577786,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "10a75e77-31bb-4ffa-bd09-c38032c92789",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577786,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577788,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 31 30 61 37 35 65  37 37 2d 33 31 62 62 2d  |\"10a75e77-31bb-|
              00000120  34 66 66 61 2d 62 64 30  39 2d 63 33 38 30 33 32  |4ffa-bd09-c38032|
              00000130  63 39 32 37 38 39 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |c92789\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 5,
      FullyLabeledReplicas: (int32) 5,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Dec 19 10:16:28.368: INFO: All old ReplicaSets of Deployment "webserver-deployment":
  Dec 19 10:16:28.369: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8981",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "33ac063a-70b5-483b-9d86-86963992bbb3",
      ResourceVersion: (string) (len=5) "12341",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838577781,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "10a75e77-31bb-4ffa-bd09-c38032c92789",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577786,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577788,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 31 30 61 37 35 65  37 37 2d 33 31 62 62 2d  |\"10a75e77-31bb-|
              00000120  34 66 66 61 2d 62 64 30  39 2d 63 33 38 30 33 32  |4ffa-bd09-c38032|
              00000130  63 39 32 37 38 39 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |c92789\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 8,
      FullyLabeledReplicas: (int32) 8,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Dec 19 10:16:28.468: INFO: Pod "webserver-deployment-557759b7c7-6dgrk" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-6dgrk",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-8981",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "52d0636b-64d4-4b4f-914d-9222ecf34bef",
      ResourceVersion: (string) (len=5) "12156",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838577782,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "33ac063a-70b5-483b-9d86-86963992bbb3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577782,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 33  61 63 30 36 33 61 2d 37  |d\":\"33ac063a-7|
              00000090  30 62 35 2d 34 38 33 62  2d 39 64 38 36 2d 38 36  |0b5-483b-9d86-86|
              000000a0  39 36 33 39 39 32 62 62  62 33 5c 22 7d 22 3a 7b  |963992bbb3\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577785,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 34 2e  35 35 5c 22 7d 22 3a 7b  |.233.64.55\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6mnlp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6mnlp",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "dah7vaemeeho-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577785,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577782,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577785,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577785,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577782,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.226",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.226"
        }
      },
      PodIP: (string) (len=12) "10.233.64.55",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.64.55"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838577782,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63838577785,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=64) "987dae5a853a43c663ab2f902708e65874bd2c0189aa0bc57d81ffb57187d089",
          ContainerID: (string) (len=72) "cri-o://93aa238ea53857be8a87b7cfb2798d2c0966fca1d6ff84323d37d9684438861c",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 19 10:16:28.504: INFO: Pod "webserver-deployment-557759b7c7-8dcfx" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-8dcfx",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-8981",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3c66aeca-521e-42ad-9520-1518762b6f09",
      ResourceVersion: (string) (len=5) "12108",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838577781,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "33ac063a-70b5-483b-9d86-86963992bbb3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577781,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 33  61 63 30 36 33 61 2d 37  |d\":\"33ac063a-7|
              00000090  30 62 35 2d 34 38 33 62  2d 39 64 38 36 2d 38 36  |0b5-483b-9d86-86|
              000000a0  39 36 33 39 39 32 62 62  62 33 5c 22 7d 22 3a 7b  |963992bbb3\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577784,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 36 2e  31 30 33 5c 22 7d 22 3a  |.233.66.103\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ml75g",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ml75g",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "dah7vaemeeho-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577784,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577781,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577784,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577784,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577781,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.250",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.250"
        }
      },
      PodIP: (string) (len=13) "10.233.66.103",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.66.103"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838577781,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63838577783,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=64) "987dae5a853a43c663ab2f902708e65874bd2c0189aa0bc57d81ffb57187d089",
          ContainerID: (string) (len=72) "cri-o://ead01b0e1fc25c69910c3829392acbf5044138e8c02b7079bf673aa9bd0cb5ff",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 19 10:16:28.513: INFO: Pod "webserver-deployment-557759b7c7-95k8v" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-95k8v",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-8981",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "01e113f4-6597-4b2b-a460-b6290db23e64",
      ResourceVersion: (string) (len=5) "12149",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838577781,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "33ac063a-70b5-483b-9d86-86963992bbb3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577781,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 33  61 63 30 36 33 61 2d 37  |d\":\"33ac063a-7|
              00000090  30 62 35 2d 34 38 33 62  2d 39 64 38 36 2d 38 36  |0b5-483b-9d86-86|
              000000a0  39 36 33 39 39 32 62 62  62 33 5c 22 7d 22 3a 7b  |963992bbb3\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577785,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 34 2e  35 33 5c 22 7d 22 3a 7b  |.233.64.53\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jb5g6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jb5g6",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "dah7vaemeeho-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577785,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577782,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577785,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577785,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577781,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.226",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.226"
        }
      },
      PodIP: (string) (len=12) "10.233.64.53",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.64.53"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838577782,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63838577784,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=64) "987dae5a853a43c663ab2f902708e65874bd2c0189aa0bc57d81ffb57187d089",
          ContainerID: (string) (len=72) "cri-o://4b1298f07b45a9df6df1ac85caf629ed12bb4944ebeedc073b50303a36d44824",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 19 10:16:28.526: INFO: Pod "webserver-deployment-557759b7c7-cw8zd" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-cw8zd",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-8981",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b920af55-8ea3-4169-b421-289d70ea5e68",
      ResourceVersion: (string) (len=5) "12088",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838577781,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "33ac063a-70b5-483b-9d86-86963992bbb3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577781,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 33  61 63 30 36 33 61 2d 37  |d\":\"33ac063a-7|
              00000090  30 62 35 2d 34 38 33 62  2d 39 64 38 36 2d 38 36  |0b5-483b-9d86-86|
              000000a0  39 36 33 39 39 32 62 62  62 33 5c 22 7d 22 3a 7b  |963992bbb3\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577783,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 35 2e  34 34 5c 22 7d 22 3a 7b  |.233.65.44\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mvzpj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mvzpj",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "dah7vaemeeho-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577783,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577781,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577783,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577783,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577781,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.147",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.147"
        }
      },
      PodIP: (string) (len=12) "10.233.65.44",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.65.44"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838577781,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63838577783,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=64) "987dae5a853a43c663ab2f902708e65874bd2c0189aa0bc57d81ffb57187d089",
          ContainerID: (string) (len=72) "cri-o://10d2ed17b5ff341121bbf497ad6d45f03d00b4d015111feae75f7d32a4070920",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 19 10:16:28.548: INFO: Pod "webserver-deployment-557759b7c7-f7cpf" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-f7cpf",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-8981",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8df9f1dc-44d2-4622-ac78-b49e4948f132",
      ResourceVersion: (string) (len=5) "12349",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838577788,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "33ac063a-70b5-483b-9d86-86963992bbb3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577788,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 33  61 63 30 36 33 61 2d 37  |d\":\"33ac063a-7|
              00000090  30 62 35 2d 34 38 33 62  2d 39 64 38 36 2d 38 36  |0b5-483b-9d86-86|
              000000a0  39 36 33 39 39 32 62 62  62 33 5c 22 7d 22 3a 7b  |963992bbb3\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gvzkk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gvzkk",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 19 10:16:28.559: INFO: Pod "webserver-deployment-557759b7c7-fl96x" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-fl96x",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-8981",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "409bab3c-2f41-4b31-9ec8-cacef7ef11da",
      ResourceVersion: (string) (len=5) "12353",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838577788,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "33ac063a-70b5-483b-9d86-86963992bbb3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577788,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 33  61 63 30 36 33 61 2d 37  |d\":\"33ac063a-7|
              00000090  30 62 35 2d 34 38 33 62  2d 39 64 38 36 2d 38 36  |0b5-483b-9d86-86|
              000000a0  39 36 33 39 39 32 62 62  62 33 5c 22 7d 22 3a 7b  |963992bbb3\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-h7tzs",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-h7tzs",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 19 10:16:28.564: INFO: Pod "webserver-deployment-557759b7c7-gdcqv" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-gdcqv",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-8981",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4d7ef6f6-aa93-4436-911b-ecabc23b6950",
      ResourceVersion: (string) (len=5) "12084",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838577781,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "33ac063a-70b5-483b-9d86-86963992bbb3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577781,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 33  61 63 30 36 33 61 2d 37  |d\":\"33ac063a-7|
              00000090  30 62 35 2d 34 38 33 62  2d 39 64 38 36 2d 38 36  |0b5-483b-9d86-86|
              000000a0  39 36 33 39 39 32 62 62  62 33 5c 22 7d 22 3a 7b  |963992bbb3\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577783,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 35 2e  34 35 5c 22 7d 22 3a 7b  |.233.65.45\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4vs2h",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4vs2h",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "dah7vaemeeho-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577783,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577781,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577783,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577783,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577781,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.147",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.147"
        }
      },
      PodIP: (string) (len=12) "10.233.65.45",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.65.45"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838577781,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63838577783,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=64) "987dae5a853a43c663ab2f902708e65874bd2c0189aa0bc57d81ffb57187d089",
          ContainerID: (string) (len=72) "cri-o://37e19ca3275e1390737920ef77afa0780307e3bd5045127fcb5aa5885f1de4f3",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 19 10:16:28.584: INFO: Pod "webserver-deployment-557759b7c7-gg92z" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-gg92z",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-8981",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "241b57a8-117d-4cf9-89bf-c30f03a4ce32",
      ResourceVersion: (string) (len=5) "12348",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838577788,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "33ac063a-70b5-483b-9d86-86963992bbb3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577788,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 33  61 63 30 36 33 61 2d 37  |d\":\"33ac063a-7|
              00000090  30 62 35 2d 34 38 33 62  2d 39 64 38 36 2d 38 36  |0b5-483b-9d86-86|
              000000a0  39 36 33 39 39 32 62 62  62 33 5c 22 7d 22 3a 7b  |963992bbb3\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577788,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ln6s8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ln6s8",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "dah7vaemeeho-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577788,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577788,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577788,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577788,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577788,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.250",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.250"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838577788,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 19 10:16:28.604: INFO: Pod "webserver-deployment-557759b7c7-m6bst" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-m6bst",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-8981",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ed6353d6-2d8c-4189-bb5f-a73448a0d7ef",
      ResourceVersion: (string) (len=5) "12078",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838577781,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "33ac063a-70b5-483b-9d86-86963992bbb3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577781,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 33  61 63 30 36 33 61 2d 37  |d\":\"33ac063a-7|
              00000090  30 62 35 2d 34 38 33 62  2d 39 64 38 36 2d 38 36  |0b5-483b-9d86-86|
              000000a0  39 36 33 39 39 32 62 62  62 33 5c 22 7d 22 3a 7b  |963992bbb3\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577783,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 35 2e  34 36 5c 22 7d 22 3a 7b  |.233.65.46\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-c6htr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-c6htr",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "dah7vaemeeho-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577783,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577782,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577783,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577783,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577782,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.147",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.147"
        }
      },
      PodIP: (string) (len=12) "10.233.65.46",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.65.46"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838577782,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63838577783,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=64) "987dae5a853a43c663ab2f902708e65874bd2c0189aa0bc57d81ffb57187d089",
          ContainerID: (string) (len=72) "cri-o://20d7ad50e82c584d7b464374a66fcda517aee8084b7f823ce355f98afbd23faf",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 19 10:16:28.612: INFO: Pod "webserver-deployment-557759b7c7-r4x5d" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-r4x5d",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-8981",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7cbf07d2-2439-4b4e-a1b9-868a97b54061",
      ResourceVersion: (string) (len=5) "12112",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838577781,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "33ac063a-70b5-483b-9d86-86963992bbb3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577781,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 33  61 63 30 36 33 61 2d 37  |d\":\"33ac063a-7|
              00000090  30 62 35 2d 34 38 33 62  2d 39 64 38 36 2d 38 36  |0b5-483b-9d86-86|
              000000a0  39 36 33 39 39 32 62 62  62 33 5c 22 7d 22 3a 7b  |963992bbb3\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577784,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 36 2e  31 30 34 5c 22 7d 22 3a  |.233.66.104\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-476dn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-476dn",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "dah7vaemeeho-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577784,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577781,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577784,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577784,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577781,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.250",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.250"
        }
      },
      PodIP: (string) (len=13) "10.233.66.104",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.66.104"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838577781,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63838577783,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=64) "987dae5a853a43c663ab2f902708e65874bd2c0189aa0bc57d81ffb57187d089",
          ContainerID: (string) (len=72) "cri-o://b2d530586a877b99eb3abf22afa1cd2443dda435a42d8d5ade3f3300d99564dc",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 19 10:16:28.631: INFO: Pod "webserver-deployment-557759b7c7-vdzsn" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-vdzsn",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-8981",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "511d4428-a765-45ba-a96d-3c13015cd8ef",
      ResourceVersion: (string) (len=5) "12146",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838577781,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "33ac063a-70b5-483b-9d86-86963992bbb3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577781,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 33  61 63 30 36 33 61 2d 37  |d\":\"33ac063a-7|
              00000090  30 62 35 2d 34 38 33 62  2d 39 64 38 36 2d 38 36  |0b5-483b-9d86-86|
              000000a0  39 36 33 39 39 32 62 62  62 33 5c 22 7d 22 3a 7b  |963992bbb3\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577785,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 34 2e  35 34 5c 22 7d 22 3a 7b  |.233.64.54\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-sglzq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-sglzq",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "dah7vaemeeho-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577785,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577782,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577785,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577785,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577781,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.226",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.226"
        }
      },
      PodIP: (string) (len=12) "10.233.64.54",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.64.54"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838577782,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63838577784,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=64) "987dae5a853a43c663ab2f902708e65874bd2c0189aa0bc57d81ffb57187d089",
          ContainerID: (string) (len=72) "cri-o://02e2ae6fef447fa38a937ff7ca60268400e871563263b30dd314461cde05513d",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 19 10:16:28.647: INFO: Pod "webserver-deployment-9b4f5bf69-24lnm" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-24lnm",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-8981",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "90355185-6fac-407a-bf46-e94e82462d54",
      ResourceVersion: (string) (len=5) "12355",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838577788,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "1806fc93-9365-4b4a-99f6-86eb7a5acf1b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577788,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 38  30 36 66 63 39 33 2d 39  |d\":\"1806fc93-9|
              00000090  33 36 35 2d 34 62 34 61  2d 39 39 66 36 2d 38 36  |365-4b4a-99f6-86|
              000000a0  65 62 37 61 35 61 63 66  31 62 5c 22 7d 22 3a 7b  |eb7a5acf1b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qhdrc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qhdrc",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 19 10:16:28.655: INFO: Pod "webserver-deployment-9b4f5bf69-jgfmx" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-jgfmx",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-8981",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a103860d-2e90-4e06-b229-80b39561b3e1",
      ResourceVersion: (string) (len=5) "12241",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838577786,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "1806fc93-9365-4b4a-99f6-86eb7a5acf1b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577786,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 38  30 36 66 63 39 33 2d 39  |d\":\"1806fc93-9|
              00000090  33 36 35 2d 34 62 34 61  2d 39 39 66 36 2d 38 36  |365-4b4a-99f6-86|
              000000a0  65 62 37 61 35 61 63 66  31 62 5c 22 7d 22 3a 7b  |eb7a5acf1b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577786,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jvqn2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jvqn2",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "dah7vaemeeho-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577786,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577786,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577786,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577786,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577786,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.226",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.226"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838577786,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 19 10:16:28.666: INFO: Pod "webserver-deployment-9b4f5bf69-lqgf4" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-lqgf4",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-8981",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b7558b9c-5a44-4732-adb1-e73be862336e",
      ResourceVersion: (string) (len=5) "12261",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838577786,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "1806fc93-9365-4b4a-99f6-86eb7a5acf1b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577786,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 38  30 36 66 63 39 33 2d 39  |d\":\"1806fc93-9|
              00000090  33 36 35 2d 34 62 34 61  2d 39 39 66 36 2d 38 36  |365-4b4a-99f6-86|
              000000a0  65 62 37 61 35 61 63 66  31 62 5c 22 7d 22 3a 7b  |eb7a5acf1b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577786,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vxkrq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vxkrq",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "dah7vaemeeho-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577786,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577786,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577786,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577786,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577786,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.147",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.147"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838577786,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 19 10:16:28.680: INFO: Pod "webserver-deployment-9b4f5bf69-pj9mc" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-pj9mc",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-8981",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1a05f334-3e70-463b-8efc-c71fc4567ee2",
      ResourceVersion: (string) (len=5) "12226",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838577786,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "1806fc93-9365-4b4a-99f6-86eb7a5acf1b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577786,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 38  30 36 66 63 39 33 2d 39  |d\":\"1806fc93-9|
              00000090  33 36 35 2d 34 62 34 61  2d 39 39 66 36 2d 38 36  |365-4b4a-99f6-86|
              000000a0  65 62 37 61 35 61 63 66  31 62 5c 22 7d 22 3a 7b  |eb7a5acf1b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577786,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vfsmk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vfsmk",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "dah7vaemeeho-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577786,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577786,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577786,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577786,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577786,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.147",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.147"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838577786,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 19 10:16:28.695: INFO: Pod "webserver-deployment-9b4f5bf69-pwh2k" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-pwh2k",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-8981",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d837e6e8-fe6c-47cf-9be4-3411a25226b0",
      ResourceVersion: (string) (len=5) "12354",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838577788,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "1806fc93-9365-4b4a-99f6-86eb7a5acf1b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577788,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 38  30 36 66 63 39 33 2d 39  |d\":\"1806fc93-9|
              00000090  33 36 35 2d 34 62 34 61  2d 39 39 66 36 2d 38 36  |365-4b4a-99f6-86|
              000000a0  65 62 37 61 35 61 63 66  31 62 5c 22 7d 22 3a 7b  |eb7a5acf1b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9sdvq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9sdvq",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "dah7vaemeeho-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577788,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 19 10:16:28.700: INFO: Pod "webserver-deployment-9b4f5bf69-xz79p" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-xz79p",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-8981",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c0914765-4e58-4759-be06-44adf1723da7",
      ResourceVersion: (string) (len=5) "12259",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838577786,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "1806fc93-9365-4b4a-99f6-86eb7a5acf1b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577786,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 38  30 36 66 63 39 33 2d 39  |d\":\"1806fc93-9|
              00000090  33 36 35 2d 34 62 34 61  2d 39 39 66 36 2d 38 36  |365-4b4a-99f6-86|
              000000a0  65 62 37 61 35 61 63 66  31 62 5c 22 7d 22 3a 7b  |eb7a5acf1b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577786,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ffgx4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ffgx4",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "dah7vaemeeho-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577786,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577786,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577786,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577786,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577786,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.250",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.250"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838577786,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 19 10:16:28.716: INFO: Pod "webserver-deployment-9b4f5bf69-z6hm9" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-z6hm9",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-8981",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "59c317bc-9529-4ec1-9070-4c6d45dff087",
      ResourceVersion: (string) (len=5) "12214",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838577786,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "1806fc93-9365-4b4a-99f6-86eb7a5acf1b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577786,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 38  30 36 66 63 39 33 2d 39  |d\":\"1806fc93-9|
              00000090  33 36 35 2d 34 62 34 61  2d 39 39 66 36 2d 38 36  |365-4b4a-99f6-86|
              000000a0  65 62 37 61 35 61 63 66  31 62 5c 22 7d 22 3a 7b  |eb7a5acf1b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577786,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gjpdp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gjpdp",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "dah7vaemeeho-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577786,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577786,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577786,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577786,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838577786,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.250",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.250"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838577786,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 19 10:16:28.731: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-8981" for this suite. @ 12/19/23 10:16:28.957
• [7.681 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
test/e2e/network/ingressclass.go:268
  STEP: Creating a kubernetes client @ 12/19/23 10:16:29.399
  Dec 19 10:16:29.399: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename ingressclass @ 12/19/23 10:16:29.41
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:16:29.595
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:16:29.611
  STEP: getting /apis @ 12/19/23 10:16:29.623
  STEP: getting /apis/networking.k8s.io @ 12/19/23 10:16:29.636
  STEP: getting /apis/networking.k8s.iov1 @ 12/19/23 10:16:29.639
  STEP: creating @ 12/19/23 10:16:29.642
  STEP: getting @ 12/19/23 10:16:29.92
  STEP: listing @ 12/19/23 10:16:29.946
  STEP: watching @ 12/19/23 10:16:29.992
  Dec 19 10:16:29.992: INFO: starting watch
  STEP: patching @ 12/19/23 10:16:29.995
  STEP: updating @ 12/19/23 10:16:30.011
  Dec 19 10:16:30.031: INFO: waiting for watch events with expected annotations
  Dec 19 10:16:30.031: INFO: saw patched and updated annotations
  STEP: deleting @ 12/19/23 10:16:30.032
  STEP: deleting a collection @ 12/19/23 10:16:30.187
  Dec 19 10:16:30.507: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-5187" for this suite. @ 12/19/23 10:16:30.522
• [1.236 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:332
  STEP: Creating a kubernetes client @ 12/19/23 10:16:30.636
  Dec 19 10:16:30.636: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename webhook @ 12/19/23 10:16:30.657
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:16:30.783
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:16:30.794
  STEP: Setting up server cert @ 12/19/23 10:16:31.037
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/19/23 10:16:32.609
  STEP: Deploying the webhook pod @ 12/19/23 10:16:32.627
  STEP: Wait for the deployment to be ready @ 12/19/23 10:16:32.657
  Dec 19 10:16:32.676: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/19/23 10:16:34.75
  STEP: Verifying the service has paired with the endpoint @ 12/19/23 10:16:34.848
  Dec 19 10:16:35.853: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Dec 19 10:16:35.929: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-4982-crds.webhook.example.com via the AdmissionRegistration API @ 12/19/23 10:16:36.491
  Dec 19 10:16:36.680: INFO: Waiting for webhook configuration to be ready...
  STEP: Creating a custom resource that should be mutated by the webhook @ 12/19/23 10:16:36.843
  Dec 19 10:16:40.170: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9009" for this suite. @ 12/19/23 10:16:40.183
  STEP: Destroying namespace "webhook-markers-2883" for this suite. @ 12/19/23 10:16:40.198
• [9.575 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
test/e2e/common/node/podtemplates.go:54
  STEP: Creating a kubernetes client @ 12/19/23 10:16:40.214
  Dec 19 10:16:40.214: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename podtemplate @ 12/19/23 10:16:40.217
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:16:40.245
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:16:40.252
  Dec 19 10:16:40.353: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-5044" for this suite. @ 12/19/23 10:16:40.367
• [0.173 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 12/19/23 10:16:40.392
  Dec 19 10:16:40.392: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename csiinlinevolumes @ 12/19/23 10:16:40.395
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:16:40.455
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:16:40.462
  STEP: creating @ 12/19/23 10:16:40.476
  STEP: getting @ 12/19/23 10:16:40.527
  STEP: listing in namespace @ 12/19/23 10:16:40.535
  STEP: patching @ 12/19/23 10:16:40.544
  STEP: deleting @ 12/19/23 10:16:40.567
  Dec 19 10:16:40.598: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-9950" for this suite. @ 12/19/23 10:16:40.607
• [0.235 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
test/e2e/common/storage/empty_dir.go:230
  STEP: Creating a kubernetes client @ 12/19/23 10:16:40.637
  Dec 19 10:16:40.637: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename emptydir @ 12/19/23 10:16:40.64
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:16:40.671
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:16:40.68
  STEP: Creating Pod @ 12/19/23 10:16:40.685
  STEP: Reading file content from the nginx-container @ 12/19/23 10:16:42.73
  Dec 19 10:16:42.731: INFO: ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-8394 PodName:pod-sharedvolume-e65a4d73-e0be-4ae1-964d-13606623c76b ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 19 10:16:42.731: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  Dec 19 10:16:42.733: INFO: ExecWithOptions: Clientset creation
  Dec 19 10:16:42.734: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/emptydir-8394/pods/pod-sharedvolume-e65a4d73-e0be-4ae1-964d-13606623c76b/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
  Dec 19 10:16:42.862: INFO: Exec stderr: ""
  Dec 19 10:16:42.862: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8394" for this suite. @ 12/19/23 10:16:42.874
• [2.254 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/configmap_volume.go:424
  STEP: Creating a kubernetes client @ 12/19/23 10:16:42.899
  Dec 19 10:16:42.899: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename configmap @ 12/19/23 10:16:42.904
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:16:42.933
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:16:42.939
  STEP: Creating configMap with name configmap-test-volume-40a5bd2f-fa9c-471f-b155-a86f4e665e8b @ 12/19/23 10:16:42.946
  STEP: Creating a pod to test consume configMaps @ 12/19/23 10:16:42.955
  STEP: Saw pod success @ 12/19/23 10:16:47.053
  Dec 19 10:16:47.072: INFO: Trying to get logs from node dah7vaemeeho-3 pod pod-configmaps-b1d192ca-f697-472b-bde6-b7becb1738e5 container configmap-volume-test: <nil>
  STEP: delete the pod @ 12/19/23 10:16:47.094
  Dec 19 10:16:47.146: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7646" for this suite. @ 12/19/23 10:16:47.159
• [4.281 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 12/19/23 10:16:47.184
  Dec 19 10:16:47.184: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename daemonsets @ 12/19/23 10:16:47.189
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:16:47.226
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:16:47.232
  Dec 19 10:16:47.321: INFO: Create a RollingUpdate DaemonSet
  Dec 19 10:16:47.345: INFO: Check that daemon pods launch on every node of the cluster
  Dec 19 10:16:47.379: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 19 10:16:47.380: INFO: Node dah7vaemeeho-1 is running 0 daemon pod, expected 1
  Dec 19 10:16:48.392: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 19 10:16:48.392: INFO: Node dah7vaemeeho-1 is running 0 daemon pod, expected 1
  Dec 19 10:16:49.364: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Dec 19 10:16:49.364: INFO: Node dah7vaemeeho-1 is running 0 daemon pod, expected 1
  Dec 19 10:16:50.366: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Dec 19 10:16:50.367: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  Dec 19 10:16:50.367: INFO: Update the DaemonSet to trigger a rollout
  Dec 19 10:16:50.388: INFO: Updating DaemonSet daemon-set
  Dec 19 10:16:52.426: INFO: Roll back the DaemonSet before rollout is complete
  Dec 19 10:16:52.466: INFO: Updating DaemonSet daemon-set
  Dec 19 10:16:52.466: INFO: Make sure DaemonSet rollback is complete
  Dec 19 10:16:52.520: INFO: Wrong image for pod: daemon-set-trwvw. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  Dec 19 10:16:52.520: INFO: Pod daemon-set-trwvw is not available
  Dec 19 10:17:00.477: INFO: Pod daemon-set-9wtwh is not available
  STEP: Deleting DaemonSet "daemon-set" @ 12/19/23 10:17:00.517
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-5155, will wait for the garbage collector to delete the pods @ 12/19/23 10:17:00.518
  Dec 19 10:17:00.592: INFO: Deleting DaemonSet.extensions daemon-set took: 14.896777ms
  Dec 19 10:17:00.694: INFO: Terminating DaemonSet.extensions daemon-set pods took: 101.934491ms
  Dec 19 10:17:32.007: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 19 10:17:32.007: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Dec 19 10:17:32.016: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"13117"},"items":null}

  Dec 19 10:17:32.025: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"13117"},"items":null}

  Dec 19 10:17:32.060: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-5155" for this suite. @ 12/19/23 10:17:32.068
• [44.904 seconds]
------------------------------
SSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 12/19/23 10:17:32.091
  Dec 19 10:17:32.091: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename cronjob @ 12/19/23 10:17:32.101
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:17:32.139
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:17:32.147
  STEP: Creating a cronjob @ 12/19/23 10:17:32.156
  STEP: Ensuring more than one job is running at a time @ 12/19/23 10:17:32.177
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 12/19/23 10:19:00.186
  STEP: Removing cronjob @ 12/19/23 10:19:00.203
  Dec 19 10:19:00.223: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-2859" for this suite. @ 12/19/23 10:19:00.233
• [88.166 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
test/e2e/network/dns.go:117
  STEP: Creating a kubernetes client @ 12/19/23 10:19:00.257
  Dec 19 10:19:00.257: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename dns @ 12/19/23 10:19:00.262
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:19:00.323
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:19:00.333
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-6058.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-6058.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
   @ 12/19/23 10:19:00.343
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-6058.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-6058.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 12/19/23 10:19:00.343
  STEP: creating a pod to probe /etc/hosts @ 12/19/23 10:19:00.343
  STEP: submitting the pod to kubernetes @ 12/19/23 10:19:00.343
  STEP: retrieving the pod @ 12/19/23 10:19:40.657
  STEP: looking for the results for each expected name from probers @ 12/19/23 10:19:40.666
  Dec 19 10:19:40.721: INFO: Unable to read jessie_hosts@dns-querier-1 from pod dns-6058/dns-test-5334b137-1dec-44ff-9879-a66cf90d5b2b: the server could not find the requested resource (get pods dns-test-5334b137-1dec-44ff-9879-a66cf90d5b2b)
  Dec 19 10:19:40.721: INFO: Lookups using dns-6058/dns-test-5334b137-1dec-44ff-9879-a66cf90d5b2b failed for: [jessie_hosts@dns-querier-1]

  Dec 19 10:19:40.755: INFO: Pod client logs for webserver: 
  Dec 19 10:19:40.770: INFO: Pod client logs for querier: 
  Dec 19 10:19:40.784: INFO: Pod client logs for jessie-querier: 
  Dec 19 10:19:45.702: INFO: Unable to read jessie_hosts@dns-querier-1 from pod dns-6058/dns-test-5334b137-1dec-44ff-9879-a66cf90d5b2b: the server could not find the requested resource (get pods dns-test-5334b137-1dec-44ff-9879-a66cf90d5b2b)
  Dec 19 10:19:45.703: INFO: Lookups using dns-6058/dns-test-5334b137-1dec-44ff-9879-a66cf90d5b2b failed for: [jessie_hosts@dns-querier-1]

  Dec 19 10:19:45.717: INFO: Pod client logs for webserver: 
  Dec 19 10:19:45.737: INFO: Pod client logs for querier: 
  Dec 19 10:19:45.759: INFO: Pod client logs for jessie-querier: 
  Dec 19 10:19:50.699: INFO: DNS probes using dns-6058/dns-test-5334b137-1dec-44ff-9879-a66cf90d5b2b succeeded

  STEP: deleting the pod @ 12/19/23 10:19:50.7
  Dec 19 10:19:50.738: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-6058" for this suite. @ 12/19/23 10:19:50.751
• [50.509 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 12/19/23 10:19:50.767
  Dec 19 10:19:50.767: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename pods @ 12/19/23 10:19:50.78
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:19:50.814
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:19:50.82
  STEP: creating the pod @ 12/19/23 10:19:50.824
  STEP: submitting the pod to kubernetes @ 12/19/23 10:19:50.825
  STEP: verifying QOS class is set on the pod @ 12/19/23 10:19:50.847
  Dec 19 10:19:50.853: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2563" for this suite. @ 12/19/23 10:19:50.869
• [0.122 seconds]
------------------------------
SS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance] [sig-node, Slow, Conformance]
test/e2e/common/node/expansion.go:300
  STEP: Creating a kubernetes client @ 12/19/23 10:19:50.889
  Dec 19 10:19:50.889: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename var-expansion @ 12/19/23 10:19:50.922
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:19:50.96
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:19:50.966
  STEP: creating the pod @ 12/19/23 10:19:50.974
  STEP: waiting for pod running @ 12/19/23 10:19:50.99
  STEP: creating a file in subpath @ 12/19/23 10:19:53.043
  Dec 19 10:19:53.049: INFO: ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-7917 PodName:var-expansion-029468ac-aec9-41bf-843c-87ae5232be38 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 19 10:19:53.050: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  Dec 19 10:19:53.054: INFO: ExecWithOptions: Clientset creation
  Dec 19 10:19:53.055: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/var-expansion-7917/pods/var-expansion-029468ac-aec9-41bf-843c-87ae5232be38/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 12/19/23 10:19:53.18
  Dec 19 10:19:53.189: INFO: ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-7917 PodName:var-expansion-029468ac-aec9-41bf-843c-87ae5232be38 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 19 10:19:53.189: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  Dec 19 10:19:53.191: INFO: ExecWithOptions: Clientset creation
  Dec 19 10:19:53.191: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/var-expansion-7917/pods/var-expansion-029468ac-aec9-41bf-843c-87ae5232be38/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 12/19/23 10:19:53.289
  Dec 19 10:19:53.815: INFO: Successfully updated pod "var-expansion-029468ac-aec9-41bf-843c-87ae5232be38"
  STEP: waiting for annotated pod running @ 12/19/23 10:19:53.815
  STEP: deleting the pod gracefully @ 12/19/23 10:19:53.822
  Dec 19 10:19:53.822: INFO: Deleting pod "var-expansion-029468ac-aec9-41bf-843c-87ae5232be38" in namespace "var-expansion-7917"
  Dec 19 10:19:53.837: INFO: Wait up to 5m0s for pod "var-expansion-029468ac-aec9-41bf-843c-87ae5232be38" to be fully deleted
  Dec 19 10:20:26.012: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-7917" for this suite. @ 12/19/23 10:20:26.023
• [35.161 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 12/19/23 10:20:26.051
  Dec 19 10:20:26.052: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename pods @ 12/19/23 10:20:26.056
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:20:26.109
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:20:26.115
  Dec 19 10:20:26.122: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: creating the pod @ 12/19/23 10:20:26.124
  STEP: submitting the pod to kubernetes @ 12/19/23 10:20:26.124
  Dec 19 10:20:28.270: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2366" for this suite. @ 12/19/23 10:20:28.284
• [2.246 seconds]
------------------------------
SS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 12/19/23 10:20:28.298
  Dec 19 10:20:28.298: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename pods @ 12/19/23 10:20:28.301
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:20:28.333
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:20:28.342
  STEP: creating the pod @ 12/19/23 10:20:28.347
  STEP: submitting the pod to kubernetes @ 12/19/23 10:20:28.348
  STEP: verifying the pod is in kubernetes @ 12/19/23 10:20:30.402
  STEP: updating the pod @ 12/19/23 10:20:30.412
  Dec 19 10:20:30.939: INFO: Successfully updated pod "pod-update-084266a1-8c6b-4f09-86a1-19e14966a2a0"
  STEP: verifying the updated pod is in kubernetes @ 12/19/23 10:20:30.948
  Dec 19 10:20:30.955: INFO: Pod update OK
  Dec 19 10:20:30.955: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7181" for this suite. @ 12/19/23 10:20:30.967
• [2.683 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:209
  STEP: Creating a kubernetes client @ 12/19/23 10:20:30.983
  Dec 19 10:20:30.983: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename projected @ 12/19/23 10:20:30.988
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:20:31.022
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:20:31.027
  STEP: Creating a pod to test downward API volume plugin @ 12/19/23 10:20:31.065
  STEP: Saw pod success @ 12/19/23 10:20:35.134
  Dec 19 10:20:35.144: INFO: Trying to get logs from node dah7vaemeeho-3 pod downwardapi-volume-72b97728-7828-4125-bf78-fd05e1c4a41a container client-container: <nil>
  STEP: delete the pod @ 12/19/23 10:20:35.16
  Dec 19 10:20:35.205: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8584" for this suite. @ 12/19/23 10:20:35.216
• [4.252 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:221
  STEP: Creating a kubernetes client @ 12/19/23 10:20:35.234
  Dec 19 10:20:35.234: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename webhook @ 12/19/23 10:20:35.237
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:20:35.258
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:20:35.268
  STEP: Setting up server cert @ 12/19/23 10:20:35.317
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/19/23 10:20:35.972
  STEP: Deploying the webhook pod @ 12/19/23 10:20:35.993
  STEP: Wait for the deployment to be ready @ 12/19/23 10:20:36.023
  Dec 19 10:20:36.049: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/19/23 10:20:38.073
  STEP: Verifying the service has paired with the endpoint @ 12/19/23 10:20:38.1
  Dec 19 10:20:39.103: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Dec 19 10:20:39.140: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 12/19/23 10:20:39.689
  STEP: Creating a custom resource that should be denied by the webhook @ 12/19/23 10:20:39.724
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 12/19/23 10:20:41.859
  STEP: Updating the custom resource with disallowed data should be denied @ 12/19/23 10:20:41.873
  STEP: Deleting the custom resource should be denied @ 12/19/23 10:20:41.889
  STEP: Remove the offending key and value from the custom resource data @ 12/19/23 10:20:41.906
  STEP: Deleting the updated custom resource should be successful @ 12/19/23 10:20:41.928
  Dec 19 10:20:42.650: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1049" for this suite. @ 12/19/23 10:20:42.66
  STEP: Destroying namespace "webhook-markers-85" for this suite. @ 12/19/23 10:20:42.674
• [7.454 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
test/e2e/apps/replica_set.go:144
  STEP: Creating a kubernetes client @ 12/19/23 10:20:42.7
  Dec 19 10:20:42.701: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename replicaset @ 12/19/23 10:20:42.703
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:20:42.739
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:20:42.743
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 12/19/23 10:20:42.754
  Dec 19 10:20:42.772: INFO: Pod name sample-pod: Found 0 pods out of 1
  Dec 19 10:20:47.790: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 12/19/23 10:20:47.79
  STEP: getting scale subresource @ 12/19/23 10:20:47.79
  STEP: updating a scale subresource @ 12/19/23 10:20:47.802
  STEP: verifying the replicaset Spec.Replicas was modified @ 12/19/23 10:20:47.833
  STEP: Patch a scale subresource @ 12/19/23 10:20:47.877
  Dec 19 10:20:47.985: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-4304" for this suite. @ 12/19/23 10:20:48.045
• [5.385 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 12/19/23 10:20:48.086
  Dec 19 10:20:48.086: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename secrets @ 12/19/23 10:20:48.088
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:20:48.194
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:20:48.208
  STEP: Creating secret with name secret-test-d4ca66bc-df8a-411e-9dd5-c7664d5e1f64 @ 12/19/23 10:20:48.222
  STEP: Creating a pod to test consume secrets @ 12/19/23 10:20:48.236
  STEP: Saw pod success @ 12/19/23 10:20:52.34
  Dec 19 10:20:52.348: INFO: Trying to get logs from node dah7vaemeeho-3 pod pod-secrets-36a892de-4118-46bd-bbf3-dd042b89112a container secret-volume-test: <nil>
  STEP: delete the pod @ 12/19/23 10:20:52.363
  Dec 19 10:20:52.415: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1733" for this suite. @ 12/19/23 10:20:52.424
• [4.351 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:403
  STEP: Creating a kubernetes client @ 12/19/23 10:20:52.443
  Dec 19 10:20:52.443: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename webhook @ 12/19/23 10:20:52.447
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:20:52.487
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:20:52.495
  STEP: Setting up server cert @ 12/19/23 10:20:52.553
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/19/23 10:20:54.183
  STEP: Deploying the webhook pod @ 12/19/23 10:20:54.204
  STEP: Wait for the deployment to be ready @ 12/19/23 10:20:54.247
  Dec 19 10:20:54.298: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/19/23 10:20:56.324
  STEP: Verifying the service has paired with the endpoint @ 12/19/23 10:20:56.362
  Dec 19 10:20:57.364: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 12/19/23 10:20:57.386
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 12/19/23 10:20:57.437
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 12/19/23 10:20:57.462
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 12/19/23 10:20:57.489
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 12/19/23 10:20:57.512
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 12/19/23 10:20:57.531
  Dec 19 10:20:57.662: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5681" for this suite. @ 12/19/23 10:20:57.676
  STEP: Destroying namespace "webhook-markers-8992" for this suite. @ 12/19/23 10:20:57.692
• [5.268 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:210
  STEP: Creating a kubernetes client @ 12/19/23 10:20:57.718
  Dec 19 10:20:57.718: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename webhook @ 12/19/23 10:20:57.724
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:20:57.758
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:20:57.764
  STEP: Setting up server cert @ 12/19/23 10:20:57.828
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/19/23 10:20:58.872
  STEP: Deploying the webhook pod @ 12/19/23 10:20:58.888
  STEP: Wait for the deployment to be ready @ 12/19/23 10:20:58.919
  Dec 19 10:20:58.939: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/19/23 10:21:00.983
  STEP: Verifying the service has paired with the endpoint @ 12/19/23 10:21:01.006
  Dec 19 10:21:02.007: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 12/19/23 10:21:02.019
  STEP: create a pod @ 12/19/23 10:21:02.06
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 12/19/23 10:21:04.102
  Dec 19 10:21:04.104: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=webhook-1830 attach --namespace=webhook-1830 to-be-attached-pod -i -c=container1'
  Dec 19 10:21:04.386: INFO: rc: 1
  Dec 19 10:21:04.524: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1830" for this suite. @ 12/19/23 10:21:04.585
  STEP: Destroying namespace "webhook-markers-2281" for this suite. @ 12/19/23 10:21:04.606
• [6.904 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_configmap.go:90
  STEP: Creating a kubernetes client @ 12/19/23 10:21:04.622
  Dec 19 10:21:04.622: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename projected @ 12/19/23 10:21:04.625
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:21:04.706
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:21:04.712
  STEP: Creating configMap with name projected-configmap-test-volume-map-b208c4c2-39bd-4c97-8b3d-c09a1e856bba @ 12/19/23 10:21:04.721
  STEP: Creating a pod to test consume configMaps @ 12/19/23 10:21:04.731
  STEP: Saw pod success @ 12/19/23 10:21:08.796
  Dec 19 10:21:08.802: INFO: Trying to get logs from node dah7vaemeeho-3 pod pod-projected-configmaps-1def51b5-135c-4a1e-91c6-fba59f556337 container agnhost-container: <nil>
  STEP: delete the pod @ 12/19/23 10:21:08.827
  Dec 19 10:21:08.875: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8971" for this suite. @ 12/19/23 10:21:08.885
• [4.280 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/configmap_volume.go:176
  STEP: Creating a kubernetes client @ 12/19/23 10:21:08.904
  Dec 19 10:21:08.904: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename configmap @ 12/19/23 10:21:08.908
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:21:08.948
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:21:08.955
  STEP: Creating configMap with name configmap-test-upd-57461e18-871c-4a5f-891d-15243256918d @ 12/19/23 10:21:08.97
  STEP: Creating the pod @ 12/19/23 10:21:08.981
  STEP: Waiting for pod with text data @ 12/19/23 10:21:11.029
  STEP: Waiting for pod with binary data @ 12/19/23 10:21:11.043
  Dec 19 10:21:11.061: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-100" for this suite. @ 12/19/23 10:21:11.072
• [2.188 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
test/e2e/network/dns.go:191
  STEP: Creating a kubernetes client @ 12/19/23 10:21:11.105
  Dec 19 10:21:11.106: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename dns @ 12/19/23 10:21:11.109
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:21:11.145
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:21:11.151
  STEP: Creating a test headless service @ 12/19/23 10:21:11.156
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7491 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-7491;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7491 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-7491;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7491.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-7491.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7491.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-7491.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-7491.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-7491.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-7491.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-7491.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-7491.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-7491.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-7491.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-7491.svc;check="$$(dig +notcp +noall +answer +search 46.56.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.56.46_udp@PTR;check="$$(dig +tcp +noall +answer +search 46.56.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.56.46_tcp@PTR;sleep 1; done
   @ 12/19/23 10:21:11.193
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7491 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-7491;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7491 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-7491;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7491.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-7491.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7491.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-7491.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-7491.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-7491.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-7491.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-7491.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-7491.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-7491.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-7491.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-7491.svc;check="$$(dig +notcp +noall +answer +search 46.56.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.56.46_udp@PTR;check="$$(dig +tcp +noall +answer +search 46.56.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.56.46_tcp@PTR;sleep 1; done
   @ 12/19/23 10:21:11.193
  STEP: creating a pod to probe DNS @ 12/19/23 10:21:11.194
  STEP: submitting the pod to kubernetes @ 12/19/23 10:21:11.194
  STEP: retrieving the pod @ 12/19/23 10:21:15.265
  STEP: looking for the results for each expected name from probers @ 12/19/23 10:21:15.273
  Dec 19 10:21:15.286: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-7491/dns-test-58a71347-32b8-4127-922c-194046e1b5f7: the server could not find the requested resource (get pods dns-test-58a71347-32b8-4127-922c-194046e1b5f7)
  Dec 19 10:21:15.301: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-7491/dns-test-58a71347-32b8-4127-922c-194046e1b5f7: the server could not find the requested resource (get pods dns-test-58a71347-32b8-4127-922c-194046e1b5f7)
  Dec 19 10:21:15.311: INFO: Unable to read wheezy_udp@dns-test-service.dns-7491 from pod dns-7491/dns-test-58a71347-32b8-4127-922c-194046e1b5f7: the server could not find the requested resource (get pods dns-test-58a71347-32b8-4127-922c-194046e1b5f7)
  Dec 19 10:21:15.319: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7491 from pod dns-7491/dns-test-58a71347-32b8-4127-922c-194046e1b5f7: the server could not find the requested resource (get pods dns-test-58a71347-32b8-4127-922c-194046e1b5f7)
  Dec 19 10:21:15.328: INFO: Unable to read wheezy_udp@dns-test-service.dns-7491.svc from pod dns-7491/dns-test-58a71347-32b8-4127-922c-194046e1b5f7: the server could not find the requested resource (get pods dns-test-58a71347-32b8-4127-922c-194046e1b5f7)
  Dec 19 10:21:15.337: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7491.svc from pod dns-7491/dns-test-58a71347-32b8-4127-922c-194046e1b5f7: the server could not find the requested resource (get pods dns-test-58a71347-32b8-4127-922c-194046e1b5f7)
  Dec 19 10:21:15.349: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-7491.svc from pod dns-7491/dns-test-58a71347-32b8-4127-922c-194046e1b5f7: the server could not find the requested resource (get pods dns-test-58a71347-32b8-4127-922c-194046e1b5f7)
  Dec 19 10:21:15.359: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-7491.svc from pod dns-7491/dns-test-58a71347-32b8-4127-922c-194046e1b5f7: the server could not find the requested resource (get pods dns-test-58a71347-32b8-4127-922c-194046e1b5f7)
  Dec 19 10:21:15.445: INFO: Unable to read jessie_udp@dns-test-service from pod dns-7491/dns-test-58a71347-32b8-4127-922c-194046e1b5f7: the server could not find the requested resource (get pods dns-test-58a71347-32b8-4127-922c-194046e1b5f7)
  Dec 19 10:21:15.454: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-7491/dns-test-58a71347-32b8-4127-922c-194046e1b5f7: the server could not find the requested resource (get pods dns-test-58a71347-32b8-4127-922c-194046e1b5f7)
  Dec 19 10:21:15.462: INFO: Unable to read jessie_udp@dns-test-service.dns-7491 from pod dns-7491/dns-test-58a71347-32b8-4127-922c-194046e1b5f7: the server could not find the requested resource (get pods dns-test-58a71347-32b8-4127-922c-194046e1b5f7)
  Dec 19 10:21:15.474: INFO: Unable to read jessie_tcp@dns-test-service.dns-7491 from pod dns-7491/dns-test-58a71347-32b8-4127-922c-194046e1b5f7: the server could not find the requested resource (get pods dns-test-58a71347-32b8-4127-922c-194046e1b5f7)
  Dec 19 10:21:15.496: INFO: Unable to read jessie_udp@dns-test-service.dns-7491.svc from pod dns-7491/dns-test-58a71347-32b8-4127-922c-194046e1b5f7: the server could not find the requested resource (get pods dns-test-58a71347-32b8-4127-922c-194046e1b5f7)
  Dec 19 10:21:15.505: INFO: Unable to read jessie_tcp@dns-test-service.dns-7491.svc from pod dns-7491/dns-test-58a71347-32b8-4127-922c-194046e1b5f7: the server could not find the requested resource (get pods dns-test-58a71347-32b8-4127-922c-194046e1b5f7)
  Dec 19 10:21:15.519: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7491.svc from pod dns-7491/dns-test-58a71347-32b8-4127-922c-194046e1b5f7: the server could not find the requested resource (get pods dns-test-58a71347-32b8-4127-922c-194046e1b5f7)
  Dec 19 10:21:15.530: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7491.svc from pod dns-7491/dns-test-58a71347-32b8-4127-922c-194046e1b5f7: the server could not find the requested resource (get pods dns-test-58a71347-32b8-4127-922c-194046e1b5f7)
  Dec 19 10:21:15.576: INFO: Lookups using dns-7491/dns-test-58a71347-32b8-4127-922c-194046e1b5f7 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-7491 wheezy_tcp@dns-test-service.dns-7491 wheezy_udp@dns-test-service.dns-7491.svc wheezy_tcp@dns-test-service.dns-7491.svc wheezy_udp@_http._tcp.dns-test-service.dns-7491.svc wheezy_tcp@_http._tcp.dns-test-service.dns-7491.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-7491 jessie_tcp@dns-test-service.dns-7491 jessie_udp@dns-test-service.dns-7491.svc jessie_tcp@dns-test-service.dns-7491.svc jessie_udp@_http._tcp.dns-test-service.dns-7491.svc jessie_tcp@_http._tcp.dns-test-service.dns-7491.svc]

  Dec 19 10:21:15.591: INFO: Pod client logs for webserver: 
  Dec 19 10:21:15.609: INFO: Pod client logs for querier: 
  Dec 19 10:21:15.624: INFO: Pod client logs for jessie-querier: 
  Dec 19 10:21:20.284: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-7491/dns-test-58a71347-32b8-4127-922c-194046e1b5f7: the server could not find the requested resource (get pods dns-test-58a71347-32b8-4127-922c-194046e1b5f7)
  Dec 19 10:21:20.292: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-7491/dns-test-58a71347-32b8-4127-922c-194046e1b5f7: the server could not find the requested resource (get pods dns-test-58a71347-32b8-4127-922c-194046e1b5f7)
  Dec 19 10:21:20.301: INFO: Unable to read wheezy_udp@dns-test-service.dns-7491 from pod dns-7491/dns-test-58a71347-32b8-4127-922c-194046e1b5f7: the server could not find the requested resource (get pods dns-test-58a71347-32b8-4127-922c-194046e1b5f7)
  Dec 19 10:21:20.310: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7491 from pod dns-7491/dns-test-58a71347-32b8-4127-922c-194046e1b5f7: the server could not find the requested resource (get pods dns-test-58a71347-32b8-4127-922c-194046e1b5f7)
  Dec 19 10:21:20.318: INFO: Unable to read wheezy_udp@dns-test-service.dns-7491.svc from pod dns-7491/dns-test-58a71347-32b8-4127-922c-194046e1b5f7: the server could not find the requested resource (get pods dns-test-58a71347-32b8-4127-922c-194046e1b5f7)
  Dec 19 10:21:20.326: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7491.svc from pod dns-7491/dns-test-58a71347-32b8-4127-922c-194046e1b5f7: the server could not find the requested resource (get pods dns-test-58a71347-32b8-4127-922c-194046e1b5f7)
  Dec 19 10:21:20.333: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-7491.svc from pod dns-7491/dns-test-58a71347-32b8-4127-922c-194046e1b5f7: the server could not find the requested resource (get pods dns-test-58a71347-32b8-4127-922c-194046e1b5f7)
  Dec 19 10:21:20.341: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-7491.svc from pod dns-7491/dns-test-58a71347-32b8-4127-922c-194046e1b5f7: the server could not find the requested resource (get pods dns-test-58a71347-32b8-4127-922c-194046e1b5f7)
  Dec 19 10:21:20.385: INFO: Unable to read jessie_udp@dns-test-service from pod dns-7491/dns-test-58a71347-32b8-4127-922c-194046e1b5f7: the server could not find the requested resource (get pods dns-test-58a71347-32b8-4127-922c-194046e1b5f7)
  Dec 19 10:21:20.393: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-7491/dns-test-58a71347-32b8-4127-922c-194046e1b5f7: the server could not find the requested resource (get pods dns-test-58a71347-32b8-4127-922c-194046e1b5f7)
  Dec 19 10:21:20.401: INFO: Unable to read jessie_udp@dns-test-service.dns-7491 from pod dns-7491/dns-test-58a71347-32b8-4127-922c-194046e1b5f7: the server could not find the requested resource (get pods dns-test-58a71347-32b8-4127-922c-194046e1b5f7)
  Dec 19 10:21:20.409: INFO: Unable to read jessie_tcp@dns-test-service.dns-7491 from pod dns-7491/dns-test-58a71347-32b8-4127-922c-194046e1b5f7: the server could not find the requested resource (get pods dns-test-58a71347-32b8-4127-922c-194046e1b5f7)
  Dec 19 10:21:20.415: INFO: Unable to read jessie_udp@dns-test-service.dns-7491.svc from pod dns-7491/dns-test-58a71347-32b8-4127-922c-194046e1b5f7: the server could not find the requested resource (get pods dns-test-58a71347-32b8-4127-922c-194046e1b5f7)
  Dec 19 10:21:20.427: INFO: Unable to read jessie_tcp@dns-test-service.dns-7491.svc from pod dns-7491/dns-test-58a71347-32b8-4127-922c-194046e1b5f7: the server could not find the requested resource (get pods dns-test-58a71347-32b8-4127-922c-194046e1b5f7)
  Dec 19 10:21:20.435: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7491.svc from pod dns-7491/dns-test-58a71347-32b8-4127-922c-194046e1b5f7: the server could not find the requested resource (get pods dns-test-58a71347-32b8-4127-922c-194046e1b5f7)
  Dec 19 10:21:20.442: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7491.svc from pod dns-7491/dns-test-58a71347-32b8-4127-922c-194046e1b5f7: the server could not find the requested resource (get pods dns-test-58a71347-32b8-4127-922c-194046e1b5f7)
  Dec 19 10:21:20.474: INFO: Lookups using dns-7491/dns-test-58a71347-32b8-4127-922c-194046e1b5f7 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-7491 wheezy_tcp@dns-test-service.dns-7491 wheezy_udp@dns-test-service.dns-7491.svc wheezy_tcp@dns-test-service.dns-7491.svc wheezy_udp@_http._tcp.dns-test-service.dns-7491.svc wheezy_tcp@_http._tcp.dns-test-service.dns-7491.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-7491 jessie_tcp@dns-test-service.dns-7491 jessie_udp@dns-test-service.dns-7491.svc jessie_tcp@dns-test-service.dns-7491.svc jessie_udp@_http._tcp.dns-test-service.dns-7491.svc jessie_tcp@_http._tcp.dns-test-service.dns-7491.svc]

  Dec 19 10:21:20.491: INFO: Pod client logs for webserver: 
  Dec 19 10:21:20.505: INFO: Pod client logs for querier: 
  Dec 19 10:21:20.546: INFO: Pod client logs for jessie-querier: 
  Dec 19 10:21:25.303: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-7491/dns-test-58a71347-32b8-4127-922c-194046e1b5f7: the server could not find the requested resource (get pods dns-test-58a71347-32b8-4127-922c-194046e1b5f7)
  Dec 19 10:21:25.311: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-7491/dns-test-58a71347-32b8-4127-922c-194046e1b5f7: the server could not find the requested resource (get pods dns-test-58a71347-32b8-4127-922c-194046e1b5f7)
  Dec 19 10:21:25.318: INFO: Unable to read wheezy_udp@dns-test-service.dns-7491 from pod dns-7491/dns-test-58a71347-32b8-4127-922c-194046e1b5f7: the server could not find the requested resource (get pods dns-test-58a71347-32b8-4127-922c-194046e1b5f7)
  Dec 19 10:21:25.326: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7491 from pod dns-7491/dns-test-58a71347-32b8-4127-922c-194046e1b5f7: the server could not find the requested resource (get pods dns-test-58a71347-32b8-4127-922c-194046e1b5f7)
  Dec 19 10:21:25.333: INFO: Unable to read wheezy_udp@dns-test-service.dns-7491.svc from pod dns-7491/dns-test-58a71347-32b8-4127-922c-194046e1b5f7: the server could not find the requested resource (get pods dns-test-58a71347-32b8-4127-922c-194046e1b5f7)
  Dec 19 10:21:25.338: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7491.svc from pod dns-7491/dns-test-58a71347-32b8-4127-922c-194046e1b5f7: the server could not find the requested resource (get pods dns-test-58a71347-32b8-4127-922c-194046e1b5f7)
  Dec 19 10:21:25.348: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-7491.svc from pod dns-7491/dns-test-58a71347-32b8-4127-922c-194046e1b5f7: the server could not find the requested resource (get pods dns-test-58a71347-32b8-4127-922c-194046e1b5f7)
  Dec 19 10:21:25.357: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-7491.svc from pod dns-7491/dns-test-58a71347-32b8-4127-922c-194046e1b5f7: the server could not find the requested resource (get pods dns-test-58a71347-32b8-4127-922c-194046e1b5f7)
  Dec 19 10:21:25.417: INFO: Unable to read jessie_udp@dns-test-service from pod dns-7491/dns-test-58a71347-32b8-4127-922c-194046e1b5f7: the server could not find the requested resource (get pods dns-test-58a71347-32b8-4127-922c-194046e1b5f7)
  Dec 19 10:21:25.428: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-7491/dns-test-58a71347-32b8-4127-922c-194046e1b5f7: the server could not find the requested resource (get pods dns-test-58a71347-32b8-4127-922c-194046e1b5f7)
  Dec 19 10:21:25.442: INFO: Unable to read jessie_udp@dns-test-service.dns-7491 from pod dns-7491/dns-test-58a71347-32b8-4127-922c-194046e1b5f7: the server could not find the requested resource (get pods dns-test-58a71347-32b8-4127-922c-194046e1b5f7)
  Dec 19 10:21:25.452: INFO: Unable to read jessie_tcp@dns-test-service.dns-7491 from pod dns-7491/dns-test-58a71347-32b8-4127-922c-194046e1b5f7: the server could not find the requested resource (get pods dns-test-58a71347-32b8-4127-922c-194046e1b5f7)
  Dec 19 10:21:25.464: INFO: Unable to read jessie_udp@dns-test-service.dns-7491.svc from pod dns-7491/dns-test-58a71347-32b8-4127-922c-194046e1b5f7: the server could not find the requested resource (get pods dns-test-58a71347-32b8-4127-922c-194046e1b5f7)
  Dec 19 10:21:25.471: INFO: Unable to read jessie_tcp@dns-test-service.dns-7491.svc from pod dns-7491/dns-test-58a71347-32b8-4127-922c-194046e1b5f7: the server could not find the requested resource (get pods dns-test-58a71347-32b8-4127-922c-194046e1b5f7)
  Dec 19 10:21:25.481: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7491.svc from pod dns-7491/dns-test-58a71347-32b8-4127-922c-194046e1b5f7: the server could not find the requested resource (get pods dns-test-58a71347-32b8-4127-922c-194046e1b5f7)
  Dec 19 10:21:25.492: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7491.svc from pod dns-7491/dns-test-58a71347-32b8-4127-922c-194046e1b5f7: the server could not find the requested resource (get pods dns-test-58a71347-32b8-4127-922c-194046e1b5f7)
  Dec 19 10:21:25.533: INFO: Lookups using dns-7491/dns-test-58a71347-32b8-4127-922c-194046e1b5f7 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-7491 wheezy_tcp@dns-test-service.dns-7491 wheezy_udp@dns-test-service.dns-7491.svc wheezy_tcp@dns-test-service.dns-7491.svc wheezy_udp@_http._tcp.dns-test-service.dns-7491.svc wheezy_tcp@_http._tcp.dns-test-service.dns-7491.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-7491 jessie_tcp@dns-test-service.dns-7491 jessie_udp@dns-test-service.dns-7491.svc jessie_tcp@dns-test-service.dns-7491.svc jessie_udp@_http._tcp.dns-test-service.dns-7491.svc jessie_tcp@_http._tcp.dns-test-service.dns-7491.svc]

  Dec 19 10:21:25.552: INFO: Pod client logs for webserver: 
  Dec 19 10:21:25.568: INFO: Pod client logs for querier: 
  Dec 19 10:21:25.582: INFO: Pod client logs for jessie-querier: 
  Dec 19 10:21:30.311: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-7491/dns-test-58a71347-32b8-4127-922c-194046e1b5f7: the server could not find the requested resource (get pods dns-test-58a71347-32b8-4127-922c-194046e1b5f7)
  Dec 19 10:21:30.328: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-7491/dns-test-58a71347-32b8-4127-922c-194046e1b5f7: the server could not find the requested resource (get pods dns-test-58a71347-32b8-4127-922c-194046e1b5f7)
  Dec 19 10:21:30.344: INFO: Unable to read wheezy_udp@dns-test-service.dns-7491 from pod dns-7491/dns-test-58a71347-32b8-4127-922c-194046e1b5f7: the server could not find the requested resource (get pods dns-test-58a71347-32b8-4127-922c-194046e1b5f7)
  Dec 19 10:21:30.355: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7491 from pod dns-7491/dns-test-58a71347-32b8-4127-922c-194046e1b5f7: the server could not find the requested resource (get pods dns-test-58a71347-32b8-4127-922c-194046e1b5f7)
  Dec 19 10:21:30.377: INFO: Unable to read wheezy_udp@dns-test-service.dns-7491.svc from pod dns-7491/dns-test-58a71347-32b8-4127-922c-194046e1b5f7: the server could not find the requested resource (get pods dns-test-58a71347-32b8-4127-922c-194046e1b5f7)
  Dec 19 10:21:30.392: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7491.svc from pod dns-7491/dns-test-58a71347-32b8-4127-922c-194046e1b5f7: the server could not find the requested resource (get pods dns-test-58a71347-32b8-4127-922c-194046e1b5f7)
  Dec 19 10:21:30.405: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-7491.svc from pod dns-7491/dns-test-58a71347-32b8-4127-922c-194046e1b5f7: the server could not find the requested resource (get pods dns-test-58a71347-32b8-4127-922c-194046e1b5f7)
  Dec 19 10:21:30.418: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-7491.svc from pod dns-7491/dns-test-58a71347-32b8-4127-922c-194046e1b5f7: the server could not find the requested resource (get pods dns-test-58a71347-32b8-4127-922c-194046e1b5f7)
  Dec 19 10:21:30.481: INFO: Unable to read jessie_udp@dns-test-service from pod dns-7491/dns-test-58a71347-32b8-4127-922c-194046e1b5f7: the server could not find the requested resource (get pods dns-test-58a71347-32b8-4127-922c-194046e1b5f7)
  Dec 19 10:21:30.498: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-7491/dns-test-58a71347-32b8-4127-922c-194046e1b5f7: the server could not find the requested resource (get pods dns-test-58a71347-32b8-4127-922c-194046e1b5f7)
  Dec 19 10:21:30.508: INFO: Unable to read jessie_udp@dns-test-service.dns-7491 from pod dns-7491/dns-test-58a71347-32b8-4127-922c-194046e1b5f7: the server could not find the requested resource (get pods dns-test-58a71347-32b8-4127-922c-194046e1b5f7)
  Dec 19 10:21:30.518: INFO: Unable to read jessie_tcp@dns-test-service.dns-7491 from pod dns-7491/dns-test-58a71347-32b8-4127-922c-194046e1b5f7: the server could not find the requested resource (get pods dns-test-58a71347-32b8-4127-922c-194046e1b5f7)
  Dec 19 10:21:30.531: INFO: Unable to read jessie_udp@dns-test-service.dns-7491.svc from pod dns-7491/dns-test-58a71347-32b8-4127-922c-194046e1b5f7: the server could not find the requested resource (get pods dns-test-58a71347-32b8-4127-922c-194046e1b5f7)
  Dec 19 10:21:30.544: INFO: Unable to read jessie_tcp@dns-test-service.dns-7491.svc from pod dns-7491/dns-test-58a71347-32b8-4127-922c-194046e1b5f7: the server could not find the requested resource (get pods dns-test-58a71347-32b8-4127-922c-194046e1b5f7)
  Dec 19 10:21:30.558: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7491.svc from pod dns-7491/dns-test-58a71347-32b8-4127-922c-194046e1b5f7: the server could not find the requested resource (get pods dns-test-58a71347-32b8-4127-922c-194046e1b5f7)
  Dec 19 10:21:30.568: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7491.svc from pod dns-7491/dns-test-58a71347-32b8-4127-922c-194046e1b5f7: the server could not find the requested resource (get pods dns-test-58a71347-32b8-4127-922c-194046e1b5f7)
  Dec 19 10:21:30.602: INFO: Lookups using dns-7491/dns-test-58a71347-32b8-4127-922c-194046e1b5f7 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-7491 wheezy_tcp@dns-test-service.dns-7491 wheezy_udp@dns-test-service.dns-7491.svc wheezy_tcp@dns-test-service.dns-7491.svc wheezy_udp@_http._tcp.dns-test-service.dns-7491.svc wheezy_tcp@_http._tcp.dns-test-service.dns-7491.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-7491 jessie_tcp@dns-test-service.dns-7491 jessie_udp@dns-test-service.dns-7491.svc jessie_tcp@dns-test-service.dns-7491.svc jessie_udp@_http._tcp.dns-test-service.dns-7491.svc jessie_tcp@_http._tcp.dns-test-service.dns-7491.svc]

  Dec 19 10:21:30.621: INFO: Pod client logs for webserver: 
  Dec 19 10:21:30.642: INFO: Pod client logs for querier: 
  Dec 19 10:21:30.660: INFO: Pod client logs for jessie-querier: 
  Dec 19 10:21:35.282: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-7491/dns-test-58a71347-32b8-4127-922c-194046e1b5f7: the server could not find the requested resource (get pods dns-test-58a71347-32b8-4127-922c-194046e1b5f7)
  Dec 19 10:21:35.289: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-7491/dns-test-58a71347-32b8-4127-922c-194046e1b5f7: the server could not find the requested resource (get pods dns-test-58a71347-32b8-4127-922c-194046e1b5f7)
  Dec 19 10:21:35.298: INFO: Unable to read wheezy_udp@dns-test-service.dns-7491 from pod dns-7491/dns-test-58a71347-32b8-4127-922c-194046e1b5f7: the server could not find the requested resource (get pods dns-test-58a71347-32b8-4127-922c-194046e1b5f7)
  Dec 19 10:21:35.306: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7491 from pod dns-7491/dns-test-58a71347-32b8-4127-922c-194046e1b5f7: the server could not find the requested resource (get pods dns-test-58a71347-32b8-4127-922c-194046e1b5f7)
  Dec 19 10:21:35.314: INFO: Unable to read wheezy_udp@dns-test-service.dns-7491.svc from pod dns-7491/dns-test-58a71347-32b8-4127-922c-194046e1b5f7: the server could not find the requested resource (get pods dns-test-58a71347-32b8-4127-922c-194046e1b5f7)
  Dec 19 10:21:35.323: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7491.svc from pod dns-7491/dns-test-58a71347-32b8-4127-922c-194046e1b5f7: the server could not find the requested resource (get pods dns-test-58a71347-32b8-4127-922c-194046e1b5f7)
  Dec 19 10:21:35.330: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-7491.svc from pod dns-7491/dns-test-58a71347-32b8-4127-922c-194046e1b5f7: the server could not find the requested resource (get pods dns-test-58a71347-32b8-4127-922c-194046e1b5f7)
  Dec 19 10:21:35.337: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-7491.svc from pod dns-7491/dns-test-58a71347-32b8-4127-922c-194046e1b5f7: the server could not find the requested resource (get pods dns-test-58a71347-32b8-4127-922c-194046e1b5f7)
  Dec 19 10:21:35.378: INFO: Unable to read jessie_udp@dns-test-service from pod dns-7491/dns-test-58a71347-32b8-4127-922c-194046e1b5f7: the server could not find the requested resource (get pods dns-test-58a71347-32b8-4127-922c-194046e1b5f7)
  Dec 19 10:21:35.388: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-7491/dns-test-58a71347-32b8-4127-922c-194046e1b5f7: the server could not find the requested resource (get pods dns-test-58a71347-32b8-4127-922c-194046e1b5f7)
  Dec 19 10:21:35.396: INFO: Unable to read jessie_udp@dns-test-service.dns-7491 from pod dns-7491/dns-test-58a71347-32b8-4127-922c-194046e1b5f7: the server could not find the requested resource (get pods dns-test-58a71347-32b8-4127-922c-194046e1b5f7)
  Dec 19 10:21:35.404: INFO: Unable to read jessie_tcp@dns-test-service.dns-7491 from pod dns-7491/dns-test-58a71347-32b8-4127-922c-194046e1b5f7: the server could not find the requested resource (get pods dns-test-58a71347-32b8-4127-922c-194046e1b5f7)
  Dec 19 10:21:35.410: INFO: Unable to read jessie_udp@dns-test-service.dns-7491.svc from pod dns-7491/dns-test-58a71347-32b8-4127-922c-194046e1b5f7: the server could not find the requested resource (get pods dns-test-58a71347-32b8-4127-922c-194046e1b5f7)
  Dec 19 10:21:35.417: INFO: Unable to read jessie_tcp@dns-test-service.dns-7491.svc from pod dns-7491/dns-test-58a71347-32b8-4127-922c-194046e1b5f7: the server could not find the requested resource (get pods dns-test-58a71347-32b8-4127-922c-194046e1b5f7)
  Dec 19 10:21:35.424: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7491.svc from pod dns-7491/dns-test-58a71347-32b8-4127-922c-194046e1b5f7: the server could not find the requested resource (get pods dns-test-58a71347-32b8-4127-922c-194046e1b5f7)
  Dec 19 10:21:35.430: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7491.svc from pod dns-7491/dns-test-58a71347-32b8-4127-922c-194046e1b5f7: the server could not find the requested resource (get pods dns-test-58a71347-32b8-4127-922c-194046e1b5f7)
  Dec 19 10:21:35.461: INFO: Lookups using dns-7491/dns-test-58a71347-32b8-4127-922c-194046e1b5f7 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-7491 wheezy_tcp@dns-test-service.dns-7491 wheezy_udp@dns-test-service.dns-7491.svc wheezy_tcp@dns-test-service.dns-7491.svc wheezy_udp@_http._tcp.dns-test-service.dns-7491.svc wheezy_tcp@_http._tcp.dns-test-service.dns-7491.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-7491 jessie_tcp@dns-test-service.dns-7491 jessie_udp@dns-test-service.dns-7491.svc jessie_tcp@dns-test-service.dns-7491.svc jessie_udp@_http._tcp.dns-test-service.dns-7491.svc jessie_tcp@_http._tcp.dns-test-service.dns-7491.svc]

  Dec 19 10:21:35.478: INFO: Pod client logs for webserver: 
  Dec 19 10:21:35.501: INFO: Pod client logs for querier: 
  Dec 19 10:21:35.518: INFO: Pod client logs for jessie-querier: 
  Dec 19 10:21:40.293: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-7491/dns-test-58a71347-32b8-4127-922c-194046e1b5f7: the server could not find the requested resource (get pods dns-test-58a71347-32b8-4127-922c-194046e1b5f7)
  Dec 19 10:21:40.309: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-7491/dns-test-58a71347-32b8-4127-922c-194046e1b5f7: the server could not find the requested resource (get pods dns-test-58a71347-32b8-4127-922c-194046e1b5f7)
  Dec 19 10:21:40.336: INFO: Unable to read wheezy_udp@dns-test-service.dns-7491 from pod dns-7491/dns-test-58a71347-32b8-4127-922c-194046e1b5f7: the server could not find the requested resource (get pods dns-test-58a71347-32b8-4127-922c-194046e1b5f7)
  Dec 19 10:21:40.350: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7491 from pod dns-7491/dns-test-58a71347-32b8-4127-922c-194046e1b5f7: the server could not find the requested resource (get pods dns-test-58a71347-32b8-4127-922c-194046e1b5f7)
  Dec 19 10:21:40.368: INFO: Unable to read wheezy_udp@dns-test-service.dns-7491.svc from pod dns-7491/dns-test-58a71347-32b8-4127-922c-194046e1b5f7: the server could not find the requested resource (get pods dns-test-58a71347-32b8-4127-922c-194046e1b5f7)
  Dec 19 10:21:40.382: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7491.svc from pod dns-7491/dns-test-58a71347-32b8-4127-922c-194046e1b5f7: the server could not find the requested resource (get pods dns-test-58a71347-32b8-4127-922c-194046e1b5f7)
  Dec 19 10:21:40.394: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-7491.svc from pod dns-7491/dns-test-58a71347-32b8-4127-922c-194046e1b5f7: the server could not find the requested resource (get pods dns-test-58a71347-32b8-4127-922c-194046e1b5f7)
  Dec 19 10:21:40.403: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-7491.svc from pod dns-7491/dns-test-58a71347-32b8-4127-922c-194046e1b5f7: the server could not find the requested resource (get pods dns-test-58a71347-32b8-4127-922c-194046e1b5f7)
  Dec 19 10:21:40.466: INFO: Unable to read jessie_udp@dns-test-service from pod dns-7491/dns-test-58a71347-32b8-4127-922c-194046e1b5f7: the server could not find the requested resource (get pods dns-test-58a71347-32b8-4127-922c-194046e1b5f7)
  Dec 19 10:21:40.476: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-7491/dns-test-58a71347-32b8-4127-922c-194046e1b5f7: the server could not find the requested resource (get pods dns-test-58a71347-32b8-4127-922c-194046e1b5f7)
  Dec 19 10:21:40.485: INFO: Unable to read jessie_udp@dns-test-service.dns-7491 from pod dns-7491/dns-test-58a71347-32b8-4127-922c-194046e1b5f7: the server could not find the requested resource (get pods dns-test-58a71347-32b8-4127-922c-194046e1b5f7)
  Dec 19 10:21:40.501: INFO: Unable to read jessie_tcp@dns-test-service.dns-7491 from pod dns-7491/dns-test-58a71347-32b8-4127-922c-194046e1b5f7: the server could not find the requested resource (get pods dns-test-58a71347-32b8-4127-922c-194046e1b5f7)
  Dec 19 10:21:40.518: INFO: Unable to read jessie_udp@dns-test-service.dns-7491.svc from pod dns-7491/dns-test-58a71347-32b8-4127-922c-194046e1b5f7: the server could not find the requested resource (get pods dns-test-58a71347-32b8-4127-922c-194046e1b5f7)
  Dec 19 10:21:40.533: INFO: Unable to read jessie_tcp@dns-test-service.dns-7491.svc from pod dns-7491/dns-test-58a71347-32b8-4127-922c-194046e1b5f7: the server could not find the requested resource (get pods dns-test-58a71347-32b8-4127-922c-194046e1b5f7)
  Dec 19 10:21:40.542: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7491.svc from pod dns-7491/dns-test-58a71347-32b8-4127-922c-194046e1b5f7: the server could not find the requested resource (get pods dns-test-58a71347-32b8-4127-922c-194046e1b5f7)
  Dec 19 10:21:40.557: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7491.svc from pod dns-7491/dns-test-58a71347-32b8-4127-922c-194046e1b5f7: the server could not find the requested resource (get pods dns-test-58a71347-32b8-4127-922c-194046e1b5f7)
  Dec 19 10:21:40.602: INFO: Lookups using dns-7491/dns-test-58a71347-32b8-4127-922c-194046e1b5f7 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-7491 wheezy_tcp@dns-test-service.dns-7491 wheezy_udp@dns-test-service.dns-7491.svc wheezy_tcp@dns-test-service.dns-7491.svc wheezy_udp@_http._tcp.dns-test-service.dns-7491.svc wheezy_tcp@_http._tcp.dns-test-service.dns-7491.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-7491 jessie_tcp@dns-test-service.dns-7491 jessie_udp@dns-test-service.dns-7491.svc jessie_tcp@dns-test-service.dns-7491.svc jessie_udp@_http._tcp.dns-test-service.dns-7491.svc jessie_tcp@_http._tcp.dns-test-service.dns-7491.svc]

  Dec 19 10:21:40.618: INFO: Pod client logs for webserver: 
  Dec 19 10:21:40.631: INFO: Pod client logs for querier: 
  Dec 19 10:21:40.646: INFO: Pod client logs for jessie-querier: 
  Dec 19 10:21:45.590: INFO: DNS probes using dns-7491/dns-test-58a71347-32b8-4127-922c-194046e1b5f7 succeeded

  STEP: deleting the pod @ 12/19/23 10:21:45.593
  STEP: deleting the test service @ 12/19/23 10:21:45.691
  STEP: deleting the test headless service @ 12/19/23 10:21:45.799
  Dec 19 10:21:45.866: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-7491" for this suite. @ 12/19/23 10:21:45.924
• [34.841 seconds]
------------------------------
S
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
test/e2e/apps/daemon_set.go:875
  STEP: Creating a kubernetes client @ 12/19/23 10:21:45.949
  Dec 19 10:21:45.950: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename daemonsets @ 12/19/23 10:21:45.962
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:21:46.014
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:21:46.024
  STEP: Creating simple DaemonSet "daemon-set" @ 12/19/23 10:21:46.126
  STEP: Check that daemon pods launch on every node of the cluster. @ 12/19/23 10:21:46.139
  Dec 19 10:21:46.183: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 19 10:21:46.183: INFO: Node dah7vaemeeho-1 is running 0 daemon pod, expected 1
  Dec 19 10:21:47.166: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 19 10:21:47.167: INFO: Node dah7vaemeeho-1 is running 0 daemon pod, expected 1
  Dec 19 10:21:48.165: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Dec 19 10:21:48.166: INFO: Node dah7vaemeeho-1 is running 0 daemon pod, expected 1
  Dec 19 10:21:49.187: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Dec 19 10:21:49.187: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Getting /status @ 12/19/23 10:21:49.197
  Dec 19 10:21:49.208: INFO: Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 12/19/23 10:21:49.209
  Dec 19 10:21:49.231: INFO: updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 12/19/23 10:21:49.231
  Dec 19 10:21:49.241: INFO: Observed &DaemonSet event: ADDED
  Dec 19 10:21:49.242: INFO: Observed &DaemonSet event: MODIFIED
  Dec 19 10:21:49.243: INFO: Observed &DaemonSet event: MODIFIED
  Dec 19 10:21:49.243: INFO: Observed &DaemonSet event: MODIFIED
  Dec 19 10:21:49.244: INFO: Observed &DaemonSet event: MODIFIED
  Dec 19 10:21:49.245: INFO: Observed &DaemonSet event: MODIFIED
  Dec 19 10:21:49.245: INFO: Found daemon set daemon-set in namespace daemonsets-3084 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Dec 19 10:21:49.245: INFO: Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 12/19/23 10:21:49.246
  STEP: watching for the daemon set status to be patched @ 12/19/23 10:21:49.282
  Dec 19 10:21:49.291: INFO: Observed &DaemonSet event: ADDED
  Dec 19 10:21:49.291: INFO: Observed &DaemonSet event: MODIFIED
  Dec 19 10:21:49.293: INFO: Observed &DaemonSet event: MODIFIED
  Dec 19 10:21:49.294: INFO: Observed &DaemonSet event: MODIFIED
  Dec 19 10:21:49.295: INFO: Observed &DaemonSet event: MODIFIED
  Dec 19 10:21:49.297: INFO: Observed &DaemonSet event: MODIFIED
  Dec 19 10:21:49.297: INFO: Observed daemon set daemon-set in namespace daemonsets-3084 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Dec 19 10:21:49.298: INFO: Observed &DaemonSet event: MODIFIED
  Dec 19 10:21:49.299: INFO: Found daemon set daemon-set in namespace daemonsets-3084 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  Dec 19 10:21:49.299: INFO: Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 12/19/23 10:21:49.308
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-3084, will wait for the garbage collector to delete the pods @ 12/19/23 10:21:49.309
  Dec 19 10:21:49.413: INFO: Deleting DaemonSet.extensions daemon-set took: 41.289228ms
  Dec 19 10:21:49.515: INFO: Terminating DaemonSet.extensions daemon-set pods took: 101.278073ms
  Dec 19 10:21:52.325: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 19 10:21:52.325: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Dec 19 10:21:52.331: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"14291"},"items":null}

  Dec 19 10:21:52.342: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"14291"},"items":null}

  Dec 19 10:21:52.388: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-3084" for this suite. @ 12/19/23 10:21:52.398
• [6.463 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
test/e2e/apps/controller_revision.go:126
  STEP: Creating a kubernetes client @ 12/19/23 10:21:52.414
  Dec 19 10:21:52.414: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename controllerrevisions @ 12/19/23 10:21:52.418
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:21:52.469
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:21:52.476
  STEP: Creating DaemonSet "e2e-7vm4j-daemon-set" @ 12/19/23 10:21:52.539
  STEP: Check that daemon pods launch on every node of the cluster. @ 12/19/23 10:21:52.566
  Dec 19 10:21:52.591: INFO: Number of nodes with available pods controlled by daemonset e2e-7vm4j-daemon-set: 0
  Dec 19 10:21:52.592: INFO: Node dah7vaemeeho-1 is running 0 daemon pod, expected 1
  Dec 19 10:21:53.588: INFO: Number of nodes with available pods controlled by daemonset e2e-7vm4j-daemon-set: 0
  Dec 19 10:21:53.588: INFO: Node dah7vaemeeho-1 is running 0 daemon pod, expected 1
  Dec 19 10:21:54.590: INFO: Number of nodes with available pods controlled by daemonset e2e-7vm4j-daemon-set: 2
  Dec 19 10:21:54.590: INFO: Node dah7vaemeeho-1 is running 0 daemon pod, expected 1
  Dec 19 10:21:55.586: INFO: Number of nodes with available pods controlled by daemonset e2e-7vm4j-daemon-set: 2
  Dec 19 10:21:55.586: INFO: Node dah7vaemeeho-1 is running 0 daemon pod, expected 1
  Dec 19 10:21:56.589: INFO: Number of nodes with available pods controlled by daemonset e2e-7vm4j-daemon-set: 3
  Dec 19 10:21:56.590: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset e2e-7vm4j-daemon-set
  STEP: Confirm DaemonSet "e2e-7vm4j-daemon-set" successfully created with "daemonset-name=e2e-7vm4j-daemon-set" label @ 12/19/23 10:21:56.597
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-7vm4j-daemon-set" @ 12/19/23 10:21:56.616
  Dec 19 10:21:56.624: INFO: Located ControllerRevision: "e2e-7vm4j-daemon-set-76676bfb49"
  STEP: Patching ControllerRevision "e2e-7vm4j-daemon-set-76676bfb49" @ 12/19/23 10:21:56.632
  Dec 19 10:21:56.644: INFO: e2e-7vm4j-daemon-set-76676bfb49 has been patched
  STEP: Create a new ControllerRevision @ 12/19/23 10:21:56.645
  Dec 19 10:21:56.664: INFO: Created ControllerRevision: e2e-7vm4j-daemon-set-5f5b745c69
  STEP: Confirm that there are two ControllerRevisions @ 12/19/23 10:21:56.665
  Dec 19 10:21:56.665: INFO: Requesting list of ControllerRevisions to confirm quantity
  Dec 19 10:21:56.673: INFO: Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-7vm4j-daemon-set-76676bfb49" @ 12/19/23 10:21:56.674
  STEP: Confirm that there is only one ControllerRevision @ 12/19/23 10:21:56.684
  Dec 19 10:21:56.684: INFO: Requesting list of ControllerRevisions to confirm quantity
  Dec 19 10:21:56.695: INFO: Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-7vm4j-daemon-set-5f5b745c69" @ 12/19/23 10:21:56.702
  Dec 19 10:21:56.720: INFO: e2e-7vm4j-daemon-set-5f5b745c69 has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 12/19/23 10:21:56.721
  W1219 10:21:56.765722      14 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 12/19/23 10:21:56.765
  Dec 19 10:21:56.766: INFO: Requesting list of ControllerRevisions to confirm quantity
  Dec 19 10:21:57.766: INFO: Requesting list of ControllerRevisions to confirm quantity
  Dec 19 10:21:57.779: INFO: Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-7vm4j-daemon-set-5f5b745c69=updated" @ 12/19/23 10:21:57.779
  STEP: Confirm that there is only one ControllerRevision @ 12/19/23 10:21:57.798
  Dec 19 10:21:57.798: INFO: Requesting list of ControllerRevisions to confirm quantity
  Dec 19 10:21:57.805: INFO: Found 1 ControllerRevisions
  Dec 19 10:21:57.814: INFO: ControllerRevision "e2e-7vm4j-daemon-set-5bc44ddfdd" has revision 3
  STEP: Deleting DaemonSet "e2e-7vm4j-daemon-set" @ 12/19/23 10:21:57.823
  STEP: deleting DaemonSet.extensions e2e-7vm4j-daemon-set in namespace controllerrevisions-6464, will wait for the garbage collector to delete the pods @ 12/19/23 10:21:57.823
  Dec 19 10:21:57.898: INFO: Deleting DaemonSet.extensions e2e-7vm4j-daemon-set took: 18.582367ms
  Dec 19 10:21:58.099: INFO: Terminating DaemonSet.extensions e2e-7vm4j-daemon-set pods took: 200.662072ms
  Dec 19 10:21:59.609: INFO: Number of nodes with available pods controlled by daemonset e2e-7vm4j-daemon-set: 0
  Dec 19 10:21:59.610: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset e2e-7vm4j-daemon-set
  Dec 19 10:21:59.621: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"14411"},"items":null}

  Dec 19 10:21:59.629: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"14411"},"items":null}

  Dec 19 10:21:59.665: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-6464" for this suite. @ 12/19/23 10:21:59.673
• [7.273 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:309
  STEP: Creating a kubernetes client @ 12/19/23 10:21:59.689
  Dec 19 10:21:59.689: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/19/23 10:21:59.692
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:21:59.775
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:21:59.782
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 12/19/23 10:21:59.789
  Dec 19 10:21:59.792: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 12/19/23 10:22:07.656
  Dec 19 10:22:07.665: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  Dec 19 10:22:09.444: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  Dec 19 10:22:16.825: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2932" for this suite. @ 12/19/23 10:22:16.856
• [17.183 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 12/19/23 10:22:16.872
  Dec 19 10:22:16.872: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename csiinlinevolumes @ 12/19/23 10:22:16.883
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:22:16.924
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:22:16.933
  STEP: Creating two CSIDrivers @ 12/19/23 10:22:16.944
  STEP: Getting "inline-driver-8a2d2dc3-f26d-4144-87ac-94dc839d1842" & "inline-driver-70309248-63a1-4558-afe9-11ecf657f886" @ 12/19/23 10:22:17.004
  STEP: Patching the CSIDriver "inline-driver-70309248-63a1-4558-afe9-11ecf657f886" @ 12/19/23 10:22:17.066
  STEP: Updating the CSIDriver "inline-driver-70309248-63a1-4558-afe9-11ecf657f886" @ 12/19/23 10:22:17.113
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-717" @ 12/19/23 10:22:17.146
  STEP: Deleting CSIDriver "inline-driver-8a2d2dc3-f26d-4144-87ac-94dc839d1842" @ 12/19/23 10:22:17.162
  STEP: Confirm deletion of CSIDriver "inline-driver-8a2d2dc3-f26d-4144-87ac-94dc839d1842" @ 12/19/23 10:22:17.192
  STEP: Deleting CSIDriver "inline-driver-70309248-63a1-4558-afe9-11ecf657f886" via DeleteCollection @ 12/19/23 10:22:17.202
  STEP: Confirm deletion of CSIDriver "inline-driver-70309248-63a1-4558-afe9-11ecf657f886" @ 12/19/23 10:22:17.222
  Dec 19 10:22:17.231: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-717" for this suite. @ 12/19/23 10:22:17.24
• [0.394 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
test/e2e/network/endpointslice.go:105
  STEP: Creating a kubernetes client @ 12/19/23 10:22:17.267
  Dec 19 10:22:17.267: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename endpointslice @ 12/19/23 10:22:17.27
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:22:17.296
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:22:17.306
  Dec 19 10:22:19.464: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-7994" for this suite. @ 12/19/23 10:22:19.478
• [2.223 seconds]
------------------------------
S
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 12/19/23 10:22:19.491
  Dec 19 10:22:19.491: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename deployment @ 12/19/23 10:22:19.494
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:22:19.533
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:22:19.539
  Dec 19 10:22:19.562: INFO: Pod name cleanup-pod: Found 0 pods out of 1
  Dec 19 10:22:24.573: INFO: Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 12/19/23 10:22:24.573
  Dec 19 10:22:24.573: INFO: Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 12/19/23 10:22:24.6
  Dec 19 10:22:24.635: INFO: Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2168",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "372316d6-56aa-429c-b11d-e8bdf51c9598",
      ResourceVersion: (string) (len=5) "14561",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838578144,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578144,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 0,
      Replicas: (int32) 0,
      UpdatedReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) <nil>,
      CollisionCount: (*int32)(<nil>)
    }
  }


  Dec 19 10:22:24.656: INFO: New ReplicaSet "test-cleanup-deployment-58dcc84f74" of Deployment "test-cleanup-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-cleanup-deployment-58dcc84f74",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2168",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9fdc16de-4ab2-4e3c-b406-fc08982f74be",
      ResourceVersion: (string) (len=5) "14563",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838578144,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "58dcc84f74"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "372316d6-56aa-429c-b11d-e8bdf51c9598",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578144,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 33 37 32 33 31 36  64 36 2d 35 36 61 61 2d  |\"372316d6-56aa-|
              00000120  34 32 39 63 2d 62 31 31  64 2d 65 38 62 64 66 35  |429c-b11d-e8bdf5|
              00000130  31 63 39 35 39 38 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |1c9598\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "58dcc84f74"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "58dcc84f74"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 0,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Dec 19 10:22:24.659: INFO: All old ReplicaSets of Deployment "test-cleanup-deployment":
  Dec 19 10:22:24.661: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2168",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "70cdc13c-bf24-47b1-b1f9-2f878b89d52d",
      ResourceVersion: (string) (len=5) "14562",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838578139,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "pod": (string) (len=5) "httpd",
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "372316d6-56aa-429c-b11d-e8bdf51c9598",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578139,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=483) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000050  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000060  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000070  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000080  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000090  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              000000a0  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000b0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000c0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000d0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000f0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000100  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000110  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000120  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000130  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000140  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000160  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000170  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000180  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000190  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000001a0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001b0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001c0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001d0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001e0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578140,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578144,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=103) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000020  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000030  22 75 69 64 5c 22 3a 5c  22 33 37 32 33 31 36 64  |"uid\":\"372316d|
              00000040  36 2d 35 36 61 61 2d 34  32 39 63 2d 62 31 31 64  |6-56aa-429c-b11d|
              00000050  2d 65 38 62 64 66 35 31  63 39 35 39 38 5c 22 7d  |-e8bdf51c9598\"}|
              00000060  22 3a 7b 7d 7d 7d 7d                              |":{}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Dec 19 10:22:24.724: INFO: Pod "test-cleanup-controller-t6j8z" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=29) "test-cleanup-controller-t6j8z",
      GenerateName: (string) (len=24) "test-cleanup-controller-",
      Namespace: (string) (len=15) "deployment-2168",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "af54878e-7059-4894-8864-60a748938c34",
      ResourceVersion: (string) (len=5) "14545",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838578139,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=23) "test-cleanup-controller",
          UID: (types.UID) (len=36) "70cdc13c-bf24-47b1-b1f9-2f878b89d52d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578139,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=500) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 2c 22 66  |},"f:pod":{}},"f|
              00000050  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000060  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000070  75 69 64 5c 22 3a 5c 22  37 30 63 64 63 31 33 63  |uid\":\"70cdc13c|
              00000080  2d 62 66 32 34 2d 34 37  62 31 2d 62 31 66 39 2d  |-bf24-47b1-b1f9-|
              00000090  32 66 38 37 38 62 38 39  64 35 32 64 5c 22 7d 22  |2f878b89d52d\"}"|
              000000a0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000b0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000c0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              000000d0  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              000000e0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              000000f0  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000100  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000110  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000120  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000130  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000140  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000150  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000160  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              00000170  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              00000180  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              00000190  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001a0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001b0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001c0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              000001d0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              000001e0  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              000001f0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578140,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 36 2e  31 33 37 5c 22 7d 22 3a  |.233.66.137\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-q9q89",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-q9q89",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)(<nil>),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "dah7vaemeeho-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578140,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578139,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578140,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578140,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578139,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.250",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.250"
        }
      },
      PodIP: (string) (len=13) "10.233.66.137",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.66.137"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838578139,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63838578140,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=64) "987dae5a853a43c663ab2f902708e65874bd2c0189aa0bc57d81ffb57187d089",
          ContainerID: (string) (len=72) "cri-o://428a2301e0aa70c725e524f8894ea338f7e9ef70b3231eb553a35fc60a0b9db9",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 19 10:22:24.742: INFO: Pod "test-cleanup-deployment-58dcc84f74-8jhqq" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-cleanup-deployment-58dcc84f74-8jhqq",
      GenerateName: (string) (len=35) "test-cleanup-deployment-58dcc84f74-",
      Namespace: (string) (len=15) "deployment-2168",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8d4dec9f-606c-4a43-98e5-7a3f2c15ce1c",
      ResourceVersion: (string) (len=5) "14566",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838578144,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "58dcc84f74"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-cleanup-deployment-58dcc84f74",
          UID: (types.UID) (len=36) "9fdc16de-4ab2-4e3c-b406-fc08982f74be",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838578144,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 66  64 63 31 36 64 65 2d 34  |d\":\"9fdc16de-4|
              00000090  61 62 32 2d 34 65 33 63  2d 62 34 30 36 2d 66 63  |ab2-4e3c-b406-fc|
              000000a0  30 38 39 38 32 66 37 34  62 65 5c 22 7d 22 3a 7b  |08982f74be\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4c5w8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4c5w8",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 19 10:22:24.755: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-2168" for this suite. @ 12/19/23 10:22:24.821
• [5.378 seconds]
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:110
  STEP: Creating a kubernetes client @ 12/19/23 10:22:24.87
  Dec 19 10:22:24.870: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename emptydir @ 12/19/23 10:22:24.875
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:22:24.914
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:22:24.92
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 12/19/23 10:22:24.93
  STEP: Saw pod success @ 12/19/23 10:22:29.006
  Dec 19 10:22:29.044: INFO: Trying to get logs from node dah7vaemeeho-3 pod pod-ef576f28-2d8c-4890-9081-33c8e94d1316 container test-container: <nil>
  STEP: delete the pod @ 12/19/23 10:22:29.089
  Dec 19 10:22:29.135: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1945" for this suite. @ 12/19/23 10:22:29.146
• [4.290 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/configmap_volume.go:48
  STEP: Creating a kubernetes client @ 12/19/23 10:22:29.173
  Dec 19 10:22:29.173: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename configmap @ 12/19/23 10:22:29.178
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:22:29.203
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:22:29.209
  STEP: Creating configMap with name configmap-test-volume-8aeb2baa-b17b-4cc7-b428-021a2dd1005c @ 12/19/23 10:22:29.217
  STEP: Creating a pod to test consume configMaps @ 12/19/23 10:22:29.231
  STEP: Saw pod success @ 12/19/23 10:22:33.29
  Dec 19 10:22:33.298: INFO: Trying to get logs from node dah7vaemeeho-3 pod pod-configmaps-93baeb3e-35e9-40d2-b283-bbe75be10815 container agnhost-container: <nil>
  STEP: delete the pod @ 12/19/23 10:22:33.316
  Dec 19 10:22:33.350: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1876" for this suite. @ 12/19/23 10:22:33.359
• [4.205 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 12/19/23 10:22:33.38
  Dec 19 10:22:33.380: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename secrets @ 12/19/23 10:22:33.383
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:22:33.429
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:22:33.435
  Dec 19 10:22:33.536: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1809" for this suite. @ 12/19/23 10:22:33.552
• [0.196 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
test/e2e/network/dns.go:329
  STEP: Creating a kubernetes client @ 12/19/23 10:22:33.578
  Dec 19 10:22:33.578: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename dns @ 12/19/23 10:22:33.581
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:22:33.614
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:22:33.62
  STEP: Creating a test externalName service @ 12/19/23 10:22:33.626
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-7050.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-7050.svc.cluster.local; sleep 1; done
   @ 12/19/23 10:22:33.642
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-7050.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-7050.svc.cluster.local; sleep 1; done
   @ 12/19/23 10:22:33.642
  STEP: creating a pod to probe DNS @ 12/19/23 10:22:33.642
  STEP: submitting the pod to kubernetes @ 12/19/23 10:22:33.643
  STEP: retrieving the pod @ 12/19/23 10:22:35.7
  STEP: looking for the results for each expected name from probers @ 12/19/23 10:22:35.709
  Dec 19 10:22:35.732: INFO: File wheezy_udp@dns-test-service-3.dns-7050.svc.cluster.local from pod  dns-7050/dns-test-f21acdff-ca93-44d1-b742-f1a8580dd5f7 contains '' instead of 'foo.example.com.'
  Dec 19 10:22:35.740: INFO: Lookups using dns-7050/dns-test-f21acdff-ca93-44d1-b742-f1a8580dd5f7 failed for: [wheezy_udp@dns-test-service-3.dns-7050.svc.cluster.local]

  Dec 19 10:22:35.753: INFO: Pod client logs for webserver: 
  Dec 19 10:22:35.769: INFO: Pod client logs for querier: 
  Dec 19 10:22:35.783: INFO: Pod client logs for jessie-querier: 
  Dec 19 10:22:40.737: INFO: DNS probes using dns-test-f21acdff-ca93-44d1-b742-f1a8580dd5f7 succeeded

  STEP: changing the externalName to bar.example.com @ 12/19/23 10:22:40.738
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-7050.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-7050.svc.cluster.local; sleep 1; done
   @ 12/19/23 10:22:40.76
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-7050.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-7050.svc.cluster.local; sleep 1; done
   @ 12/19/23 10:22:40.76
  STEP: creating a second pod to probe DNS @ 12/19/23 10:22:40.76
  STEP: submitting the pod to kubernetes @ 12/19/23 10:22:40.761
  STEP: retrieving the pod @ 12/19/23 10:22:44.815
  STEP: looking for the results for each expected name from probers @ 12/19/23 10:22:44.832
  Dec 19 10:22:44.848: INFO: File wheezy_udp@dns-test-service-3.dns-7050.svc.cluster.local from pod  dns-7050/dns-test-75dcdf9e-0c3d-4d56-adf9-4974ac777db4 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Dec 19 10:22:44.858: INFO: File jessie_udp@dns-test-service-3.dns-7050.svc.cluster.local from pod  dns-7050/dns-test-75dcdf9e-0c3d-4d56-adf9-4974ac777db4 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Dec 19 10:22:44.858: INFO: Lookups using dns-7050/dns-test-75dcdf9e-0c3d-4d56-adf9-4974ac777db4 failed for: [wheezy_udp@dns-test-service-3.dns-7050.svc.cluster.local jessie_udp@dns-test-service-3.dns-7050.svc.cluster.local]

  Dec 19 10:22:44.878: INFO: Pod client logs for webserver: 
  Dec 19 10:22:44.899: INFO: Pod client logs for querier: 
  Dec 19 10:22:44.921: INFO: Pod client logs for jessie-querier: 
  Dec 19 10:22:49.844: INFO: File wheezy_udp@dns-test-service-3.dns-7050.svc.cluster.local from pod  dns-7050/dns-test-75dcdf9e-0c3d-4d56-adf9-4974ac777db4 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Dec 19 10:22:49.851: INFO: File jessie_udp@dns-test-service-3.dns-7050.svc.cluster.local from pod  dns-7050/dns-test-75dcdf9e-0c3d-4d56-adf9-4974ac777db4 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Dec 19 10:22:49.851: INFO: Lookups using dns-7050/dns-test-75dcdf9e-0c3d-4d56-adf9-4974ac777db4 failed for: [wheezy_udp@dns-test-service-3.dns-7050.svc.cluster.local jessie_udp@dns-test-service-3.dns-7050.svc.cluster.local]

  Dec 19 10:22:49.867: INFO: Pod client logs for webserver: 
  Dec 19 10:22:49.881: INFO: Pod client logs for querier: 
  Dec 19 10:22:49.895: INFO: Pod client logs for jessie-querier: 
  Dec 19 10:22:54.845: INFO: File wheezy_udp@dns-test-service-3.dns-7050.svc.cluster.local from pod  dns-7050/dns-test-75dcdf9e-0c3d-4d56-adf9-4974ac777db4 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Dec 19 10:22:54.856: INFO: File jessie_udp@dns-test-service-3.dns-7050.svc.cluster.local from pod  dns-7050/dns-test-75dcdf9e-0c3d-4d56-adf9-4974ac777db4 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Dec 19 10:22:54.856: INFO: Lookups using dns-7050/dns-test-75dcdf9e-0c3d-4d56-adf9-4974ac777db4 failed for: [wheezy_udp@dns-test-service-3.dns-7050.svc.cluster.local jessie_udp@dns-test-service-3.dns-7050.svc.cluster.local]

  Dec 19 10:22:54.874: INFO: Pod client logs for webserver: 
  Dec 19 10:22:54.896: INFO: Pod client logs for querier: 
  Dec 19 10:22:54.914: INFO: Pod client logs for jessie-querier: 
  Dec 19 10:22:59.843: INFO: File wheezy_udp@dns-test-service-3.dns-7050.svc.cluster.local from pod  dns-7050/dns-test-75dcdf9e-0c3d-4d56-adf9-4974ac777db4 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Dec 19 10:22:59.854: INFO: File jessie_udp@dns-test-service-3.dns-7050.svc.cluster.local from pod  dns-7050/dns-test-75dcdf9e-0c3d-4d56-adf9-4974ac777db4 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Dec 19 10:22:59.856: INFO: Lookups using dns-7050/dns-test-75dcdf9e-0c3d-4d56-adf9-4974ac777db4 failed for: [wheezy_udp@dns-test-service-3.dns-7050.svc.cluster.local jessie_udp@dns-test-service-3.dns-7050.svc.cluster.local]

  Dec 19 10:22:59.876: INFO: Pod client logs for webserver: 
  Dec 19 10:22:59.892: INFO: Pod client logs for querier: 
  Dec 19 10:22:59.907: INFO: Pod client logs for jessie-querier: 
  Dec 19 10:23:04.843: INFO: File wheezy_udp@dns-test-service-3.dns-7050.svc.cluster.local from pod  dns-7050/dns-test-75dcdf9e-0c3d-4d56-adf9-4974ac777db4 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Dec 19 10:23:04.853: INFO: File jessie_udp@dns-test-service-3.dns-7050.svc.cluster.local from pod  dns-7050/dns-test-75dcdf9e-0c3d-4d56-adf9-4974ac777db4 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Dec 19 10:23:04.854: INFO: Lookups using dns-7050/dns-test-75dcdf9e-0c3d-4d56-adf9-4974ac777db4 failed for: [wheezy_udp@dns-test-service-3.dns-7050.svc.cluster.local jessie_udp@dns-test-service-3.dns-7050.svc.cluster.local]

  Dec 19 10:23:04.878: INFO: Pod client logs for webserver: 
  Dec 19 10:23:04.896: INFO: Pod client logs for querier: 
  Dec 19 10:23:04.911: INFO: Pod client logs for jessie-querier: 
  Dec 19 10:23:09.845: INFO: DNS probes using dns-test-75dcdf9e-0c3d-4d56-adf9-4974ac777db4 succeeded

  STEP: changing the service to type=ClusterIP @ 12/19/23 10:23:09.845
  W1219 10:23:09.878813      14 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-7050.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-7050.svc.cluster.local; sleep 1; done
   @ 12/19/23 10:23:09.882
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-7050.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-7050.svc.cluster.local; sleep 1; done
   @ 12/19/23 10:23:09.882
  STEP: creating a third pod to probe DNS @ 12/19/23 10:23:09.883
  STEP: submitting the pod to kubernetes @ 12/19/23 10:23:09.889
  STEP: retrieving the pod @ 12/19/23 10:23:34.062
  STEP: looking for the results for each expected name from probers @ 12/19/23 10:23:34.073
  Dec 19 10:23:34.104: INFO: DNS probes using dns-test-254c6a01-3db3-4a2d-86b0-e57c8455d7b4 succeeded

  STEP: deleting the pod @ 12/19/23 10:23:34.106
  STEP: deleting the pod @ 12/19/23 10:23:34.203
  STEP: deleting the pod @ 12/19/23 10:23:34.321
  STEP: deleting the test externalName service @ 12/19/23 10:23:34.376
  Dec 19 10:23:34.429: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-7050" for this suite. @ 12/19/23 10:23:34.442
• [60.882 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:195
  STEP: Creating a kubernetes client @ 12/19/23 10:23:34.478
  Dec 19 10:23:34.478: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename downward-api @ 12/19/23 10:23:34.513
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:23:34.56
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:23:34.568
  STEP: Creating a pod to test downward API volume plugin @ 12/19/23 10:23:34.574
  STEP: Saw pod success @ 12/19/23 10:23:38.615
  Dec 19 10:23:38.631: INFO: Trying to get logs from node dah7vaemeeho-3 pod downwardapi-volume-363eca57-f2c1-4c13-82a1-7c4c7edd840b container client-container: <nil>
  STEP: delete the pod @ 12/19/23 10:23:38.649
  Dec 19 10:23:38.691: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1727" for this suite. @ 12/19/23 10:23:38.702
• [4.240 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:344
  STEP: Creating a kubernetes client @ 12/19/23 10:23:38.72
  Dec 19 10:23:38.720: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename kubectl @ 12/19/23 10:23:38.722
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:23:38.759
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:23:38.763
  STEP: creating a replication controller @ 12/19/23 10:23:38.769
  Dec 19 10:23:38.769: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=kubectl-1223 create -f -'
  Dec 19 10:23:39.036: INFO: stderr: ""
  Dec 19 10:23:39.036: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 12/19/23 10:23:39.036
  Dec 19 10:23:39.037: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=kubectl-1223 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Dec 19 10:23:39.233: INFO: stderr: ""
  Dec 19 10:23:39.233: INFO: stdout: "update-demo-nautilus-4l7jw update-demo-nautilus-9xp48 "
  Dec 19 10:23:39.233: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=kubectl-1223 get pods update-demo-nautilus-4l7jw -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Dec 19 10:23:39.380: INFO: stderr: ""
  Dec 19 10:23:39.380: INFO: stdout: ""
  Dec 19 10:23:39.380: INFO: update-demo-nautilus-4l7jw is created but not running
  Dec 19 10:23:44.383: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=kubectl-1223 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Dec 19 10:23:44.574: INFO: stderr: ""
  Dec 19 10:23:44.574: INFO: stdout: "update-demo-nautilus-4l7jw update-demo-nautilus-9xp48 "
  Dec 19 10:23:44.575: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=kubectl-1223 get pods update-demo-nautilus-4l7jw -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Dec 19 10:23:44.747: INFO: stderr: ""
  Dec 19 10:23:44.748: INFO: stdout: ""
  Dec 19 10:23:44.748: INFO: update-demo-nautilus-4l7jw is created but not running
  Dec 19 10:23:49.748: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=kubectl-1223 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Dec 19 10:23:49.908: INFO: stderr: ""
  Dec 19 10:23:49.908: INFO: stdout: "update-demo-nautilus-4l7jw update-demo-nautilus-9xp48 "
  Dec 19 10:23:49.908: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=kubectl-1223 get pods update-demo-nautilus-4l7jw -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Dec 19 10:23:50.072: INFO: stderr: ""
  Dec 19 10:23:50.072: INFO: stdout: ""
  Dec 19 10:23:50.072: INFO: update-demo-nautilus-4l7jw is created but not running
  Dec 19 10:23:55.073: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=kubectl-1223 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Dec 19 10:23:55.236: INFO: stderr: ""
  Dec 19 10:23:55.237: INFO: stdout: "update-demo-nautilus-4l7jw update-demo-nautilus-9xp48 "
  Dec 19 10:23:55.237: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=kubectl-1223 get pods update-demo-nautilus-4l7jw -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Dec 19 10:23:55.410: INFO: stderr: ""
  Dec 19 10:23:55.410: INFO: stdout: ""
  Dec 19 10:23:55.410: INFO: update-demo-nautilus-4l7jw is created but not running
  Dec 19 10:24:00.414: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=kubectl-1223 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Dec 19 10:24:00.578: INFO: stderr: ""
  Dec 19 10:24:00.578: INFO: stdout: "update-demo-nautilus-4l7jw update-demo-nautilus-9xp48 "
  Dec 19 10:24:00.579: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=kubectl-1223 get pods update-demo-nautilus-4l7jw -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Dec 19 10:24:00.716: INFO: stderr: ""
  Dec 19 10:24:00.717: INFO: stdout: "true"
  Dec 19 10:24:00.717: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=kubectl-1223 get pods update-demo-nautilus-4l7jw -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Dec 19 10:24:00.883: INFO: stderr: ""
  Dec 19 10:24:00.883: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Dec 19 10:24:00.883: INFO: validating pod update-demo-nautilus-4l7jw
  Dec 19 10:24:00.903: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Dec 19 10:24:00.903: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Dec 19 10:24:00.903: INFO: update-demo-nautilus-4l7jw is verified up and running
  Dec 19 10:24:00.904: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=kubectl-1223 get pods update-demo-nautilus-9xp48 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Dec 19 10:24:01.075: INFO: stderr: ""
  Dec 19 10:24:01.075: INFO: stdout: "true"
  Dec 19 10:24:01.075: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=kubectl-1223 get pods update-demo-nautilus-9xp48 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Dec 19 10:24:01.192: INFO: stderr: ""
  Dec 19 10:24:01.192: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Dec 19 10:24:01.192: INFO: validating pod update-demo-nautilus-9xp48
  Dec 19 10:24:01.208: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Dec 19 10:24:01.208: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Dec 19 10:24:01.208: INFO: update-demo-nautilus-9xp48 is verified up and running
  STEP: using delete to clean up resources @ 12/19/23 10:24:01.208
  Dec 19 10:24:01.208: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=kubectl-1223 delete --grace-period=0 --force -f -'
  Dec 19 10:24:01.336: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Dec 19 10:24:01.336: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  Dec 19 10:24:01.337: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=kubectl-1223 get rc,svc -l name=update-demo --no-headers'
  Dec 19 10:24:01.541: INFO: stderr: "No resources found in kubectl-1223 namespace.\n"
  Dec 19 10:24:01.541: INFO: stdout: ""
  Dec 19 10:24:01.542: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=kubectl-1223 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Dec 19 10:24:01.711: INFO: stderr: ""
  Dec 19 10:24:01.711: INFO: stdout: ""
  Dec 19 10:24:01.711: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1223" for this suite. @ 12/19/23 10:24:01.726
• [23.021 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
test/e2e/common/node/lease.go:73
  STEP: Creating a kubernetes client @ 12/19/23 10:24:01.742
  Dec 19 10:24:01.742: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename lease-test @ 12/19/23 10:24:01.747
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:24:01.777
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:24:01.786
  Dec 19 10:24:01.912: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-7681" for this suite. @ 12/19/23 10:24:01.919
• [0.192 seconds]
------------------------------
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
test/e2e/apimachinery/chunking.go:144
  STEP: Creating a kubernetes client @ 12/19/23 10:24:01.934
  Dec 19 10:24:01.934: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename chunking @ 12/19/23 10:24:01.937
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:24:01.959
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:24:01.966
  STEP: creating a large number of resources @ 12/19/23 10:24:01.971
  STEP: retrieving the first page @ 12/19/23 10:24:19.653
  Dec 19 10:24:19.700: INFO: Retrieved 40/40 results with rv 15485 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU0ODUsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page until the token expires @ 12/19/23 10:24:19.7
  Dec 19 10:24:39.715: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU0ODUsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Dec 19 10:24:59.721: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU0ODUsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Dec 19 10:25:19.718: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU0ODUsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Dec 19 10:25:39.742: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU0ODUsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Dec 19 10:25:59.721: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU0ODUsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Dec 19 10:26:19.713: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU0ODUsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Dec 19 10:26:39.729: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU0ODUsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Dec 19 10:26:59.717: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU0ODUsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Dec 19 10:27:19.731: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU0ODUsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Dec 19 10:27:39.729: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU0ODUsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Dec 19 10:27:59.718: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU0ODUsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Dec 19 10:28:19.720: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU0ODUsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Dec 19 10:28:39.725: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU0ODUsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Dec 19 10:28:59.716: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU0ODUsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Dec 19 10:29:19.741: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU0ODUsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Dec 19 10:29:39.716: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTU0ODUsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  Dec 19 10:29:59.711: INFO: got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  Dec 19 10:29:59.712: INFO: Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 12/19/23 10:29:59.712
  STEP: retrieving all remaining pages @ 12/19/23 10:29:59.722
  Dec 19 10:29:59.735: INFO: Retrieved 40/40 results with rv 16062 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTYwNjIsInN0YXJ0IjoidGVtcGxhdGUtMDExOVx1MDAwMCJ9
  Dec 19 10:29:59.748: INFO: Retrieved 40/40 results with rv 16062 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTYwNjIsInN0YXJ0IjoidGVtcGxhdGUtMDE1OVx1MDAwMCJ9
  Dec 19 10:29:59.759: INFO: Retrieved 40/40 results with rv 16062 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTYwNjIsInN0YXJ0IjoidGVtcGxhdGUtMDE5OVx1MDAwMCJ9
  Dec 19 10:29:59.775: INFO: Retrieved 40/40 results with rv 16062 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTYwNjIsInN0YXJ0IjoidGVtcGxhdGUtMDIzOVx1MDAwMCJ9
  Dec 19 10:29:59.785: INFO: Retrieved 40/40 results with rv 16062 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTYwNjIsInN0YXJ0IjoidGVtcGxhdGUtMDI3OVx1MDAwMCJ9
  Dec 19 10:29:59.795: INFO: Retrieved 40/40 results with rv 16062 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTYwNjIsInN0YXJ0IjoidGVtcGxhdGUtMDMxOVx1MDAwMCJ9
  Dec 19 10:29:59.808: INFO: Retrieved 40/40 results with rv 16062 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTYwNjIsInN0YXJ0IjoidGVtcGxhdGUtMDM1OVx1MDAwMCJ9
  Dec 19 10:29:59.821: INFO: Retrieved 40/40 results with rv 16062 and continue 
  Dec 19 10:29:59.822: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-6375" for this suite. @ 12/19/23 10:29:59.837
• [357.919 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/kubelet.go:51
  STEP: Creating a kubernetes client @ 12/19/23 10:29:59.857
  Dec 19 10:29:59.858: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename kubelet-test @ 12/19/23 10:29:59.863
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:29:59.896
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:29:59.901
  Dec 19 10:30:02.059: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-3214" for this suite. @ 12/19/23 10:30:02.074
• [2.241 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 12/19/23 10:30:02.104
  Dec 19 10:30:02.104: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename certificates @ 12/19/23 10:30:02.111
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:30:02.145
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:30:02.15
  STEP: getting /apis @ 12/19/23 10:30:05.264
  STEP: getting /apis/certificates.k8s.io @ 12/19/23 10:30:05.274
  STEP: getting /apis/certificates.k8s.io/v1 @ 12/19/23 10:30:05.278
  STEP: creating @ 12/19/23 10:30:05.285
  STEP: getting @ 12/19/23 10:30:05.339
  STEP: listing @ 12/19/23 10:30:05.352
  STEP: watching @ 12/19/23 10:30:05.367
  Dec 19 10:30:05.368: INFO: starting watch
  STEP: patching @ 12/19/23 10:30:05.37
  STEP: updating @ 12/19/23 10:30:05.397
  Dec 19 10:30:05.410: INFO: waiting for watch events with expected annotations
  Dec 19 10:30:05.410: INFO: saw patched and updated annotations
  STEP: getting /approval @ 12/19/23 10:30:05.41
  STEP: patching /approval @ 12/19/23 10:30:05.421
  STEP: updating /approval @ 12/19/23 10:30:05.442
  STEP: getting /status @ 12/19/23 10:30:05.456
  STEP: patching /status @ 12/19/23 10:30:05.465
  STEP: updating /status @ 12/19/23 10:30:05.483
  STEP: deleting @ 12/19/23 10:30:05.503
  STEP: deleting a collection @ 12/19/23 10:30:05.538
  Dec 19 10:30:05.606: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-5622" for this suite. @ 12/19/23 10:30:05.62
• [3.536 seconds]
------------------------------
SSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
test/e2e/apps/statefulset.go:902
  STEP: Creating a kubernetes client @ 12/19/23 10:30:05.639
  Dec 19 10:30:05.639: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename statefulset @ 12/19/23 10:30:05.642
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:30:05.69
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:30:05.698
  STEP: Creating service test in namespace statefulset-5564 @ 12/19/23 10:30:05.707
  STEP: Creating statefulset ss in namespace statefulset-5564 @ 12/19/23 10:30:05.721
  Dec 19 10:30:05.762: INFO: Found 0 stateful pods, waiting for 1
  Dec 19 10:30:15.755: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 12/19/23 10:30:15.769
  STEP: updating a scale subresource @ 12/19/23 10:30:15.773
  STEP: verifying the statefulset Spec.Replicas was modified @ 12/19/23 10:30:15.787
  STEP: Patch a scale subresource @ 12/19/23 10:30:15.796
  STEP: verifying the statefulset Spec.Replicas was modified @ 12/19/23 10:30:15.812
  Dec 19 10:30:15.826: INFO: Deleting all statefulset in ns statefulset-5564
  Dec 19 10:30:15.836: INFO: Scaling statefulset ss to 0
  Dec 19 10:30:25.939: INFO: Waiting for statefulset status.replicas updated to 0
  Dec 19 10:30:25.949: INFO: Deleting statefulset ss
  Dec 19 10:30:25.987: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-5564" for this suite. @ 12/19/23 10:30:25.999
• [20.381 seconds]
------------------------------
SS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
test/e2e/apps/disruption.go:108
  STEP: Creating a kubernetes client @ 12/19/23 10:30:26.023
  Dec 19 10:30:26.023: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename disruption @ 12/19/23 10:30:26.027
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:30:26.068
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:30:26.073
  STEP: creating the pdb @ 12/19/23 10:30:26.08
  STEP: Waiting for the pdb to be processed @ 12/19/23 10:30:26.091
  STEP: updating the pdb @ 12/19/23 10:30:28.102
  STEP: Waiting for the pdb to be processed @ 12/19/23 10:30:28.129
  STEP: patching the pdb @ 12/19/23 10:30:30.139
  STEP: Waiting for the pdb to be processed @ 12/19/23 10:30:30.164
  STEP: Waiting for the pdb to be deleted @ 12/19/23 10:30:30.184
  Dec 19 10:30:30.195: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-9494" for this suite. @ 12/19/23 10:30:30.206
• [4.201 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/containers.go:61
  STEP: Creating a kubernetes client @ 12/19/23 10:30:30.225
  Dec 19 10:30:30.225: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename containers @ 12/19/23 10:30:30.231
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:30:30.313
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:30:30.318
  STEP: Creating a pod to test override arguments @ 12/19/23 10:30:30.323
  STEP: Saw pod success @ 12/19/23 10:30:34.378
  Dec 19 10:30:34.394: INFO: Trying to get logs from node dah7vaemeeho-3 pod client-containers-a054e41d-93d3-45ea-9ade-08e88526bcbb container agnhost-container: <nil>
  STEP: delete the pod @ 12/19/23 10:30:34.415
  Dec 19 10:30:34.450: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-7128" for this suite. @ 12/19/23 10:30:34.463
• [4.261 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
test/e2e/apps/disruption.go:87
  STEP: Creating a kubernetes client @ 12/19/23 10:30:34.508
  Dec 19 10:30:34.508: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename disruption @ 12/19/23 10:30:34.513
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:30:34.542
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:30:34.548
  STEP: Creating a kubernetes client @ 12/19/23 10:30:34.556
  Dec 19 10:30:34.556: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename disruption-2 @ 12/19/23 10:30:34.561
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:30:34.587
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:30:34.592
  STEP: Waiting for the pdb to be processed @ 12/19/23 10:30:34.607
  STEP: Waiting for the pdb to be processed @ 12/19/23 10:30:36.639
  STEP: Waiting for the pdb to be processed @ 12/19/23 10:30:36.665
  STEP: listing a collection of PDBs across all namespaces @ 12/19/23 10:30:36.682
  STEP: listing a collection of PDBs in namespace disruption-450 @ 12/19/23 10:30:36.694
  STEP: deleting a collection of PDBs @ 12/19/23 10:30:36.7
  STEP: Waiting for the PDB collection to be deleted @ 12/19/23 10:30:36.755
  Dec 19 10:30:36.760: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-3215" for this suite. @ 12/19/23 10:30:36.776
  Dec 19 10:30:36.796: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-450" for this suite. @ 12/19/23 10:30:36.811
• [2.320 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:3154
  STEP: Creating a kubernetes client @ 12/19/23 10:30:36.836
  Dec 19 10:30:36.836: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename services @ 12/19/23 10:30:36.84
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:30:36.874
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:30:36.879
  STEP: creating an Endpoint @ 12/19/23 10:30:36.891
  STEP: waiting for available Endpoint @ 12/19/23 10:30:36.902
  STEP: listing all Endpoints @ 12/19/23 10:30:36.906
  STEP: updating the Endpoint @ 12/19/23 10:30:36.913
  STEP: fetching the Endpoint @ 12/19/23 10:30:36.926
  STEP: patching the Endpoint @ 12/19/23 10:30:36.933
  STEP: fetching the Endpoint @ 12/19/23 10:30:36.951
  STEP: deleting the Endpoint by Collection @ 12/19/23 10:30:36.957
  STEP: waiting for Endpoint deletion @ 12/19/23 10:30:36.971
  STEP: fetching the Endpoint @ 12/19/23 10:30:36.974
  Dec 19 10:30:36.980: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4512" for this suite. @ 12/19/23 10:30:36.987
• [0.166 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:391
  STEP: Creating a kubernetes client @ 12/19/23 10:30:37.011
  Dec 19 10:30:37.011: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/19/23 10:30:37.014
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:30:37.092
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:30:37.098
  STEP: set up a multi version CRD @ 12/19/23 10:30:37.104
  Dec 19 10:30:37.106: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: rename a version @ 12/19/23 10:30:41.959
  STEP: check the new version name is served @ 12/19/23 10:30:41.991
  STEP: check the old version name is removed @ 12/19/23 10:30:43.683
  STEP: check the other version is not changed @ 12/19/23 10:30:44.571
  Dec 19 10:30:48.203: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6818" for this suite. @ 12/19/23 10:30:48.222
• [11.227 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
test/e2e/apps/job.go:655
  STEP: Creating a kubernetes client @ 12/19/23 10:30:48.238
  Dec 19 10:30:48.238: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename job @ 12/19/23 10:30:48.242
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:30:48.275
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:30:48.28
  STEP: Creating a job @ 12/19/23 10:30:48.287
  STEP: Ensuring active pods == parallelism @ 12/19/23 10:30:48.302
  STEP: Orphaning one of the Job's Pods @ 12/19/23 10:30:50.317
  Dec 19 10:30:50.853: INFO: Successfully updated pod "adopt-release-5hgjc"
  STEP: Checking that the Job readopts the Pod @ 12/19/23 10:30:50.855
  STEP: Removing the labels from the Job's Pod @ 12/19/23 10:30:52.878
  Dec 19 10:30:53.425: INFO: Successfully updated pod "adopt-release-5hgjc"
  STEP: Checking that the Job releases the Pod @ 12/19/23 10:30:53.425
  Dec 19 10:30:55.445: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6475" for this suite. @ 12/19/23 10:30:55.462
• [7.237 seconds]
------------------------------
SS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:237
  STEP: Creating a kubernetes client @ 12/19/23 10:30:55.476
  Dec 19 10:30:55.476: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename downward-api @ 12/19/23 10:30:55.478
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:30:55.507
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:30:55.512
  STEP: Creating a pod to test downward API volume plugin @ 12/19/23 10:30:55.518
  STEP: Saw pod success @ 12/19/23 10:30:59.57
  Dec 19 10:30:59.576: INFO: Trying to get logs from node dah7vaemeeho-3 pod downwardapi-volume-a913ad9c-91e9-405c-bb76-4567fcad59fb container client-container: <nil>
  STEP: delete the pod @ 12/19/23 10:30:59.591
  Dec 19 10:30:59.637: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3588" for this suite. @ 12/19/23 10:30:59.654
• [4.195 seconds]
------------------------------
S
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
test/e2e/network/dns.go:244
  STEP: Creating a kubernetes client @ 12/19/23 10:30:59.672
  Dec 19 10:30:59.672: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename dns @ 12/19/23 10:30:59.675
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:30:59.707
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:30:59.711
  STEP: Creating a test headless service @ 12/19/23 10:30:59.72
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-1463.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-1463.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
   @ 12/19/23 10:30:59.731
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-1463.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-1463.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 12/19/23 10:30:59.731
  STEP: creating a pod to probe DNS @ 12/19/23 10:30:59.731
  STEP: submitting the pod to kubernetes @ 12/19/23 10:30:59.731
  STEP: retrieving the pod @ 12/19/23 10:31:01.784
  STEP: looking for the results for each expected name from probers @ 12/19/23 10:31:01.79
  Dec 19 10:31:01.848: INFO: Unable to read jessie_hosts@dns-querier-2 from pod dns-1463/dns-test-85db3dc9-0290-4705-b3c7-9e142d9b930c: the server could not find the requested resource (get pods dns-test-85db3dc9-0290-4705-b3c7-9e142d9b930c)
  Dec 19 10:31:01.849: INFO: Lookups using dns-1463/dns-test-85db3dc9-0290-4705-b3c7-9e142d9b930c failed for: [jessie_hosts@dns-querier-2]

  Dec 19 10:31:01.870: INFO: Pod client logs for webserver: 
  Dec 19 10:31:01.881: INFO: Pod client logs for querier: 
  Dec 19 10:31:01.895: INFO: Pod client logs for jessie-querier: 
  Dec 19 10:31:06.850: INFO: Unable to read jessie_hosts@dns-querier-2 from pod dns-1463/dns-test-85db3dc9-0290-4705-b3c7-9e142d9b930c: the server could not find the requested resource (get pods dns-test-85db3dc9-0290-4705-b3c7-9e142d9b930c)
  Dec 19 10:31:06.850: INFO: Lookups using dns-1463/dns-test-85db3dc9-0290-4705-b3c7-9e142d9b930c failed for: [jessie_hosts@dns-querier-2]

  Dec 19 10:31:06.871: INFO: Pod client logs for webserver: 
  Dec 19 10:31:06.890: INFO: Pod client logs for querier: 
  Dec 19 10:31:06.908: INFO: Pod client logs for jessie-querier: 
  Dec 19 10:31:11.854: INFO: DNS probes using dns-1463/dns-test-85db3dc9-0290-4705-b3c7-9e142d9b930c succeeded

  STEP: deleting the pod @ 12/19/23 10:31:11.856
  STEP: deleting the test headless service @ 12/19/23 10:31:11.904
  Dec 19 10:31:11.937: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-1463" for this suite. @ 12/19/23 10:31:11.958
• [12.302 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:695
  STEP: Creating a kubernetes client @ 12/19/23 10:31:11.978
  Dec 19 10:31:11.978: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename resourcequota @ 12/19/23 10:31:11.989
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:31:12.066
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:31:12.072
  STEP: Creating a ResourceQuota with terminating scope @ 12/19/23 10:31:12.078
  STEP: Ensuring ResourceQuota status is calculated @ 12/19/23 10:31:12.088
  STEP: Creating a ResourceQuota with not terminating scope @ 12/19/23 10:31:14.099
  STEP: Ensuring ResourceQuota status is calculated @ 12/19/23 10:31:14.111
  STEP: Creating a long running pod @ 12/19/23 10:31:16.12
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 12/19/23 10:31:16.156
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 12/19/23 10:31:18.163
  STEP: Deleting the pod @ 12/19/23 10:31:20.17
  STEP: Ensuring resource quota status released the pod usage @ 12/19/23 10:31:20.19
  STEP: Creating a terminating pod @ 12/19/23 10:31:22.217
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 12/19/23 10:31:22.242
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 12/19/23 10:31:24.257
  STEP: Deleting the pod @ 12/19/23 10:31:26.27
  STEP: Ensuring resource quota status released the pod usage @ 12/19/23 10:31:26.325
  Dec 19 10:31:28.339: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3789" for this suite. @ 12/19/23 10:31:28.358
• [16.408 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
test/e2e/apps/statefulset.go:641
  STEP: Creating a kubernetes client @ 12/19/23 10:31:28.397
  Dec 19 10:31:28.397: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename statefulset @ 12/19/23 10:31:28.401
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:31:28.457
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:31:28.462
  STEP: Creating service test in namespace statefulset-2289 @ 12/19/23 10:31:28.479
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 12/19/23 10:31:28.492
  STEP: Creating stateful set ss in namespace statefulset-2289 @ 12/19/23 10:31:28.512
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-2289 @ 12/19/23 10:31:28.544
  Dec 19 10:31:28.551: INFO: Found 0 stateful pods, waiting for 1
  Dec 19 10:31:38.562: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 12/19/23 10:31:38.563
  Dec 19 10:31:38.574: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=statefulset-2289 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Dec 19 10:31:38.917: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Dec 19 10:31:38.917: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Dec 19 10:31:38.917: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Dec 19 10:31:38.928: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  Dec 19 10:31:48.934: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Dec 19 10:31:48.936: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Dec 19 10:31:48.984: INFO: Verifying statefulset ss doesn't scale past 1 for another 9.999999564s
  Dec 19 10:31:49.994: INFO: Verifying statefulset ss doesn't scale past 1 for another 8.981222396s
  Dec 19 10:31:51.009: INFO: Verifying statefulset ss doesn't scale past 1 for another 7.971269067s
  Dec 19 10:31:52.016: INFO: Verifying statefulset ss doesn't scale past 1 for another 6.956783112s
  Dec 19 10:31:53.024: INFO: Verifying statefulset ss doesn't scale past 1 for another 5.949116808s
  Dec 19 10:31:54.033: INFO: Verifying statefulset ss doesn't scale past 1 for another 4.941734463s
  Dec 19 10:31:55.041: INFO: Verifying statefulset ss doesn't scale past 1 for another 3.931360191s
  Dec 19 10:31:56.052: INFO: Verifying statefulset ss doesn't scale past 1 for another 2.924160668s
  Dec 19 10:31:57.079: INFO: Verifying statefulset ss doesn't scale past 1 for another 1.913244194s
  Dec 19 10:31:58.092: INFO: Verifying statefulset ss doesn't scale past 1 for another 886.286539ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-2289 @ 12/19/23 10:31:59.094
  Dec 19 10:31:59.104: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=statefulset-2289 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Dec 19 10:31:59.481: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Dec 19 10:31:59.482: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Dec 19 10:31:59.482: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Dec 19 10:31:59.490: INFO: Found 1 stateful pods, waiting for 3
  Dec 19 10:32:09.496: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Dec 19 10:32:09.497: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Dec 19 10:32:09.497: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 12/19/23 10:32:09.497
  STEP: Scale down will halt with unhealthy stateful pod @ 12/19/23 10:32:09.497
  Dec 19 10:32:09.515: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=statefulset-2289 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Dec 19 10:32:09.821: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Dec 19 10:32:09.822: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Dec 19 10:32:09.822: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Dec 19 10:32:09.822: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=statefulset-2289 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Dec 19 10:32:10.201: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Dec 19 10:32:10.201: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Dec 19 10:32:10.201: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Dec 19 10:32:10.201: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=statefulset-2289 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Dec 19 10:32:10.587: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Dec 19 10:32:10.587: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Dec 19 10:32:10.587: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Dec 19 10:32:10.587: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Dec 19 10:32:10.595: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 1
  Dec 19 10:32:20.608: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Dec 19 10:32:20.608: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  Dec 19 10:32:20.609: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  Dec 19 10:32:20.648: INFO: Verifying statefulset ss doesn't scale past 3 for another 9.999999616s
  Dec 19 10:32:21.658: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.983026944s
  Dec 19 10:32:22.688: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.973156848s
  Dec 19 10:32:23.706: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.943641001s
  Dec 19 10:32:24.718: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.924119736s
  Dec 19 10:32:25.736: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.912936149s
  Dec 19 10:32:26.750: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.895144085s
  Dec 19 10:32:27.766: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.88043977s
  Dec 19 10:32:28.784: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.86567791s
  Dec 19 10:32:29.794: INFO: Verifying statefulset ss doesn't scale past 3 for another 845.921742ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-2289 @ 12/19/23 10:32:30.796
  Dec 19 10:32:30.811: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=statefulset-2289 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Dec 19 10:32:31.129: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Dec 19 10:32:31.129: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Dec 19 10:32:31.129: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Dec 19 10:32:31.130: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=statefulset-2289 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Dec 19 10:32:31.484: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Dec 19 10:32:31.485: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Dec 19 10:32:31.485: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Dec 19 10:32:31.486: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=statefulset-2289 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Dec 19 10:32:31.784: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Dec 19 10:32:31.784: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Dec 19 10:32:31.784: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Dec 19 10:32:31.784: INFO: Scaling statefulset ss to 0
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 12/19/23 10:32:41.818
  Dec 19 10:32:41.819: INFO: Deleting all statefulset in ns statefulset-2289
  Dec 19 10:32:41.826: INFO: Scaling statefulset ss to 0
  Dec 19 10:32:41.847: INFO: Waiting for statefulset status.replicas updated to 0
  Dec 19 10:32:41.854: INFO: Deleting statefulset ss
  Dec 19 10:32:41.882: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2289" for this suite. @ 12/19/23 10:32:41.895
• [73.515 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
test/e2e/node/taints.go:450
  STEP: Creating a kubernetes client @ 12/19/23 10:32:41.916
  Dec 19 10:32:41.917: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename taint-multiple-pods @ 12/19/23 10:32:41.924
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:32:41.97
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:32:41.976
  Dec 19 10:32:41.982: INFO: Waiting up to 1m0s for all nodes to be ready
  Dec 19 10:33:41.983: INFO: Waiting for terminating namespaces to be deleted...
  Dec 19 10:33:41.994: INFO: Starting informer...
  STEP: Starting pods... @ 12/19/23 10:33:41.995
  Dec 19 10:33:42.238: INFO: Pod1 is running on dah7vaemeeho-3. Tainting Node
  Dec 19 10:33:44.347: INFO: Pod2 is running on dah7vaemeeho-3. Tainting Node
  STEP: Trying to apply a taint on the Node @ 12/19/23 10:33:44.348
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 12/19/23 10:33:44.375
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 12/19/23 10:33:44.403
  Dec 19 10:33:50.300: INFO: Noticed Pod "taint-eviction-b1" gets evicted.
  Dec 19 10:34:10.374: INFO: Noticed Pod "taint-eviction-b2" gets evicted.
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 12/19/23 10:34:10.405
  Dec 19 10:34:10.414: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-8417" for this suite. @ 12/19/23 10:34:10.427
• [88.524 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 12/19/23 10:34:10.44
  Dec 19 10:34:10.440: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename projected @ 12/19/23 10:34:10.451
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:34:10.557
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:34:10.567
  STEP: Creating projection with secret that has name projected-secret-test-7ccb09b3-b688-4707-911a-6a6b4b6e2ee9 @ 12/19/23 10:34:10.583
  STEP: Creating a pod to test consume secrets @ 12/19/23 10:34:10.593
  STEP: Saw pod success @ 12/19/23 10:34:14.674
  Dec 19 10:34:14.688: INFO: Trying to get logs from node dah7vaemeeho-3 pod pod-projected-secrets-78edeaa2-b78d-4898-b82f-5baa582a6f15 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 12/19/23 10:34:14.74
  Dec 19 10:34:14.783: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4940" for this suite. @ 12/19/23 10:34:14.797
• [4.370 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
test/e2e/apps/statefulset.go:962
  STEP: Creating a kubernetes client @ 12/19/23 10:34:14.816
  Dec 19 10:34:14.816: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename statefulset @ 12/19/23 10:34:14.822
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:34:14.851
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:34:14.858
  STEP: Creating service test in namespace statefulset-8223 @ 12/19/23 10:34:14.866
  Dec 19 10:34:14.900: INFO: Found 0 stateful pods, waiting for 1
  Dec 19 10:34:24.904: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 12/19/23 10:34:24.919
  W1219 10:34:24.947664      14 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
  Dec 19 10:34:24.962: INFO: Found 1 stateful pods, waiting for 2
  Dec 19 10:34:34.968: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Dec 19 10:34:34.968: INFO: Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 12/19/23 10:34:34.986
  STEP: Delete all of the StatefulSets @ 12/19/23 10:34:34.992
  STEP: Verify that StatefulSets have been deleted @ 12/19/23 10:34:35.011
  Dec 19 10:34:35.019: INFO: Deleting all statefulset in ns statefulset-8223
  Dec 19 10:34:35.042: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-8223" for this suite. @ 12/19/23 10:34:35.064
• [20.367 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/custom_resource_definition.go:146
  STEP: Creating a kubernetes client @ 12/19/23 10:34:35.182
  Dec 19 10:34:35.182: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename custom-resource-definition @ 12/19/23 10:34:35.19
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:34:35.226
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:34:35.234
  Dec 19 10:34:35.237: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  Dec 19 10:34:35.835: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-2455" for this suite. @ 12/19/23 10:34:35.849
• [0.684 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:200
  STEP: Creating a kubernetes client @ 12/19/23 10:34:35.868
  Dec 19 10:34:35.868: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename emptydir @ 12/19/23 10:34:35.871
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:34:35.908
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:34:35.917
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 12/19/23 10:34:35.923
  STEP: Saw pod success @ 12/19/23 10:34:39.991
  Dec 19 10:34:39.997: INFO: Trying to get logs from node dah7vaemeeho-3 pod pod-5a832487-49ed-4b00-b833-639ff079cad6 container test-container: <nil>
  STEP: delete the pod @ 12/19/23 10:34:40.014
  Dec 19 10:34:40.038: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-342" for this suite. @ 12/19/23 10:34:40.046
• [4.193 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:948
  STEP: Creating a kubernetes client @ 12/19/23 10:34:40.062
  Dec 19 10:34:40.062: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename resourcequota @ 12/19/23 10:34:40.066
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:34:40.099
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:34:40.104
  STEP: Creating a ResourceQuota @ 12/19/23 10:34:40.112
  STEP: Getting a ResourceQuota @ 12/19/23 10:34:40.125
  STEP: Listing all ResourceQuotas with LabelSelector @ 12/19/23 10:34:40.142
  STEP: Patching the ResourceQuota @ 12/19/23 10:34:40.147
  STEP: Deleting a Collection of ResourceQuotas @ 12/19/23 10:34:40.16
  STEP: Verifying the deleted ResourceQuota @ 12/19/23 10:34:40.185
  Dec 19 10:34:40.190: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-465" for this suite. @ 12/19/23 10:34:40.199
• [0.155 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:3129
  STEP: Creating a kubernetes client @ 12/19/23 10:34:40.217
  Dec 19 10:34:40.217: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename services @ 12/19/23 10:34:40.22
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:34:40.249
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:34:40.253
  STEP: fetching services @ 12/19/23 10:34:40.259
  Dec 19 10:34:40.266: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3265" for this suite. @ 12/19/23 10:34:40.277
• [0.074 seconds]
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 12/19/23 10:34:40.291
  Dec 19 10:34:40.292: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename container-runtime @ 12/19/23 10:34:40.295
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:34:40.335
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:34:40.341
  STEP: create the container @ 12/19/23 10:34:40.348
  W1219 10:34:40.366353      14 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 12/19/23 10:34:40.367
  STEP: get the container status @ 12/19/23 10:34:43.422
  STEP: the container should be terminated @ 12/19/23 10:34:43.428
  STEP: the termination message should be set @ 12/19/23 10:34:43.429
  Dec 19 10:34:43.429: INFO: Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 12/19/23 10:34:43.429
  Dec 19 10:34:43.454: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-176" for this suite. @ 12/19/23 10:34:43.467
• [3.191 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_configmap.go:376
  STEP: Creating a kubernetes client @ 12/19/23 10:34:43.491
  Dec 19 10:34:43.491: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename projected @ 12/19/23 10:34:43.495
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:34:43.531
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:34:43.541
  STEP: Creating configMap with name projected-configmap-test-volume-903ae5a8-ba48-4005-8058-5e03997aba59 @ 12/19/23 10:34:43.551
  STEP: Creating a pod to test consume configMaps @ 12/19/23 10:34:43.565
  STEP: Saw pod success @ 12/19/23 10:34:47.649
  Dec 19 10:34:47.658: INFO: Trying to get logs from node dah7vaemeeho-3 pod pod-projected-configmaps-848bba6a-462d-40c0-b63e-c4afa06a9f78 container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 12/19/23 10:34:47.675
  Dec 19 10:34:47.712: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6153" for this suite. @ 12/19/23 10:34:47.723
• [4.244 seconds]
------------------------------
S
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 12/19/23 10:34:47.735
  Dec 19 10:34:47.736: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename pods @ 12/19/23 10:34:47.739
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:34:47.769
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:34:47.776
  STEP: creating a Pod with a static label @ 12/19/23 10:34:47.794
  STEP: watching for Pod to be ready @ 12/19/23 10:34:47.814
  Dec 19 10:34:47.819: INFO: observed Pod pod-test in namespace pods-7967 in phase Pending with labels: map[test-pod-static:true] & conditions []
  Dec 19 10:34:47.826: INFO: observed Pod pod-test in namespace pods-7967 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-12-19 10:34:47 +0000 UTC  }]
  Dec 19 10:34:47.850: INFO: observed Pod pod-test in namespace pods-7967 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2023-12-19 10:34:47 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-12-19 10:34:47 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-12-19 10:34:47 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-12-19 10:34:47 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-12-19 10:34:47 +0000 UTC  }]
  Dec 19 10:34:48.581: INFO: Found Pod pod-test in namespace pods-7967 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2023-12-19 10:34:48 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-12-19 10:34:47 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2023-12-19 10:34:48 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2023-12-19 10:34:48 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-12-19 10:34:47 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 12/19/23 10:34:48.589
  STEP: getting the Pod and ensuring that it's patched @ 12/19/23 10:34:48.613
  STEP: replacing the Pod's status Ready condition to False @ 12/19/23 10:34:48.618
  STEP: check the Pod again to ensure its Ready conditions are False @ 12/19/23 10:34:48.644
  STEP: deleting the Pod via a Collection with a LabelSelector @ 12/19/23 10:34:48.644
  STEP: watching for the Pod to be deleted @ 12/19/23 10:34:48.659
  Dec 19 10:34:48.665: INFO: observed event type MODIFIED
  Dec 19 10:34:50.619: INFO: observed event type MODIFIED
  Dec 19 10:34:50.725: INFO: observed event type MODIFIED
  Dec 19 10:34:51.607: INFO: observed event type MODIFIED
  Dec 19 10:34:51.629: INFO: observed event type MODIFIED
  Dec 19 10:34:51.645: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7967" for this suite. @ 12/19/23 10:34:51.655
• [3.933 seconds]
------------------------------
SSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/lifecycle_hook.go:153
  STEP: Creating a kubernetes client @ 12/19/23 10:34:51.669
  Dec 19 10:34:51.669: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 12/19/23 10:34:51.673
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:34:51.704
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:34:51.71
  STEP: create the container to handle the HTTPGet hook request. @ 12/19/23 10:34:51.724
  STEP: create the pod with lifecycle hook @ 12/19/23 10:34:53.774
  STEP: delete the pod with lifecycle hook @ 12/19/23 10:34:55.814
  STEP: check prestop hook @ 12/19/23 10:34:57.855
  Dec 19 10:34:57.889: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-7877" for this suite. @ 12/19/23 10:34:57.899
• [6.252 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
test/e2e/apps/job.go:408
  STEP: Creating a kubernetes client @ 12/19/23 10:34:57.927
  Dec 19 10:34:57.927: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename job @ 12/19/23 10:34:57.932
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:34:57.963
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:34:57.97
  STEP: Creating Indexed job @ 12/19/23 10:34:57.975
  STEP: Ensuring job reaches completions @ 12/19/23 10:34:57.988
  STEP: Ensuring pods with index for job exist @ 12/19/23 10:35:05.999
  Dec 19 10:35:06.010: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3351" for this suite. @ 12/19/23 10:35:06.019
• [8.106 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:1015
  STEP: Creating a kubernetes client @ 12/19/23 10:35:06.033
  Dec 19 10:35:06.033: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename resourcequota @ 12/19/23 10:35:06.037
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:35:06.068
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:35:06.076
  STEP: Creating resourceQuota "e2e-rq-status-9qrgb" @ 12/19/23 10:35:06.094
  Dec 19 10:35:06.117: INFO: Resource quota "e2e-rq-status-9qrgb" reports spec: hard cpu limit of 500m
  Dec 19 10:35:06.117: INFO: Resource quota "e2e-rq-status-9qrgb" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-9qrgb" /status @ 12/19/23 10:35:06.117
  STEP: Confirm /status for "e2e-rq-status-9qrgb" resourceQuota via watch @ 12/19/23 10:35:06.137
  Dec 19 10:35:06.142: INFO: observed resourceQuota "e2e-rq-status-9qrgb" in namespace "resourcequota-8493" with hard status: v1.ResourceList(nil)
  Dec 19 10:35:06.143: INFO: Found resourceQuota "e2e-rq-status-9qrgb" in namespace "resourcequota-8493" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  Dec 19 10:35:06.143: INFO: ResourceQuota "e2e-rq-status-9qrgb" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 12/19/23 10:35:06.151
  Dec 19 10:35:06.163: INFO: Resource quota "e2e-rq-status-9qrgb" reports spec: hard cpu limit of 1
  Dec 19 10:35:06.163: INFO: Resource quota "e2e-rq-status-9qrgb" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-9qrgb" /status @ 12/19/23 10:35:06.163
  STEP: Confirm /status for "e2e-rq-status-9qrgb" resourceQuota via watch @ 12/19/23 10:35:06.175
  Dec 19 10:35:06.180: INFO: observed resourceQuota "e2e-rq-status-9qrgb" in namespace "resourcequota-8493" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  Dec 19 10:35:06.180: INFO: Found resourceQuota "e2e-rq-status-9qrgb" in namespace "resourcequota-8493" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  Dec 19 10:35:06.181: INFO: ResourceQuota "e2e-rq-status-9qrgb" /status was patched
  STEP: Get "e2e-rq-status-9qrgb" /status @ 12/19/23 10:35:06.181
  Dec 19 10:35:06.191: INFO: Resourcequota "e2e-rq-status-9qrgb" reports status: hard cpu of 1
  Dec 19 10:35:06.192: INFO: Resourcequota "e2e-rq-status-9qrgb" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-9qrgb" /status before checking Spec is unchanged @ 12/19/23 10:35:06.2
  Dec 19 10:35:06.232: INFO: Resourcequota "e2e-rq-status-9qrgb" reports status: hard cpu of 2
  Dec 19 10:35:06.232: INFO: Resourcequota "e2e-rq-status-9qrgb" reports status: hard memory of 2Gi
  Dec 19 10:35:06.234: INFO: observed resourceQuota "e2e-rq-status-9qrgb" in namespace "resourcequota-8493" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  Dec 19 10:35:06.235: INFO: Found resourceQuota "e2e-rq-status-9qrgb" in namespace "resourcequota-8493" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  Dec 19 10:35:06.247: INFO: ResourceQuota "e2e-rq-status-9qrgb" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-9qrgb", GenerateName:"", Namespace:"resourcequota-8493", SelfLink:"", UID:"2c78c5e7-1951-4966-ba1c-1202ee5cfaf1", ResourceVersion:"18152", Generation:0, CreationTimestamp:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-9qrgb"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ba9c80), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ba9cf8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ba9d58), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Dec 19 10:35:11.242: INFO: ResourceQuota "e2e-rq-status-9qrgb" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-9qrgb", GenerateName:"", Namespace:"resourcequota-8493", SelfLink:"", UID:"2c78c5e7-1951-4966-ba1c-1202ee5cfaf1", ResourceVersion:"18152", Generation:0, CreationTimestamp:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-9qrgb"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ba9f68), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ba9fb0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ba9fe0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Dec 19 10:35:16.246: INFO: ResourceQuota "e2e-rq-status-9qrgb" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-9qrgb", GenerateName:"", Namespace:"resourcequota-8493", SelfLink:"", UID:"2c78c5e7-1951-4966-ba1c-1202ee5cfaf1", ResourceVersion:"18152", Generation:0, CreationTimestamp:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-9qrgb"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0036f62a0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0036f6318), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0036f6348), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Dec 19 10:35:21.254: INFO: ResourceQuota "e2e-rq-status-9qrgb" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-9qrgb", GenerateName:"", Namespace:"resourcequota-8493", SelfLink:"", UID:"2c78c5e7-1951-4966-ba1c-1202ee5cfaf1", ResourceVersion:"18152", Generation:0, CreationTimestamp:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-9qrgb"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c4a468), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c4a498), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c4a528), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Dec 19 10:35:26.286: INFO: ResourceQuota "e2e-rq-status-9qrgb" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-9qrgb", GenerateName:"", Namespace:"resourcequota-8493", SelfLink:"", UID:"2c78c5e7-1951-4966-ba1c-1202ee5cfaf1", ResourceVersion:"18152", Generation:0, CreationTimestamp:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-9qrgb"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0036f6600), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0036f6660), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0036f6690), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Dec 19 10:35:31.246: INFO: ResourceQuota "e2e-rq-status-9qrgb" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-9qrgb", GenerateName:"", Namespace:"resourcequota-8493", SelfLink:"", UID:"2c78c5e7-1951-4966-ba1c-1202ee5cfaf1", ResourceVersion:"18152", Generation:0, CreationTimestamp:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-9qrgb"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c4a930), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c4a960), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c4a9a8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Dec 19 10:35:36.244: INFO: ResourceQuota "e2e-rq-status-9qrgb" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-9qrgb", GenerateName:"", Namespace:"resourcequota-8493", SelfLink:"", UID:"2c78c5e7-1951-4966-ba1c-1202ee5cfaf1", ResourceVersion:"18152", Generation:0, CreationTimestamp:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-9qrgb"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0036f6ae0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0036f6b28), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0036f6b70), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Dec 19 10:35:41.246: INFO: ResourceQuota "e2e-rq-status-9qrgb" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-9qrgb", GenerateName:"", Namespace:"resourcequota-8493", SelfLink:"", UID:"2c78c5e7-1951-4966-ba1c-1202ee5cfaf1", ResourceVersion:"18152", Generation:0, CreationTimestamp:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-9qrgb"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0036f6d80), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0036f6dc8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0036f6e40), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Dec 19 10:35:46.249: INFO: ResourceQuota "e2e-rq-status-9qrgb" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-9qrgb", GenerateName:"", Namespace:"resourcequota-8493", SelfLink:"", UID:"2c78c5e7-1951-4966-ba1c-1202ee5cfaf1", ResourceVersion:"18152", Generation:0, CreationTimestamp:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-9qrgb"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0036f71a0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0036f71d0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0036f7230), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Dec 19 10:35:51.250: INFO: ResourceQuota "e2e-rq-status-9qrgb" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-9qrgb", GenerateName:"", Namespace:"resourcequota-8493", SelfLink:"", UID:"2c78c5e7-1951-4966-ba1c-1202ee5cfaf1", ResourceVersion:"18152", Generation:0, CreationTimestamp:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-9qrgb"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0036f7440), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0036f74a0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0036f74d0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Dec 19 10:35:56.246: INFO: ResourceQuota "e2e-rq-status-9qrgb" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-9qrgb", GenerateName:"", Namespace:"resourcequota-8493", SelfLink:"", UID:"2c78c5e7-1951-4966-ba1c-1202ee5cfaf1", ResourceVersion:"18152", Generation:0, CreationTimestamp:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-9qrgb"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0036f77d0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0036f7800), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0036f7878), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Dec 19 10:36:01.246: INFO: ResourceQuota "e2e-rq-status-9qrgb" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-9qrgb", GenerateName:"", Namespace:"resourcequota-8493", SelfLink:"", UID:"2c78c5e7-1951-4966-ba1c-1202ee5cfaf1", ResourceVersion:"18152", Generation:0, CreationTimestamp:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-9qrgb"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c4af18), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c4af48), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c4af78), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Dec 19 10:36:06.243: INFO: ResourceQuota "e2e-rq-status-9qrgb" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-9qrgb", GenerateName:"", Namespace:"resourcequota-8493", SelfLink:"", UID:"2c78c5e7-1951-4966-ba1c-1202ee5cfaf1", ResourceVersion:"18152", Generation:0, CreationTimestamp:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-9qrgb"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0036f7a40), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0036f7a70), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0036f7ad0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Dec 19 10:36:11.245: INFO: ResourceQuota "e2e-rq-status-9qrgb" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-9qrgb", GenerateName:"", Namespace:"resourcequota-8493", SelfLink:"", UID:"2c78c5e7-1951-4966-ba1c-1202ee5cfaf1", ResourceVersion:"18152", Generation:0, CreationTimestamp:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-9qrgb"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c4b440), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c4b488), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c4b4b8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Dec 19 10:36:16.244: INFO: ResourceQuota "e2e-rq-status-9qrgb" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-9qrgb", GenerateName:"", Namespace:"resourcequota-8493", SelfLink:"", UID:"2c78c5e7-1951-4966-ba1c-1202ee5cfaf1", ResourceVersion:"18152", Generation:0, CreationTimestamp:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-9qrgb"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0036f7c98), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0036f7ce0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0036f7d28), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Dec 19 10:36:21.248: INFO: ResourceQuota "e2e-rq-status-9qrgb" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-9qrgb", GenerateName:"", Namespace:"resourcequota-8493", SelfLink:"", UID:"2c78c5e7-1951-4966-ba1c-1202ee5cfaf1", ResourceVersion:"18152", Generation:0, CreationTimestamp:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-9qrgb"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0036f7fe0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0011c4048), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0011c40d8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Dec 19 10:36:26.247: INFO: ResourceQuota "e2e-rq-status-9qrgb" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-9qrgb", GenerateName:"", Namespace:"resourcequota-8493", SelfLink:"", UID:"2c78c5e7-1951-4966-ba1c-1202ee5cfaf1", ResourceVersion:"18152", Generation:0, CreationTimestamp:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-9qrgb"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c4b890), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c4b908), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c4b938), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Dec 19 10:36:31.247: INFO: ResourceQuota "e2e-rq-status-9qrgb" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-9qrgb", GenerateName:"", Namespace:"resourcequota-8493", SelfLink:"", UID:"2c78c5e7-1951-4966-ba1c-1202ee5cfaf1", ResourceVersion:"18152", Generation:0, CreationTimestamp:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-9qrgb"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c4bbd8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c4bc38), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c4bc80), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Dec 19 10:36:36.249: INFO: ResourceQuota "e2e-rq-status-9qrgb" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-9qrgb", GenerateName:"", Namespace:"resourcequota-8493", SelfLink:"", UID:"2c78c5e7-1951-4966-ba1c-1202ee5cfaf1", ResourceVersion:"18152", Generation:0, CreationTimestamp:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-9qrgb"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0011c4588), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0011c45b8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0011c4678), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Dec 19 10:36:41.242: INFO: ResourceQuota "e2e-rq-status-9qrgb" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-9qrgb", GenerateName:"", Namespace:"resourcequota-8493", SelfLink:"", UID:"2c78c5e7-1951-4966-ba1c-1202ee5cfaf1", ResourceVersion:"18152", Generation:0, CreationTimestamp:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-9qrgb"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0011c4318), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0011c4390), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0011c43c0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Dec 19 10:36:46.244: INFO: ResourceQuota "e2e-rq-status-9qrgb" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-9qrgb", GenerateName:"", Namespace:"resourcequota-8493", SelfLink:"", UID:"2c78c5e7-1951-4966-ba1c-1202ee5cfaf1", ResourceVersion:"18152", Generation:0, CreationTimestamp:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-9qrgb"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0011c4ab0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0011c4ae0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0011c4b10), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Dec 19 10:36:51.251: INFO: ResourceQuota "e2e-rq-status-9qrgb" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-9qrgb", GenerateName:"", Namespace:"resourcequota-8493", SelfLink:"", UID:"2c78c5e7-1951-4966-ba1c-1202ee5cfaf1", ResourceVersion:"18152", Generation:0, CreationTimestamp:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-9qrgb"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0011c4d68), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0011c4dc8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0011c4df8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Dec 19 10:36:56.243: INFO: ResourceQuota "e2e-rq-status-9qrgb" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-9qrgb", GenerateName:"", Namespace:"resourcequota-8493", SelfLink:"", UID:"2c78c5e7-1951-4966-ba1c-1202ee5cfaf1", ResourceVersion:"18152", Generation:0, CreationTimestamp:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-9qrgb"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0011c51d0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0011c5230), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0011c5260), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Dec 19 10:37:01.247: INFO: ResourceQuota "e2e-rq-status-9qrgb" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-9qrgb", GenerateName:"", Namespace:"resourcequota-8493", SelfLink:"", UID:"2c78c5e7-1951-4966-ba1c-1202ee5cfaf1", ResourceVersion:"18152", Generation:0, CreationTimestamp:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-9qrgb"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0011c5488), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0011c5500), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0011c5548), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Dec 19 10:37:06.275: INFO: ResourceQuota "e2e-rq-status-9qrgb" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-9qrgb", GenerateName:"", Namespace:"resourcequota-8493", SelfLink:"", UID:"2c78c5e7-1951-4966-ba1c-1202ee5cfaf1", ResourceVersion:"18152", Generation:0, CreationTimestamp:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-9qrgb"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0011c5980), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0011c59f8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0011c5a28), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Dec 19 10:37:11.242: INFO: ResourceQuota "e2e-rq-status-9qrgb" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-9qrgb", GenerateName:"", Namespace:"resourcequota-8493", SelfLink:"", UID:"2c78c5e7-1951-4966-ba1c-1202ee5cfaf1", ResourceVersion:"18152", Generation:0, CreationTimestamp:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-9qrgb"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0011c5cc8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0011c5d10), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0011c5d58), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Dec 19 10:37:16.247: INFO: ResourceQuota "e2e-rq-status-9qrgb" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-9qrgb", GenerateName:"", Namespace:"resourcequota-8493", SelfLink:"", UID:"2c78c5e7-1951-4966-ba1c-1202ee5cfaf1", ResourceVersion:"18152", Generation:0, CreationTimestamp:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-9qrgb"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c4a480), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c4a510), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 19, 10, 35, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c4a540), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Dec 19 10:37:21.241: INFO: ResourceQuota "e2e-rq-status-9qrgb" Spec was unchanged and /status reset
  Dec 19 10:37:21.241: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8493" for this suite. @ 12/19/23 10:37:21.25
• [135.237 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
test/e2e/common/network/networking.go:108
  STEP: Creating a kubernetes client @ 12/19/23 10:37:21.276
  Dec 19 10:37:21.276: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename pod-network-test @ 12/19/23 10:37:21.28
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:37:21.31
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:37:21.315
  STEP: Performing setup for networking test in namespace pod-network-test-4497 @ 12/19/23 10:37:21.32
  STEP: creating a selector @ 12/19/23 10:37:21.32
  STEP: Creating the service pods in kubernetes @ 12/19/23 10:37:21.32
  Dec 19 10:37:21.320: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 12/19/23 10:37:43.568
  Dec 19 10:37:45.636: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Dec 19 10:37:45.636: INFO: Going to poll 10.233.64.69 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Dec 19 10:37:45.643: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.233.64.69:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-4497 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 19 10:37:45.643: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  Dec 19 10:37:45.647: INFO: ExecWithOptions: Clientset creation
  Dec 19 10:37:45.647: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-4497/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.233.64.69%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Dec 19 10:37:45.856: INFO: Found all 1 expected endpoints: [netserver-0]
  Dec 19 10:37:45.856: INFO: Going to poll 10.233.65.63 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Dec 19 10:37:45.862: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.233.65.63:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-4497 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 19 10:37:45.862: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  Dec 19 10:37:45.864: INFO: ExecWithOptions: Clientset creation
  Dec 19 10:37:45.864: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-4497/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.233.65.63%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Dec 19 10:37:45.996: INFO: Found all 1 expected endpoints: [netserver-1]
  Dec 19 10:37:45.997: INFO: Going to poll 10.233.66.167 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Dec 19 10:37:46.004: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.233.66.167:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-4497 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 19 10:37:46.004: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  Dec 19 10:37:46.006: INFO: ExecWithOptions: Clientset creation
  Dec 19 10:37:46.006: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-4497/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.233.66.167%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Dec 19 10:37:46.106: INFO: Found all 1 expected endpoints: [netserver-2]
  Dec 19 10:37:46.107: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-4497" for this suite. @ 12/19/23 10:37:46.117
• [24.853 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:1280
  STEP: Creating a kubernetes client @ 12/19/23 10:37:46.132
  Dec 19 10:37:46.132: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename services @ 12/19/23 10:37:46.135
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:37:46.161
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:37:46.168
  STEP: creating service nodeport-test with type=NodePort in namespace services-88 @ 12/19/23 10:37:46.173
  STEP: creating replication controller nodeport-test in namespace services-88 @ 12/19/23 10:37:46.198
  I1219 10:37:46.228126      14 runners.go:197] Created replication controller with name: nodeport-test, namespace: services-88, replica count: 2
  I1219 10:37:49.280099      14 runners.go:197] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Dec 19 10:37:49.281: INFO: Creating new exec pod
  Dec 19 10:37:52.324: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=services-88 exec execpodg5wjg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  Dec 19 10:37:52.786: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  Dec 19 10:37:52.787: INFO: stdout: "nodeport-test-8dnz2"
  Dec 19 10:37:52.787: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=services-88 exec execpodg5wjg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.15.104 80'
  Dec 19 10:37:53.059: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.15.104 80\nConnection to 10.233.15.104 80 port [tcp/http] succeeded!\n"
  Dec 19 10:37:53.059: INFO: stdout: ""
  Dec 19 10:37:53.788: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=services-88 exec execpodg5wjg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.15.104 80'
  Dec 19 10:37:54.053: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.15.104 80\nConnection to 10.233.15.104 80 port [tcp/http] succeeded!\n"
  Dec 19 10:37:54.053: INFO: stdout: "nodeport-test-8dnz2"
  Dec 19 10:37:54.054: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=services-88 exec execpodg5wjg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.147 30410'
  Dec 19 10:37:54.395: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.147 30410\nConnection to 192.168.121.147 30410 port [tcp/*] succeeded!\n"
  Dec 19 10:37:54.395: INFO: stdout: "nodeport-test-8dnz2"
  Dec 19 10:37:54.396: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=services-88 exec execpodg5wjg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.226 30410'
  Dec 19 10:37:54.673: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.226 30410\nConnection to 192.168.121.226 30410 port [tcp/*] succeeded!\n"
  Dec 19 10:37:54.673: INFO: stdout: ""
  Dec 19 10:37:55.396: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=services-88 exec execpodg5wjg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.226 30410'
  Dec 19 10:37:55.730: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.226 30410\nConnection to 192.168.121.226 30410 port [tcp/*] succeeded!\n"
  Dec 19 10:37:55.730: INFO: stdout: ""
  Dec 19 10:37:56.396: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=services-88 exec execpodg5wjg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.226 30410'
  Dec 19 10:37:56.641: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.226 30410\nConnection to 192.168.121.226 30410 port [tcp/*] succeeded!\n"
  Dec 19 10:37:56.641: INFO: stdout: "nodeport-test-vlmkn"
  Dec 19 10:37:56.641: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-88" for this suite. @ 12/19/23 10:37:56.65
• [10.533 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 12/19/23 10:37:56.671
  Dec 19 10:37:56.671: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename projected @ 12/19/23 10:37:56.674
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:37:56.704
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:37:56.709
  STEP: Creating secret with name projected-secret-test-0aa23112-4cfd-49b6-a48a-01310fe62c36 @ 12/19/23 10:37:56.714
  STEP: Creating a pod to test consume secrets @ 12/19/23 10:37:56.723
  STEP: Saw pod success @ 12/19/23 10:38:00.8
  Dec 19 10:38:00.811: INFO: Trying to get logs from node dah7vaemeeho-3 pod pod-projected-secrets-f86d22bd-df60-463a-970f-447258073acd container secret-volume-test: <nil>
  STEP: delete the pod @ 12/19/23 10:38:00.848
  Dec 19 10:38:00.886: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3162" for this suite. @ 12/19/23 10:38:00.898
• [4.241 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:1533
  STEP: Creating a kubernetes client @ 12/19/23 10:38:00.923
  Dec 19 10:38:00.923: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename services @ 12/19/23 10:38:00.926
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:38:00.964
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:38:00.972
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-9805 @ 12/19/23 10:38:00.98
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 12/19/23 10:38:01.025
  STEP: creating service externalsvc in namespace services-9805 @ 12/19/23 10:38:01.025
  STEP: creating replication controller externalsvc in namespace services-9805 @ 12/19/23 10:38:01.146
  I1219 10:38:01.171444      14 runners.go:197] Created replication controller with name: externalsvc, namespace: services-9805, replica count: 2
  I1219 10:38:04.223925      14 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 12/19/23 10:38:04.234
  Dec 19 10:38:04.336: INFO: Creating new exec pod
  Dec 19 10:38:06.396: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=services-9805 exec execpodhr4t7 -- /bin/sh -x -c nslookup nodeport-service.services-9805.svc.cluster.local'
  Dec 19 10:38:06.779: INFO: stderr: "+ nslookup nodeport-service.services-9805.svc.cluster.local\n"
  Dec 19 10:38:06.779: INFO: stdout: "Server:\t\t10.233.0.10\nAddress:\t10.233.0.10#53\n\nnodeport-service.services-9805.svc.cluster.local\tcanonical name = externalsvc.services-9805.svc.cluster.local.\nName:\texternalsvc.services-9805.svc.cluster.local\nAddress: 10.233.60.84\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-9805, will wait for the garbage collector to delete the pods @ 12/19/23 10:38:06.78
  Dec 19 10:38:06.850: INFO: Deleting ReplicationController externalsvc took: 13.165788ms
  Dec 19 10:38:06.951: INFO: Terminating ReplicationController externalsvc pods took: 101.575187ms
  Dec 19 10:38:09.808: INFO: Cleaning up the NodePort to ExternalName test service
  Dec 19 10:38:09.839: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9805" for this suite. @ 12/19/23 10:38:09.85
• [8.945 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
test/e2e/apps/job.go:572
  STEP: Creating a kubernetes client @ 12/19/23 10:38:09.869
  Dec 19 10:38:09.869: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename job @ 12/19/23 10:38:09.878
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:38:09.919
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:38:09.93
  STEP: Creating a job @ 12/19/23 10:38:09.939
  STEP: Ensuring job reaches completions @ 12/19/23 10:38:09.961
  Dec 19 10:38:19.970: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5544" for this suite. @ 12/19/23 10:38:19.98
• [10.126 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
test/e2e/scheduling/predicates.go:469
  STEP: Creating a kubernetes client @ 12/19/23 10:38:19.997
  Dec 19 10:38:19.997: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename sched-pred @ 12/19/23 10:38:20
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:38:20.025
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:38:20.03
  Dec 19 10:38:20.036: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Dec 19 10:38:20.053: INFO: Waiting for terminating namespaces to be deleted...
  Dec 19 10:38:20.061: INFO: 
  Logging pods the apiserver thinks is on node dah7vaemeeho-1 before test
  Dec 19 10:38:20.078: INFO: coredns-76f75df574-k2zr4 from kube-system started at 2023-12-19 09:34:54 +0000 UTC (1 container statuses recorded)
  Dec 19 10:38:20.079: INFO: 	Container coredns ready: true, restart count 1
  Dec 19 10:38:20.079: INFO: coredns-76f75df574-sc56n from kube-system started at 2023-12-19 09:34:54 +0000 UTC (1 container statuses recorded)
  Dec 19 10:38:20.080: INFO: 	Container coredns ready: true, restart count 1
  Dec 19 10:38:20.080: INFO: kube-addon-manager-dah7vaemeeho-1 from kube-system started at 2023-12-19 09:47:18 +0000 UTC (1 container statuses recorded)
  Dec 19 10:38:20.080: INFO: 	Container kube-addon-manager ready: true, restart count 1
  Dec 19 10:38:20.081: INFO: kube-apiserver-dah7vaemeeho-1 from kube-system started at 2023-12-19 09:47:18 +0000 UTC (1 container statuses recorded)
  Dec 19 10:38:20.081: INFO: 	Container kube-apiserver ready: true, restart count 1
  Dec 19 10:38:20.081: INFO: kube-controller-manager-dah7vaemeeho-1 from kube-system started at 2023-12-19 09:47:18 +0000 UTC (1 container statuses recorded)
  Dec 19 10:38:20.082: INFO: 	Container kube-controller-manager ready: true, restart count 1
  Dec 19 10:38:20.082: INFO: kube-flannel-ds-r2kgn from kube-system started at 2023-12-19 09:36:45 +0000 UTC (1 container statuses recorded)
  Dec 19 10:38:20.082: INFO: 	Container kube-flannel ready: true, restart count 1
  Dec 19 10:38:20.082: INFO: kube-proxy-xscgp from kube-system started at 2023-12-19 09:34:54 +0000 UTC (1 container statuses recorded)
  Dec 19 10:38:20.083: INFO: 	Container kube-proxy ready: true, restart count 1
  Dec 19 10:38:20.083: INFO: kube-scheduler-dah7vaemeeho-1 from kube-system started at 2023-12-19 09:47:18 +0000 UTC (1 container statuses recorded)
  Dec 19 10:38:20.083: INFO: 	Container kube-scheduler ready: true, restart count 1
  Dec 19 10:38:20.084: INFO: sonobuoy-systemd-logs-daemon-set-ec23f534379c4b15-9ftzt from sonobuoy started at 2023-12-19 10:01:09 +0000 UTC (2 container statuses recorded)
  Dec 19 10:38:20.084: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Dec 19 10:38:20.084: INFO: 	Container systemd-logs ready: true, restart count 0
  Dec 19 10:38:20.085: INFO: 
  Logging pods the apiserver thinks is on node dah7vaemeeho-2 before test
  Dec 19 10:38:20.102: INFO: kube-addon-manager-dah7vaemeeho-2 from kube-system started at 2023-12-19 09:47:43 +0000 UTC (1 container statuses recorded)
  Dec 19 10:38:20.102: INFO: 	Container kube-addon-manager ready: true, restart count 1
  Dec 19 10:38:20.102: INFO: kube-apiserver-dah7vaemeeho-2 from kube-system started at 2023-12-19 09:47:43 +0000 UTC (1 container statuses recorded)
  Dec 19 10:38:20.102: INFO: 	Container kube-apiserver ready: true, restart count 1
  Dec 19 10:38:20.102: INFO: kube-controller-manager-dah7vaemeeho-2 from kube-system started at 2023-12-19 09:47:43 +0000 UTC (1 container statuses recorded)
  Dec 19 10:38:20.102: INFO: 	Container kube-controller-manager ready: true, restart count 1
  Dec 19 10:38:20.102: INFO: kube-flannel-ds-rq84x from kube-system started at 2023-12-19 09:36:45 +0000 UTC (1 container statuses recorded)
  Dec 19 10:38:20.102: INFO: 	Container kube-flannel ready: true, restart count 1
  Dec 19 10:38:20.102: INFO: kube-proxy-qr9gj from kube-system started at 2023-12-19 09:35:51 +0000 UTC (1 container statuses recorded)
  Dec 19 10:38:20.102: INFO: 	Container kube-proxy ready: true, restart count 1
  Dec 19 10:38:20.102: INFO: kube-scheduler-dah7vaemeeho-2 from kube-system started at 2023-12-19 09:47:43 +0000 UTC (1 container statuses recorded)
  Dec 19 10:38:20.102: INFO: 	Container kube-scheduler ready: true, restart count 1
  Dec 19 10:38:20.102: INFO: sonobuoy-systemd-logs-daemon-set-ec23f534379c4b15-n4n5n from sonobuoy started at 2023-12-19 10:01:09 +0000 UTC (2 container statuses recorded)
  Dec 19 10:38:20.102: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Dec 19 10:38:20.102: INFO: 	Container systemd-logs ready: true, restart count 0
  Dec 19 10:38:20.102: INFO: 
  Logging pods the apiserver thinks is on node dah7vaemeeho-3 before test
  Dec 19 10:38:20.125: INFO: fail-once-local-429w7 from job-5544 started at 2023-12-19 10:38:14 +0000 UTC (1 container statuses recorded)
  Dec 19 10:38:20.125: INFO: 	Container c ready: false, restart count 1
  Dec 19 10:38:20.125: INFO: fail-once-local-gh7vp from job-5544 started at 2023-12-19 10:38:14 +0000 UTC (1 container statuses recorded)
  Dec 19 10:38:20.125: INFO: 	Container c ready: false, restart count 1
  Dec 19 10:38:20.125: INFO: fail-once-local-ptht4 from job-5544 started at 2023-12-19 10:38:10 +0000 UTC (1 container statuses recorded)
  Dec 19 10:38:20.125: INFO: 	Container c ready: false, restart count 1
  Dec 19 10:38:20.125: INFO: fail-once-local-qz5vv from job-5544 started at 2023-12-19 10:38:10 +0000 UTC (1 container statuses recorded)
  Dec 19 10:38:20.125: INFO: 	Container c ready: false, restart count 1
  Dec 19 10:38:20.125: INFO: kube-flannel-ds-v2m2l from kube-system started at 2023-12-19 10:34:10 +0000 UTC (1 container statuses recorded)
  Dec 19 10:38:20.125: INFO: 	Container kube-flannel ready: true, restart count 0
  Dec 19 10:38:20.125: INFO: kube-proxy-79v5d from kube-system started at 2023-12-19 09:36:16 +0000 UTC (1 container statuses recorded)
  Dec 19 10:38:20.125: INFO: 	Container kube-proxy ready: true, restart count 1
  Dec 19 10:38:20.125: INFO: sonobuoy from sonobuoy started at 2023-12-19 10:00:57 +0000 UTC (1 container statuses recorded)
  Dec 19 10:38:20.125: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Dec 19 10:38:20.125: INFO: sonobuoy-e2e-job-f0765e9942714abd from sonobuoy started at 2023-12-19 10:01:09 +0000 UTC (2 container statuses recorded)
  Dec 19 10:38:20.125: INFO: 	Container e2e ready: true, restart count 0
  Dec 19 10:38:20.125: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Dec 19 10:38:20.125: INFO: sonobuoy-systemd-logs-daemon-set-ec23f534379c4b15-xhnpz from sonobuoy started at 2023-12-19 10:01:09 +0000 UTC (2 container statuses recorded)
  Dec 19 10:38:20.125: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Dec 19 10:38:20.125: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 12/19/23 10:38:20.125
  STEP: Explicitly delete pod here to free the resource it takes. @ 12/19/23 10:38:22.179
  STEP: Trying to apply a random label on the found node. @ 12/19/23 10:38:22.2
  STEP: verifying the node has the label kubernetes.io/e2e-8d17bc3a-b972-493e-a9b2-392f103f75f1 42 @ 12/19/23 10:38:22.237
  STEP: Trying to relaunch the pod, now with labels. @ 12/19/23 10:38:22.262
  STEP: removing the label kubernetes.io/e2e-8d17bc3a-b972-493e-a9b2-392f103f75f1 off the node dah7vaemeeho-3 @ 12/19/23 10:38:24.372
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-8d17bc3a-b972-493e-a9b2-392f103f75f1 @ 12/19/23 10:38:24.406
  Dec 19 10:38:24.417: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-7587" for this suite. @ 12/19/23 10:38:24.43
• [4.466 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
test/e2e/scheduling/predicates.go:707
  STEP: Creating a kubernetes client @ 12/19/23 10:38:24.465
  Dec 19 10:38:24.465: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename sched-pred @ 12/19/23 10:38:24.473
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:38:24.533
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:38:24.541
  Dec 19 10:38:24.552: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Dec 19 10:38:24.588: INFO: Waiting for terminating namespaces to be deleted...
  Dec 19 10:38:24.597: INFO: 
  Logging pods the apiserver thinks is on node dah7vaemeeho-1 before test
  Dec 19 10:38:24.614: INFO: coredns-76f75df574-k2zr4 from kube-system started at 2023-12-19 09:34:54 +0000 UTC (1 container statuses recorded)
  Dec 19 10:38:24.615: INFO: 	Container coredns ready: true, restart count 1
  Dec 19 10:38:24.616: INFO: coredns-76f75df574-sc56n from kube-system started at 2023-12-19 09:34:54 +0000 UTC (1 container statuses recorded)
  Dec 19 10:38:24.617: INFO: 	Container coredns ready: true, restart count 1
  Dec 19 10:38:24.618: INFO: kube-addon-manager-dah7vaemeeho-1 from kube-system started at 2023-12-19 09:47:18 +0000 UTC (1 container statuses recorded)
  Dec 19 10:38:24.618: INFO: 	Container kube-addon-manager ready: true, restart count 1
  Dec 19 10:38:24.619: INFO: kube-apiserver-dah7vaemeeho-1 from kube-system started at 2023-12-19 09:47:18 +0000 UTC (1 container statuses recorded)
  Dec 19 10:38:24.619: INFO: 	Container kube-apiserver ready: true, restart count 1
  Dec 19 10:38:24.620: INFO: kube-controller-manager-dah7vaemeeho-1 from kube-system started at 2023-12-19 09:47:18 +0000 UTC (1 container statuses recorded)
  Dec 19 10:38:24.620: INFO: 	Container kube-controller-manager ready: true, restart count 1
  Dec 19 10:38:24.621: INFO: kube-flannel-ds-r2kgn from kube-system started at 2023-12-19 09:36:45 +0000 UTC (1 container statuses recorded)
  Dec 19 10:38:24.622: INFO: 	Container kube-flannel ready: true, restart count 1
  Dec 19 10:38:24.622: INFO: kube-proxy-xscgp from kube-system started at 2023-12-19 09:34:54 +0000 UTC (1 container statuses recorded)
  Dec 19 10:38:24.623: INFO: 	Container kube-proxy ready: true, restart count 1
  Dec 19 10:38:24.623: INFO: kube-scheduler-dah7vaemeeho-1 from kube-system started at 2023-12-19 09:47:18 +0000 UTC (1 container statuses recorded)
  Dec 19 10:38:24.623: INFO: 	Container kube-scheduler ready: true, restart count 1
  Dec 19 10:38:24.624: INFO: sonobuoy-systemd-logs-daemon-set-ec23f534379c4b15-9ftzt from sonobuoy started at 2023-12-19 10:01:09 +0000 UTC (2 container statuses recorded)
  Dec 19 10:38:24.624: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Dec 19 10:38:24.625: INFO: 	Container systemd-logs ready: true, restart count 0
  Dec 19 10:38:24.625: INFO: 
  Logging pods the apiserver thinks is on node dah7vaemeeho-2 before test
  Dec 19 10:38:24.646: INFO: kube-addon-manager-dah7vaemeeho-2 from kube-system started at 2023-12-19 09:47:43 +0000 UTC (1 container statuses recorded)
  Dec 19 10:38:24.646: INFO: 	Container kube-addon-manager ready: true, restart count 1
  Dec 19 10:38:24.646: INFO: kube-apiserver-dah7vaemeeho-2 from kube-system started at 2023-12-19 09:47:43 +0000 UTC (1 container statuses recorded)
  Dec 19 10:38:24.647: INFO: 	Container kube-apiserver ready: true, restart count 1
  Dec 19 10:38:24.647: INFO: kube-controller-manager-dah7vaemeeho-2 from kube-system started at 2023-12-19 09:47:43 +0000 UTC (1 container statuses recorded)
  Dec 19 10:38:24.647: INFO: 	Container kube-controller-manager ready: true, restart count 1
  Dec 19 10:38:24.647: INFO: kube-flannel-ds-rq84x from kube-system started at 2023-12-19 09:36:45 +0000 UTC (1 container statuses recorded)
  Dec 19 10:38:24.647: INFO: 	Container kube-flannel ready: true, restart count 1
  Dec 19 10:38:24.647: INFO: kube-proxy-qr9gj from kube-system started at 2023-12-19 09:35:51 +0000 UTC (1 container statuses recorded)
  Dec 19 10:38:24.647: INFO: 	Container kube-proxy ready: true, restart count 1
  Dec 19 10:38:24.647: INFO: kube-scheduler-dah7vaemeeho-2 from kube-system started at 2023-12-19 09:47:43 +0000 UTC (1 container statuses recorded)
  Dec 19 10:38:24.647: INFO: 	Container kube-scheduler ready: true, restart count 1
  Dec 19 10:38:24.647: INFO: sonobuoy-systemd-logs-daemon-set-ec23f534379c4b15-n4n5n from sonobuoy started at 2023-12-19 10:01:09 +0000 UTC (2 container statuses recorded)
  Dec 19 10:38:24.647: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Dec 19 10:38:24.647: INFO: 	Container systemd-logs ready: true, restart count 0
  Dec 19 10:38:24.647: INFO: 
  Logging pods the apiserver thinks is on node dah7vaemeeho-3 before test
  Dec 19 10:38:24.667: INFO: fail-once-local-429w7 from job-5544 started at 2023-12-19 10:38:14 +0000 UTC (1 container statuses recorded)
  Dec 19 10:38:24.668: INFO: 	Container c ready: false, restart count 1
  Dec 19 10:38:24.668: INFO: fail-once-local-gh7vp from job-5544 started at 2023-12-19 10:38:14 +0000 UTC (1 container statuses recorded)
  Dec 19 10:38:24.669: INFO: 	Container c ready: false, restart count 1
  Dec 19 10:38:24.670: INFO: fail-once-local-ptht4 from job-5544 started at 2023-12-19 10:38:10 +0000 UTC (1 container statuses recorded)
  Dec 19 10:38:24.671: INFO: 	Container c ready: false, restart count 1
  Dec 19 10:38:24.671: INFO: fail-once-local-qz5vv from job-5544 started at 2023-12-19 10:38:10 +0000 UTC (1 container statuses recorded)
  Dec 19 10:38:24.672: INFO: 	Container c ready: false, restart count 1
  Dec 19 10:38:24.672: INFO: kube-flannel-ds-v2m2l from kube-system started at 2023-12-19 10:34:10 +0000 UTC (1 container statuses recorded)
  Dec 19 10:38:24.673: INFO: 	Container kube-flannel ready: true, restart count 0
  Dec 19 10:38:24.673: INFO: kube-proxy-79v5d from kube-system started at 2023-12-19 09:36:16 +0000 UTC (1 container statuses recorded)
  Dec 19 10:38:24.674: INFO: 	Container kube-proxy ready: true, restart count 1
  Dec 19 10:38:24.675: INFO: with-labels from sched-pred-7587 started at 2023-12-19 10:38:22 +0000 UTC (1 container statuses recorded)
  Dec 19 10:38:24.675: INFO: 	Container with-labels ready: true, restart count 0
  Dec 19 10:38:24.676: INFO: sonobuoy from sonobuoy started at 2023-12-19 10:00:57 +0000 UTC (1 container statuses recorded)
  Dec 19 10:38:24.677: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Dec 19 10:38:24.677: INFO: sonobuoy-e2e-job-f0765e9942714abd from sonobuoy started at 2023-12-19 10:01:09 +0000 UTC (2 container statuses recorded)
  Dec 19 10:38:24.678: INFO: 	Container e2e ready: true, restart count 0
  Dec 19 10:38:24.678: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Dec 19 10:38:24.679: INFO: sonobuoy-systemd-logs-daemon-set-ec23f534379c4b15-xhnpz from sonobuoy started at 2023-12-19 10:01:09 +0000 UTC (2 container statuses recorded)
  Dec 19 10:38:24.679: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Dec 19 10:38:24.679: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 12/19/23 10:38:24.68
  STEP: Explicitly delete pod here to free the resource it takes. @ 12/19/23 10:38:26.734
  STEP: Trying to apply a random label on the found node. @ 12/19/23 10:38:26.783
  STEP: verifying the node has the label kubernetes.io/e2e-305f991e-2931-451c-8426-deb90addecd5 95 @ 12/19/23 10:38:26.817
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 12/19/23 10:38:26.825
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 192.168.121.250 on the node which pod4 resides and expect not scheduled @ 12/19/23 10:38:28.872
  STEP: removing the label kubernetes.io/e2e-305f991e-2931-451c-8426-deb90addecd5 off the node dah7vaemeeho-3 @ 12/19/23 10:43:28.907
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-305f991e-2931-451c-8426-deb90addecd5 @ 12/19/23 10:43:28.943
  Dec 19 10:43:28.962: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-4862" for this suite. @ 12/19/23 10:43:28.976
• [304.538 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
test/e2e/auth/service_accounts.go:810
  STEP: Creating a kubernetes client @ 12/19/23 10:43:29.005
  Dec 19 10:43:29.005: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename svcaccounts @ 12/19/23 10:43:29.019
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:43:29.081
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:43:29.105
  STEP: Creating ServiceAccount "e2e-sa-qppm7"  @ 12/19/23 10:43:29.117
  Dec 19 10:43:29.134: INFO: AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-qppm7"  @ 12/19/23 10:43:29.134
  Dec 19 10:43:29.160: INFO: AutomountServiceAccountToken: true
  Dec 19 10:43:29.160: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-2270" for this suite. @ 12/19/23 10:43:29.174
• [0.190 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/flowcontrol.go:514
  STEP: Creating a kubernetes client @ 12/19/23 10:43:29.196
  Dec 19 10:43:29.196: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename apf @ 12/19/23 10:43:29.203
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:43:29.25
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:43:29.259
  STEP: getting /apis @ 12/19/23 10:43:29.27
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 12/19/23 10:43:29.283
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 12/19/23 10:43:29.286
  STEP: creating @ 12/19/23 10:43:29.289
  STEP: getting @ 12/19/23 10:43:29.331
  STEP: listing @ 12/19/23 10:43:29.341
  STEP: watching @ 12/19/23 10:43:29.349
  Dec 19 10:43:29.350: INFO: starting watch
  STEP: patching @ 12/19/23 10:43:29.352
  STEP: updating @ 12/19/23 10:43:29.364
  Dec 19 10:43:29.383: INFO: waiting for watch events with expected annotations
  STEP: getting /status @ 12/19/23 10:43:29.383
  STEP: patching /status @ 12/19/23 10:43:29.395
  STEP: updating /status @ 12/19/23 10:43:29.425
  STEP: deleting @ 12/19/23 10:43:29.45
  STEP: deleting a collection @ 12/19/23 10:43:29.495
  Dec 19 10:43:29.565: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-3446" for this suite. @ 12/19/23 10:43:29.577
• [0.400 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
test/e2e/apps/rc.go:104
  STEP: Creating a kubernetes client @ 12/19/23 10:43:29.605
  Dec 19 10:43:29.605: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename replication-controller @ 12/19/23 10:43:29.609
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:43:29.658
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:43:29.666
  STEP: Given a ReplicationController is created @ 12/19/23 10:43:29.672
  STEP: When the matched label of one of its pods change @ 12/19/23 10:43:29.693
  Dec 19 10:43:29.708: INFO: Pod name pod-release: Found 0 pods out of 1
  Dec 19 10:43:34.723: INFO: Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 12/19/23 10:43:34.755
  Dec 19 10:43:35.775: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-5286" for this suite. @ 12/19/23 10:43:35.788
• [6.202 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:646
  STEP: Creating a kubernetes client @ 12/19/23 10:43:35.81
  Dec 19 10:43:35.810: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename webhook @ 12/19/23 10:43:35.813
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:43:35.849
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:43:35.856
  STEP: Setting up server cert @ 12/19/23 10:43:35.907
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/19/23 10:43:37.041
  STEP: Deploying the webhook pod @ 12/19/23 10:43:37.096
  STEP: Wait for the deployment to be ready @ 12/19/23 10:43:37.13
  Dec 19 10:43:37.155: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 12/19/23 10:43:39.191
  STEP: Verifying the service has paired with the endpoint @ 12/19/23 10:43:39.229
  Dec 19 10:43:40.232: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 12/19/23 10:43:40.451
  STEP: Creating a configMap that should be mutated @ 12/19/23 10:43:40.507
  STEP: Deleting the collection of validation webhooks @ 12/19/23 10:43:40.585
  STEP: Creating a configMap that should not be mutated @ 12/19/23 10:43:40.709
  Dec 19 10:43:40.909: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-933" for this suite. @ 12/19/23 10:43:40.922
  STEP: Destroying namespace "webhook-markers-7951" for this suite. @ 12/19/23 10:43:40.957
• [5.179 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
test/e2e/apps/statefulset.go:321
  STEP: Creating a kubernetes client @ 12/19/23 10:43:40.993
  Dec 19 10:43:40.993: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename statefulset @ 12/19/23 10:43:41.003
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:43:41.091
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:43:41.126
  STEP: Creating service test in namespace statefulset-3093 @ 12/19/23 10:43:41.134
  STEP: Creating a new StatefulSet @ 12/19/23 10:43:41.159
  Dec 19 10:43:41.248: INFO: Found 0 stateful pods, waiting for 3
  Dec 19 10:43:51.259: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Dec 19 10:43:51.260: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Dec 19 10:43:51.260: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  Dec 19 10:43:51.289: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=statefulset-3093 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Dec 19 10:43:51.661: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Dec 19 10:43:51.661: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Dec 19 10:43:51.661: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 12/19/23 10:44:01.689
  Dec 19 10:44:01.724: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 12/19/23 10:44:01.724
  STEP: Updating Pods in reverse ordinal order @ 12/19/23 10:44:11.756
  Dec 19 10:44:11.768: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=statefulset-3093 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Dec 19 10:44:12.157: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Dec 19 10:44:12.157: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Dec 19 10:44:12.157: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  STEP: Rolling back to a previous revision @ 12/19/23 10:44:22.198
  Dec 19 10:44:22.198: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=statefulset-3093 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Dec 19 10:44:22.594: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Dec 19 10:44:22.594: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Dec 19 10:44:22.594: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Dec 19 10:44:32.678: INFO: Updating stateful set ss2
  STEP: Rolling back update in reverse ordinal order @ 12/19/23 10:44:42.698
  Dec 19 10:44:42.709: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=statefulset-3093 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Dec 19 10:44:43.107: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Dec 19 10:44:43.107: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Dec 19 10:44:43.107: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Dec 19 10:44:53.138: INFO: Deleting all statefulset in ns statefulset-3093
  Dec 19 10:44:53.147: INFO: Scaling statefulset ss2 to 0
  Dec 19 10:45:03.184: INFO: Waiting for statefulset status.replicas updated to 0
  Dec 19 10:45:03.192: INFO: Deleting statefulset ss2
  Dec 19 10:45:03.229: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3093" for this suite. @ 12/19/23 10:45:03.246
• [82.281 seconds]
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 12/19/23 10:45:03.278
  Dec 19 10:45:03.278: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename conformance-tests @ 12/19/23 10:45:03.282
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:45:03.314
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:45:03.324
  STEP: Getting node addresses @ 12/19/23 10:45:03.33
  Dec 19 10:45:03.330: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  Dec 19 10:45:03.350: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-2863" for this suite. @ 12/19/23 10:45:03.361
• [0.098 seconds]
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 12/19/23 10:45:03.376
  Dec 19 10:45:03.377: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename subjectreview @ 12/19/23 10:45:03.38
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:45:03.418
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:45:03.425
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-5582" @ 12/19/23 10:45:03.436
  Dec 19 10:45:03.453: INFO: saUsername: "system:serviceaccount:subjectreview-5582:e2e"
  Dec 19 10:45:03.459: INFO: saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-5582"}
  Dec 19 10:45:03.460: INFO: saUID: "e2ac3ef2-b24a-4521-bc6b-8bbfdf757b6e"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-5582:e2e" @ 12/19/23 10:45:03.46
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-5582:e2e" @ 12/19/23 10:45:03.468
  Dec 19 10:45:03.474: INFO: sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-5582:e2e" api 'list' configmaps in "subjectreview-5582" namespace @ 12/19/23 10:45:03.474
  Dec 19 10:45:03.478: INFO: SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-5582:e2e" @ 12/19/23 10:45:03.479
  Dec 19 10:45:03.485: INFO: lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  Dec 19 10:45:03.485: INFO: LocalSubjectAccessReview has been verified
  Dec 19 10:45:03.485: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-5582" for this suite. @ 12/19/23 10:45:03.497
• [0.141 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/security_context.go:488
  STEP: Creating a kubernetes client @ 12/19/23 10:45:03.525
  Dec 19 10:45:03.525: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename security-context-test @ 12/19/23 10:45:03.531
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:45:03.561
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:45:03.566
  Dec 19 10:45:07.618: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-8621" for this suite. @ 12/19/23 10:45:07.633
• [4.125 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 12/19/23 10:45:07.662
  Dec 19 10:45:07.662: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename crd-watch @ 12/19/23 10:45:07.666
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:45:07.705
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:45:07.718
  Dec 19 10:45:07.727: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Creating first CR  @ 12/19/23 10:45:10.608
  Dec 19 10:45:10.672: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-12-19T10:45:10Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-12-19T10:45:10Z]] name:name1 resourceVersion:20355 uid:67d9b2ec-c151-4b40-b135-cca95dbac35e] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Creating second CR @ 12/19/23 10:45:20.674
  Dec 19 10:45:20.689: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-12-19T10:45:20Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-12-19T10:45:20Z]] name:name2 resourceVersion:20402 uid:d3abd186-e544-401c-9958-f34999c6ff15] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying first CR @ 12/19/23 10:45:30.69
  Dec 19 10:45:30.712: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-12-19T10:45:10Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-12-19T10:45:30Z]] name:name1 resourceVersion:20420 uid:67d9b2ec-c151-4b40-b135-cca95dbac35e] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying second CR @ 12/19/23 10:45:40.718
  Dec 19 10:45:40.737: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-12-19T10:45:20Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-12-19T10:45:40Z]] name:name2 resourceVersion:20438 uid:d3abd186-e544-401c-9958-f34999c6ff15] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting first CR @ 12/19/23 10:45:50.738
  Dec 19 10:45:50.758: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-12-19T10:45:10Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-12-19T10:45:30Z]] name:name1 resourceVersion:20457 uid:67d9b2ec-c151-4b40-b135-cca95dbac35e] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting second CR @ 12/19/23 10:46:00.76
  Dec 19 10:46:00.806: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-12-19T10:45:20Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-12-19T10:45:40Z]] name:name2 resourceVersion:20476 uid:d3abd186-e544-401c-9958-f34999c6ff15] num:map[num1:9223372036854775807 num2:1000000]]}
  Dec 19 10:46:11.350: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-2319" for this suite. @ 12/19/23 10:46:11.364
• [63.720 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:223
  STEP: Creating a kubernetes client @ 12/19/23 10:46:11.383
  Dec 19 10:46:11.383: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename projected @ 12/19/23 10:46:11.386
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:46:11.425
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:46:11.431
  STEP: Creating a pod to test downward API volume plugin @ 12/19/23 10:46:11.439
  STEP: Saw pod success @ 12/19/23 10:46:15.496
  Dec 19 10:46:15.503: INFO: Trying to get logs from node dah7vaemeeho-3 pod downwardapi-volume-f97fe11c-4930-4dd4-ac0c-28f2692f6058 container client-container: <nil>
  STEP: delete the pod @ 12/19/23 10:46:15.546
  Dec 19 10:46:15.581: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3080" for this suite. @ 12/19/23 10:46:15.594
• [4.227 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:86
  STEP: Creating a kubernetes client @ 12/19/23 10:46:15.611
  Dec 19 10:46:15.611: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename downward-api @ 12/19/23 10:46:15.617
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:46:15.668
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:46:15.675
  STEP: Creating a pod to test downward API volume plugin @ 12/19/23 10:46:15.684
  STEP: Saw pod success @ 12/19/23 10:46:19.752
  Dec 19 10:46:19.764: INFO: Trying to get logs from node dah7vaemeeho-3 pod downwardapi-volume-9d8fb590-5d64-4004-b306-6b825787a896 container client-container: <nil>
  STEP: delete the pod @ 12/19/23 10:46:19.784
  Dec 19 10:46:19.826: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4303" for this suite. @ 12/19/23 10:46:19.85
• [4.262 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/field_validation.go:350
  STEP: Creating a kubernetes client @ 12/19/23 10:46:19.874
  Dec 19 10:46:19.874: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename field-validation @ 12/19/23 10:46:19.882
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:46:19.92
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:46:19.925
  Dec 19 10:46:19.932: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  W1219 10:46:19.937846      14 field_validation.go:423] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc0035cba70 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  W1219 10:46:22.735152      14 warnings.go:70] unknown field "alpha"
  W1219 10:46:22.735407      14 warnings.go:70] unknown field "beta"
  W1219 10:46:22.735537      14 warnings.go:70] unknown field "delta"
  W1219 10:46:22.735767      14 warnings.go:70] unknown field "epsilon"
  W1219 10:46:22.735915      14 warnings.go:70] unknown field "gamma"
  Dec 19 10:46:23.328: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-5961" for this suite. @ 12/19/23 10:46:23.336
• [3.477 seconds]
------------------------------
SSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/lifecycle_hook.go:214
  STEP: Creating a kubernetes client @ 12/19/23 10:46:23.352
  Dec 19 10:46:23.353: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 12/19/23 10:46:23.357
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:46:23.388
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:46:23.395
  STEP: create the container to handle the HTTPGet hook request. @ 12/19/23 10:46:23.411
  STEP: create the pod with lifecycle hook @ 12/19/23 10:46:25.452
  STEP: delete the pod with lifecycle hook @ 12/19/23 10:46:27.498
  STEP: check prestop hook @ 12/19/23 10:46:29.557
  Dec 19 10:46:29.574: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-4077" for this suite. @ 12/19/23 10:46:29.586
• [6.254 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/custom_resource_definition.go:59
  STEP: Creating a kubernetes client @ 12/19/23 10:46:29.609
  Dec 19 10:46:29.610: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename custom-resource-definition @ 12/19/23 10:46:29.613
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:46:29.661
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:46:29.671
  Dec 19 10:46:29.683: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  Dec 19 10:46:30.732: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-7180" for this suite. @ 12/19/23 10:46:30.745
• [1.147 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
test/e2e/common/storage/configmap_volume.go:505
  STEP: Creating a kubernetes client @ 12/19/23 10:46:30.759
  Dec 19 10:46:30.759: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename configmap @ 12/19/23 10:46:30.761
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:46:30.79
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:46:30.798
  Dec 19 10:46:30.880: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6507" for this suite. @ 12/19/23 10:46:30.891
• [0.148 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 12/19/23 10:46:30.911
  Dec 19 10:46:30.912: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename proxy @ 12/19/23 10:46:30.914
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:46:30.989
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:46:30.996
  STEP: starting an echo server on multiple ports @ 12/19/23 10:46:31.03
  STEP: creating replication controller proxy-service-rssb9 in namespace proxy-3739 @ 12/19/23 10:46:31.031
  I1219 10:46:31.055701      14 runners.go:197] Created replication controller with name: proxy-service-rssb9, namespace: proxy-3739, replica count: 1
  I1219 10:46:32.107141      14 runners.go:197] proxy-service-rssb9 Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1219 10:46:33.108371      14 runners.go:197] proxy-service-rssb9 Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Dec 19 10:46:33.115: INFO: setup took 2.113070689s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 12/19/23 10:46:33.116
  Dec 19 10:46:33.140: INFO: (0) /api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf:1080/proxy/rewriteme">test<... (200; 24.398072ms)
  Dec 19 10:46:33.142: INFO: (0) /api/v1/namespaces/proxy-3739/pods/http:proxy-service-rssb9-ckbxf:162/proxy/: bar (200; 25.288715ms)
  Dec 19 10:46:33.156: INFO: (0) /api/v1/namespaces/proxy-3739/pods/http:proxy-service-rssb9-ckbxf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3739/pods/http:proxy-service-rssb9-ckbxf:1080/proxy/rewriteme">... (200; 38.174293ms)
  Dec 19 10:46:33.156: INFO: (0) /api/v1/namespaces/proxy-3739/services/proxy-service-rssb9:portname1/proxy/: foo (200; 40.012048ms)
  Dec 19 10:46:33.162: INFO: (0) /api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf/proxy/: <a href="/api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf/proxy/rewriteme">test</a> (200; 44.695832ms)
  Dec 19 10:46:33.162: INFO: (0) /api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf:162/proxy/: bar (200; 45.316964ms)
  Dec 19 10:46:33.162: INFO: (0) /api/v1/namespaces/proxy-3739/services/http:proxy-service-rssb9:portname2/proxy/: bar (200; 45.676075ms)
  Dec 19 10:46:33.162: INFO: (0) /api/v1/namespaces/proxy-3739/services/proxy-service-rssb9:portname2/proxy/: bar (200; 44.458932ms)
  Dec 19 10:46:33.170: INFO: (0) /api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf:160/proxy/: foo (200; 54.089585ms)
  Dec 19 10:46:33.170: INFO: (0) /api/v1/namespaces/proxy-3739/pods/https:proxy-service-rssb9-ckbxf:462/proxy/: tls qux (200; 53.099186ms)
  Dec 19 10:46:33.171: INFO: (0) /api/v1/namespaces/proxy-3739/pods/https:proxy-service-rssb9-ckbxf:443/proxy/: <a href="/api/v1/namespaces/proxy-3739/pods/https:proxy-service-rssb9-ckbxf:443/proxy/tlsrewritem... (200; 53.870629ms)
  Dec 19 10:46:33.171: INFO: (0) /api/v1/namespaces/proxy-3739/pods/http:proxy-service-rssb9-ckbxf:160/proxy/: foo (200; 54.214208ms)
  Dec 19 10:46:33.172: INFO: (0) /api/v1/namespaces/proxy-3739/services/http:proxy-service-rssb9:portname1/proxy/: foo (200; 54.613181ms)
  Dec 19 10:46:33.172: INFO: (0) /api/v1/namespaces/proxy-3739/services/https:proxy-service-rssb9:tlsportname2/proxy/: tls qux (200; 55.041803ms)
  Dec 19 10:46:33.173: INFO: (0) /api/v1/namespaces/proxy-3739/pods/https:proxy-service-rssb9-ckbxf:460/proxy/: tls baz (200; 55.873776ms)
  Dec 19 10:46:33.173: INFO: (0) /api/v1/namespaces/proxy-3739/services/https:proxy-service-rssb9:tlsportname1/proxy/: tls baz (200; 55.533485ms)
  Dec 19 10:46:33.189: INFO: (1) /api/v1/namespaces/proxy-3739/pods/https:proxy-service-rssb9-ckbxf:460/proxy/: tls baz (200; 15.113111ms)
  Dec 19 10:46:33.189: INFO: (1) /api/v1/namespaces/proxy-3739/pods/http:proxy-service-rssb9-ckbxf:162/proxy/: bar (200; 15.235889ms)
  Dec 19 10:46:33.197: INFO: (1) /api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf:1080/proxy/rewriteme">test<... (200; 22.550863ms)
  Dec 19 10:46:33.198: INFO: (1) /api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf/proxy/: <a href="/api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf/proxy/rewriteme">test</a> (200; 23.136598ms)
  Dec 19 10:46:33.198: INFO: (1) /api/v1/namespaces/proxy-3739/pods/https:proxy-service-rssb9-ckbxf:443/proxy/: <a href="/api/v1/namespaces/proxy-3739/pods/https:proxy-service-rssb9-ckbxf:443/proxy/tlsrewritem... (200; 22.779762ms)
  Dec 19 10:46:33.198: INFO: (1) /api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf:162/proxy/: bar (200; 18.834619ms)
  Dec 19 10:46:33.198: INFO: (1) /api/v1/namespaces/proxy-3739/services/http:proxy-service-rssb9:portname2/proxy/: bar (200; 23.341938ms)
  Dec 19 10:46:33.198: INFO: (1) /api/v1/namespaces/proxy-3739/pods/http:proxy-service-rssb9-ckbxf:160/proxy/: foo (200; 23.246457ms)
  Dec 19 10:46:33.198: INFO: (1) /api/v1/namespaces/proxy-3739/pods/http:proxy-service-rssb9-ckbxf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3739/pods/http:proxy-service-rssb9-ckbxf:1080/proxy/rewriteme">... (200; 23.351242ms)
  Dec 19 10:46:33.198: INFO: (1) /api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf:160/proxy/: foo (200; 19.901124ms)
  Dec 19 10:46:33.198: INFO: (1) /api/v1/namespaces/proxy-3739/services/https:proxy-service-rssb9:tlsportname2/proxy/: tls qux (200; 24.058483ms)
  Dec 19 10:46:33.198: INFO: (1) /api/v1/namespaces/proxy-3739/pods/https:proxy-service-rssb9-ckbxf:462/proxy/: tls qux (200; 23.483346ms)
  Dec 19 10:46:33.204: INFO: (1) /api/v1/namespaces/proxy-3739/services/proxy-service-rssb9:portname2/proxy/: bar (200; 29.410825ms)
  Dec 19 10:46:33.205: INFO: (1) /api/v1/namespaces/proxy-3739/services/proxy-service-rssb9:portname1/proxy/: foo (200; 27.897508ms)
  Dec 19 10:46:33.207: INFO: (1) /api/v1/namespaces/proxy-3739/services/https:proxy-service-rssb9:tlsportname1/proxy/: tls baz (200; 32.276ms)
  Dec 19 10:46:33.207: INFO: (1) /api/v1/namespaces/proxy-3739/services/http:proxy-service-rssb9:portname1/proxy/: foo (200; 33.348764ms)
  Dec 19 10:46:33.223: INFO: (2) /api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf:162/proxy/: bar (200; 14.694274ms)
  Dec 19 10:46:33.223: INFO: (2) /api/v1/namespaces/proxy-3739/pods/https:proxy-service-rssb9-ckbxf:443/proxy/: <a href="/api/v1/namespaces/proxy-3739/pods/https:proxy-service-rssb9-ckbxf:443/proxy/tlsrewritem... (200; 13.489227ms)
  Dec 19 10:46:33.223: INFO: (2) /api/v1/namespaces/proxy-3739/pods/https:proxy-service-rssb9-ckbxf:460/proxy/: tls baz (200; 14.633847ms)
  Dec 19 10:46:33.223: INFO: (2) /api/v1/namespaces/proxy-3739/pods/http:proxy-service-rssb9-ckbxf:160/proxy/: foo (200; 13.555842ms)
  Dec 19 10:46:33.229: INFO: (2) /api/v1/namespaces/proxy-3739/pods/https:proxy-service-rssb9-ckbxf:462/proxy/: tls qux (200; 19.94493ms)
  Dec 19 10:46:33.229: INFO: (2) /api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf:1080/proxy/rewriteme">test<... (200; 20.155722ms)
  Dec 19 10:46:33.229: INFO: (2) /api/v1/namespaces/proxy-3739/services/https:proxy-service-rssb9:tlsportname2/proxy/: tls qux (200; 21.48632ms)
  Dec 19 10:46:33.231: INFO: (2) /api/v1/namespaces/proxy-3739/pods/http:proxy-service-rssb9-ckbxf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3739/pods/http:proxy-service-rssb9-ckbxf:1080/proxy/rewriteme">... (200; 20.101474ms)
  Dec 19 10:46:33.231: INFO: (2) /api/v1/namespaces/proxy-3739/pods/http:proxy-service-rssb9-ckbxf:162/proxy/: bar (200; 22.464578ms)
  Dec 19 10:46:33.231: INFO: (2) /api/v1/namespaces/proxy-3739/services/proxy-service-rssb9:portname2/proxy/: bar (200; 20.657377ms)
  Dec 19 10:46:33.231: INFO: (2) /api/v1/namespaces/proxy-3739/services/proxy-service-rssb9:portname1/proxy/: foo (200; 23.195626ms)
  Dec 19 10:46:33.232: INFO: (2) /api/v1/namespaces/proxy-3739/services/https:proxy-service-rssb9:tlsportname1/proxy/: tls baz (200; 22.275445ms)
  Dec 19 10:46:33.233: INFO: (2) /api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf/proxy/: <a href="/api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf/proxy/rewriteme">test</a> (200; 24.610335ms)
  Dec 19 10:46:33.233: INFO: (2) /api/v1/namespaces/proxy-3739/services/http:proxy-service-rssb9:portname1/proxy/: foo (200; 25.031055ms)
  Dec 19 10:46:33.234: INFO: (2) /api/v1/namespaces/proxy-3739/services/http:proxy-service-rssb9:portname2/proxy/: bar (200; 25.365385ms)
  Dec 19 10:46:33.234: INFO: (2) /api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf:160/proxy/: foo (200; 24.188202ms)
  Dec 19 10:46:33.247: INFO: (3) /api/v1/namespaces/proxy-3739/pods/http:proxy-service-rssb9-ckbxf:162/proxy/: bar (200; 12.770259ms)
  Dec 19 10:46:33.247: INFO: (3) /api/v1/namespaces/proxy-3739/pods/http:proxy-service-rssb9-ckbxf:160/proxy/: foo (200; 12.799706ms)
  Dec 19 10:46:33.248: INFO: (3) /api/v1/namespaces/proxy-3739/pods/https:proxy-service-rssb9-ckbxf:443/proxy/: <a href="/api/v1/namespaces/proxy-3739/pods/https:proxy-service-rssb9-ckbxf:443/proxy/tlsrewritem... (200; 14.00243ms)
  Dec 19 10:46:33.258: INFO: (3) /api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf:160/proxy/: foo (200; 23.018596ms)
  Dec 19 10:46:33.258: INFO: (3) /api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf:162/proxy/: bar (200; 23.654308ms)
  Dec 19 10:46:33.259: INFO: (3) /api/v1/namespaces/proxy-3739/services/http:proxy-service-rssb9:portname2/proxy/: bar (200; 24.263341ms)
  Dec 19 10:46:33.259: INFO: (3) /api/v1/namespaces/proxy-3739/services/https:proxy-service-rssb9:tlsportname1/proxy/: tls baz (200; 24.073972ms)
  Dec 19 10:46:33.259: INFO: (3) /api/v1/namespaces/proxy-3739/pods/http:proxy-service-rssb9-ckbxf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3739/pods/http:proxy-service-rssb9-ckbxf:1080/proxy/rewriteme">... (200; 24.002786ms)
  Dec 19 10:46:33.258: INFO: (3) /api/v1/namespaces/proxy-3739/pods/https:proxy-service-rssb9-ckbxf:460/proxy/: tls baz (200; 23.61235ms)
  Dec 19 10:46:33.259: INFO: (3) /api/v1/namespaces/proxy-3739/pods/https:proxy-service-rssb9-ckbxf:462/proxy/: tls qux (200; 24.892415ms)
  Dec 19 10:46:33.261: INFO: (3) /api/v1/namespaces/proxy-3739/services/proxy-service-rssb9:portname2/proxy/: bar (200; 26.948544ms)
  Dec 19 10:46:33.261: INFO: (3) /api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf/proxy/: <a href="/api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf/proxy/rewriteme">test</a> (200; 26.581071ms)
  Dec 19 10:46:33.261: INFO: (3) /api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf:1080/proxy/rewriteme">test<... (200; 26.455374ms)
  Dec 19 10:46:33.264: INFO: (3) /api/v1/namespaces/proxy-3739/services/https:proxy-service-rssb9:tlsportname2/proxy/: tls qux (200; 28.913034ms)
  Dec 19 10:46:33.265: INFO: (3) /api/v1/namespaces/proxy-3739/services/proxy-service-rssb9:portname1/proxy/: foo (200; 30.692158ms)
  Dec 19 10:46:33.267: INFO: (3) /api/v1/namespaces/proxy-3739/services/http:proxy-service-rssb9:portname1/proxy/: foo (200; 32.049067ms)
  Dec 19 10:46:33.282: INFO: (4) /api/v1/namespaces/proxy-3739/pods/https:proxy-service-rssb9-ckbxf:460/proxy/: tls baz (200; 14.549975ms)
  Dec 19 10:46:33.284: INFO: (4) /api/v1/namespaces/proxy-3739/pods/https:proxy-service-rssb9-ckbxf:462/proxy/: tls qux (200; 16.754503ms)
  Dec 19 10:46:33.289: INFO: (4) /api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf/proxy/: <a href="/api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf/proxy/rewriteme">test</a> (200; 21.77325ms)
  Dec 19 10:46:33.290: INFO: (4) /api/v1/namespaces/proxy-3739/services/http:proxy-service-rssb9:portname1/proxy/: foo (200; 22.788106ms)
  Dec 19 10:46:33.293: INFO: (4) /api/v1/namespaces/proxy-3739/services/proxy-service-rssb9:portname2/proxy/: bar (200; 25.722387ms)
  Dec 19 10:46:33.294: INFO: (4) /api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf:162/proxy/: bar (200; 25.523787ms)
  Dec 19 10:46:33.296: INFO: (4) /api/v1/namespaces/proxy-3739/pods/http:proxy-service-rssb9-ckbxf:160/proxy/: foo (200; 27.564554ms)
  Dec 19 10:46:33.296: INFO: (4) /api/v1/namespaces/proxy-3739/services/http:proxy-service-rssb9:portname2/proxy/: bar (200; 27.712343ms)
  Dec 19 10:46:33.296: INFO: (4) /api/v1/namespaces/proxy-3739/services/https:proxy-service-rssb9:tlsportname1/proxy/: tls baz (200; 28.21266ms)
  Dec 19 10:46:33.297: INFO: (4) /api/v1/namespaces/proxy-3739/services/https:proxy-service-rssb9:tlsportname2/proxy/: tls qux (200; 28.941886ms)
  Dec 19 10:46:33.297: INFO: (4) /api/v1/namespaces/proxy-3739/pods/https:proxy-service-rssb9-ckbxf:443/proxy/: <a href="/api/v1/namespaces/proxy-3739/pods/https:proxy-service-rssb9-ckbxf:443/proxy/tlsrewritem... (200; 29.397591ms)
  Dec 19 10:46:33.298: INFO: (4) /api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf:1080/proxy/rewriteme">test<... (200; 30.360131ms)
  Dec 19 10:46:33.300: INFO: (4) /api/v1/namespaces/proxy-3739/pods/http:proxy-service-rssb9-ckbxf:162/proxy/: bar (200; 31.860142ms)
  Dec 19 10:46:33.300: INFO: (4) /api/v1/namespaces/proxy-3739/pods/http:proxy-service-rssb9-ckbxf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3739/pods/http:proxy-service-rssb9-ckbxf:1080/proxy/rewriteme">... (200; 32.547706ms)
  Dec 19 10:46:33.301: INFO: (4) /api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf:160/proxy/: foo (200; 33.148363ms)
  Dec 19 10:46:33.303: INFO: (4) /api/v1/namespaces/proxy-3739/services/proxy-service-rssb9:portname1/proxy/: foo (200; 34.82461ms)
  Dec 19 10:46:33.316: INFO: (5) /api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf:1080/proxy/rewriteme">test<... (200; 13.470948ms)
  Dec 19 10:46:33.316: INFO: (5) /api/v1/namespaces/proxy-3739/pods/http:proxy-service-rssb9-ckbxf:160/proxy/: foo (200; 13.16375ms)
  Dec 19 10:46:33.317: INFO: (5) /api/v1/namespaces/proxy-3739/pods/https:proxy-service-rssb9-ckbxf:462/proxy/: tls qux (200; 13.340386ms)
  Dec 19 10:46:33.317: INFO: (5) /api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf/proxy/: <a href="/api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf/proxy/rewriteme">test</a> (200; 12.761447ms)
  Dec 19 10:46:33.319: INFO: (5) /api/v1/namespaces/proxy-3739/pods/https:proxy-service-rssb9-ckbxf:460/proxy/: tls baz (200; 14.751725ms)
  Dec 19 10:46:33.319: INFO: (5) /api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf:162/proxy/: bar (200; 14.815209ms)
  Dec 19 10:46:33.319: INFO: (5) /api/v1/namespaces/proxy-3739/pods/http:proxy-service-rssb9-ckbxf:162/proxy/: bar (200; 14.979675ms)
  Dec 19 10:46:33.321: INFO: (5) /api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf:160/proxy/: foo (200; 18.002237ms)
  Dec 19 10:46:33.322: INFO: (5) /api/v1/namespaces/proxy-3739/pods/https:proxy-service-rssb9-ckbxf:443/proxy/: <a href="/api/v1/namespaces/proxy-3739/pods/https:proxy-service-rssb9-ckbxf:443/proxy/tlsrewritem... (200; 18.444081ms)
  Dec 19 10:46:33.322: INFO: (5) /api/v1/namespaces/proxy-3739/services/http:proxy-service-rssb9:portname1/proxy/: foo (200; 17.732424ms)
  Dec 19 10:46:33.322: INFO: (5) /api/v1/namespaces/proxy-3739/pods/http:proxy-service-rssb9-ckbxf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3739/pods/http:proxy-service-rssb9-ckbxf:1080/proxy/rewriteme">... (200; 18.343258ms)
  Dec 19 10:46:33.322: INFO: (5) /api/v1/namespaces/proxy-3739/services/proxy-service-rssb9:portname1/proxy/: foo (200; 18.532094ms)
  Dec 19 10:46:33.323: INFO: (5) /api/v1/namespaces/proxy-3739/services/http:proxy-service-rssb9:portname2/proxy/: bar (200; 19.66794ms)
  Dec 19 10:46:33.324: INFO: (5) /api/v1/namespaces/proxy-3739/services/https:proxy-service-rssb9:tlsportname1/proxy/: tls baz (200; 20.603235ms)
  Dec 19 10:46:33.327: INFO: (5) /api/v1/namespaces/proxy-3739/services/https:proxy-service-rssb9:tlsportname2/proxy/: tls qux (200; 22.693889ms)
  Dec 19 10:46:33.328: INFO: (5) /api/v1/namespaces/proxy-3739/services/proxy-service-rssb9:portname2/proxy/: bar (200; 24.278128ms)
  Dec 19 10:46:33.341: INFO: (6) /api/v1/namespaces/proxy-3739/pods/https:proxy-service-rssb9-ckbxf:443/proxy/: <a href="/api/v1/namespaces/proxy-3739/pods/https:proxy-service-rssb9-ckbxf:443/proxy/tlsrewritem... (200; 12.610808ms)
  Dec 19 10:46:33.345: INFO: (6) /api/v1/namespaces/proxy-3739/pods/http:proxy-service-rssb9-ckbxf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3739/pods/http:proxy-service-rssb9-ckbxf:1080/proxy/rewriteme">... (200; 16.070324ms)
  Dec 19 10:46:33.345: INFO: (6) /api/v1/namespaces/proxy-3739/pods/https:proxy-service-rssb9-ckbxf:462/proxy/: tls qux (200; 16.579781ms)
  Dec 19 10:46:33.345: INFO: (6) /api/v1/namespaces/proxy-3739/services/proxy-service-rssb9:portname2/proxy/: bar (200; 17.126538ms)
  Dec 19 10:46:33.345: INFO: (6) /api/v1/namespaces/proxy-3739/pods/http:proxy-service-rssb9-ckbxf:162/proxy/: bar (200; 14.993768ms)
  Dec 19 10:46:33.348: INFO: (6) /api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf/proxy/: <a href="/api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf/proxy/rewriteme">test</a> (200; 18.535166ms)
  Dec 19 10:46:33.350: INFO: (6) /api/v1/namespaces/proxy-3739/services/https:proxy-service-rssb9:tlsportname1/proxy/: tls baz (200; 21.328889ms)
  Dec 19 10:46:33.350: INFO: (6) /api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf:162/proxy/: bar (200; 20.71752ms)
  Dec 19 10:46:33.350: INFO: (6) /api/v1/namespaces/proxy-3739/pods/http:proxy-service-rssb9-ckbxf:160/proxy/: foo (200; 20.929346ms)
  Dec 19 10:46:33.352: INFO: (6) /api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf:160/proxy/: foo (200; 22.956944ms)
  Dec 19 10:46:33.352: INFO: (6) /api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf:1080/proxy/rewriteme">test<... (200; 22.325973ms)
  Dec 19 10:46:33.352: INFO: (6) /api/v1/namespaces/proxy-3739/pods/https:proxy-service-rssb9-ckbxf:460/proxy/: tls baz (200; 22.611784ms)
  Dec 19 10:46:33.352: INFO: (6) /api/v1/namespaces/proxy-3739/services/proxy-service-rssb9:portname1/proxy/: foo (200; 22.507343ms)
  Dec 19 10:46:33.352: INFO: (6) /api/v1/namespaces/proxy-3739/services/https:proxy-service-rssb9:tlsportname2/proxy/: tls qux (200; 23.035698ms)
  Dec 19 10:46:33.355: INFO: (6) /api/v1/namespaces/proxy-3739/services/http:proxy-service-rssb9:portname1/proxy/: foo (200; 26.840327ms)
  Dec 19 10:46:33.356: INFO: (6) /api/v1/namespaces/proxy-3739/services/http:proxy-service-rssb9:portname2/proxy/: bar (200; 27.38997ms)
  Dec 19 10:46:33.368: INFO: (7) /api/v1/namespaces/proxy-3739/pods/https:proxy-service-rssb9-ckbxf:443/proxy/: <a href="/api/v1/namespaces/proxy-3739/pods/https:proxy-service-rssb9-ckbxf:443/proxy/tlsrewritem... (200; 12.558758ms)
  Dec 19 10:46:33.369: INFO: (7) /api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf/proxy/: <a href="/api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf/proxy/rewriteme">test</a> (200; 11.790864ms)
  Dec 19 10:46:33.370: INFO: (7) /api/v1/namespaces/proxy-3739/pods/http:proxy-service-rssb9-ckbxf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3739/pods/http:proxy-service-rssb9-ckbxf:1080/proxy/rewriteme">... (200; 13.385322ms)
  Dec 19 10:46:33.370: INFO: (7) /api/v1/namespaces/proxy-3739/pods/http:proxy-service-rssb9-ckbxf:162/proxy/: bar (200; 12.349587ms)
  Dec 19 10:46:33.375: INFO: (7) /api/v1/namespaces/proxy-3739/services/http:proxy-service-rssb9:portname1/proxy/: foo (200; 16.722728ms)
  Dec 19 10:46:33.376: INFO: (7) /api/v1/namespaces/proxy-3739/services/http:proxy-service-rssb9:portname2/proxy/: bar (200; 17.001897ms)
  Dec 19 10:46:33.376: INFO: (7) /api/v1/namespaces/proxy-3739/pods/https:proxy-service-rssb9-ckbxf:460/proxy/: tls baz (200; 18.953347ms)
  Dec 19 10:46:33.377: INFO: (7) /api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf:162/proxy/: bar (200; 19.447987ms)
  Dec 19 10:46:33.377: INFO: (7) /api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf:1080/proxy/rewriteme">test<... (200; 19.199028ms)
  Dec 19 10:46:33.382: INFO: (7) /api/v1/namespaces/proxy-3739/pods/https:proxy-service-rssb9-ckbxf:462/proxy/: tls qux (200; 23.052728ms)
  Dec 19 10:46:33.382: INFO: (7) /api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf:160/proxy/: foo (200; 25.647495ms)
  Dec 19 10:46:33.382: INFO: (7) /api/v1/namespaces/proxy-3739/services/proxy-service-rssb9:portname1/proxy/: foo (200; 24.749358ms)
  Dec 19 10:46:33.387: INFO: (7) /api/v1/namespaces/proxy-3739/services/https:proxy-service-rssb9:tlsportname2/proxy/: tls qux (200; 28.108062ms)
  Dec 19 10:46:33.387: INFO: (7) /api/v1/namespaces/proxy-3739/pods/http:proxy-service-rssb9-ckbxf:160/proxy/: foo (200; 30.037353ms)
  Dec 19 10:46:33.387: INFO: (7) /api/v1/namespaces/proxy-3739/services/proxy-service-rssb9:portname2/proxy/: bar (200; 29.825554ms)
  Dec 19 10:46:33.387: INFO: (7) /api/v1/namespaces/proxy-3739/services/https:proxy-service-rssb9:tlsportname1/proxy/: tls baz (200; 29.649437ms)
  Dec 19 10:46:33.409: INFO: (8) /api/v1/namespaces/proxy-3739/pods/https:proxy-service-rssb9-ckbxf:443/proxy/: <a href="/api/v1/namespaces/proxy-3739/pods/https:proxy-service-rssb9-ckbxf:443/proxy/tlsrewritem... (200; 19.191766ms)
  Dec 19 10:46:33.409: INFO: (8) /api/v1/namespaces/proxy-3739/services/proxy-service-rssb9:portname2/proxy/: bar (200; 19.65105ms)
  Dec 19 10:46:33.409: INFO: (8) /api/v1/namespaces/proxy-3739/pods/https:proxy-service-rssb9-ckbxf:462/proxy/: tls qux (200; 18.903559ms)
  Dec 19 10:46:33.411: INFO: (8) /api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf:160/proxy/: foo (200; 19.304384ms)
  Dec 19 10:46:33.411: INFO: (8) /api/v1/namespaces/proxy-3739/pods/http:proxy-service-rssb9-ckbxf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3739/pods/http:proxy-service-rssb9-ckbxf:1080/proxy/rewriteme">... (200; 19.874518ms)
  Dec 19 10:46:33.416: INFO: (8) /api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf:162/proxy/: bar (200; 23.769803ms)
  Dec 19 10:46:33.418: INFO: (8) /api/v1/namespaces/proxy-3739/services/http:proxy-service-rssb9:portname2/proxy/: bar (200; 26.976495ms)
  Dec 19 10:46:33.418: INFO: (8) /api/v1/namespaces/proxy-3739/services/https:proxy-service-rssb9:tlsportname1/proxy/: tls baz (200; 26.944958ms)
  Dec 19 10:46:33.418: INFO: (8) /api/v1/namespaces/proxy-3739/pods/http:proxy-service-rssb9-ckbxf:160/proxy/: foo (200; 26.375254ms)
  Dec 19 10:46:33.423: INFO: (8) /api/v1/namespaces/proxy-3739/pods/http:proxy-service-rssb9-ckbxf:162/proxy/: bar (200; 30.661201ms)
  Dec 19 10:46:33.424: INFO: (8) /api/v1/namespaces/proxy-3739/pods/https:proxy-service-rssb9-ckbxf:460/proxy/: tls baz (200; 31.772062ms)
  Dec 19 10:46:33.424: INFO: (8) /api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf/proxy/: <a href="/api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf/proxy/rewriteme">test</a> (200; 31.558992ms)
  Dec 19 10:46:33.424: INFO: (8) /api/v1/namespaces/proxy-3739/services/https:proxy-service-rssb9:tlsportname2/proxy/: tls qux (200; 32.114383ms)
  Dec 19 10:46:33.424: INFO: (8) /api/v1/namespaces/proxy-3739/services/proxy-service-rssb9:portname1/proxy/: foo (200; 31.820169ms)
  Dec 19 10:46:33.424: INFO: (8) /api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf:1080/proxy/rewriteme">test<... (200; 31.66954ms)
  Dec 19 10:46:33.424: INFO: (8) /api/v1/namespaces/proxy-3739/services/http:proxy-service-rssb9:portname1/proxy/: foo (200; 32.208255ms)
  Dec 19 10:46:33.434: INFO: (9) /api/v1/namespaces/proxy-3739/pods/https:proxy-service-rssb9-ckbxf:460/proxy/: tls baz (200; 8.951948ms)
  Dec 19 10:46:33.438: INFO: (9) /api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf:160/proxy/: foo (200; 12.22139ms)
  Dec 19 10:46:33.445: INFO: (9) /api/v1/namespaces/proxy-3739/pods/https:proxy-service-rssb9-ckbxf:462/proxy/: tls qux (200; 20.126174ms)
  Dec 19 10:46:33.446: INFO: (9) /api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf:162/proxy/: bar (200; 20.369485ms)
  Dec 19 10:46:33.446: INFO: (9) /api/v1/namespaces/proxy-3739/services/https:proxy-service-rssb9:tlsportname1/proxy/: tls baz (200; 20.984098ms)
  Dec 19 10:46:33.446: INFO: (9) /api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf/proxy/: <a href="/api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf/proxy/rewriteme">test</a> (200; 20.117999ms)
  Dec 19 10:46:33.448: INFO: (9) /api/v1/namespaces/proxy-3739/pods/http:proxy-service-rssb9-ckbxf:160/proxy/: foo (200; 22.821341ms)
  Dec 19 10:46:33.448: INFO: (9) /api/v1/namespaces/proxy-3739/pods/http:proxy-service-rssb9-ckbxf:162/proxy/: bar (200; 21.473372ms)
  Dec 19 10:46:33.449: INFO: (9) /api/v1/namespaces/proxy-3739/pods/http:proxy-service-rssb9-ckbxf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3739/pods/http:proxy-service-rssb9-ckbxf:1080/proxy/rewriteme">... (200; 23.939271ms)
  Dec 19 10:46:33.449: INFO: (9) /api/v1/namespaces/proxy-3739/services/http:proxy-service-rssb9:portname1/proxy/: foo (200; 24.674215ms)
  Dec 19 10:46:33.453: INFO: (9) /api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf:1080/proxy/rewriteme">test<... (200; 27.559451ms)
  Dec 19 10:46:33.453: INFO: (9) /api/v1/namespaces/proxy-3739/services/proxy-service-rssb9:portname1/proxy/: foo (200; 27.784148ms)
  Dec 19 10:46:33.453: INFO: (9) /api/v1/namespaces/proxy-3739/pods/https:proxy-service-rssb9-ckbxf:443/proxy/: <a href="/api/v1/namespaces/proxy-3739/pods/https:proxy-service-rssb9-ckbxf:443/proxy/tlsrewritem... (200; 27.14729ms)
  Dec 19 10:46:33.455: INFO: (9) /api/v1/namespaces/proxy-3739/services/http:proxy-service-rssb9:portname2/proxy/: bar (200; 28.585752ms)
  Dec 19 10:46:33.455: INFO: (9) /api/v1/namespaces/proxy-3739/services/https:proxy-service-rssb9:tlsportname2/proxy/: tls qux (200; 28.872453ms)
  Dec 19 10:46:33.460: INFO: (9) /api/v1/namespaces/proxy-3739/services/proxy-service-rssb9:portname2/proxy/: bar (200; 34.637162ms)
  Dec 19 10:46:33.477: INFO: (10) /api/v1/namespaces/proxy-3739/pods/https:proxy-service-rssb9-ckbxf:460/proxy/: tls baz (200; 16.952207ms)
  Dec 19 10:46:33.478: INFO: (10) /api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf/proxy/: <a href="/api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf/proxy/rewriteme">test</a> (200; 17.289529ms)
  Dec 19 10:46:33.478: INFO: (10) /api/v1/namespaces/proxy-3739/pods/http:proxy-service-rssb9-ckbxf:162/proxy/: bar (200; 17.043709ms)
  Dec 19 10:46:33.478: INFO: (10) /api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf:160/proxy/: foo (200; 16.802861ms)
  Dec 19 10:46:33.478: INFO: (10) /api/v1/namespaces/proxy-3739/services/proxy-service-rssb9:portname2/proxy/: bar (200; 17.984164ms)
  Dec 19 10:46:33.478: INFO: (10) /api/v1/namespaces/proxy-3739/pods/https:proxy-service-rssb9-ckbxf:462/proxy/: tls qux (200; 18.115624ms)
  Dec 19 10:46:33.487: INFO: (10) /api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf:1080/proxy/rewriteme">test<... (200; 26.915214ms)
  Dec 19 10:46:33.487: INFO: (10) /api/v1/namespaces/proxy-3739/pods/http:proxy-service-rssb9-ckbxf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3739/pods/http:proxy-service-rssb9-ckbxf:1080/proxy/rewriteme">... (200; 26.111187ms)
  Dec 19 10:46:33.488: INFO: (10) /api/v1/namespaces/proxy-3739/services/https:proxy-service-rssb9:tlsportname2/proxy/: tls qux (200; 27.497824ms)
  Dec 19 10:46:33.489: INFO: (10) /api/v1/namespaces/proxy-3739/services/http:proxy-service-rssb9:portname1/proxy/: foo (200; 29.121265ms)
  Dec 19 10:46:33.489: INFO: (10) /api/v1/namespaces/proxy-3739/pods/https:proxy-service-rssb9-ckbxf:443/proxy/: <a href="/api/v1/namespaces/proxy-3739/pods/https:proxy-service-rssb9-ckbxf:443/proxy/tlsrewritem... (200; 28.401284ms)
  Dec 19 10:46:33.490: INFO: (10) /api/v1/namespaces/proxy-3739/pods/http:proxy-service-rssb9-ckbxf:160/proxy/: foo (200; 28.16397ms)
  Dec 19 10:46:33.490: INFO: (10) /api/v1/namespaces/proxy-3739/services/https:proxy-service-rssb9:tlsportname1/proxy/: tls baz (200; 28.822702ms)
  Dec 19 10:46:33.494: INFO: (10) /api/v1/namespaces/proxy-3739/services/proxy-service-rssb9:portname1/proxy/: foo (200; 32.227148ms)
  Dec 19 10:46:33.494: INFO: (10) /api/v1/namespaces/proxy-3739/services/http:proxy-service-rssb9:portname2/proxy/: bar (200; 32.906061ms)
  Dec 19 10:46:33.494: INFO: (10) /api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf:162/proxy/: bar (200; 32.67927ms)
  Dec 19 10:46:33.528: INFO: (11) /api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf:162/proxy/: bar (200; 32.793759ms)
  Dec 19 10:46:33.528: INFO: (11) /api/v1/namespaces/proxy-3739/pods/https:proxy-service-rssb9-ckbxf:460/proxy/: tls baz (200; 32.741702ms)
  Dec 19 10:46:33.528: INFO: (11) /api/v1/namespaces/proxy-3739/pods/https:proxy-service-rssb9-ckbxf:462/proxy/: tls qux (200; 32.069105ms)
  Dec 19 10:46:33.530: INFO: (11) /api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf:1080/proxy/rewriteme">test<... (200; 35.831112ms)
  Dec 19 10:46:33.533: INFO: (11) /api/v1/namespaces/proxy-3739/pods/http:proxy-service-rssb9-ckbxf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3739/pods/http:proxy-service-rssb9-ckbxf:1080/proxy/rewriteme">... (200; 37.145703ms)
  Dec 19 10:46:33.539: INFO: (11) /api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf/proxy/: <a href="/api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf/proxy/rewriteme">test</a> (200; 44.094791ms)
  Dec 19 10:46:33.539: INFO: (11) /api/v1/namespaces/proxy-3739/pods/http:proxy-service-rssb9-ckbxf:160/proxy/: foo (200; 43.373114ms)
  Dec 19 10:46:33.540: INFO: (11) /api/v1/namespaces/proxy-3739/services/https:proxy-service-rssb9:tlsportname2/proxy/: tls qux (200; 44.984454ms)
  Dec 19 10:46:33.542: INFO: (11) /api/v1/namespaces/proxy-3739/services/proxy-service-rssb9:portname1/proxy/: foo (200; 46.805741ms)
  Dec 19 10:46:33.543: INFO: (11) /api/v1/namespaces/proxy-3739/services/https:proxy-service-rssb9:tlsportname1/proxy/: tls baz (200; 47.159548ms)
  Dec 19 10:46:33.544: INFO: (11) /api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf:160/proxy/: foo (200; 48.144618ms)
  Dec 19 10:46:33.546: INFO: (11) /api/v1/namespaces/proxy-3739/pods/https:proxy-service-rssb9-ckbxf:443/proxy/: <a href="/api/v1/namespaces/proxy-3739/pods/https:proxy-service-rssb9-ckbxf:443/proxy/tlsrewritem... (200; 50.229452ms)
  Dec 19 10:46:33.546: INFO: (11) /api/v1/namespaces/proxy-3739/services/proxy-service-rssb9:portname2/proxy/: bar (200; 51.462175ms)
  Dec 19 10:46:33.546: INFO: (11) /api/v1/namespaces/proxy-3739/services/http:proxy-service-rssb9:portname2/proxy/: bar (200; 50.69692ms)
  Dec 19 10:46:33.546: INFO: (11) /api/v1/namespaces/proxy-3739/pods/http:proxy-service-rssb9-ckbxf:162/proxy/: bar (200; 50.669969ms)
  Dec 19 10:46:33.546: INFO: (11) /api/v1/namespaces/proxy-3739/services/http:proxy-service-rssb9:portname1/proxy/: foo (200; 50.624635ms)
  Dec 19 10:46:33.570: INFO: (12) /api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf:1080/proxy/rewriteme">test<... (200; 23.826167ms)
  Dec 19 10:46:33.571: INFO: (12) /api/v1/namespaces/proxy-3739/pods/http:proxy-service-rssb9-ckbxf:162/proxy/: bar (200; 22.599975ms)
  Dec 19 10:46:33.571: INFO: (12) /api/v1/namespaces/proxy-3739/pods/http:proxy-service-rssb9-ckbxf:160/proxy/: foo (200; 24.407048ms)
  Dec 19 10:46:33.572: INFO: (12) /api/v1/namespaces/proxy-3739/pods/https:proxy-service-rssb9-ckbxf:462/proxy/: tls qux (200; 24.679335ms)
  Dec 19 10:46:33.572: INFO: (12) /api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf:160/proxy/: foo (200; 23.994428ms)
  Dec 19 10:46:33.574: INFO: (12) /api/v1/namespaces/proxy-3739/pods/https:proxy-service-rssb9-ckbxf:443/proxy/: <a href="/api/v1/namespaces/proxy-3739/pods/https:proxy-service-rssb9-ckbxf:443/proxy/tlsrewritem... (200; 26.942142ms)
  Dec 19 10:46:33.588: INFO: (12) /api/v1/namespaces/proxy-3739/pods/http:proxy-service-rssb9-ckbxf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3739/pods/http:proxy-service-rssb9-ckbxf:1080/proxy/rewriteme">... (200; 40.298511ms)
  Dec 19 10:46:33.588: INFO: (12) /api/v1/namespaces/proxy-3739/services/http:proxy-service-rssb9:portname2/proxy/: bar (200; 41.560851ms)
  Dec 19 10:46:33.588: INFO: (12) /api/v1/namespaces/proxy-3739/pods/https:proxy-service-rssb9-ckbxf:460/proxy/: tls baz (200; 39.513706ms)
  Dec 19 10:46:33.589: INFO: (12) /api/v1/namespaces/proxy-3739/services/proxy-service-rssb9:portname1/proxy/: foo (200; 40.614923ms)
  Dec 19 10:46:33.592: INFO: (12) /api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf/proxy/: <a href="/api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf/proxy/rewriteme">test</a> (200; 42.829453ms)
  Dec 19 10:46:33.593: INFO: (12) /api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf:162/proxy/: bar (200; 44.830688ms)
  Dec 19 10:46:33.594: INFO: (12) /api/v1/namespaces/proxy-3739/services/https:proxy-service-rssb9:tlsportname1/proxy/: tls baz (200; 46.160271ms)
  Dec 19 10:46:33.596: INFO: (12) /api/v1/namespaces/proxy-3739/services/proxy-service-rssb9:portname2/proxy/: bar (200; 48.304394ms)
  Dec 19 10:46:33.596: INFO: (12) /api/v1/namespaces/proxy-3739/services/http:proxy-service-rssb9:portname1/proxy/: foo (200; 47.317392ms)
  Dec 19 10:46:33.597: INFO: (12) /api/v1/namespaces/proxy-3739/services/https:proxy-service-rssb9:tlsportname2/proxy/: tls qux (200; 47.605643ms)
  Dec 19 10:46:33.609: INFO: (13) /api/v1/namespaces/proxy-3739/pods/http:proxy-service-rssb9-ckbxf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3739/pods/http:proxy-service-rssb9-ckbxf:1080/proxy/rewriteme">... (200; 11.435536ms)
  Dec 19 10:46:33.622: INFO: (13) /api/v1/namespaces/proxy-3739/services/http:proxy-service-rssb9:portname2/proxy/: bar (200; 24.122529ms)
  Dec 19 10:46:33.623: INFO: (13) /api/v1/namespaces/proxy-3739/pods/https:proxy-service-rssb9-ckbxf:462/proxy/: tls qux (200; 25.471749ms)
  Dec 19 10:46:33.625: INFO: (13) /api/v1/namespaces/proxy-3739/pods/http:proxy-service-rssb9-ckbxf:162/proxy/: bar (200; 20.998804ms)
  Dec 19 10:46:33.626: INFO: (13) /api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf:162/proxy/: bar (200; 25.357156ms)
  Dec 19 10:46:33.626: INFO: (13) /api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf:1080/proxy/rewriteme">test<... (200; 22.686235ms)
  Dec 19 10:46:33.626: INFO: (13) /api/v1/namespaces/proxy-3739/pods/https:proxy-service-rssb9-ckbxf:443/proxy/: <a href="/api/v1/namespaces/proxy-3739/pods/https:proxy-service-rssb9-ckbxf:443/proxy/tlsrewritem... (200; 28.536804ms)
  Dec 19 10:46:33.631: INFO: (13) /api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf:160/proxy/: foo (200; 31.898154ms)
  Dec 19 10:46:33.631: INFO: (13) /api/v1/namespaces/proxy-3739/pods/https:proxy-service-rssb9-ckbxf:460/proxy/: tls baz (200; 30.706425ms)
  Dec 19 10:46:33.643: INFO: (13) /api/v1/namespaces/proxy-3739/services/proxy-service-rssb9:portname2/proxy/: bar (200; 44.049618ms)
  Dec 19 10:46:33.649: INFO: (13) /api/v1/namespaces/proxy-3739/services/https:proxy-service-rssb9:tlsportname1/proxy/: tls baz (200; 50.95122ms)
  Dec 19 10:46:33.650: INFO: (13) /api/v1/namespaces/proxy-3739/services/proxy-service-rssb9:portname1/proxy/: foo (200; 47.941039ms)
  Dec 19 10:46:33.650: INFO: (13) /api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf/proxy/: <a href="/api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf/proxy/rewriteme">test</a> (200; 48.396035ms)
  Dec 19 10:46:33.650: INFO: (13) /api/v1/namespaces/proxy-3739/pods/http:proxy-service-rssb9-ckbxf:160/proxy/: foo (200; 49.711859ms)
  Dec 19 10:46:33.650: INFO: (13) /api/v1/namespaces/proxy-3739/services/http:proxy-service-rssb9:portname1/proxy/: foo (200; 46.493689ms)
  Dec 19 10:46:33.650: INFO: (13) /api/v1/namespaces/proxy-3739/services/https:proxy-service-rssb9:tlsportname2/proxy/: tls qux (200; 47.035698ms)
  Dec 19 10:46:33.666: INFO: (14) /api/v1/namespaces/proxy-3739/pods/http:proxy-service-rssb9-ckbxf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3739/pods/http:proxy-service-rssb9-ckbxf:1080/proxy/rewriteme">... (200; 13.167586ms)
  Dec 19 10:46:33.668: INFO: (14) /api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf:162/proxy/: bar (200; 14.208954ms)
  Dec 19 10:46:33.671: INFO: (14) /api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf:1080/proxy/rewriteme">test<... (200; 16.802627ms)
  Dec 19 10:46:33.671: INFO: (14) /api/v1/namespaces/proxy-3739/pods/http:proxy-service-rssb9-ckbxf:162/proxy/: bar (200; 16.889681ms)
  Dec 19 10:46:33.671: INFO: (14) /api/v1/namespaces/proxy-3739/pods/https:proxy-service-rssb9-ckbxf:460/proxy/: tls baz (200; 17.383056ms)
  Dec 19 10:46:33.679: INFO: (14) /api/v1/namespaces/proxy-3739/services/https:proxy-service-rssb9:tlsportname2/proxy/: tls qux (200; 24.028035ms)
  Dec 19 10:46:33.683: INFO: (14) /api/v1/namespaces/proxy-3739/services/proxy-service-rssb9:portname1/proxy/: foo (200; 29.402092ms)
  Dec 19 10:46:33.687: INFO: (14) /api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf:160/proxy/: foo (200; 31.231404ms)
  Dec 19 10:46:33.688: INFO: (14) /api/v1/namespaces/proxy-3739/services/http:proxy-service-rssb9:portname1/proxy/: foo (200; 33.514171ms)
  Dec 19 10:46:33.689: INFO: (14) /api/v1/namespaces/proxy-3739/pods/https:proxy-service-rssb9-ckbxf:443/proxy/: <a href="/api/v1/namespaces/proxy-3739/pods/https:proxy-service-rssb9-ckbxf:443/proxy/tlsrewritem... (200; 32.915991ms)
  Dec 19 10:46:33.690: INFO: (14) /api/v1/namespaces/proxy-3739/pods/http:proxy-service-rssb9-ckbxf:160/proxy/: foo (200; 33.458931ms)
  Dec 19 10:46:33.690: INFO: (14) /api/v1/namespaces/proxy-3739/pods/https:proxy-service-rssb9-ckbxf:462/proxy/: tls qux (200; 33.926571ms)
  Dec 19 10:46:33.690: INFO: (14) /api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf/proxy/: <a href="/api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf/proxy/rewriteme">test</a> (200; 34.709833ms)
  Dec 19 10:46:33.702: INFO: (14) /api/v1/namespaces/proxy-3739/services/http:proxy-service-rssb9:portname2/proxy/: bar (200; 46.252156ms)
  Dec 19 10:46:33.703: INFO: (14) /api/v1/namespaces/proxy-3739/services/https:proxy-service-rssb9:tlsportname1/proxy/: tls baz (200; 46.057285ms)
  Dec 19 10:46:33.703: INFO: (14) /api/v1/namespaces/proxy-3739/services/proxy-service-rssb9:portname2/proxy/: bar (200; 46.84934ms)
  Dec 19 10:46:33.723: INFO: (15) /api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf/proxy/: <a href="/api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf/proxy/rewriteme">test</a> (200; 19.646675ms)
  Dec 19 10:46:33.723: INFO: (15) /api/v1/namespaces/proxy-3739/pods/https:proxy-service-rssb9-ckbxf:460/proxy/: tls baz (200; 19.332474ms)
  Dec 19 10:46:33.742: INFO: (15) /api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf:1080/proxy/rewriteme">test<... (200; 38.492896ms)
  Dec 19 10:46:33.743: INFO: (15) /api/v1/namespaces/proxy-3739/services/proxy-service-rssb9:portname1/proxy/: foo (200; 38.809729ms)
  Dec 19 10:46:33.743: INFO: (15) /api/v1/namespaces/proxy-3739/pods/http:proxy-service-rssb9-ckbxf:160/proxy/: foo (200; 38.428955ms)
  Dec 19 10:46:33.743: INFO: (15) /api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf:162/proxy/: bar (200; 38.833636ms)
  Dec 19 10:46:33.743: INFO: (15) /api/v1/namespaces/proxy-3739/pods/https:proxy-service-rssb9-ckbxf:462/proxy/: tls qux (200; 38.414389ms)
  Dec 19 10:46:33.743: INFO: (15) /api/v1/namespaces/proxy-3739/pods/http:proxy-service-rssb9-ckbxf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3739/pods/http:proxy-service-rssb9-ckbxf:1080/proxy/rewriteme">... (200; 39.336682ms)
  Dec 19 10:46:33.744: INFO: (15) /api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf:160/proxy/: foo (200; 39.644996ms)
  Dec 19 10:46:33.744: INFO: (15) /api/v1/namespaces/proxy-3739/pods/https:proxy-service-rssb9-ckbxf:443/proxy/: <a href="/api/v1/namespaces/proxy-3739/pods/https:proxy-service-rssb9-ckbxf:443/proxy/tlsrewritem... (200; 39.855808ms)
  Dec 19 10:46:33.745: INFO: (15) /api/v1/namespaces/proxy-3739/pods/http:proxy-service-rssb9-ckbxf:162/proxy/: bar (200; 41.203201ms)
  Dec 19 10:46:33.748: INFO: (15) /api/v1/namespaces/proxy-3739/services/http:proxy-service-rssb9:portname2/proxy/: bar (200; 43.517146ms)
  Dec 19 10:46:33.748: INFO: (15) /api/v1/namespaces/proxy-3739/services/https:proxy-service-rssb9:tlsportname1/proxy/: tls baz (200; 42.952895ms)
  Dec 19 10:46:33.748: INFO: (15) /api/v1/namespaces/proxy-3739/services/proxy-service-rssb9:portname2/proxy/: bar (200; 43.655365ms)
  Dec 19 10:46:33.748: INFO: (15) /api/v1/namespaces/proxy-3739/services/https:proxy-service-rssb9:tlsportname2/proxy/: tls qux (200; 44.003051ms)
  Dec 19 10:46:33.748: INFO: (15) /api/v1/namespaces/proxy-3739/services/http:proxy-service-rssb9:portname1/proxy/: foo (200; 44.270778ms)
  Dec 19 10:46:33.790: INFO: (16) /api/v1/namespaces/proxy-3739/pods/http:proxy-service-rssb9-ckbxf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3739/pods/http:proxy-service-rssb9-ckbxf:1080/proxy/rewriteme">... (200; 40.534567ms)
  Dec 19 10:46:33.799: INFO: (16) /api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf:162/proxy/: bar (200; 48.532229ms)
  Dec 19 10:46:33.802: INFO: (16) /api/v1/namespaces/proxy-3739/services/proxy-service-rssb9:portname2/proxy/: bar (200; 51.815791ms)
  Dec 19 10:46:33.802: INFO: (16) /api/v1/namespaces/proxy-3739/pods/https:proxy-service-rssb9-ckbxf:443/proxy/: <a href="/api/v1/namespaces/proxy-3739/pods/https:proxy-service-rssb9-ckbxf:443/proxy/tlsrewritem... (200; 52.478513ms)
  Dec 19 10:46:33.803: INFO: (16) /api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf:160/proxy/: foo (200; 52.432906ms)
  Dec 19 10:46:33.803: INFO: (16) /api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf/proxy/: <a href="/api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf/proxy/rewriteme">test</a> (200; 53.467699ms)
  Dec 19 10:46:33.805: INFO: (16) /api/v1/namespaces/proxy-3739/pods/http:proxy-service-rssb9-ckbxf:162/proxy/: bar (200; 54.120903ms)
  Dec 19 10:46:33.805: INFO: (16) /api/v1/namespaces/proxy-3739/services/https:proxy-service-rssb9:tlsportname2/proxy/: tls qux (200; 54.201855ms)
  Dec 19 10:46:33.805: INFO: (16) /api/v1/namespaces/proxy-3739/services/https:proxy-service-rssb9:tlsportname1/proxy/: tls baz (200; 54.245592ms)
  Dec 19 10:46:33.805: INFO: (16) /api/v1/namespaces/proxy-3739/pods/https:proxy-service-rssb9-ckbxf:462/proxy/: tls qux (200; 55.318587ms)
  Dec 19 10:46:33.810: INFO: (16) /api/v1/namespaces/proxy-3739/services/proxy-service-rssb9:portname1/proxy/: foo (200; 59.218066ms)
  Dec 19 10:46:33.810: INFO: (16) /api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf:1080/proxy/rewriteme">test<... (200; 59.051926ms)
  Dec 19 10:46:33.813: INFO: (16) /api/v1/namespaces/proxy-3739/services/http:proxy-service-rssb9:portname2/proxy/: bar (200; 62.703491ms)
  Dec 19 10:46:33.819: INFO: (16) /api/v1/namespaces/proxy-3739/services/http:proxy-service-rssb9:portname1/proxy/: foo (200; 68.059395ms)
  Dec 19 10:46:33.821: INFO: (16) /api/v1/namespaces/proxy-3739/pods/https:proxy-service-rssb9-ckbxf:460/proxy/: tls baz (200; 70.816713ms)
  Dec 19 10:46:33.823: INFO: (16) /api/v1/namespaces/proxy-3739/pods/http:proxy-service-rssb9-ckbxf:160/proxy/: foo (200; 73.226259ms)
  Dec 19 10:46:33.861: INFO: (17) /api/v1/namespaces/proxy-3739/pods/http:proxy-service-rssb9-ckbxf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3739/pods/http:proxy-service-rssb9-ckbxf:1080/proxy/rewriteme">... (200; 36.887316ms)
  Dec 19 10:46:33.861: INFO: (17) /api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf:160/proxy/: foo (200; 36.747324ms)
  Dec 19 10:46:33.861: INFO: (17) /api/v1/namespaces/proxy-3739/pods/http:proxy-service-rssb9-ckbxf:160/proxy/: foo (200; 36.753459ms)
  Dec 19 10:46:33.863: INFO: (17) /api/v1/namespaces/proxy-3739/pods/https:proxy-service-rssb9-ckbxf:443/proxy/: <a href="/api/v1/namespaces/proxy-3739/pods/https:proxy-service-rssb9-ckbxf:443/proxy/tlsrewritem... (200; 39.548088ms)
  Dec 19 10:46:33.875: INFO: (17) /api/v1/namespaces/proxy-3739/services/proxy-service-rssb9:portname2/proxy/: bar (200; 50.881672ms)
  Dec 19 10:46:33.891: INFO: (17) /api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf:162/proxy/: bar (200; 66.002815ms)
  Dec 19 10:46:33.895: INFO: (17) /api/v1/namespaces/proxy-3739/pods/http:proxy-service-rssb9-ckbxf:162/proxy/: bar (200; 69.612021ms)
  Dec 19 10:46:33.896: INFO: (17) /api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf/proxy/: <a href="/api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf/proxy/rewriteme">test</a> (200; 70.479907ms)
  Dec 19 10:46:33.902: INFO: (17) /api/v1/namespaces/proxy-3739/pods/https:proxy-service-rssb9-ckbxf:460/proxy/: tls baz (200; 77.227649ms)
  Dec 19 10:46:33.903: INFO: (17) /api/v1/namespaces/proxy-3739/services/https:proxy-service-rssb9:tlsportname1/proxy/: tls baz (200; 78.020528ms)
  Dec 19 10:46:33.903: INFO: (17) /api/v1/namespaces/proxy-3739/services/proxy-service-rssb9:portname1/proxy/: foo (200; 78.074018ms)
  Dec 19 10:46:33.905: INFO: (17) /api/v1/namespaces/proxy-3739/services/http:proxy-service-rssb9:portname2/proxy/: bar (200; 78.069732ms)
  Dec 19 10:46:33.905: INFO: (17) /api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf:1080/proxy/rewriteme">test<... (200; 79.446906ms)
  Dec 19 10:46:33.923: INFO: (17) /api/v1/namespaces/proxy-3739/pods/https:proxy-service-rssb9-ckbxf:462/proxy/: tls qux (200; 96.515533ms)
  Dec 19 10:46:33.923: INFO: (17) /api/v1/namespaces/proxy-3739/services/http:proxy-service-rssb9:portname1/proxy/: foo (200; 96.938741ms)
  Dec 19 10:46:33.923: INFO: (17) /api/v1/namespaces/proxy-3739/services/https:proxy-service-rssb9:tlsportname2/proxy/: tls qux (200; 96.703757ms)
  Dec 19 10:46:33.962: INFO: (18) /api/v1/namespaces/proxy-3739/pods/http:proxy-service-rssb9-ckbxf:160/proxy/: foo (200; 38.169777ms)
  Dec 19 10:46:33.966: INFO: (18) /api/v1/namespaces/proxy-3739/pods/http:proxy-service-rssb9-ckbxf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3739/pods/http:proxy-service-rssb9-ckbxf:1080/proxy/rewriteme">... (200; 40.942224ms)
  Dec 19 10:46:33.966: INFO: (18) /api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf:1080/proxy/rewriteme">test<... (200; 39.88019ms)
  Dec 19 10:46:33.966: INFO: (18) /api/v1/namespaces/proxy-3739/pods/https:proxy-service-rssb9-ckbxf:460/proxy/: tls baz (200; 40.757363ms)
  Dec 19 10:46:33.987: INFO: (18) /api/v1/namespaces/proxy-3739/services/https:proxy-service-rssb9:tlsportname1/proxy/: tls baz (200; 62.17643ms)
  Dec 19 10:46:33.987: INFO: (18) /api/v1/namespaces/proxy-3739/pods/https:proxy-service-rssb9-ckbxf:462/proxy/: tls qux (200; 61.200636ms)
  Dec 19 10:46:33.997: INFO: (18) /api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf:160/proxy/: foo (200; 71.944825ms)
  Dec 19 10:46:33.997: INFO: (18) /api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf/proxy/: <a href="/api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf/proxy/rewriteme">test</a> (200; 71.373809ms)
  Dec 19 10:46:34.001: INFO: (18) /api/v1/namespaces/proxy-3739/pods/https:proxy-service-rssb9-ckbxf:443/proxy/: <a href="/api/v1/namespaces/proxy-3739/pods/https:proxy-service-rssb9-ckbxf:443/proxy/tlsrewritem... (200; 76.428541ms)
  Dec 19 10:46:34.001: INFO: (18) /api/v1/namespaces/proxy-3739/services/proxy-service-rssb9:portname2/proxy/: bar (200; 76.224423ms)
  Dec 19 10:46:34.007: INFO: (18) /api/v1/namespaces/proxy-3739/services/proxy-service-rssb9:portname1/proxy/: foo (200; 81.995948ms)
  Dec 19 10:46:34.008: INFO: (18) /api/v1/namespaces/proxy-3739/services/http:proxy-service-rssb9:portname1/proxy/: foo (200; 81.669645ms)
  Dec 19 10:46:34.008: INFO: (18) /api/v1/namespaces/proxy-3739/pods/http:proxy-service-rssb9-ckbxf:162/proxy/: bar (200; 81.825634ms)
  Dec 19 10:46:34.008: INFO: (18) /api/v1/namespaces/proxy-3739/services/https:proxy-service-rssb9:tlsportname2/proxy/: tls qux (200; 81.759482ms)
  Dec 19 10:46:34.008: INFO: (18) /api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf:162/proxy/: bar (200; 82.687213ms)
  Dec 19 10:46:34.014: INFO: (18) /api/v1/namespaces/proxy-3739/services/http:proxy-service-rssb9:portname2/proxy/: bar (200; 87.756159ms)
  Dec 19 10:46:34.073: INFO: (19) /api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf:162/proxy/: bar (200; 58.433769ms)
  Dec 19 10:46:34.079: INFO: (19) /api/v1/namespaces/proxy-3739/pods/https:proxy-service-rssb9-ckbxf:462/proxy/: tls qux (200; 63.42405ms)
  Dec 19 10:46:34.080: INFO: (19) /api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf:1080/proxy/rewriteme">test<... (200; 65.244895ms)
  Dec 19 10:46:34.082: INFO: (19) /api/v1/namespaces/proxy-3739/pods/https:proxy-service-rssb9-ckbxf:443/proxy/: <a href="/api/v1/namespaces/proxy-3739/pods/https:proxy-service-rssb9-ckbxf:443/proxy/tlsrewritem... (200; 67.37566ms)
  Dec 19 10:46:34.084: INFO: (19) /api/v1/namespaces/proxy-3739/pods/http:proxy-service-rssb9-ckbxf:1080/proxy/: <a href="/api/v1/namespaces/proxy-3739/pods/http:proxy-service-rssb9-ckbxf:1080/proxy/rewriteme">... (200; 68.114428ms)
  Dec 19 10:46:34.084: INFO: (19) /api/v1/namespaces/proxy-3739/pods/http:proxy-service-rssb9-ckbxf:162/proxy/: bar (200; 68.719154ms)
  Dec 19 10:46:34.084: INFO: (19) /api/v1/namespaces/proxy-3739/pods/http:proxy-service-rssb9-ckbxf:160/proxy/: foo (200; 67.995987ms)
  Dec 19 10:46:34.084: INFO: (19) /api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf/proxy/: <a href="/api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf/proxy/rewriteme">test</a> (200; 69.107652ms)
  Dec 19 10:46:34.084: INFO: (19) /api/v1/namespaces/proxy-3739/pods/proxy-service-rssb9-ckbxf:160/proxy/: foo (200; 68.429193ms)
  Dec 19 10:46:34.088: INFO: (19) /api/v1/namespaces/proxy-3739/pods/https:proxy-service-rssb9-ckbxf:460/proxy/: tls baz (200; 72.28714ms)
  Dec 19 10:46:34.091: INFO: (19) /api/v1/namespaces/proxy-3739/services/proxy-service-rssb9:portname2/proxy/: bar (200; 75.691186ms)
  Dec 19 10:46:34.094: INFO: (19) /api/v1/namespaces/proxy-3739/services/http:proxy-service-rssb9:portname2/proxy/: bar (200; 78.889446ms)
  Dec 19 10:46:34.095: INFO: (19) /api/v1/namespaces/proxy-3739/services/https:proxy-service-rssb9:tlsportname1/proxy/: tls baz (200; 79.302845ms)
  Dec 19 10:46:34.095: INFO: (19) /api/v1/namespaces/proxy-3739/services/http:proxy-service-rssb9:portname1/proxy/: foo (200; 80.543555ms)
  Dec 19 10:46:34.103: INFO: (19) /api/v1/namespaces/proxy-3739/services/https:proxy-service-rssb9:tlsportname2/proxy/: tls qux (200; 88.013197ms)
  Dec 19 10:46:34.104: INFO: (19) /api/v1/namespaces/proxy-3739/services/proxy-service-rssb9:portname1/proxy/: foo (200; 87.933432ms)
  STEP: deleting ReplicationController proxy-service-rssb9 in namespace proxy-3739, will wait for the garbage collector to delete the pods @ 12/19/23 10:46:34.104
  Dec 19 10:46:34.200: INFO: Deleting ReplicationController proxy-service-rssb9 took: 22.615651ms
  Dec 19 10:46:34.301: INFO: Terminating ReplicationController proxy-service-rssb9 pods took: 100.918195ms
  Dec 19 10:46:36.502: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-3739" for this suite. @ 12/19/23 10:46:36.516
• [5.619 seconds]
------------------------------
S
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 12/19/23 10:46:36.533
  Dec 19 10:46:36.533: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename pods @ 12/19/23 10:46:36.539
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:46:36.57
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:46:36.575
  STEP: creating the pod @ 12/19/23 10:46:36.58
  STEP: submitting the pod to kubernetes @ 12/19/23 10:46:36.58
  W1219 10:46:36.593445      14 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: verifying the pod is in kubernetes @ 12/19/23 10:46:38.616
  STEP: updating the pod @ 12/19/23 10:46:38.623
  Dec 19 10:46:39.146: INFO: Successfully updated pod "pod-update-activedeadlineseconds-fb1b996b-97c6-4c06-888f-82339b3095f9"
  Dec 19 10:46:43.178: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8881" for this suite. @ 12/19/23 10:46:43.196
• [6.682 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/field_validation.go:289
  STEP: Creating a kubernetes client @ 12/19/23 10:46:43.218
  Dec 19 10:46:43.219: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename field-validation @ 12/19/23 10:46:43.224
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:46:43.255
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:46:43.264
  Dec 19 10:46:43.269: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  Dec 19 10:46:46.580: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-3024" for this suite. @ 12/19/23 10:46:46.592
• [3.394 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1698
  STEP: Creating a kubernetes client @ 12/19/23 10:46:46.613
  Dec 19 10:46:46.613: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename kubectl @ 12/19/23 10:46:46.616
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:46:46.66
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:46:46.671
  STEP: creating Agnhost RC @ 12/19/23 10:46:46.681
  Dec 19 10:46:46.682: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=kubectl-2362 create -f -'
  Dec 19 10:46:47.006: INFO: stderr: ""
  Dec 19 10:46:47.006: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 12/19/23 10:46:47.006
  Dec 19 10:46:48.016: INFO: Selector matched 1 pods for map[app:agnhost]
  Dec 19 10:46:48.016: INFO: Found 0 / 1
  Dec 19 10:46:49.015: INFO: Selector matched 1 pods for map[app:agnhost]
  Dec 19 10:46:49.015: INFO: Found 1 / 1
  Dec 19 10:46:49.015: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 12/19/23 10:46:49.015
  Dec 19 10:46:49.081: INFO: Selector matched 1 pods for map[app:agnhost]
  Dec 19 10:46:49.081: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Dec 19 10:46:49.082: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=kubectl-2362 patch pod agnhost-primary-l7zff -p {"metadata":{"annotations":{"x":"y"}}}'
  Dec 19 10:46:49.316: INFO: stderr: ""
  Dec 19 10:46:49.316: INFO: stdout: "pod/agnhost-primary-l7zff patched\n"
  STEP: checking annotations @ 12/19/23 10:46:49.316
  Dec 19 10:46:49.331: INFO: Selector matched 1 pods for map[app:agnhost]
  Dec 19 10:46:49.331: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Dec 19 10:46:49.331: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2362" for this suite. @ 12/19/23 10:46:49.348
• [2.754 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_configmap.go:58
  STEP: Creating a kubernetes client @ 12/19/23 10:46:49.371
  Dec 19 10:46:49.371: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename projected @ 12/19/23 10:46:49.374
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:46:49.418
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:46:49.426
  STEP: Creating configMap with name projected-configmap-test-volume-104874ed-d60f-442d-a00b-83a58a2b12c9 @ 12/19/23 10:46:49.441
  STEP: Creating a pod to test consume configMaps @ 12/19/23 10:46:49.459
  STEP: Saw pod success @ 12/19/23 10:46:53.525
  Dec 19 10:46:53.533: INFO: Trying to get logs from node dah7vaemeeho-3 pod pod-projected-configmaps-c41d0ea8-e374-4ad9-9c97-517097b60110 container agnhost-container: <nil>
  STEP: delete the pod @ 12/19/23 10:46:53.55
  Dec 19 10:46:53.593: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5907" for this suite. @ 12/19/23 10:46:53.601
• [4.252 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/expansion.go:47
  STEP: Creating a kubernetes client @ 12/19/23 10:46:53.624
  Dec 19 10:46:53.625: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename var-expansion @ 12/19/23 10:46:53.627
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:46:53.657
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:46:53.662
  STEP: Creating a pod to test env composition @ 12/19/23 10:46:53.667
  STEP: Saw pod success @ 12/19/23 10:46:55.701
  Dec 19 10:46:55.714: INFO: Trying to get logs from node dah7vaemeeho-3 pod var-expansion-032999f1-ba68-4b0e-858c-b439b245e543 container dapi-container: <nil>
  STEP: delete the pod @ 12/19/23 10:46:55.733
  Dec 19 10:46:55.772: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-5201" for this suite. @ 12/19/23 10:46:55.786
• [2.174 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:199
  STEP: Creating a kubernetes client @ 12/19/23 10:46:55.802
  Dec 19 10:46:55.802: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename webhook @ 12/19/23 10:46:55.809
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:46:55.84
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:46:55.85
  STEP: Setting up server cert @ 12/19/23 10:46:55.907
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/19/23 10:46:56.612
  STEP: Deploying the webhook pod @ 12/19/23 10:46:56.629
  STEP: Wait for the deployment to be ready @ 12/19/23 10:46:56.656
  Dec 19 10:46:56.683: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/19/23 10:46:58.725
  STEP: Verifying the service has paired with the endpoint @ 12/19/23 10:46:58.752
  Dec 19 10:46:59.753: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 12/19/23 10:46:59.77
  STEP: create a pod that should be denied by the webhook @ 12/19/23 10:46:59.816
  STEP: create a pod that causes the webhook to hang @ 12/19/23 10:46:59.855
  STEP: create a configmap that should be denied by the webhook @ 12/19/23 10:47:09.903
  STEP: create a configmap that should be admitted by the webhook @ 12/19/23 10:47:09.977
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 12/19/23 10:47:10.009
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 12/19/23 10:47:10.052
  STEP: create a namespace that bypass the webhook @ 12/19/23 10:47:10.074
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 12/19/23 10:47:10.13
  Dec 19 10:47:10.413: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4125" for this suite. @ 12/19/23 10:47:10.447
  STEP: Destroying namespace "webhook-markers-2718" for this suite. @ 12/19/23 10:47:10.476
  STEP: Destroying namespace "exempted-namespace-7736" for this suite. @ 12/19/23 10:47:10.495
• [14.715 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 12/19/23 10:47:10.517
  Dec 19 10:47:10.517: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename watch @ 12/19/23 10:47:10.521
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:47:10.562
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:47:10.567
  STEP: creating a watch on configmaps with a certain label @ 12/19/23 10:47:10.572
  STEP: creating a new configmap @ 12/19/23 10:47:10.574
  STEP: modifying the configmap once @ 12/19/23 10:47:10.585
  STEP: changing the label value of the configmap @ 12/19/23 10:47:10.6
  STEP: Expecting to observe a delete notification for the watched object @ 12/19/23 10:47:10.616
  Dec 19 10:47:10.616: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-1943  275198cd-fb8a-4a9a-b77a-882e8575c6b4 20995 0 2023-12-19 10:47:10 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-12-19 10:47:10 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Dec 19 10:47:10.617: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-1943  275198cd-fb8a-4a9a-b77a-882e8575c6b4 20997 0 2023-12-19 10:47:10 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-12-19 10:47:10 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  Dec 19 10:47:10.618: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-1943  275198cd-fb8a-4a9a-b77a-882e8575c6b4 20998 0 2023-12-19 10:47:10 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-12-19 10:47:10 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 12/19/23 10:47:10.618
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 12/19/23 10:47:10.633
  STEP: changing the label value of the configmap back @ 12/19/23 10:47:20.637
  STEP: modifying the configmap a third time @ 12/19/23 10:47:20.657
  STEP: deleting the configmap @ 12/19/23 10:47:20.673
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 12/19/23 10:47:20.684
  Dec 19 10:47:20.685: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-1943  275198cd-fb8a-4a9a-b77a-882e8575c6b4 21038 0 2023-12-19 10:47:10 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-12-19 10:47:20 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Dec 19 10:47:20.685: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-1943  275198cd-fb8a-4a9a-b77a-882e8575c6b4 21039 0 2023-12-19 10:47:10 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-12-19 10:47:20 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  Dec 19 10:47:20.686: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-1943  275198cd-fb8a-4a9a-b77a-882e8575c6b4 21040 0 2023-12-19 10:47:10 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-12-19 10:47:20 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  Dec 19 10:47:20.686: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-1943" for this suite. @ 12/19/23 10:47:20.696
• [10.195 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/secrets.go:47
  STEP: Creating a kubernetes client @ 12/19/23 10:47:20.718
  Dec 19 10:47:20.718: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename secrets @ 12/19/23 10:47:20.722
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:47:20.759
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:47:20.762
  STEP: Creating secret with name secret-test-651bb3b9-b24a-4540-a01e-1d3a2f10fcca @ 12/19/23 10:47:20.768
  STEP: Creating a pod to test consume secrets @ 12/19/23 10:47:20.777
  STEP: Saw pod success @ 12/19/23 10:47:22.809
  Dec 19 10:47:22.816: INFO: Trying to get logs from node dah7vaemeeho-3 pod pod-secrets-ccaa55ea-73b0-48dd-a81f-5e70b7226a74 container secret-env-test: <nil>
  STEP: delete the pod @ 12/19/23 10:47:22.831
  Dec 19 10:47:22.860: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6041" for this suite. @ 12/19/23 10:47:22.867
• [2.164 seconds]
------------------------------
SS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
test/e2e/common/node/expansion.go:228
  STEP: Creating a kubernetes client @ 12/19/23 10:47:22.881
  Dec 19 10:47:22.881: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename var-expansion @ 12/19/23 10:47:22.884
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:47:22.923
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:47:22.933
  STEP: creating the pod with failed condition @ 12/19/23 10:47:22.938
  STEP: updating the pod @ 12/19/23 10:49:22.955
  Dec 19 10:49:23.490: INFO: Successfully updated pod "var-expansion-58a8572c-0b90-4115-bd65-8128298d491f"
  STEP: waiting for pod running @ 12/19/23 10:49:23.49
  STEP: deleting the pod gracefully @ 12/19/23 10:49:25.52
  Dec 19 10:49:25.520: INFO: Deleting pod "var-expansion-58a8572c-0b90-4115-bd65-8128298d491f" in namespace "var-expansion-1933"
  Dec 19 10:49:25.540: INFO: Wait up to 5m0s for pod "var-expansion-58a8572c-0b90-4115-bd65-8128298d491f" to be fully deleted
  Dec 19 10:49:57.754: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-1933" for this suite. @ 12/19/23 10:49:57.767
• [154.900 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 12/19/23 10:49:57.783
  Dec 19 10:49:57.783: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename secrets @ 12/19/23 10:49:57.788
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:49:57.852
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:49:57.858
  STEP: Creating secret with name secret-test-map-8b605836-0c22-4d14-aca5-8243704c1922 @ 12/19/23 10:49:57.865
  STEP: Creating a pod to test consume secrets @ 12/19/23 10:49:57.876
  STEP: Saw pod success @ 12/19/23 10:50:01.938
  Dec 19 10:50:01.946: INFO: Trying to get logs from node dah7vaemeeho-3 pod pod-secrets-c76cc664-279f-4b98-81d7-57f17e01830e container secret-volume-test: <nil>
  STEP: delete the pod @ 12/19/23 10:50:01.994
  Dec 19 10:50:02.031: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4689" for this suite. @ 12/19/23 10:50:02.046
• [4.282 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/chunking.go:83
  STEP: Creating a kubernetes client @ 12/19/23 10:50:02.066
  Dec 19 10:50:02.066: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename chunking @ 12/19/23 10:50:02.071
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:50:02.116
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:50:02.128
  STEP: creating a large number of resources @ 12/19/23 10:50:02.135
  STEP: retrieving those results in paged fashion several times @ 12/19/23 10:50:19.783
  Dec 19 10:50:19.835: INFO: Retrieved 17/17 results with rv 21855 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4NTUsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  Dec 19 10:50:19.888: INFO: Retrieved 17/17 results with rv 21855 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4NTUsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  Dec 19 10:50:19.934: INFO: Retrieved 17/17 results with rv 21855 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4NTUsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  Dec 19 10:50:19.985: INFO: Retrieved 17/17 results with rv 21855 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4NTUsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  Dec 19 10:50:20.033: INFO: Retrieved 17/17 results with rv 21855 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4NTUsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  Dec 19 10:50:20.085: INFO: Retrieved 17/17 results with rv 21855 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4NTUsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  Dec 19 10:50:20.137: INFO: Retrieved 17/17 results with rv 21855 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4NTUsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  Dec 19 10:50:20.210: INFO: Retrieved 17/17 results with rv 21855 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4NTUsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  Dec 19 10:50:20.234: INFO: Retrieved 17/17 results with rv 21855 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4NTUsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  Dec 19 10:50:20.285: INFO: Retrieved 17/17 results with rv 21855 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4NTUsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  Dec 19 10:50:20.332: INFO: Retrieved 17/17 results with rv 21855 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4NTUsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  Dec 19 10:50:20.380: INFO: Retrieved 17/17 results with rv 21855 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4NTUsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  Dec 19 10:50:20.431: INFO: Retrieved 17/17 results with rv 21855 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4NTUsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  Dec 19 10:50:20.485: INFO: Retrieved 17/17 results with rv 21855 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4NTUsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  Dec 19 10:50:20.530: INFO: Retrieved 17/17 results with rv 21855 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4NTUsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  Dec 19 10:50:20.584: INFO: Retrieved 17/17 results with rv 21855 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4NTUsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  Dec 19 10:50:20.633: INFO: Retrieved 17/17 results with rv 21855 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4NTUsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  Dec 19 10:50:20.681: INFO: Retrieved 17/17 results with rv 21855 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4NTUsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  Dec 19 10:50:20.754: INFO: Retrieved 17/17 results with rv 21855 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4NTUsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  Dec 19 10:50:20.784: INFO: Retrieved 17/17 results with rv 21855 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4NTUsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  Dec 19 10:50:20.830: INFO: Retrieved 17/17 results with rv 21855 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4NTUsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  Dec 19 10:50:20.883: INFO: Retrieved 17/17 results with rv 21855 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4NTUsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  Dec 19 10:50:20.936: INFO: Retrieved 17/17 results with rv 21855 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4NTUsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  Dec 19 10:50:20.984: INFO: Retrieved 9/17 results with rv 21855 and continue 
  Dec 19 10:50:21.069: INFO: Retrieved 17/17 results with rv 21857 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4NTcsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  Dec 19 10:50:21.081: INFO: Retrieved 17/17 results with rv 21857 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4NTcsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  Dec 19 10:50:21.134: INFO: Retrieved 17/17 results with rv 21857 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4NTcsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  Dec 19 10:50:21.184: INFO: Retrieved 17/17 results with rv 21857 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4NTcsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  Dec 19 10:50:21.233: INFO: Retrieved 17/17 results with rv 21857 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4NTcsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  Dec 19 10:50:21.285: INFO: Retrieved 17/17 results with rv 21857 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4NTcsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  Dec 19 10:50:21.333: INFO: Retrieved 17/17 results with rv 21857 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4NTcsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  Dec 19 10:50:21.388: INFO: Retrieved 17/17 results with rv 21857 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4NTcsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  Dec 19 10:50:21.433: INFO: Retrieved 17/17 results with rv 21857 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4NTcsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  Dec 19 10:50:21.487: INFO: Retrieved 17/17 results with rv 21857 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4NTcsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  Dec 19 10:50:21.530: INFO: Retrieved 17/17 results with rv 21857 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4NTcsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  Dec 19 10:50:21.591: INFO: Retrieved 17/17 results with rv 21857 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4NTcsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  Dec 19 10:50:21.637: INFO: Retrieved 17/17 results with rv 21857 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4NTcsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  Dec 19 10:50:21.681: INFO: Retrieved 17/17 results with rv 21857 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4NTcsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  Dec 19 10:50:21.733: INFO: Retrieved 17/17 results with rv 21857 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4NTcsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  Dec 19 10:50:21.786: INFO: Retrieved 17/17 results with rv 21857 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4NTcsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  Dec 19 10:50:21.836: INFO: Retrieved 17/17 results with rv 21857 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4NTcsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  Dec 19 10:50:21.883: INFO: Retrieved 17/17 results with rv 21857 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4NTcsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  Dec 19 10:50:21.933: INFO: Retrieved 17/17 results with rv 21857 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4NTcsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  Dec 19 10:50:21.981: INFO: Retrieved 17/17 results with rv 21857 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4NTcsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  Dec 19 10:50:22.034: INFO: Retrieved 17/17 results with rv 21857 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4NTcsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  Dec 19 10:50:22.084: INFO: Retrieved 17/17 results with rv 21857 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4NTcsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  Dec 19 10:50:22.131: INFO: Retrieved 17/17 results with rv 21857 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4NTcsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  Dec 19 10:50:22.184: INFO: Retrieved 9/17 results with rv 21857 and continue 
  Dec 19 10:50:22.239: INFO: Retrieved 17/17 results with rv 21859 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4NTksInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  Dec 19 10:50:22.282: INFO: Retrieved 17/17 results with rv 21859 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4NTksInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  Dec 19 10:50:22.333: INFO: Retrieved 17/17 results with rv 21859 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4NTksInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  Dec 19 10:50:22.383: INFO: Retrieved 17/17 results with rv 21859 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4NTksInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  Dec 19 10:50:22.432: INFO: Retrieved 17/17 results with rv 21859 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4NTksInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  Dec 19 10:50:22.487: INFO: Retrieved 17/17 results with rv 21859 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4NTksInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  Dec 19 10:50:22.534: INFO: Retrieved 17/17 results with rv 21859 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4NTksInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  Dec 19 10:50:22.582: INFO: Retrieved 17/17 results with rv 21859 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4NTksInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  Dec 19 10:50:22.633: INFO: Retrieved 17/17 results with rv 21859 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4NTksInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  Dec 19 10:50:22.682: INFO: Retrieved 17/17 results with rv 21859 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4NTksInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  Dec 19 10:50:22.733: INFO: Retrieved 17/17 results with rv 21859 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4NTksInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  Dec 19 10:50:22.784: INFO: Retrieved 17/17 results with rv 21859 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4NTksInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  Dec 19 10:50:22.833: INFO: Retrieved 17/17 results with rv 21859 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4NTksInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  Dec 19 10:50:22.882: INFO: Retrieved 17/17 results with rv 21859 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4NTksInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  Dec 19 10:50:22.939: INFO: Retrieved 17/17 results with rv 21859 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4NTksInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  Dec 19 10:50:22.986: INFO: Retrieved 17/17 results with rv 21859 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4NTksInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  Dec 19 10:50:23.031: INFO: Retrieved 17/17 results with rv 21859 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4NTksInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  Dec 19 10:50:23.085: INFO: Retrieved 17/17 results with rv 21859 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4NTksInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  Dec 19 10:50:23.133: INFO: Retrieved 17/17 results with rv 21859 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4NTksInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  Dec 19 10:50:23.184: INFO: Retrieved 17/17 results with rv 21859 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4NTksInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  Dec 19 10:50:23.232: INFO: Retrieved 17/17 results with rv 21859 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4NTksInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  Dec 19 10:50:23.281: INFO: Retrieved 17/17 results with rv 21859 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4NTksInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  Dec 19 10:50:23.331: INFO: Retrieved 17/17 results with rv 21859 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE4NTksInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  Dec 19 10:50:23.383: INFO: Retrieved 9/17 results with rv 21859 and continue 
  STEP: retrieving those results all at once @ 12/19/23 10:50:23.384
  Dec 19 10:50:23.498: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-6657" for this suite. @ 12/19/23 10:50:23.527
• [21.479 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:301
  STEP: Creating a kubernetes client @ 12/19/23 10:50:23.549
  Dec 19 10:50:23.549: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename webhook @ 12/19/23 10:50:23.555
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:50:23.594
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:50:23.6
  STEP: Setting up server cert @ 12/19/23 10:50:23.673
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/19/23 10:50:24.352
  STEP: Deploying the webhook pod @ 12/19/23 10:50:24.381
  STEP: Wait for the deployment to be ready @ 12/19/23 10:50:24.413
  Dec 19 10:50:24.432: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 12/19/23 10:50:26.461
  STEP: Verifying the service has paired with the endpoint @ 12/19/23 10:50:26.494
  Dec 19 10:50:27.495: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 12/19/23 10:50:27.511
  STEP: Creating a custom resource definition that should be denied by the webhook @ 12/19/23 10:50:27.564
  Dec 19 10:50:27.565: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  Dec 19 10:50:27.726: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3979" for this suite. @ 12/19/23 10:50:27.741
  STEP: Destroying namespace "webhook-markers-3153" for this suite. @ 12/19/23 10:50:27.754
• [4.220 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:163
  STEP: Creating a kubernetes client @ 12/19/23 10:50:27.777
  Dec 19 10:50:27.777: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename resourcequota @ 12/19/23 10:50:27.781
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:50:27.806
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:50:27.81
  STEP: Discovering how many secrets are in namespace by default @ 12/19/23 10:50:27.815
  STEP: Counting existing ResourceQuota @ 12/19/23 10:50:32.831
  STEP: Creating a ResourceQuota @ 12/19/23 10:50:37.839
  STEP: Ensuring resource quota status is calculated @ 12/19/23 10:50:37.851
  STEP: Creating a Secret @ 12/19/23 10:50:39.861
  STEP: Ensuring resource quota status captures secret creation @ 12/19/23 10:50:39.883
  STEP: Deleting a secret @ 12/19/23 10:50:41.895
  STEP: Ensuring resource quota status released usage @ 12/19/23 10:50:41.91
  Dec 19 10:50:43.921: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4096" for this suite. @ 12/19/23 10:50:43.932
• [16.173 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
test/e2e/scheduling/preemption.go:224
  STEP: Creating a kubernetes client @ 12/19/23 10:50:43.952
  Dec 19 10:50:43.953: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename sched-preemption @ 12/19/23 10:50:43.956
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:50:44
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:50:44.006
  Dec 19 10:50:44.041: INFO: Waiting up to 1m0s for all nodes to be ready
  Dec 19 10:51:44.055: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 12/19/23 10:51:44.066
  Dec 19 10:51:44.138: INFO: Created pod: pod0-0-sched-preemption-low-priority
  Dec 19 10:51:44.162: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  Dec 19 10:51:44.254: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  Dec 19 10:51:44.287: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  Dec 19 10:51:44.403: INFO: Created pod: pod2-0-sched-preemption-medium-priority
  Dec 19 10:51:44.445: INFO: Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 12/19/23 10:51:44.445
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 12/19/23 10:51:46.547
  Dec 19 10:51:54.823: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-4067" for this suite. @ 12/19/23 10:51:54.834
• [70.901 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/configmap_volume.go:110
  STEP: Creating a kubernetes client @ 12/19/23 10:51:54.854
  Dec 19 10:51:54.854: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename configmap @ 12/19/23 10:51:54.861
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:51:54.899
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:51:54.907
  STEP: Creating configMap with name configmap-test-volume-map-40e30eec-e968-405b-8d8f-6d5b66ceef46 @ 12/19/23 10:51:54.918
  STEP: Creating a pod to test consume configMaps @ 12/19/23 10:51:54.931
  STEP: Saw pod success @ 12/19/23 10:51:58.983
  Dec 19 10:51:58.989: INFO: Trying to get logs from node dah7vaemeeho-3 pod pod-configmaps-d18d9bb8-c4b5-4b81-be67-2323f50f2213 container agnhost-container: <nil>
  STEP: delete the pod @ 12/19/23 10:51:59.029
  Dec 19 10:51:59.064: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7359" for this suite. @ 12/19/23 10:51:59.076
• [4.235 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/container_probe.go:214
  STEP: Creating a kubernetes client @ 12/19/23 10:51:59.09
  Dec 19 10:51:59.090: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename container-probe @ 12/19/23 10:51:59.095
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:51:59.121
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:51:59.128
  STEP: Creating pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102 @ 12/19/23 10:51:59.137
  STEP: checking the pod's current state and verifying that restartCount is present @ 12/19/23 10:52:01.181
  Dec 19 10:52:01.197: INFO: Initial restart count of pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b is 0
  Dec 19 10:52:01.214: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:52:03.225: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:52:05.243: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:52:07.262: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:52:09.273: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:52:11.290: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:52:13.307: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:52:15.317: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:52:17.327: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:52:19.340: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:52:21.349: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:52:23.368: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:52:25.383: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:52:27.393: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:52:29.402: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:52:31.416: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:52:33.426: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:52:35.437: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:52:37.447: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:52:39.458: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:52:41.470: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:52:43.481: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:52:45.492: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:52:47.510: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:52:49.519: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:52:51.534: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:52:53.547: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:52:55.555: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:52:57.566: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:52:59.578: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:53:01.594: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:53:03.607: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:53:05.618: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:53:07.627: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:53:09.639: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:53:11.648: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:53:13.657: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:53:15.667: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:53:17.678: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:53:19.690: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:53:21.715: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:53:23.728: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:53:25.743: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:53:27.757: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:53:29.765: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:53:31.778: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:53:33.790: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:53:35.800: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:53:37.809: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:53:39.819: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:53:41.833: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:53:43.843: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:53:45.858: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:53:47.866: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:53:49.880: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:53:51.890: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:53:53.900: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:53:55.912: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:53:57.925: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:53:59.936: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:54:01.946: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:54:03.953: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:54:05.961: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:54:07.972: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:54:09.981: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:54:11.994: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:54:14.005: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:54:16.015: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:54:18.030: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:54:20.042: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:54:22.055: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:54:24.066: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:54:26.074: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:54:28.087: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:54:30.098: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:54:32.109: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:54:34.117: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:54:36.136: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:54:38.146: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:54:40.159: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:54:42.170: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:54:44.179: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:54:46.188: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:54:48.201: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:54:50.227: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:54:52.239: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:54:54.249: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:54:56.259: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:54:58.288: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:55:00.310: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:55:02.323: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:55:04.335: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:55:06.346: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:55:08.357: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:55:10.367: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:55:12.379: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:55:14.392: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:55:16.406: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:55:18.417: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:55:20.430: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:55:22.445: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:55:24.453: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:55:26.464: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:55:28.480: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:55:30.490: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:55:32.501: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:55:34.512: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:55:36.523: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:55:38.537: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:55:40.546: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:55:42.557: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:55:44.566: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:55:46.578: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:55:48.589: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:55:50.601: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:55:52.612: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:55:54.621: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:55:56.630: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:55:58.641: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  Dec 19 10:56:00.649: INFO: Get pod test-webserver-dc54f698-8b48-4115-bcc4-53efc8566f2b in namespace container-probe-1102
  STEP: deleting the pod @ 12/19/23 10:56:02.652
  Dec 19 10:56:02.746: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-1102" for this suite. @ 12/19/23 10:56:02.79
• [243.724 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:78
  STEP: Creating a kubernetes client @ 12/19/23 10:56:02.815
  Dec 19 10:56:02.815: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename resourcequota @ 12/19/23 10:56:02.82
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:56:02.862
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:56:02.869
  STEP: Counting existing ResourceQuota @ 12/19/23 10:56:02.876
  STEP: Creating a ResourceQuota @ 12/19/23 10:56:07.888
  STEP: Ensuring resource quota status is calculated @ 12/19/23 10:56:07.908
  Dec 19 10:56:09.918: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3468" for this suite. @ 12/19/23 10:56:09.928
• [7.133 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/configmap_volume.go:75
  STEP: Creating a kubernetes client @ 12/19/23 10:56:09.949
  Dec 19 10:56:09.949: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename configmap @ 12/19/23 10:56:09.952
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:56:09.994
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:56:10.005
  STEP: Creating configMap with name configmap-test-volume-ec7cb270-ea8a-4b65-aa92-17e772df2076 @ 12/19/23 10:56:10.014
  STEP: Creating a pod to test consume configMaps @ 12/19/23 10:56:10.027
  STEP: Saw pod success @ 12/19/23 10:56:14.11
  Dec 19 10:56:14.118: INFO: Trying to get logs from node dah7vaemeeho-3 pod pod-configmaps-2fa0ac43-21fa-4ccf-8ba1-b5cc94f06e63 container agnhost-container: <nil>
  STEP: delete the pod @ 12/19/23 10:56:14.152
  Dec 19 10:56:14.191: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6123" for this suite. @ 12/19/23 10:56:14.203
• [4.275 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 12/19/23 10:56:14.226
  Dec 19 10:56:14.226: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename proxy @ 12/19/23 10:56:14.233
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:56:14.262
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:56:14.266
  Dec 19 10:56:14.276: INFO: Creating pod...
  Dec 19 10:56:16.335: INFO: Creating service...
  Dec 19 10:56:16.374: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-8380/pods/agnhost/proxy/some/path/with/DELETE
  Dec 19 10:56:16.420: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Dec 19 10:56:16.426: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-8380/pods/agnhost/proxy/some/path/with/GET
  Dec 19 10:56:16.439: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  Dec 19 10:56:16.439: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-8380/pods/agnhost/proxy/some/path/with/HEAD
  Dec 19 10:56:16.450: INFO: http.Client request:HEAD | StatusCode:200
  Dec 19 10:56:16.450: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-8380/pods/agnhost/proxy/some/path/with/OPTIONS
  Dec 19 10:56:16.456: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Dec 19 10:56:16.457: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-8380/pods/agnhost/proxy/some/path/with/PATCH
  Dec 19 10:56:16.477: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Dec 19 10:56:16.477: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-8380/pods/agnhost/proxy/some/path/with/POST
  Dec 19 10:56:16.492: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Dec 19 10:56:16.492: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-8380/pods/agnhost/proxy/some/path/with/PUT
  Dec 19 10:56:16.500: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Dec 19 10:56:16.500: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-8380/services/test-service/proxy/some/path/with/DELETE
  Dec 19 10:56:16.515: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Dec 19 10:56:16.515: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-8380/services/test-service/proxy/some/path/with/GET
  Dec 19 10:56:16.535: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  Dec 19 10:56:16.536: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-8380/services/test-service/proxy/some/path/with/HEAD
  Dec 19 10:56:16.546: INFO: http.Client request:HEAD | StatusCode:200
  Dec 19 10:56:16.546: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-8380/services/test-service/proxy/some/path/with/OPTIONS
  Dec 19 10:56:16.558: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Dec 19 10:56:16.559: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-8380/services/test-service/proxy/some/path/with/PATCH
  Dec 19 10:56:16.569: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Dec 19 10:56:16.569: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-8380/services/test-service/proxy/some/path/with/POST
  Dec 19 10:56:16.579: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Dec 19 10:56:16.579: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-8380/services/test-service/proxy/some/path/with/PUT
  Dec 19 10:56:16.591: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Dec 19 10:56:16.592: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-8380" for this suite. @ 12/19/23 10:56:16.603
• [2.395 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1863
  STEP: Creating a kubernetes client @ 12/19/23 10:56:16.628
  Dec 19 10:56:16.629: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename kubectl @ 12/19/23 10:56:16.634
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:56:16.681
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:56:16.687
  STEP: Starting the proxy @ 12/19/23 10:56:16.695
  Dec 19 10:56:16.697: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=kubectl-2145 proxy --unix-socket=/tmp/kubectl-proxy-unix3225859325/test'
  STEP: retrieving proxy /api/ output @ 12/19/23 10:56:16.84
  Dec 19 10:56:16.842: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2145" for this suite. @ 12/19/23 10:56:16.852
• [0.238 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
test/e2e/apps/cronjob.go:161
  STEP: Creating a kubernetes client @ 12/19/23 10:56:16.867
  Dec 19 10:56:16.867: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename cronjob @ 12/19/23 10:56:16.869
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:56:16.905
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:56:16.91
  STEP: Creating a ReplaceConcurrent cronjob @ 12/19/23 10:56:16.921
  STEP: Ensuring a job is scheduled @ 12/19/23 10:56:16.935
  STEP: Ensuring exactly one is scheduled @ 12/19/23 10:57:00.951
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 12/19/23 10:57:00.959
  STEP: Ensuring the job is replaced with a new one @ 12/19/23 10:57:00.968
  STEP: Removing cronjob @ 12/19/23 10:58:00.98
  Dec 19 10:58:01.005: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-8618" for this suite. @ 12/19/23 10:58:01.03
• [104.229 seconds]
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
test/e2e/common/network/networking.go:125
  STEP: Creating a kubernetes client @ 12/19/23 10:58:01.096
  Dec 19 10:58:01.096: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename pod-network-test @ 12/19/23 10:58:01.111
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:58:01.152
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:58:01.159
  STEP: Performing setup for networking test in namespace pod-network-test-33 @ 12/19/23 10:58:01.168
  STEP: creating a selector @ 12/19/23 10:58:01.168
  STEP: Creating the service pods in kubernetes @ 12/19/23 10:58:01.169
  Dec 19 10:58:01.169: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 12/19/23 10:58:23.539
  Dec 19 10:58:25.625: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Dec 19 10:58:25.626: INFO: Going to poll 10.233.64.76 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Dec 19 10:58:25.635: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.233.64.76 8081 | grep -v '^\s*$'] Namespace:pod-network-test-33 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 19 10:58:25.635: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  Dec 19 10:58:25.643: INFO: ExecWithOptions: Clientset creation
  Dec 19 10:58:25.643: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-33/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.233.64.76+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Dec 19 10:58:26.781: INFO: Found all 1 expected endpoints: [netserver-0]
  Dec 19 10:58:26.781: INFO: Going to poll 10.233.65.71 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Dec 19 10:58:26.789: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.233.65.71 8081 | grep -v '^\s*$'] Namespace:pod-network-test-33 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 19 10:58:26.790: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  Dec 19 10:58:26.791: INFO: ExecWithOptions: Clientset creation
  Dec 19 10:58:26.791: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-33/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.233.65.71+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Dec 19 10:58:27.906: INFO: Found all 1 expected endpoints: [netserver-1]
  Dec 19 10:58:27.907: INFO: Going to poll 10.233.66.211 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Dec 19 10:58:27.915: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.233.66.211 8081 | grep -v '^\s*$'] Namespace:pod-network-test-33 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 19 10:58:27.915: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  Dec 19 10:58:27.917: INFO: ExecWithOptions: Clientset creation
  Dec 19 10:58:27.917: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-33/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.233.66.211+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Dec 19 10:58:29.034: INFO: Found all 1 expected endpoints: [netserver-2]
  Dec 19 10:58:29.034: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-33" for this suite. @ 12/19/23 10:58:29.085
• [28.004 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 12/19/23 10:58:29.114
  Dec 19 10:58:29.114: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename watch @ 12/19/23 10:58:29.119
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:58:29.156
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:58:29.166
  STEP: getting a starting resourceVersion @ 12/19/23 10:58:29.172
  STEP: starting a background goroutine to produce watch events @ 12/19/23 10:58:29.181
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 12/19/23 10:58:29.181
  Dec 19 10:58:31.933: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-1891" for this suite. @ 12/19/23 10:58:31.979
• [2.922 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:237
  STEP: Creating a kubernetes client @ 12/19/23 10:58:32.038
  Dec 19 10:58:32.038: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename projected @ 12/19/23 10:58:32.042
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:58:32.083
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:58:32.091
  STEP: Creating a pod to test downward API volume plugin @ 12/19/23 10:58:32.1
  STEP: Saw pod success @ 12/19/23 10:58:36.179
  Dec 19 10:58:36.211: INFO: Trying to get logs from node dah7vaemeeho-3 pod downwardapi-volume-8b7e4c0e-6d8f-499e-a7eb-4b4dc5076476 container client-container: <nil>
  STEP: delete the pod @ 12/19/23 10:58:36.286
  Dec 19 10:58:36.341: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9375" for this suite. @ 12/19/23 10:58:36.353
• [4.329 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
test/e2e/common/node/secrets.go:155
  STEP: Creating a kubernetes client @ 12/19/23 10:58:36.369
  Dec 19 10:58:36.369: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename secrets @ 12/19/23 10:58:36.372
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:58:36.409
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:58:36.416
  STEP: creating a secret @ 12/19/23 10:58:36.422
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 12/19/23 10:58:36.432
  STEP: patching the secret @ 12/19/23 10:58:36.439
  STEP: deleting the secret using a LabelSelector @ 12/19/23 10:58:36.461
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 12/19/23 10:58:36.479
  Dec 19 10:58:36.486: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5114" for this suite. @ 12/19/23 10:58:36.499
• [0.144 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 12/19/23 10:58:36.514
  Dec 19 10:58:36.514: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename secrets @ 12/19/23 10:58:36.517
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:58:36.548
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:58:36.558
  STEP: Creating secret with name s-test-opt-del-d79a9d85-4c70-4236-9f7c-b81a3149788d @ 12/19/23 10:58:36.579
  STEP: Creating secret with name s-test-opt-upd-48ed1be2-b4d4-4d53-abb3-293b90b0dc24 @ 12/19/23 10:58:36.596
  STEP: Creating the pod @ 12/19/23 10:58:36.607
  STEP: Deleting secret s-test-opt-del-d79a9d85-4c70-4236-9f7c-b81a3149788d @ 12/19/23 10:58:40.724
  STEP: Updating secret s-test-opt-upd-48ed1be2-b4d4-4d53-abb3-293b90b0dc24 @ 12/19/23 10:58:40.739
  STEP: Creating secret with name s-test-opt-create-2175463b-5133-41ba-841f-6683856547bf @ 12/19/23 10:58:40.76
  STEP: waiting to observe update in volume @ 12/19/23 10:58:40.77
  Dec 19 10:59:55.740: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1769" for this suite. @ 12/19/23 10:59:55.752
• [79.265 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1084
  STEP: Creating a kubernetes client @ 12/19/23 10:59:55.781
  Dec 19 10:59:55.781: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename kubectl @ 12/19/23 10:59:55.787
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:59:55.827
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:59:55.835
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 12/19/23 10:59:55.84
  Dec 19 10:59:55.841: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=kubectl-6861 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  Dec 19 10:59:56.035: INFO: stderr: ""
  Dec 19 10:59:56.036: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 12/19/23 10:59:56.036
  Dec 19 10:59:56.036: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=kubectl-6861 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.36.1-1"}]}} --dry-run=server'
  Dec 19 10:59:56.246: INFO: stderr: ""
  Dec 19 10:59:56.246: INFO: stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 12/19/23 10:59:56.246
  Dec 19 10:59:56.258: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=kubectl-6861 delete pods e2e-test-httpd-pod'
  Dec 19 10:59:58.359: INFO: stderr: ""
  Dec 19 10:59:58.359: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Dec 19 10:59:58.359: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6861" for this suite. @ 12/19/23 10:59:58.376
• [2.624 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/container_probe.go:527
  STEP: Creating a kubernetes client @ 12/19/23 10:59:58.408
  Dec 19 10:59:58.409: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename container-probe @ 12/19/23 10:59:58.414
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 10:59:58.46
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 10:59:58.468
  STEP: Creating pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352 @ 12/19/23 10:59:58.485
  STEP: checking the pod's current state and verifying that restartCount is present @ 12/19/23 11:00:00.523
  Dec 19 11:00:00.529: INFO: Initial restart count of pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c is 0
  Dec 19 11:00:00.535: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:00:02.546: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:00:04.556: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:00:06.568: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:00:08.576: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:00:10.620: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:00:12.630: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:00:14.641: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:00:16.651: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:00:18.662: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:00:20.671: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:00:22.691: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:00:24.700: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:00:26.708: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:00:28.718: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:00:30.729: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:00:32.768: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:00:34.783: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:00:36.794: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:00:38.802: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:00:40.825: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:00:42.834: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:00:44.850: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:00:46.862: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:00:48.870: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:00:50.879: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:00:52.888: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:00:54.906: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:00:56.916: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:00:58.926: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:01:00.937: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:01:02.945: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:01:04.953: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:01:06.963: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:01:08.983: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:01:10.993: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:01:13.021: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:01:15.029: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:01:17.053: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:01:19.065: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:01:21.081: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:01:23.094: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:01:25.102: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:01:27.109: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:01:29.116: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:01:31.126: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:01:33.137: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:01:35.149: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:01:37.158: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:01:39.168: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:01:41.176: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:01:43.185: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:01:45.196: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:01:47.206: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:01:49.227: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:01:51.239: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:01:53.250: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:01:55.260: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:01:57.270: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:01:59.292: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:02:01.302: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:02:03.314: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:02:05.324: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:02:07.332: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:02:09.344: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:02:11.356: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:02:13.369: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:02:15.382: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:02:17.393: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:02:19.405: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:02:21.416: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:02:23.427: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:02:25.438: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:02:27.452: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:02:29.461: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:02:31.469: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:02:33.480: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:02:35.490: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:02:37.500: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:02:39.508: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:02:41.519: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:02:43.527: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:02:45.535: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:02:47.547: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:02:49.560: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:02:51.569: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:02:53.587: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:02:55.598: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:02:57.608: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:02:59.618: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:03:01.629: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:03:03.639: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:03:05.650: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:03:07.660: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:03:09.669: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:03:11.678: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:03:13.689: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:03:15.698: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:03:17.706: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:03:19.716: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:03:21.724: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:03:23.735: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:03:25.748: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:03:27.758: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:03:29.772: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:03:31.783: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:03:33.795: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:03:35.804: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:03:37.812: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:03:39.821: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:03:41.831: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:03:43.842: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:03:45.853: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:03:47.862: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:03:49.880: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:03:51.890: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:03:53.900: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:03:55.910: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:03:57.919: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  Dec 19 11:03:59.935: INFO: Get pod test-grpc-7864f25e-deec-4630-9179-0ffc6213bb2c in namespace container-probe-2352
  STEP: deleting the pod @ 12/19/23 11:04:01.936
  Dec 19 11:04:01.984: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2352" for this suite. @ 12/19/23 11:04:01.998
• [243.625 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1538
  STEP: Creating a kubernetes client @ 12/19/23 11:04:02.039
  Dec 19 11:04:02.040: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename kubectl @ 12/19/23 11:04:02.045
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:04:02.086
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:04:02.093
  STEP: creating Agnhost RC @ 12/19/23 11:04:02.1
  Dec 19 11:04:02.100: INFO: namespace kubectl-9314
  Dec 19 11:04:02.101: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=kubectl-9314 create -f -'
  Dec 19 11:04:02.563: INFO: stderr: ""
  Dec 19 11:04:02.563: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 12/19/23 11:04:02.563
  Dec 19 11:04:03.573: INFO: Selector matched 1 pods for map[app:agnhost]
  Dec 19 11:04:03.573: INFO: Found 0 / 1
  Dec 19 11:04:04.577: INFO: Selector matched 1 pods for map[app:agnhost]
  Dec 19 11:04:04.577: INFO: Found 1 / 1
  Dec 19 11:04:04.577: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  Dec 19 11:04:04.584: INFO: Selector matched 1 pods for map[app:agnhost]
  Dec 19 11:04:04.584: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Dec 19 11:04:04.584: INFO: wait on agnhost-primary startup in kubectl-9314 
  Dec 19 11:04:04.585: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=kubectl-9314 logs agnhost-primary-fshd8 agnhost-primary'
  Dec 19 11:04:04.877: INFO: stderr: ""
  Dec 19 11:04:04.877: INFO: stdout: "Paused\n"
  STEP: exposing RC @ 12/19/23 11:04:04.878
  Dec 19 11:04:04.878: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=kubectl-9314 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  Dec 19 11:04:05.114: INFO: stderr: ""
  Dec 19 11:04:05.114: INFO: stdout: "service/rm2 exposed\n"
  Dec 19 11:04:05.136: INFO: Service rm2 in namespace kubectl-9314 found.
  STEP: exposing service @ 12/19/23 11:04:07.159
  Dec 19 11:04:07.159: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=kubectl-9314 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  Dec 19 11:04:07.484: INFO: stderr: ""
  Dec 19 11:04:07.484: INFO: stdout: "service/rm3 exposed\n"
  Dec 19 11:04:07.511: INFO: Service rm3 in namespace kubectl-9314 found.
  Dec 19 11:04:09.536: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9314" for this suite. @ 12/19/23 11:04:09.548
• [7.535 seconds]
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:164
  STEP: Creating a kubernetes client @ 12/19/23 11:04:09.575
  Dec 19 11:04:09.575: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename downward-api @ 12/19/23 11:04:09.581
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:04:09.618
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:04:09.626
  STEP: Creating the pod @ 12/19/23 11:04:09.665
  Dec 19 11:04:12.313: INFO: Successfully updated pod "annotationupdate0615f665-b863-4e09-b415-31ee635a6a03"
  Dec 19 11:04:14.348: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2635" for this suite. @ 12/19/23 11:04:14.363
• [4.807 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:371
  STEP: Creating a kubernetes client @ 12/19/23 11:04:14.389
  Dec 19 11:04:14.389: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename webhook @ 12/19/23 11:04:14.393
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:04:14.438
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:04:14.444
  STEP: Setting up server cert @ 12/19/23 11:04:14.497
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/19/23 11:04:15.619
  STEP: Deploying the webhook pod @ 12/19/23 11:04:15.639
  STEP: Wait for the deployment to be ready @ 12/19/23 11:04:15.67
  Dec 19 11:04:15.700: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/19/23 11:04:17.735
  STEP: Verifying the service has paired with the endpoint @ 12/19/23 11:04:17.763
  Dec 19 11:04:18.763: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 12/19/23 11:04:18.782
  STEP: Registering slow webhook via the AdmissionRegistration API @ 12/19/23 11:04:18.782
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 12/19/23 11:04:18.832
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 12/19/23 11:04:19.863
  STEP: Registering slow webhook via the AdmissionRegistration API @ 12/19/23 11:04:19.863
  STEP: Having no error when timeout is longer than webhook latency @ 12/19/23 11:04:20.949
  STEP: Registering slow webhook via the AdmissionRegistration API @ 12/19/23 11:04:20.95
  Dec 19 11:04:21.000: INFO: Waiting for webhook configuration to be ready...
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 12/19/23 11:04:26.157
  STEP: Registering slow webhook via the AdmissionRegistration API @ 12/19/23 11:04:26.157
  Dec 19 11:04:31.374: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4974" for this suite. @ 12/19/23 11:04:31.393
  STEP: Destroying namespace "webhook-markers-5497" for this suite. @ 12/19/23 11:04:31.421
• [17.052 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/sysctl.go:125
  STEP: Creating a kubernetes client @ 12/19/23 11:04:31.444
  Dec 19 11:04:31.444: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename sysctl @ 12/19/23 11:04:31.462
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:04:31.499
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:04:31.508
  STEP: Creating a pod with one valid and two invalid sysctls @ 12/19/23 11:04:31.515
  Dec 19 11:04:31.544: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-12" for this suite. @ 12/19/23 11:04:31.558
• [0.131 seconds]
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:164
  STEP: Creating a kubernetes client @ 12/19/23 11:04:31.575
  Dec 19 11:04:31.575: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename projected @ 12/19/23 11:04:31.578
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:04:31.618
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:04:31.625
  STEP: Creating the pod @ 12/19/23 11:04:31.632
  Dec 19 11:04:34.229: INFO: Successfully updated pod "annotationupdate95eed05b-7791-4357-9882-26bb9107714e"
  Dec 19 11:04:36.267: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9219" for this suite. @ 12/19/23 11:04:36.276
• [4.720 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/field_validation.go:64
  STEP: Creating a kubernetes client @ 12/19/23 11:04:36.297
  Dec 19 11:04:36.297: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename field-validation @ 12/19/23 11:04:36.3
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:04:36.335
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:04:36.342
  STEP: apply creating a deployment @ 12/19/23 11:04:36.353
  Dec 19 11:04:36.392: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-9942" for this suite. @ 12/19/23 11:04:36.405
• [0.125 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:90
  STEP: Creating a kubernetes client @ 12/19/23 11:04:36.426
  Dec 19 11:04:36.426: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename emptydir @ 12/19/23 11:04:36.43
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:04:36.474
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:04:36.494
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 12/19/23 11:04:36.507
  STEP: Saw pod success @ 12/19/23 11:04:40.581
  Dec 19 11:04:40.589: INFO: Trying to get logs from node dah7vaemeeho-3 pod pod-af6e516e-ecce-4444-9199-4efed8b3b777 container test-container: <nil>
  STEP: delete the pod @ 12/19/23 11:04:40.604
  Dec 19 11:04:40.635: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-229" for this suite. @ 12/19/23 11:04:40.646
• [4.239 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/security_context.go:611
  STEP: Creating a kubernetes client @ 12/19/23 11:04:40.667
  Dec 19 11:04:40.667: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename security-context-test @ 12/19/23 11:04:40.672
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:04:40.715
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:04:40.728
  Dec 19 11:04:46.830: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-7122" for this suite. @ 12/19/23 11:04:46.848
• [6.196 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:3649
  STEP: Creating a kubernetes client @ 12/19/23 11:04:46.879
  Dec 19 11:04:46.880: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename services @ 12/19/23 11:04:46.884
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:04:46.922
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:04:46.928
  STEP: creating service multiprotocol-test in namespace services-5098 @ 12/19/23 11:04:46.935
  STEP: creating pod pod1 in namespace services-5098 @ 12/19/23 11:04:46.959
  STEP: Creating pod pod1 in namespace services-5098 @ 12/19/23 11:04:46.959
  STEP: waiting up to 3m0s for service multiprotocol-test in namespace services-5098 to expose endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]] @ 12/19/23 11:04:49.021
  Dec 19 11:04:49.119: INFO: successfully validated that service multiprotocol-test in namespace services-5098 exposes endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 12/19/23 11:04:49.12
  Dec 19 11:04:49.120: INFO: Creating new exec pod
  Dec 19 11:04:51.186: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=services-5098 exec execpodzb5qj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.50.201 80'
  Dec 19 11:04:51.563: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.50.201 80\nConnection to 10.233.50.201 80 port [tcp/http] succeeded!\n"
  Dec 19 11:04:51.563: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Dec 19 11:04:51.563: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=services-5098 exec execpodzb5qj -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.50.201 80'
  Dec 19 11:04:55.872: INFO: stderr: "+ echo hostName\n+ nc -v -u -w 2 10.233.50.201 80\nConnection to 10.233.50.201 80 port [udp/*] succeeded!\n"
  Dec 19 11:04:55.872: INFO: stdout: "pod1"
  STEP: Checking if the Service forwards traffic to TCP only @ 12/19/23 11:04:55.872
  Dec 19 11:04:55.916: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=services-5098 exec execpodzb5qj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.50.201 80'
  Dec 19 11:04:56.276: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.50.201 80\nConnection to 10.233.50.201 80 port [tcp/http] succeeded!\n"
  Dec 19 11:04:56.276: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Dec 19 11:04:56.277: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=services-5098 exec execpodzb5qj -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.50.201 80'
  Dec 19 11:05:00.617: INFO: stderr: "+ echo hostName\n+ nc -v -u -w 2 10.233.50.201 80\nConnection to 10.233.50.201 80 port [udp/*] succeeded!\n"
  Dec 19 11:05:00.617: INFO: stdout: ""
  Dec 19 11:05:00.618: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=services-5098 exec execpodzb5qj -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.50.201 80'
  Dec 19 11:05:04.965: INFO: stderr: "+ echo hostName\n+ nc -v -u -w 2 10.233.50.201 80\nConnection to 10.233.50.201 80 port [udp/*] succeeded!\n"
  Dec 19 11:05:04.965: INFO: stdout: ""
  STEP: Checking if the Service forwards traffic to UDP only @ 12/19/23 11:05:04.965
  Dec 19 11:05:04.991: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=services-5098 exec execpodzb5qj -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.50.201 80'
  Dec 19 11:05:09.371: INFO: stderr: "+ echo hostName\n+ nc -v -u -w 2 10.233.50.201 80\nConnection to 10.233.50.201 80 port [udp/*] succeeded!\n"
  Dec 19 11:05:09.371: INFO: stdout: "pod1"
  Dec 19 11:05:09.371: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=services-5098 exec execpodzb5qj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.50.201 80'
  Dec 19 11:05:11.655: INFO: rc: 1
  Dec 19 11:05:11.655: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=services-5098 exec execpodzb5qj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.50.201 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.233.50.201 80
  nc: connect to 10.233.50.201 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  Dec 19 11:05:11.656: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=services-5098 exec execpodzb5qj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.50.201 80'
  Dec 19 11:05:14.028: INFO: rc: 1
  Dec 19 11:05:14.029: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=services-5098 exec execpodzb5qj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.50.201 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.233.50.201 80
  nc: connect to 10.233.50.201 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  Dec 19 11:05:14.030: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=services-5098 exec execpodzb5qj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.50.201 80'
  Dec 19 11:05:16.391: INFO: rc: 1
  Dec 19 11:05:16.391: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=services-5098 exec execpodzb5qj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.50.201 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.233.50.201 80
  nc: connect to 10.233.50.201 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  Dec 19 11:05:16.392: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5098" for this suite. @ 12/19/23 11:05:16.406
• [29.545 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:263
  STEP: Creating a kubernetes client @ 12/19/23 11:05:16.426
  Dec 19 11:05:16.426: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename downward-api @ 12/19/23 11:05:16.429
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:05:16.457
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:05:16.462
  STEP: Creating a pod to test downward API volume plugin @ 12/19/23 11:05:16.469
  STEP: Saw pod success @ 12/19/23 11:05:20.522
  Dec 19 11:05:20.532: INFO: Trying to get logs from node dah7vaemeeho-3 pod downwardapi-volume-a428ec5e-abea-4457-b0b5-badad2f83df8 container client-container: <nil>
  STEP: delete the pod @ 12/19/23 11:05:20.545
  Dec 19 11:05:20.587: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7876" for this suite. @ 12/19/23 11:05:20.602
• [4.193 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/downwardapi.go:269
  STEP: Creating a kubernetes client @ 12/19/23 11:05:20.622
  Dec 19 11:05:20.622: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename downward-api @ 12/19/23 11:05:20.625
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:05:20.656
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:05:20.662
  STEP: Creating a pod to test downward api env vars @ 12/19/23 11:05:20.668
  STEP: Saw pod success @ 12/19/23 11:05:24.743
  Dec 19 11:05:24.755: INFO: Trying to get logs from node dah7vaemeeho-3 pod downward-api-c178e9f4-142a-4748-b5c2-b269cc02a657 container dapi-container: <nil>
  STEP: delete the pod @ 12/19/23 11:05:24.774
  Dec 19 11:05:24.817: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8862" for this suite. @ 12/19/23 11:05:24.825
• [4.225 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1373
  STEP: Creating a kubernetes client @ 12/19/23 11:05:24.855
  Dec 19 11:05:24.855: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename kubectl @ 12/19/23 11:05:24.864
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:05:24.907
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:05:24.922
  STEP: validating cluster-info @ 12/19/23 11:05:24.929
  Dec 19 11:05:24.929: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=kubectl-9783 cluster-info'
  Dec 19 11:05:25.139: INFO: stderr: ""
  Dec 19 11:05:25.139: INFO: stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.233.0.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  Dec 19 11:05:25.139: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9783" for this suite. @ 12/19/23 11:05:25.15
• [0.313 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
test/e2e/apps/rc.go:425
  STEP: Creating a kubernetes client @ 12/19/23 11:05:25.168
  Dec 19 11:05:25.168: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename replication-controller @ 12/19/23 11:05:25.171
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:05:25.214
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:05:25.226
  STEP: Creating ReplicationController "e2e-rc-tgtqw" @ 12/19/23 11:05:25.24
  Dec 19 11:05:25.254: INFO: Get Replication Controller "e2e-rc-tgtqw" to confirm replicas
  Dec 19 11:05:26.255: INFO: Get Replication Controller "e2e-rc-tgtqw" to confirm replicas
  Dec 19 11:05:26.266: INFO: Found 1 replicas for "e2e-rc-tgtqw" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-tgtqw" @ 12/19/23 11:05:26.267
  STEP: Updating a scale subresource @ 12/19/23 11:05:26.277
  STEP: Verifying replicas where modified for replication controller "e2e-rc-tgtqw" @ 12/19/23 11:05:26.302
  Dec 19 11:05:26.302: INFO: Get Replication Controller "e2e-rc-tgtqw" to confirm replicas
  Dec 19 11:05:27.302: INFO: Get Replication Controller "e2e-rc-tgtqw" to confirm replicas
  Dec 19 11:05:27.311: INFO: Found 2 replicas for "e2e-rc-tgtqw" replication controller
  Dec 19 11:05:27.311: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-6404" for this suite. @ 12/19/23 11:05:27.321
• [2.166 seconds]
------------------------------
SS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 12/19/23 11:05:27.335
  Dec 19 11:05:27.335: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename init-container @ 12/19/23 11:05:27.337
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:05:27.38
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:05:27.39
  STEP: creating the pod @ 12/19/23 11:05:27.398
  Dec 19 11:05:27.398: INFO: PodSpec: initContainers in spec.initContainers
  Dec 19 11:05:30.987: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-8602" for this suite. @ 12/19/23 11:05:30.998
• [3.675 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/container_probe.go:168
  STEP: Creating a kubernetes client @ 12/19/23 11:05:31.01
  Dec 19 11:05:31.010: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename container-probe @ 12/19/23 11:05:31.014
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:05:31.044
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:05:31.048
  STEP: Creating pod liveness-2a1312d5-c184-49b5-9f6d-4fa5283a6dd8 in namespace container-probe-8330 @ 12/19/23 11:05:31.053
  STEP: checking the pod's current state and verifying that restartCount is present @ 12/19/23 11:05:33.111
  Dec 19 11:05:33.128: INFO: Initial restart count of pod liveness-2a1312d5-c184-49b5-9f6d-4fa5283a6dd8 is 0
  Dec 19 11:05:33.138: INFO: Get pod liveness-2a1312d5-c184-49b5-9f6d-4fa5283a6dd8 in namespace container-probe-8330
  Dec 19 11:05:35.151: INFO: Get pod liveness-2a1312d5-c184-49b5-9f6d-4fa5283a6dd8 in namespace container-probe-8330
  Dec 19 11:05:37.164: INFO: Get pod liveness-2a1312d5-c184-49b5-9f6d-4fa5283a6dd8 in namespace container-probe-8330
  Dec 19 11:05:39.173: INFO: Get pod liveness-2a1312d5-c184-49b5-9f6d-4fa5283a6dd8 in namespace container-probe-8330
  Dec 19 11:05:41.182: INFO: Get pod liveness-2a1312d5-c184-49b5-9f6d-4fa5283a6dd8 in namespace container-probe-8330
  Dec 19 11:05:43.193: INFO: Get pod liveness-2a1312d5-c184-49b5-9f6d-4fa5283a6dd8 in namespace container-probe-8330
  Dec 19 11:05:45.203: INFO: Get pod liveness-2a1312d5-c184-49b5-9f6d-4fa5283a6dd8 in namespace container-probe-8330
  Dec 19 11:05:47.212: INFO: Get pod liveness-2a1312d5-c184-49b5-9f6d-4fa5283a6dd8 in namespace container-probe-8330
  Dec 19 11:05:49.225: INFO: Get pod liveness-2a1312d5-c184-49b5-9f6d-4fa5283a6dd8 in namespace container-probe-8330
  Dec 19 11:05:51.236: INFO: Get pod liveness-2a1312d5-c184-49b5-9f6d-4fa5283a6dd8 in namespace container-probe-8330
  Dec 19 11:05:53.247: INFO: Get pod liveness-2a1312d5-c184-49b5-9f6d-4fa5283a6dd8 in namespace container-probe-8330
  Dec 19 11:05:53.248: INFO: Restart count of pod container-probe-8330/liveness-2a1312d5-c184-49b5-9f6d-4fa5283a6dd8 is now 1 (20.119693514s elapsed)
  STEP: deleting the pod @ 12/19/23 11:05:53.249
  Dec 19 11:05:53.283: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8330" for this suite. @ 12/19/23 11:05:53.31
• [22.316 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
test/e2e/auth/service_accounts.go:649
  STEP: Creating a kubernetes client @ 12/19/23 11:05:53.33
  Dec 19 11:05:53.331: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename svcaccounts @ 12/19/23 11:05:53.335
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:05:53.363
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:05:53.372
  STEP: creating a ServiceAccount @ 12/19/23 11:05:53.379
  STEP: watching for the ServiceAccount to be added @ 12/19/23 11:05:53.396
  STEP: patching the ServiceAccount @ 12/19/23 11:05:53.403
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 12/19/23 11:05:53.418
  STEP: deleting the ServiceAccount @ 12/19/23 11:05:53.427
  Dec 19 11:05:53.452: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-7615" for this suite. @ 12/19/23 11:05:53.462
• [0.146 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:442
  STEP: Creating a kubernetes client @ 12/19/23 11:05:53.478
  Dec 19 11:05:53.478: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/19/23 11:05:53.482
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:05:53.511
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:05:53.515
  STEP: set up a multi version CRD @ 12/19/23 11:05:53.523
  Dec 19 11:05:53.528: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: mark a version not serverd @ 12/19/23 11:05:58.365
  STEP: check the unserved version gets removed @ 12/19/23 11:05:58.411
  STEP: check the other version is not changed @ 12/19/23 11:05:59.935
  Dec 19 11:06:03.389: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-1581" for this suite. @ 12/19/23 11:06:03.422
• [9.959 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 12/19/23 11:06:03.439
  Dec 19 11:06:03.439: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename deployment @ 12/19/23 11:06:03.445
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:06:03.479
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:06:03.485
  Dec 19 11:06:03.493: INFO: Creating deployment "test-recreate-deployment"
  Dec 19 11:06:03.506: INFO: Waiting deployment "test-recreate-deployment" to be updated to revision 1
  Dec 19 11:06:03.528: INFO: deployment "test-recreate-deployment" doesn't have the required revision set
  Dec 19 11:06:05.547: INFO: Waiting deployment "test-recreate-deployment" to complete
  Dec 19 11:06:05.558: INFO: Triggering a new rollout for deployment "test-recreate-deployment"
  Dec 19 11:06:05.583: INFO: Updating deployment test-recreate-deployment
  Dec 19 11:06:05.583: INFO: Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  Dec 19 11:06:05.817: INFO: Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-792",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "56b11642-25f1-4636-af39-7655a4cd99a7",
      ResourceVersion: (string) (len=5) "25158",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838580763,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838580765,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838580765,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838580765,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838580765,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838580765,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838580763,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=63) "ReplicaSet \"test-recreate-deployment-76fb77d45\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Dec 19 11:06:05.837: INFO: New ReplicaSet "test-recreate-deployment-76fb77d45" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-792",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b399b035-d564-4d0c-ab17-f7cc965109b9",
      ResourceVersion: (string) (len=5) "25157",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838580765,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "56b11642-25f1-4636-af39-7655a4cd99a7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838580765,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 35 36 62 31 31 36  34 32 2d 32 35 66 31 2d  |\"56b11642-25f1-|
              00000120  34 36 33 36 2d 61 66 33  39 2d 37 36 35 35 61 34  |4636-af39-7655a4|
              00000130  63 64 39 39 61 37 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |cd99a7\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838580765,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Dec 19 11:06:05.838: INFO: All old ReplicaSets of Deployment "test-recreate-deployment":
  Dec 19 11:06:05.839: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-dd4bc9d6d",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-792",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7007d2e0-4e79-4053-981b-34fd56369d36",
      ResourceVersion: (string) (len=5) "25146",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838580763,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "dd4bc9d6d"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "56b11642-25f1-4636-af39-7655a4cd99a7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838580765,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 35 36 62 31 31 36  34 32 2d 32 35 66 31 2d  |\"56b11642-25f1-|
              00000120  34 36 33 36 2d 61 66 33  39 2d 37 36 35 35 61 34  |4636-af39-7655a4|
              00000130  63 64 39 39 61 37 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |cd99a7\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838580765,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "dd4bc9d6d"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "dd4bc9d6d"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Dec 19 11:06:05.848: INFO: Pod "test-recreate-deployment-76fb77d45-8cvgm" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-recreate-deployment-76fb77d45-8cvgm",
      GenerateName: (string) (len=35) "test-recreate-deployment-76fb77d45-",
      Namespace: (string) (len=14) "deployment-792",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "df704388-7029-48f3-ac6e-261031c4e161",
      ResourceVersion: (string) (len=5) "25156",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838580765,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
          UID: (types.UID) (len=36) "b399b035-d564-4d0c-ab17-f7cc965109b9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838580765,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 33  39 39 62 30 33 35 2d 64  |d\":\"b399b035-d|
              00000090  35 36 34 2d 34 64 30 63  2d 61 62 31 37 2d 66 37  |564-4d0c-ab17-f7|
              000000a0  63 63 39 36 35 31 30 39  62 39 5c 22 7d 22 3a 7b  |cc965109b9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838580765,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dtmzh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dtmzh",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "dah7vaemeeho-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838580765,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838580765,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838580765,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838580765,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838580765,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.250",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.250"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838580765,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 19 11:06:05.853: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-792" for this suite. @ 12/19/23 11:06:05.862
• [2.436 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
test/e2e/apimachinery/namespace.go:400
  STEP: Creating a kubernetes client @ 12/19/23 11:06:05.876
  Dec 19 11:06:05.876: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename namespaces @ 12/19/23 11:06:05.879
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:06:05.911
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:06:05.92
  STEP: Creating namespace "e2e-ns-qksgc" @ 12/19/23 11:06:05.927
  Dec 19 11:06:05.958: INFO: Namespace "e2e-ns-qksgc-6272" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-qksgc-6272" @ 12/19/23 11:06:05.958
  Dec 19 11:06:05.975: INFO: Namespace "e2e-ns-qksgc-6272" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-qksgc-6272" @ 12/19/23 11:06:05.975
  Dec 19 11:06:05.996: INFO: Namespace "e2e-ns-qksgc-6272" has []v1.FinalizerName{"kubernetes"}
  Dec 19 11:06:05.996: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-6847" for this suite. @ 12/19/23 11:06:06.008
  STEP: Destroying namespace "e2e-ns-qksgc-6272" for this suite. @ 12/19/23 11:06:06.023
• [0.182 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
test/e2e/apps/statefulset.go:751
  STEP: Creating a kubernetes client @ 12/19/23 11:06:06.06
  Dec 19 11:06:06.060: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename statefulset @ 12/19/23 11:06:06.065
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:06:06.103
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:06:06.108
  STEP: Creating service test in namespace statefulset-2218 @ 12/19/23 11:06:06.114
  STEP: Creating stateful set ss in namespace statefulset-2218 @ 12/19/23 11:06:06.125
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-2218 @ 12/19/23 11:06:06.144
  Dec 19 11:06:06.153: INFO: Found 0 stateful pods, waiting for 1
  Dec 19 11:06:16.176: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 12/19/23 11:06:16.176
  Dec 19 11:06:16.188: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=statefulset-2218 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Dec 19 11:06:16.573: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Dec 19 11:06:16.573: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Dec 19 11:06:16.573: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Dec 19 11:06:16.582: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  Dec 19 11:06:26.583: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Dec 19 11:06:26.583: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Dec 19 11:06:26.628: INFO: POD   NODE            PHASE    GRACE  CONDITIONS
  Dec 19 11:06:26.628: INFO: ss-0  dah7vaemeeho-3  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2023-12-19 11:06:07 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-12-19 11:06:06 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-12-19 11:06:17 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-12-19 11:06:17 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-12-19 11:06:06 +0000 UTC  }]
  Dec 19 11:06:26.628: INFO: 
  Dec 19 11:06:26.628: INFO: StatefulSet ss has not reached scale 3, at 1
  Dec 19 11:06:27.637: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.987966967s
  Dec 19 11:06:28.647: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.979331523s
  Dec 19 11:06:29.657: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.969624614s
  Dec 19 11:06:30.671: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.958819048s
  Dec 19 11:06:31.682: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.945725127s
  Dec 19 11:06:32.690: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.934752117s
  Dec 19 11:06:33.701: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.92558648s
  Dec 19 11:06:34.709: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.915150593s
  Dec 19 11:06:35.721: INFO: Verifying statefulset ss doesn't scale past 3 for another 906.970373ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-2218 @ 12/19/23 11:06:36.722
  Dec 19 11:06:36.734: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=statefulset-2218 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Dec 19 11:06:37.090: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Dec 19 11:06:37.090: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Dec 19 11:06:37.090: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Dec 19 11:06:37.092: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=statefulset-2218 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Dec 19 11:06:37.385: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  Dec 19 11:06:37.385: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Dec 19 11:06:37.385: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Dec 19 11:06:37.386: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=statefulset-2218 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Dec 19 11:06:37.709: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  Dec 19 11:06:37.709: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Dec 19 11:06:37.709: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Dec 19 11:06:37.719: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Dec 19 11:06:37.719: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Dec 19 11:06:37.719: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 12/19/23 11:06:37.719
  Dec 19 11:06:37.728: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=statefulset-2218 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Dec 19 11:06:37.982: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Dec 19 11:06:37.982: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Dec 19 11:06:37.982: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Dec 19 11:06:37.983: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=statefulset-2218 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Dec 19 11:06:38.278: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Dec 19 11:06:38.278: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Dec 19 11:06:38.279: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Dec 19 11:06:38.279: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=statefulset-2218 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Dec 19 11:06:38.598: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Dec 19 11:06:38.598: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Dec 19 11:06:38.598: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Dec 19 11:06:38.598: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Dec 19 11:06:38.612: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 3
  Dec 19 11:06:48.619: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Dec 19 11:06:48.620: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  Dec 19 11:06:48.621: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  Dec 19 11:06:48.654: INFO: POD   NODE            PHASE    GRACE  CONDITIONS
  Dec 19 11:06:48.654: INFO: ss-0  dah7vaemeeho-3  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2023-12-19 11:06:07 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-12-19 11:06:06 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-12-19 11:06:38 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-12-19 11:06:38 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-12-19 11:06:06 +0000 UTC  }]
  Dec 19 11:06:48.654: INFO: ss-1  dah7vaemeeho-1  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2023-12-19 11:06:28 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-12-19 11:06:26 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-12-19 11:06:39 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-12-19 11:06:39 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-12-19 11:06:26 +0000 UTC  }]
  Dec 19 11:06:48.655: INFO: ss-2  dah7vaemeeho-2  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2023-12-19 11:06:28 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-12-19 11:06:26 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-12-19 11:06:39 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-12-19 11:06:39 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-12-19 11:06:26 +0000 UTC  }]
  Dec 19 11:06:48.655: INFO: 
  Dec 19 11:06:48.655: INFO: StatefulSet ss has not reached scale 0, at 3
  Dec 19 11:06:49.664: INFO: POD   NODE            PHASE      GRACE  CONDITIONS
  Dec 19 11:06:49.665: INFO: ss-1  dah7vaemeeho-1  Succeeded  30s    [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2023-12-19 11:06:49 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-12-19 11:06:26 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-12-19 11:06:39 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-12-19 11:06:39 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-12-19 11:06:26 +0000 UTC  }]
  Dec 19 11:06:49.665: INFO: 
  Dec 19 11:06:49.665: INFO: StatefulSet ss has not reached scale 0, at 1
  Dec 19 11:06:50.674: INFO: Verifying statefulset ss doesn't scale past 0 for another 7.977502844s
  Dec 19 11:06:51.685: INFO: Verifying statefulset ss doesn't scale past 0 for another 6.966947149s
  Dec 19 11:06:52.694: INFO: Verifying statefulset ss doesn't scale past 0 for another 5.957175899s
  Dec 19 11:06:53.707: INFO: Verifying statefulset ss doesn't scale past 0 for another 4.947411002s
  Dec 19 11:06:54.717: INFO: Verifying statefulset ss doesn't scale past 0 for another 3.934171475s
  Dec 19 11:06:55.728: INFO: Verifying statefulset ss doesn't scale past 0 for another 2.924610911s
  Dec 19 11:06:56.738: INFO: Verifying statefulset ss doesn't scale past 0 for another 1.913310258s
  Dec 19 11:06:57.747: INFO: Verifying statefulset ss doesn't scale past 0 for another 904.304887ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-2218 @ 12/19/23 11:06:58.747
  Dec 19 11:06:58.759: INFO: Scaling statefulset ss to 0
  Dec 19 11:06:58.791: INFO: Waiting for statefulset status.replicas updated to 0
  Dec 19 11:06:58.801: INFO: Deleting all statefulset in ns statefulset-2218
  Dec 19 11:06:58.810: INFO: Scaling statefulset ss to 0
  Dec 19 11:06:58.836: INFO: Waiting for statefulset status.replicas updated to 0
  Dec 19 11:06:58.844: INFO: Deleting statefulset ss
  Dec 19 11:06:58.878: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2218" for this suite. @ 12/19/23 11:06:58.888
• [52.847 seconds]
------------------------------
SS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
test/e2e/scheduling/preemption.go:812
  STEP: Creating a kubernetes client @ 12/19/23 11:06:58.909
  Dec 19 11:06:58.910: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename sched-preemption @ 12/19/23 11:06:58.914
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:06:58.959
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:06:58.965
  Dec 19 11:06:59.002: INFO: Waiting up to 1m0s for all nodes to be ready
  Dec 19 11:07:59.014: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 12/19/23 11:07:59.022
  Dec 19 11:07:59.023: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename sched-preemption-path @ 12/19/23 11:07:59.026
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:07:59.068
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:07:59.079
  Dec 19 11:07:59.136: INFO: PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  Dec 19 11:07:59.146: INFO: PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  Dec 19 11:07:59.360: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-8718" for this suite. @ 12/19/23 11:07:59.374
  Dec 19 11:07:59.399: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-1469" for this suite. @ 12/19/23 11:07:59.421
• [60.527 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/garbage_collector.go:714
  STEP: Creating a kubernetes client @ 12/19/23 11:07:59.437
  Dec 19 11:07:59.437: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename gc @ 12/19/23 11:07:59.441
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:07:59.482
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:07:59.492
  STEP: create the rc1 @ 12/19/23 11:07:59.509
  STEP: create the rc2 @ 12/19/23 11:07:59.522
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 12/19/23 11:08:05.584
  STEP: delete the rc simpletest-rc-to-be-deleted @ 12/19/23 11:08:08.732
  STEP: wait for the rc to be deleted @ 12/19/23 11:08:08.762
  Dec 19 11:08:13.963: INFO: 66 pods remaining
  Dec 19 11:08:13.963: INFO: 66 pods has nil DeletionTimestamp
  Dec 19 11:08:13.963: INFO: 
  STEP: Gathering metrics @ 12/19/23 11:08:18.807
  Dec 19 11:08:19.038: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Dec 19 11:08:19.039: INFO: Deleting pod "simpletest-rc-to-be-deleted-2fvgj" in namespace "gc-5457"
  Dec 19 11:08:19.136: INFO: Deleting pod "simpletest-rc-to-be-deleted-494cw" in namespace "gc-5457"
  Dec 19 11:08:19.212: INFO: Deleting pod "simpletest-rc-to-be-deleted-4d967" in namespace "gc-5457"
  Dec 19 11:08:19.325: INFO: Deleting pod "simpletest-rc-to-be-deleted-4lv27" in namespace "gc-5457"
  Dec 19 11:08:19.566: INFO: Deleting pod "simpletest-rc-to-be-deleted-4pttj" in namespace "gc-5457"
  Dec 19 11:08:19.712: INFO: Deleting pod "simpletest-rc-to-be-deleted-4s6hg" in namespace "gc-5457"
  Dec 19 11:08:19.956: INFO: Deleting pod "simpletest-rc-to-be-deleted-54srs" in namespace "gc-5457"
  Dec 19 11:08:20.134: INFO: Deleting pod "simpletest-rc-to-be-deleted-5582p" in namespace "gc-5457"
  Dec 19 11:08:20.241: INFO: Deleting pod "simpletest-rc-to-be-deleted-5mpfh" in namespace "gc-5457"
  Dec 19 11:08:20.302: INFO: Deleting pod "simpletest-rc-to-be-deleted-5vfd6" in namespace "gc-5457"
  Dec 19 11:08:20.350: INFO: Deleting pod "simpletest-rc-to-be-deleted-5xnkc" in namespace "gc-5457"
  Dec 19 11:08:20.380: INFO: Deleting pod "simpletest-rc-to-be-deleted-68dmq" in namespace "gc-5457"
  Dec 19 11:08:20.438: INFO: Deleting pod "simpletest-rc-to-be-deleted-6j2kx" in namespace "gc-5457"
  Dec 19 11:08:20.498: INFO: Deleting pod "simpletest-rc-to-be-deleted-6ww9q" in namespace "gc-5457"
  Dec 19 11:08:20.534: INFO: Deleting pod "simpletest-rc-to-be-deleted-7cw5n" in namespace "gc-5457"
  Dec 19 11:08:20.615: INFO: Deleting pod "simpletest-rc-to-be-deleted-7k2q8" in namespace "gc-5457"
  Dec 19 11:08:20.672: INFO: Deleting pod "simpletest-rc-to-be-deleted-87bz7" in namespace "gc-5457"
  Dec 19 11:08:20.704: INFO: Deleting pod "simpletest-rc-to-be-deleted-8g8rl" in namespace "gc-5457"
  Dec 19 11:08:20.744: INFO: Deleting pod "simpletest-rc-to-be-deleted-998qf" in namespace "gc-5457"
  Dec 19 11:08:20.820: INFO: Deleting pod "simpletest-rc-to-be-deleted-9c8mm" in namespace "gc-5457"
  Dec 19 11:08:20.950: INFO: Deleting pod "simpletest-rc-to-be-deleted-9fd6b" in namespace "gc-5457"
  Dec 19 11:08:21.076: INFO: Deleting pod "simpletest-rc-to-be-deleted-9ffd9" in namespace "gc-5457"
  Dec 19 11:08:21.269: INFO: Deleting pod "simpletest-rc-to-be-deleted-9s2wx" in namespace "gc-5457"
  Dec 19 11:08:21.389: INFO: Deleting pod "simpletest-rc-to-be-deleted-9wtll" in namespace "gc-5457"
  Dec 19 11:08:21.471: INFO: Deleting pod "simpletest-rc-to-be-deleted-c5x5w" in namespace "gc-5457"
  Dec 19 11:08:21.541: INFO: Deleting pod "simpletest-rc-to-be-deleted-cbzbn" in namespace "gc-5457"
  Dec 19 11:08:21.585: INFO: Deleting pod "simpletest-rc-to-be-deleted-cd456" in namespace "gc-5457"
  Dec 19 11:08:21.631: INFO: Deleting pod "simpletest-rc-to-be-deleted-csrvv" in namespace "gc-5457"
  Dec 19 11:08:21.764: INFO: Deleting pod "simpletest-rc-to-be-deleted-d9p5t" in namespace "gc-5457"
  Dec 19 11:08:21.821: INFO: Deleting pod "simpletest-rc-to-be-deleted-dmq4w" in namespace "gc-5457"
  Dec 19 11:08:21.865: INFO: Deleting pod "simpletest-rc-to-be-deleted-dqkxs" in namespace "gc-5457"
  Dec 19 11:08:21.952: INFO: Deleting pod "simpletest-rc-to-be-deleted-f7vhl" in namespace "gc-5457"
  Dec 19 11:08:22.033: INFO: Deleting pod "simpletest-rc-to-be-deleted-fc4wg" in namespace "gc-5457"
  Dec 19 11:08:22.099: INFO: Deleting pod "simpletest-rc-to-be-deleted-fc6rv" in namespace "gc-5457"
  Dec 19 11:08:22.153: INFO: Deleting pod "simpletest-rc-to-be-deleted-fdhwg" in namespace "gc-5457"
  Dec 19 11:08:22.300: INFO: Deleting pod "simpletest-rc-to-be-deleted-fw864" in namespace "gc-5457"
  Dec 19 11:08:22.408: INFO: Deleting pod "simpletest-rc-to-be-deleted-g2jwd" in namespace "gc-5457"
  Dec 19 11:08:22.468: INFO: Deleting pod "simpletest-rc-to-be-deleted-gvh9g" in namespace "gc-5457"
  Dec 19 11:08:22.554: INFO: Deleting pod "simpletest-rc-to-be-deleted-hhlqh" in namespace "gc-5457"
  Dec 19 11:08:22.606: INFO: Deleting pod "simpletest-rc-to-be-deleted-hrkqs" in namespace "gc-5457"
  Dec 19 11:08:22.705: INFO: Deleting pod "simpletest-rc-to-be-deleted-hwl76" in namespace "gc-5457"
  Dec 19 11:08:22.838: INFO: Deleting pod "simpletest-rc-to-be-deleted-j42xq" in namespace "gc-5457"
  Dec 19 11:08:22.900: INFO: Deleting pod "simpletest-rc-to-be-deleted-jcmnk" in namespace "gc-5457"
  Dec 19 11:08:23.000: INFO: Deleting pod "simpletest-rc-to-be-deleted-jlc5x" in namespace "gc-5457"
  Dec 19 11:08:23.138: INFO: Deleting pod "simpletest-rc-to-be-deleted-jqd94" in namespace "gc-5457"
  Dec 19 11:08:23.260: INFO: Deleting pod "simpletest-rc-to-be-deleted-k4v4k" in namespace "gc-5457"
  Dec 19 11:08:23.331: INFO: Deleting pod "simpletest-rc-to-be-deleted-kzkwv" in namespace "gc-5457"
  Dec 19 11:08:23.396: INFO: Deleting pod "simpletest-rc-to-be-deleted-l657r" in namespace "gc-5457"
  Dec 19 11:08:23.457: INFO: Deleting pod "simpletest-rc-to-be-deleted-l7dv4" in namespace "gc-5457"
  Dec 19 11:08:23.523: INFO: Deleting pod "simpletest-rc-to-be-deleted-l94ws" in namespace "gc-5457"
  Dec 19 11:08:23.584: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-5457" for this suite. @ 12/19/23 11:08:23.606
• [24.236 seconds]
------------------------------
S
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
test/e2e/apps/rc.go:70
  STEP: Creating a kubernetes client @ 12/19/23 11:08:23.676
  Dec 19 11:08:23.676: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename replication-controller @ 12/19/23 11:08:23.685
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:08:23.738
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:08:23.742
  STEP: Creating replication controller my-hostname-basic-53964c69-3ef5-4d81-8fbd-7fa399d52e7e @ 12/19/23 11:08:23.764
  Dec 19 11:08:23.785: INFO: Pod name my-hostname-basic-53964c69-3ef5-4d81-8fbd-7fa399d52e7e: Found 0 pods out of 1
  Dec 19 11:08:28.843: INFO: Pod name my-hostname-basic-53964c69-3ef5-4d81-8fbd-7fa399d52e7e: Found 1 pods out of 1
  Dec 19 11:08:28.844: INFO: Ensuring all pods for ReplicationController "my-hostname-basic-53964c69-3ef5-4d81-8fbd-7fa399d52e7e" are running
  Dec 19 11:08:28.865: INFO: Pod "my-hostname-basic-53964c69-3ef5-4d81-8fbd-7fa399d52e7e-l7ffh" is running and ready(conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-12-19 11:08:24 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-12-19 11:08:23 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-12-19 11:08:24 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-12-19 11:08:24 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-12-19 11:08:23 +0000 UTC Reason: Message:}])
  Dec 19 11:08:28.866: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 12/19/23 11:08:28.867
  Dec 19 11:08:29.010: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-7903" for this suite. @ 12/19/23 11:08:29.024
• [5.465 seconds]
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/garbage_collector.go:639
  STEP: Creating a kubernetes client @ 12/19/23 11:08:29.142
  Dec 19 11:08:29.142: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename gc @ 12/19/23 11:08:29.148
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:08:29.29
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:08:29.301
  STEP: create the rc @ 12/19/23 11:08:29.318
  W1219 11:08:29.344504      14 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 12/19/23 11:08:35.365
  STEP: wait for the rc to be deleted @ 12/19/23 11:08:35.668
  Dec 19 11:08:36.842: INFO: 80 pods remaining
  Dec 19 11:08:36.842: INFO: 80 pods has nil DeletionTimestamp
  Dec 19 11:08:36.842: INFO: 
  Dec 19 11:08:38.054: INFO: 76 pods remaining
  Dec 19 11:08:38.054: INFO: 69 pods has nil DeletionTimestamp
  Dec 19 11:08:38.054: INFO: 
  Dec 19 11:08:38.796: INFO: 56 pods remaining
  Dec 19 11:08:38.796: INFO: 56 pods has nil DeletionTimestamp
  Dec 19 11:08:38.796: INFO: 
  Dec 19 11:08:39.758: INFO: 42 pods remaining
  Dec 19 11:08:39.758: INFO: 42 pods has nil DeletionTimestamp
  Dec 19 11:08:39.758: INFO: 
  Dec 19 11:08:41.029: INFO: 29 pods remaining
  Dec 19 11:08:41.029: INFO: 28 pods has nil DeletionTimestamp
  Dec 19 11:08:41.029: INFO: 
  Dec 19 11:08:41.926: INFO: 16 pods remaining
  Dec 19 11:08:41.926: INFO: 14 pods has nil DeletionTimestamp
  Dec 19 11:08:41.926: INFO: 
  Dec 19 11:08:42.706: INFO: 1 pods remaining
  Dec 19 11:08:42.706: INFO: 0 pods has nil DeletionTimestamp
  Dec 19 11:08:42.706: INFO: 
  STEP: Gathering metrics @ 12/19/23 11:08:43.709
  Dec 19 11:08:44.376: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Dec 19 11:08:44.418: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-7515" for this suite. @ 12/19/23 11:08:44.462
• [15.366 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:153
  STEP: Creating a kubernetes client @ 12/19/23 11:08:44.514
  Dec 19 11:08:44.515: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/19/23 11:08:44.519
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:08:44.569
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:08:44.575
  Dec 19 11:08:44.583: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 12/19/23 11:08:46.897
  Dec 19 11:08:46.898: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=crd-publish-openapi-899 --namespace=crd-publish-openapi-899 create -f -'
  Dec 19 11:08:47.784: INFO: stderr: ""
  Dec 19 11:08:47.784: INFO: stdout: "e2e-test-crd-publish-openapi-2844-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  Dec 19 11:08:47.785: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=crd-publish-openapi-899 --namespace=crd-publish-openapi-899 delete e2e-test-crd-publish-openapi-2844-crds test-cr'
  Dec 19 11:08:48.644: INFO: stderr: ""
  Dec 19 11:08:48.644: INFO: stdout: "e2e-test-crd-publish-openapi-2844-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  Dec 19 11:08:48.644: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=crd-publish-openapi-899 --namespace=crd-publish-openapi-899 apply -f -'
  Dec 19 11:08:48.932: INFO: stderr: ""
  Dec 19 11:08:48.932: INFO: stdout: "e2e-test-crd-publish-openapi-2844-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  Dec 19 11:08:48.932: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=crd-publish-openapi-899 --namespace=crd-publish-openapi-899 delete e2e-test-crd-publish-openapi-2844-crds test-cr'
  Dec 19 11:08:49.412: INFO: stderr: ""
  Dec 19 11:08:49.412: INFO: stdout: "e2e-test-crd-publish-openapi-2844-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 12/19/23 11:08:49.412
  Dec 19 11:08:49.413: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=crd-publish-openapi-899 explain e2e-test-crd-publish-openapi-2844-crds'
  Dec 19 11:08:49.623: INFO: stderr: ""
  Dec 19 11:08:49.623: INFO: stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-2844-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  Dec 19 11:08:51.856: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-899" for this suite. @ 12/19/23 11:08:51.88
• [7.399 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
test/e2e/network/dns.go:50
  STEP: Creating a kubernetes client @ 12/19/23 11:08:51.916
  Dec 19 11:08:51.917: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename dns @ 12/19/23 11:08:51.919
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:08:51.961
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:08:51.966
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 12/19/23 11:08:51.97
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 12/19/23 11:08:51.971
  STEP: creating a pod to probe DNS @ 12/19/23 11:08:51.971
  STEP: submitting the pod to kubernetes @ 12/19/23 11:08:51.971
  STEP: retrieving the pod @ 12/19/23 11:08:54.038
  STEP: looking for the results for each expected name from probers @ 12/19/23 11:08:54.111
  Dec 19 11:08:54.317: INFO: DNS probes using dns-2517/dns-test-3b02a1a5-e6de-49b6-a8bd-57d2e8c59d23 succeeded

  STEP: deleting the pod @ 12/19/23 11:08:54.318
  Dec 19 11:08:54.527: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-2517" for this suite. @ 12/19/23 11:08:54.548
• [2.743 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/container_probe.go:71
  STEP: Creating a kubernetes client @ 12/19/23 11:08:54.661
  Dec 19 11:08:54.661: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename container-probe @ 12/19/23 11:08:54.664
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:08:54.748
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:08:54.761
  Dec 19 11:09:27.189: INFO: Container started at 2023-12-19 11:08:55 +0000 UTC, pod became ready at 2023-12-19 11:09:25 +0000 UTC
  Dec 19 11:09:27.190: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-4189" for this suite. @ 12/19/23 11:09:27.203
• [32.555 seconds]
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
test/e2e/common/network/networking.go:96
  STEP: Creating a kubernetes client @ 12/19/23 11:09:27.218
  Dec 19 11:09:27.218: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename pod-network-test @ 12/19/23 11:09:27.223
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:09:27.247
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:09:27.253
  STEP: Performing setup for networking test in namespace pod-network-test-6494 @ 12/19/23 11:09:27.26
  STEP: creating a selector @ 12/19/23 11:09:27.26
  STEP: Creating the service pods in kubernetes @ 12/19/23 11:09:27.261
  Dec 19 11:09:27.261: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 12/19/23 11:10:03.583
  Dec 19 11:10:05.640: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Dec 19 11:10:05.641: INFO: Breadth first check of 10.233.64.142 on host 192.168.121.226...
  Dec 19 11:10:05.649: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.66.57:9080/dial?request=hostname&protocol=udp&host=10.233.64.142&port=8081&tries=1'] Namespace:pod-network-test-6494 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 19 11:10:05.650: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  Dec 19 11:10:05.652: INFO: ExecWithOptions: Clientset creation
  Dec 19 11:10:05.653: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-6494/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.66.57%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.233.64.142%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Dec 19 11:10:05.858: INFO: Waiting for responses: map[]
  Dec 19 11:10:05.858: INFO: reached 10.233.64.142 after 0/1 tries
  Dec 19 11:10:05.858: INFO: Breadth first check of 10.233.65.138 on host 192.168.121.147...
  Dec 19 11:10:05.866: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.66.57:9080/dial?request=hostname&protocol=udp&host=10.233.65.138&port=8081&tries=1'] Namespace:pod-network-test-6494 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 19 11:10:05.867: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  Dec 19 11:10:05.869: INFO: ExecWithOptions: Clientset creation
  Dec 19 11:10:05.870: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-6494/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.66.57%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.233.65.138%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Dec 19 11:10:05.989: INFO: Waiting for responses: map[]
  Dec 19 11:10:05.989: INFO: reached 10.233.65.138 after 0/1 tries
  Dec 19 11:10:05.989: INFO: Breadth first check of 10.233.66.56 on host 192.168.121.250...
  Dec 19 11:10:05.997: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.66.57:9080/dial?request=hostname&protocol=udp&host=10.233.66.56&port=8081&tries=1'] Namespace:pod-network-test-6494 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 19 11:10:05.997: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  Dec 19 11:10:05.998: INFO: ExecWithOptions: Clientset creation
  Dec 19 11:10:05.999: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-6494/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.66.57%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.233.66.56%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Dec 19 11:10:06.123: INFO: Waiting for responses: map[]
  Dec 19 11:10:06.123: INFO: reached 10.233.66.56 after 0/1 tries
  Dec 19 11:10:06.124: INFO: Going to retry 0 out of 3 pods....
  Dec 19 11:10:06.124: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-6494" for this suite. @ 12/19/23 11:10:06.146
• [38.945 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:808
  STEP: Creating a kubernetes client @ 12/19/23 11:10:06.167
  Dec 19 11:10:06.167: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename resourcequota @ 12/19/23 11:10:06.17
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:10:06.194
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:10:06.202
  STEP: Creating a ResourceQuota with best effort scope @ 12/19/23 11:10:06.21
  STEP: Ensuring ResourceQuota status is calculated @ 12/19/23 11:10:06.231
  STEP: Creating a ResourceQuota with not best effort scope @ 12/19/23 11:10:08.24
  STEP: Ensuring ResourceQuota status is calculated @ 12/19/23 11:10:08.251
  STEP: Creating a best-effort pod @ 12/19/23 11:10:10.26
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 12/19/23 11:10:10.295
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 12/19/23 11:10:12.306
  STEP: Deleting the pod @ 12/19/23 11:10:14.314
  STEP: Ensuring resource quota status released the pod usage @ 12/19/23 11:10:14.337
  STEP: Creating a not best-effort pod @ 12/19/23 11:10:16.355
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 12/19/23 11:10:16.374
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 12/19/23 11:10:18.388
  STEP: Deleting the pod @ 12/19/23 11:10:20.397
  STEP: Ensuring resource quota status released the pod usage @ 12/19/23 11:10:20.435
  Dec 19 11:10:22.447: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4957" for this suite. @ 12/19/23 11:10:22.458
• [16.307 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1798
  STEP: Creating a kubernetes client @ 12/19/23 11:10:22.477
  Dec 19 11:10:22.477: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename kubectl @ 12/19/23 11:10:22.483
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:10:22.517
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:10:22.523
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 12/19/23 11:10:22.529
  Dec 19 11:10:22.530: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=kubectl-4216 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  Dec 19 11:10:22.714: INFO: stderr: ""
  Dec 19 11:10:22.716: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 12/19/23 11:10:22.717
  STEP: verifying the pod e2e-test-httpd-pod was created @ 12/19/23 11:10:27.77
  Dec 19 11:10:27.771: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=kubectl-4216 get pod e2e-test-httpd-pod -o json'
  Dec 19 11:10:28.056: INFO: stderr: ""
  Dec 19 11:10:28.056: INFO: stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2023-12-19T11:10:22Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-4216\",\n        \"resourceVersion\": \"29114\",\n        \"uid\": \"4e9001fb-c24f-4c13-b340-597c886b760e\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-z9mc2\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"dah7vaemeeho-3\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-z9mc2\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-12-19T11:10:24Z\",\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-12-19T11:10:22Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-12-19T11:10:24Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-12-19T11:10:24Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-12-19T11:10:22Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"cri-o://2bda5d0093b530d145b937dd6e52e60ceca4c1d0e51da7f2657502dc0b5ed18a\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"987dae5a853a43c663ab2f902708e65874bd2c0189aa0bc57d81ffb57187d089\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2023-12-19T11:10:23Z\"\n                    }\n                }\n            }\n        ],\n        \"hostIP\": \"192.168.121.250\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"192.168.121.250\"\n            }\n        ],\n        \"phase\": \"Running\",\n        \"podIP\": \"10.233.66.58\",\n        \"podIPs\": [\n            {\n                \"ip\": \"10.233.66.58\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2023-12-19T11:10:22Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 12/19/23 11:10:28.056
  Dec 19 11:10:28.057: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=kubectl-4216 replace -f -'
  Dec 19 11:10:28.375: INFO: stderr: ""
  Dec 19 11:10:28.375: INFO: stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.36.1-1 @ 12/19/23 11:10:28.375
  Dec 19 11:10:28.392: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=kubectl-4216 delete pods e2e-test-httpd-pod'
  Dec 19 11:10:30.396: INFO: stderr: ""
  Dec 19 11:10:30.397: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Dec 19 11:10:30.397: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4216" for this suite. @ 12/19/23 11:10:30.409
• [7.947 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 12/19/23 11:10:30.424
  Dec 19 11:10:30.424: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename deployment @ 12/19/23 11:10:30.428
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:10:30.462
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:10:30.466
  STEP: creating a Deployment @ 12/19/23 11:10:30.483
  STEP: waiting for Deployment to be created @ 12/19/23 11:10:30.498
  STEP: waiting for all Replicas to be Ready @ 12/19/23 11:10:30.506
  Dec 19 11:10:30.510: INFO: observed Deployment test-deployment in namespace deployment-9871 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Dec 19 11:10:30.510: INFO: observed Deployment test-deployment in namespace deployment-9871 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Dec 19 11:10:30.530: INFO: observed Deployment test-deployment in namespace deployment-9871 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Dec 19 11:10:30.530: INFO: observed Deployment test-deployment in namespace deployment-9871 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Dec 19 11:10:30.603: INFO: observed Deployment test-deployment in namespace deployment-9871 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Dec 19 11:10:30.603: INFO: observed Deployment test-deployment in namespace deployment-9871 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Dec 19 11:10:30.622: INFO: observed Deployment test-deployment in namespace deployment-9871 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Dec 19 11:10:30.623: INFO: observed Deployment test-deployment in namespace deployment-9871 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Dec 19 11:10:31.300: INFO: observed Deployment test-deployment in namespace deployment-9871 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  Dec 19 11:10:31.300: INFO: observed Deployment test-deployment in namespace deployment-9871 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  Dec 19 11:10:32.281: INFO: observed Deployment test-deployment in namespace deployment-9871 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 12/19/23 11:10:32.281
  Dec 19 11:10:32.300: INFO: observed event type ADDED
  STEP: waiting for Replicas to scale @ 12/19/23 11:10:32.3
  Dec 19 11:10:32.305: INFO: observed Deployment test-deployment in namespace deployment-9871 with ReadyReplicas 0
  Dec 19 11:10:32.305: INFO: observed Deployment test-deployment in namespace deployment-9871 with ReadyReplicas 0
  Dec 19 11:10:32.306: INFO: observed Deployment test-deployment in namespace deployment-9871 with ReadyReplicas 0
  Dec 19 11:10:32.306: INFO: observed Deployment test-deployment in namespace deployment-9871 with ReadyReplicas 0
  Dec 19 11:10:32.307: INFO: observed Deployment test-deployment in namespace deployment-9871 with ReadyReplicas 0
  Dec 19 11:10:32.309: INFO: observed Deployment test-deployment in namespace deployment-9871 with ReadyReplicas 0
  Dec 19 11:10:32.310: INFO: observed Deployment test-deployment in namespace deployment-9871 with ReadyReplicas 0
  Dec 19 11:10:32.311: INFO: observed Deployment test-deployment in namespace deployment-9871 with ReadyReplicas 0
  Dec 19 11:10:32.311: INFO: observed Deployment test-deployment in namespace deployment-9871 with ReadyReplicas 1
  Dec 19 11:10:32.312: INFO: observed Deployment test-deployment in namespace deployment-9871 with ReadyReplicas 1
  Dec 19 11:10:32.313: INFO: observed Deployment test-deployment in namespace deployment-9871 with ReadyReplicas 2
  Dec 19 11:10:32.313: INFO: observed Deployment test-deployment in namespace deployment-9871 with ReadyReplicas 2
  Dec 19 11:10:32.313: INFO: observed Deployment test-deployment in namespace deployment-9871 with ReadyReplicas 2
  Dec 19 11:10:32.313: INFO: observed Deployment test-deployment in namespace deployment-9871 with ReadyReplicas 2
  Dec 19 11:10:32.319: INFO: observed Deployment test-deployment in namespace deployment-9871 with ReadyReplicas 2
  Dec 19 11:10:32.319: INFO: observed Deployment test-deployment in namespace deployment-9871 with ReadyReplicas 2
  Dec 19 11:10:32.369: INFO: observed Deployment test-deployment in namespace deployment-9871 with ReadyReplicas 2
  Dec 19 11:10:32.370: INFO: observed Deployment test-deployment in namespace deployment-9871 with ReadyReplicas 2
  Dec 19 11:10:32.416: INFO: observed Deployment test-deployment in namespace deployment-9871 with ReadyReplicas 1
  Dec 19 11:10:32.416: INFO: observed Deployment test-deployment in namespace deployment-9871 with ReadyReplicas 1
  Dec 19 11:10:32.440: INFO: observed Deployment test-deployment in namespace deployment-9871 with ReadyReplicas 1
  Dec 19 11:10:32.441: INFO: observed Deployment test-deployment in namespace deployment-9871 with ReadyReplicas 1
  Dec 19 11:10:33.316: INFO: observed Deployment test-deployment in namespace deployment-9871 with ReadyReplicas 2
  Dec 19 11:10:33.316: INFO: observed Deployment test-deployment in namespace deployment-9871 with ReadyReplicas 2
  Dec 19 11:10:33.367: INFO: observed Deployment test-deployment in namespace deployment-9871 with ReadyReplicas 1
  STEP: listing Deployments @ 12/19/23 11:10:33.367
  Dec 19 11:10:33.373: INFO: Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 12/19/23 11:10:33.373
  Dec 19 11:10:33.407: INFO: observed Deployment test-deployment in namespace deployment-9871 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 12/19/23 11:10:33.408
  Dec 19 11:10:33.429: INFO: observed Deployment test-deployment in namespace deployment-9871 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Dec 19 11:10:33.430: INFO: observed Deployment test-deployment in namespace deployment-9871 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Dec 19 11:10:33.526: INFO: observed Deployment test-deployment in namespace deployment-9871 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Dec 19 11:10:33.556: INFO: observed Deployment test-deployment in namespace deployment-9871 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Dec 19 11:10:34.343: INFO: observed Deployment test-deployment in namespace deployment-9871 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Dec 19 11:10:34.446: INFO: observed Deployment test-deployment in namespace deployment-9871 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  Dec 19 11:10:34.560: INFO: observed Deployment test-deployment in namespace deployment-9871 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  Dec 19 11:10:34.589: INFO: observed Deployment test-deployment in namespace deployment-9871 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Dec 19 11:10:35.800: INFO: observed Deployment test-deployment in namespace deployment-9871 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 12/19/23 11:10:35.885
  STEP: fetching the DeploymentStatus @ 12/19/23 11:10:35.915
  Dec 19 11:10:35.943: INFO: observed Deployment test-deployment in namespace deployment-9871 with ReadyReplicas 1
  Dec 19 11:10:35.944: INFO: observed Deployment test-deployment in namespace deployment-9871 with ReadyReplicas 1
  Dec 19 11:10:35.944: INFO: observed Deployment test-deployment in namespace deployment-9871 with ReadyReplicas 1
  Dec 19 11:10:35.944: INFO: observed Deployment test-deployment in namespace deployment-9871 with ReadyReplicas 1
  Dec 19 11:10:35.945: INFO: observed Deployment test-deployment in namespace deployment-9871 with ReadyReplicas 2
  Dec 19 11:10:35.946: INFO: observed Deployment test-deployment in namespace deployment-9871 with ReadyReplicas 3
  Dec 19 11:10:35.946: INFO: observed Deployment test-deployment in namespace deployment-9871 with ReadyReplicas 3
  Dec 19 11:10:35.946: INFO: observed Deployment test-deployment in namespace deployment-9871 with ReadyReplicas 2
  Dec 19 11:10:35.947: INFO: observed Deployment test-deployment in namespace deployment-9871 with ReadyReplicas 3
  STEP: deleting the Deployment @ 12/19/23 11:10:35.948
  Dec 19 11:10:35.985: INFO: observed event type MODIFIED
  Dec 19 11:10:35.986: INFO: observed event type MODIFIED
  Dec 19 11:10:35.986: INFO: observed event type MODIFIED
  Dec 19 11:10:35.987: INFO: observed event type MODIFIED
  Dec 19 11:10:35.988: INFO: observed event type MODIFIED
  Dec 19 11:10:35.988: INFO: observed event type MODIFIED
  Dec 19 11:10:35.989: INFO: observed event type MODIFIED
  Dec 19 11:10:35.989: INFO: observed event type MODIFIED
  Dec 19 11:10:35.990: INFO: observed event type MODIFIED
  Dec 19 11:10:35.990: INFO: observed event type MODIFIED
  Dec 19 11:10:35.991: INFO: observed event type MODIFIED
  Dec 19 11:10:35.991: INFO: observed event type MODIFIED
  Dec 19 11:10:36.000: INFO: Log out all the ReplicaSets if there is no deployment created
  Dec 19 11:10:36.016: INFO: ReplicaSet "test-deployment-64fd565c98":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-64fd565c98",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9871",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fd76435b-3d5c-417e-bf6a-c84cd2270d8e",
      ResourceVersion: (string) (len=5) "29306",
      Generation: (int64) 4,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838581032,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "b6291ce5-9645-4e56-a039-31ee5d82fe86",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838581035,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 62 36 32 39  31 63 65 35 2d 39 36 34  |":\"b6291ce5-964|
              00000130  35 2d 34 65 35 36 2d 61  30 33 39 2d 33 31 65 65  |5-4e56-a039-31ee|
              00000140  35 64 38 32 66 65 38 36  5c 22 7d 22 3a 7b 7d 7d  |5d82fe86\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838581035,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=25) "registry.k8s.io/pause:3.9",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(2),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 4,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Dec 19 11:10:36.063: INFO: pod: "test-deployment-64fd565c98-dm2dw":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-64fd565c98-dm2dw",
      GenerateName: (string) (len=27) "test-deployment-64fd565c98-",
      Namespace: (string) (len=15) "deployment-9871",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1d86b5ed-7a79-4182-b826-c90c68cea8ea",
      ResourceVersion: (string) (len=5) "29302",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838581033,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838581037,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=22) "test-deployment-static": (string) (len=4) "true",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-64fd565c98",
          UID: (types.UID) (len=36) "fd76435b-3d5c-417e-bf6a-c84cd2270d8e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838581033,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  66 64 37 36 34 33 35 62  |uid\":\"fd76435b|
              000000a0  2d 33 64 35 63 2d 34 31  37 65 2d 62 66 36 61 2d  |-3d5c-417e-bf6a-|
              000000b0  63 38 34 63 64 32 32 37  30 64 38 65 5c 22 7d 22  |c84cd2270d8e\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838581034,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 35 2e  31 34 30 5c 22 7d 22 3a  |.233.65.140\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jfvwh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jfvwh",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "dah7vaemeeho-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838581034,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838581033,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838581034,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838581034,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838581033,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.147",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.147"
        }
      },
      PodIP: (string) (len=13) "10.233.65.140",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.65.140"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838581033,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63838581034,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          ImageID: (string) (len=64) "e6f1816883972d4be47bd48879a08919b96afcd344132622e4d444987919323c",
          ContainerID: (string) (len=72) "cri-o://d3c5bb2184703edea1f90d1af01600539666331c6115ed4ce1751bbe5e3bdd9a",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Dec 19 11:10:36.070: INFO: ReplicaSet "test-deployment-69d58987ff":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-69d58987ff",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9871",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "55dbea7f-2f27-40d1-b02d-ed012d596c13",
      ResourceVersion: (string) (len=5) "29217",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838581030,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "69d58987ff",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "b6291ce5-9645-4e56-a039-31ee5d82fe86",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838581033,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 62 36 32 39  31 63 65 35 2d 39 36 34  |":\"b6291ce5-964|
              00000130  35 2d 34 65 35 36 2d 61  30 33 39 2d 33 31 65 65  |5-4e56-a039-31ee|
              00000140  35 64 38 32 66 65 38 36  5c 22 7d 22 3a 7b 7d 7d  |5d82fe86\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838581033,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "69d58987ff",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "69d58987ff",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Dec 19 11:10:36.092: INFO: ReplicaSet "test-deployment-79ff746c4":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=25) "test-deployment-79ff746c4",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9871",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "63ed2825-275b-4d2a-9447-89826f967976",
      ResourceVersion: (string) (len=5) "29298",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838581033,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "b6291ce5-9645-4e56-a039-31ee5d82fe86",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838581034,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 62 36 32 39  31 63 65 35 2d 39 36 34  |":\"b6291ce5-964|
              00000130  35 2d 34 65 35 36 2d 61  30 33 39 2d 33 31 65 65  |5-4e56-a039-31ee|
              00000140  35 64 38 32 66 65 38 36  5c 22 7d 22 3a 7b 7d 7d  |5d82fe86\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838581035,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 2,
      AvailableReplicas: (int32) 2,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Dec 19 11:10:36.119: INFO: pod: "test-deployment-79ff746c4-5t5d6":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-79ff746c4-5t5d6",
      GenerateName: (string) (len=26) "test-deployment-79ff746c4-",
      Namespace: (string) (len=15) "deployment-9871",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7ddb5de7-de3c-4ae9-bbea-36fe73d42371",
      ResourceVersion: (string) (len=5) "29257",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838581033,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-79ff746c4",
          UID: (types.UID) (len=36) "63ed2825-275b-4d2a-9447-89826f967976",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838581033,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  36 33 65 64 32 38 32 35  |uid\":\"63ed2825|
              000000a0  2d 32 37 35 62 2d 34 64  32 61 2d 39 34 34 37 2d  |-275b-4d2a-9447-|
              000000b0  38 39 38 32 36 66 39 36  37 39 37 36 5c 22 7d 22  |89826f967976\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838581034,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 36 2e  36 31 5c 22 7d 22 3a 7b  |.233.66.61\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qskwb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qskwb",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "dah7vaemeeho-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838581034,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838581033,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838581034,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838581034,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838581033,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.250",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.250"
        }
      },
      PodIP: (string) (len=12) "10.233.66.61",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.66.61"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838581033,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63838581034,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=64) "987dae5a853a43c663ab2f902708e65874bd2c0189aa0bc57d81ffb57187d089",
          ContainerID: (string) (len=72) "cri-o://97df745f68856b458a8513ce97e67ec36ec975b17ad6161eec7786d259aa07c7",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Dec 19 11:10:36.125: INFO: pod: "test-deployment-79ff746c4-b5wt5":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-79ff746c4-b5wt5",
      GenerateName: (string) (len=26) "test-deployment-79ff746c4-",
      Namespace: (string) (len=15) "deployment-9871",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f79c8b29-6878-4bfe-8ab9-1ee48ade1909",
      ResourceVersion: (string) (len=5) "29297",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838581034,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-79ff746c4",
          UID: (types.UID) (len=36) "63ed2825-275b-4d2a-9447-89826f967976",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838581034,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  36 33 65 64 32 38 32 35  |uid\":\"63ed2825|
              000000a0  2d 32 37 35 62 2d 34 64  32 61 2d 39 34 34 37 2d  |-275b-4d2a-9447-|
              000000b0  38 39 38 32 36 66 39 36  37 39 37 36 5c 22 7d 22  |89826f967976\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838581035,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 34 2e  31 34 33 5c 22 7d 22 3a  |.233.64.143\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6zf24",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6zf24",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "dah7vaemeeho-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838581035,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838581034,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838581035,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838581035,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838581034,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.226",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.226"
        }
      },
      PodIP: (string) (len=13) "10.233.64.143",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.64.143"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838581034,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63838581035,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=64) "987dae5a853a43c663ab2f902708e65874bd2c0189aa0bc57d81ffb57187d089",
          ContainerID: (string) (len=72) "cri-o://44abc8201986488ddb5f540a530362ae83a4349c4209c7b6722d7da8f109208d",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Dec 19 11:10:36.133: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9871" for this suite. @ 12/19/23 11:10:36.165
• [5.765 seconds]
------------------------------
SS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/kubelet.go:109
  STEP: Creating a kubernetes client @ 12/19/23 11:10:36.19
  Dec 19 11:10:36.190: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename kubelet-test @ 12/19/23 11:10:36.195
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:10:36.235
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:10:36.241
  Dec 19 11:10:40.324: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-1724" for this suite. @ 12/19/23 11:10:40.338
• [4.163 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 12/19/23 11:10:40.355
  Dec 19 11:10:40.355: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename projected @ 12/19/23 11:10:40.36
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:10:40.433
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:10:40.438
  STEP: Creating projection with secret that has name projected-secret-test-4f6d6671-bbbc-4190-804c-69594ade86eb @ 12/19/23 11:10:40.447
  STEP: Creating a pod to test consume secrets @ 12/19/23 11:10:40.469
  STEP: Saw pod success @ 12/19/23 11:10:44.532
  Dec 19 11:10:44.539: INFO: Trying to get logs from node dah7vaemeeho-3 pod pod-projected-secrets-74fe8723-f001-4757-9f5e-9dbbf22e67b4 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 12/19/23 11:10:44.595
  Dec 19 11:10:44.630: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3947" for this suite. @ 12/19/23 11:10:44.646
• [4.303 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_configmap.go:48
  STEP: Creating a kubernetes client @ 12/19/23 11:10:44.662
  Dec 19 11:10:44.662: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename projected @ 12/19/23 11:10:44.668
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:10:44.702
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:10:44.71
  STEP: Creating configMap with name projected-configmap-test-volume-15abf4b9-d1fc-4e30-92b4-0a0c3054d4a4 @ 12/19/23 11:10:44.72
  STEP: Creating a pod to test consume configMaps @ 12/19/23 11:10:44.73
  STEP: Saw pod success @ 12/19/23 11:10:48.791
  Dec 19 11:10:48.796: INFO: Trying to get logs from node dah7vaemeeho-3 pod pod-projected-configmaps-5d99e06c-bf9f-43f6-8148-81a29d742383 container agnhost-container: <nil>
  STEP: delete the pod @ 12/19/23 11:10:48.825
  Dec 19 11:10:48.867: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-824" for this suite. @ 12/19/23 11:10:48.878
• [4.231 seconds]
------------------------------
S
------------------------------
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:846
  STEP: Creating a kubernetes client @ 12/19/23 11:10:48.904
  Dec 19 11:10:48.904: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename services @ 12/19/23 11:10:48.913
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:10:48.95
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:10:48.959
  STEP: creating service multi-endpoint-test in namespace services-1908 @ 12/19/23 11:10:48.967
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-1908 to expose endpoints map[] @ 12/19/23 11:10:48.987
  Dec 19 11:10:49.019: INFO: successfully validated that service multi-endpoint-test in namespace services-1908 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-1908 @ 12/19/23 11:10:49.019
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-1908 to expose endpoints map[pod1:[100]] @ 12/19/23 11:10:51.062
  Dec 19 11:10:51.080: INFO: successfully validated that service multi-endpoint-test in namespace services-1908 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-1908 @ 12/19/23 11:10:51.08
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-1908 to expose endpoints map[pod1:[100] pod2:[101]] @ 12/19/23 11:10:53.13
  Dec 19 11:10:53.168: INFO: successfully validated that service multi-endpoint-test in namespace services-1908 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 12/19/23 11:10:53.168
  Dec 19 11:10:53.168: INFO: Creating new exec pod
  Dec 19 11:10:56.198: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=services-1908 exec execpodv7w6s -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  Dec 19 11:10:56.578: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
  Dec 19 11:10:56.578: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Dec 19 11:10:56.578: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=services-1908 exec execpodv7w6s -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.2.194 80'
  Dec 19 11:10:56.875: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.2.194 80\nConnection to 10.233.2.194 80 port [tcp/http] succeeded!\n"
  Dec 19 11:10:56.875: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Dec 19 11:10:56.875: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=services-1908 exec execpodv7w6s -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  Dec 19 11:10:57.169: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
  Dec 19 11:10:57.169: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Dec 19 11:10:57.170: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=services-1908 exec execpodv7w6s -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.2.194 81'
  Dec 19 11:10:57.447: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.2.194 81\nConnection to 10.233.2.194 81 port [tcp/*] succeeded!\n"
  Dec 19 11:10:57.447: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-1908 @ 12/19/23 11:10:57.447
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-1908 to expose endpoints map[pod2:[101]] @ 12/19/23 11:10:57.519
  Dec 19 11:10:58.580: INFO: successfully validated that service multi-endpoint-test in namespace services-1908 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-1908 @ 12/19/23 11:10:58.58
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-1908 to expose endpoints map[] @ 12/19/23 11:10:58.627
  Dec 19 11:10:59.670: INFO: successfully validated that service multi-endpoint-test in namespace services-1908 exposes endpoints map[]
  Dec 19 11:10:59.703: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1908" for this suite. @ 12/19/23 11:10:59.714
• [10.824 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:132
  STEP: Creating a kubernetes client @ 12/19/23 11:10:59.727
  Dec 19 11:10:59.727: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename downward-api @ 12/19/23 11:10:59.73
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:10:59.755
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:10:59.762
  STEP: Creating the pod @ 12/19/23 11:10:59.784
  Dec 19 11:11:02.366: INFO: Successfully updated pod "labelsupdatee3abf0f6-d9d7-4e16-a740-cab1c40ce253"
  Dec 19 11:11:04.403: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-463" for this suite. @ 12/19/23 11:11:04.41
• [4.694 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:357
  STEP: Creating a kubernetes client @ 12/19/23 11:11:04.426
  Dec 19 11:11:04.426: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename kubectl @ 12/19/23 11:11:04.429
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:11:04.45
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:11:04.454
  STEP: creating a replication controller @ 12/19/23 11:11:04.46
  Dec 19 11:11:04.460: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=kubectl-7890 create -f -'
  Dec 19 11:11:04.811: INFO: stderr: ""
  Dec 19 11:11:04.811: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 12/19/23 11:11:04.811
  Dec 19 11:11:04.811: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=kubectl-7890 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Dec 19 11:11:05.045: INFO: stderr: ""
  Dec 19 11:11:05.045: INFO: stdout: "update-demo-nautilus-99xjz update-demo-nautilus-s99xn "
  Dec 19 11:11:05.045: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=kubectl-7890 get pods update-demo-nautilus-99xjz -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Dec 19 11:11:05.271: INFO: stderr: ""
  Dec 19 11:11:05.271: INFO: stdout: ""
  Dec 19 11:11:05.271: INFO: update-demo-nautilus-99xjz is created but not running
  Dec 19 11:11:10.273: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=kubectl-7890 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Dec 19 11:11:10.422: INFO: stderr: ""
  Dec 19 11:11:10.422: INFO: stdout: "update-demo-nautilus-99xjz update-demo-nautilus-s99xn "
  Dec 19 11:11:10.422: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=kubectl-7890 get pods update-demo-nautilus-99xjz -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Dec 19 11:11:10.585: INFO: stderr: ""
  Dec 19 11:11:10.586: INFO: stdout: "true"
  Dec 19 11:11:10.586: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=kubectl-7890 get pods update-demo-nautilus-99xjz -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Dec 19 11:11:10.763: INFO: stderr: ""
  Dec 19 11:11:10.763: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Dec 19 11:11:10.763: INFO: validating pod update-demo-nautilus-99xjz
  Dec 19 11:11:10.779: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Dec 19 11:11:10.779: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Dec 19 11:11:10.779: INFO: update-demo-nautilus-99xjz is verified up and running
  Dec 19 11:11:10.780: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=kubectl-7890 get pods update-demo-nautilus-s99xn -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Dec 19 11:11:10.927: INFO: stderr: ""
  Dec 19 11:11:10.928: INFO: stdout: "true"
  Dec 19 11:11:10.928: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=kubectl-7890 get pods update-demo-nautilus-s99xn -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Dec 19 11:11:11.108: INFO: stderr: ""
  Dec 19 11:11:11.108: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Dec 19 11:11:11.108: INFO: validating pod update-demo-nautilus-s99xn
  Dec 19 11:11:11.132: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Dec 19 11:11:11.132: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Dec 19 11:11:11.132: INFO: update-demo-nautilus-s99xn is verified up and running
  STEP: scaling down the replication controller @ 12/19/23 11:11:11.132
  Dec 19 11:11:11.154: INFO: scanned /root for discovery docs: <nil>
  Dec 19 11:11:11.154: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=kubectl-7890 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  Dec 19 11:11:12.404: INFO: stderr: ""
  Dec 19 11:11:12.404: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 12/19/23 11:11:12.404
  Dec 19 11:11:12.404: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=kubectl-7890 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Dec 19 11:11:12.590: INFO: stderr: ""
  Dec 19 11:11:12.590: INFO: stdout: "update-demo-nautilus-99xjz update-demo-nautilus-s99xn "
  STEP: Replicas for name=update-demo: expected=1 actual=2 @ 12/19/23 11:11:12.59
  Dec 19 11:11:17.590: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=kubectl-7890 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Dec 19 11:11:17.768: INFO: stderr: ""
  Dec 19 11:11:17.769: INFO: stdout: "update-demo-nautilus-s99xn "
  Dec 19 11:11:17.770: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=kubectl-7890 get pods update-demo-nautilus-s99xn -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Dec 19 11:11:17.915: INFO: stderr: ""
  Dec 19 11:11:17.915: INFO: stdout: "true"
  Dec 19 11:11:17.915: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=kubectl-7890 get pods update-demo-nautilus-s99xn -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Dec 19 11:11:18.054: INFO: stderr: ""
  Dec 19 11:11:18.054: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Dec 19 11:11:18.054: INFO: validating pod update-demo-nautilus-s99xn
  Dec 19 11:11:18.065: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Dec 19 11:11:18.065: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Dec 19 11:11:18.065: INFO: update-demo-nautilus-s99xn is verified up and running
  STEP: scaling up the replication controller @ 12/19/23 11:11:18.065
  Dec 19 11:11:18.078: INFO: scanned /root for discovery docs: <nil>
  Dec 19 11:11:18.078: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=kubectl-7890 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  Dec 19 11:11:19.360: INFO: stderr: ""
  Dec 19 11:11:19.361: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 12/19/23 11:11:19.361
  Dec 19 11:11:19.361: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=kubectl-7890 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Dec 19 11:11:19.537: INFO: stderr: ""
  Dec 19 11:11:19.537: INFO: stdout: "update-demo-nautilus-d5wrn update-demo-nautilus-s99xn "
  Dec 19 11:11:19.537: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=kubectl-7890 get pods update-demo-nautilus-d5wrn -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Dec 19 11:11:19.701: INFO: stderr: ""
  Dec 19 11:11:19.701: INFO: stdout: ""
  Dec 19 11:11:19.701: INFO: update-demo-nautilus-d5wrn is created but not running
  Dec 19 11:11:24.706: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=kubectl-7890 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Dec 19 11:11:24.881: INFO: stderr: ""
  Dec 19 11:11:24.881: INFO: stdout: "update-demo-nautilus-d5wrn update-demo-nautilus-s99xn "
  Dec 19 11:11:24.881: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=kubectl-7890 get pods update-demo-nautilus-d5wrn -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Dec 19 11:11:25.028: INFO: stderr: ""
  Dec 19 11:11:25.028: INFO: stdout: "true"
  Dec 19 11:11:25.029: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=kubectl-7890 get pods update-demo-nautilus-d5wrn -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Dec 19 11:11:25.220: INFO: stderr: ""
  Dec 19 11:11:25.220: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Dec 19 11:11:25.220: INFO: validating pod update-demo-nautilus-d5wrn
  Dec 19 11:11:25.239: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Dec 19 11:11:25.240: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Dec 19 11:11:25.240: INFO: update-demo-nautilus-d5wrn is verified up and running
  Dec 19 11:11:25.240: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=kubectl-7890 get pods update-demo-nautilus-s99xn -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Dec 19 11:11:25.379: INFO: stderr: ""
  Dec 19 11:11:25.380: INFO: stdout: "true"
  Dec 19 11:11:25.380: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=kubectl-7890 get pods update-demo-nautilus-s99xn -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Dec 19 11:11:25.525: INFO: stderr: ""
  Dec 19 11:11:25.525: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Dec 19 11:11:25.525: INFO: validating pod update-demo-nautilus-s99xn
  Dec 19 11:11:25.532: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Dec 19 11:11:25.532: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Dec 19 11:11:25.533: INFO: update-demo-nautilus-s99xn is verified up and running
  STEP: using delete to clean up resources @ 12/19/23 11:11:25.533
  Dec 19 11:11:25.534: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=kubectl-7890 delete --grace-period=0 --force -f -'
  Dec 19 11:11:25.706: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Dec 19 11:11:25.706: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  Dec 19 11:11:25.707: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=kubectl-7890 get rc,svc -l name=update-demo --no-headers'
  Dec 19 11:11:25.924: INFO: stderr: "No resources found in kubectl-7890 namespace.\n"
  Dec 19 11:11:25.924: INFO: stdout: ""
  Dec 19 11:11:25.925: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=kubectl-7890 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Dec 19 11:11:26.176: INFO: stderr: ""
  Dec 19 11:11:26.176: INFO: stdout: ""
  Dec 19 11:11:26.178: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7890" for this suite. @ 12/19/23 11:11:26.192
• [21.778 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance] [sig-node, Slow, Conformance]
test/e2e/common/node/expansion.go:155
  STEP: Creating a kubernetes client @ 12/19/23 11:11:26.221
  Dec 19 11:11:26.222: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename var-expansion @ 12/19/23 11:11:26.228
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:11:26.273
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:11:26.279
  Dec 19 11:11:28.358: INFO: Deleting pod "var-expansion-f0d173a1-efd8-4d70-8ecd-d5905c4bbfae" in namespace "var-expansion-6429"
  Dec 19 11:11:28.371: INFO: Wait up to 5m0s for pod "var-expansion-f0d173a1-efd8-4d70-8ecd-d5905c4bbfae" to be fully deleted
  Dec 19 11:11:30.391: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-6429" for this suite. @ 12/19/23 11:11:30.404
• [4.201 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:220
  STEP: Creating a kubernetes client @ 12/19/23 11:11:30.424
  Dec 19 11:11:30.424: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename emptydir @ 12/19/23 11:11:30.428
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:11:30.46
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:11:30.468
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 12/19/23 11:11:30.478
  STEP: Saw pod success @ 12/19/23 11:11:34.519
  Dec 19 11:11:34.526: INFO: Trying to get logs from node dah7vaemeeho-3 pod pod-05ec2fc1-43bf-4242-946d-36d50822c5d6 container test-container: <nil>
  STEP: delete the pod @ 12/19/23 11:11:34.537
  Dec 19 11:11:34.566: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2710" for this suite. @ 12/19/23 11:11:34.578
• [4.170 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
test/e2e/apps/deployment.go:489
  STEP: Creating a kubernetes client @ 12/19/23 11:11:34.594
  Dec 19 11:11:34.594: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename deployment @ 12/19/23 11:11:34.598
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:11:34.631
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:11:34.636
  STEP: creating a Deployment @ 12/19/23 11:11:34.657
  Dec 19 11:11:34.657: INFO: Creating simple deployment test-deployment-ns76k
  Dec 19 11:11:34.681: INFO: new replicaset for deployment "test-deployment-ns76k" is yet to be created
  STEP: Getting /status @ 12/19/23 11:11:36.712
  Dec 19 11:11:36.720: INFO: Deployment test-deployment-ns76k has Conditions: [{Available True 2023-12-19 11:11:35 +0000 UTC 2023-12-19 11:11:35 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2023-12-19 11:11:35 +0000 UTC 2023-12-19 11:11:34 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-ns76k-5d576bd769" has successfully progressed.}]
  STEP: updating Deployment Status @ 12/19/23 11:11:36.72
  Dec 19 11:11:36.742: INFO: updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.December, 19, 11, 11, 35, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 11, 11, 35, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 19, 11, 11, 35, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 11, 11, 34, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-ns76k-5d576bd769\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 12/19/23 11:11:36.742
  Dec 19 11:11:36.749: INFO: Observed &Deployment event: ADDED
  Dec 19 11:11:36.749: INFO: Observed Deployment test-deployment-ns76k in namespace deployment-3947 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-12-19 11:11:34 +0000 UTC 2023-12-19 11:11:34 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-ns76k-5d576bd769"}
  Dec 19 11:11:36.750: INFO: Observed &Deployment event: MODIFIED
  Dec 19 11:11:36.751: INFO: Observed Deployment test-deployment-ns76k in namespace deployment-3947 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-12-19 11:11:34 +0000 UTC 2023-12-19 11:11:34 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-ns76k-5d576bd769"}
  Dec 19 11:11:36.752: INFO: Observed Deployment test-deployment-ns76k in namespace deployment-3947 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-12-19 11:11:34 +0000 UTC 2023-12-19 11:11:34 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Dec 19 11:11:36.752: INFO: Observed &Deployment event: MODIFIED
  Dec 19 11:11:36.752: INFO: Observed Deployment test-deployment-ns76k in namespace deployment-3947 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-12-19 11:11:34 +0000 UTC 2023-12-19 11:11:34 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Dec 19 11:11:36.753: INFO: Observed Deployment test-deployment-ns76k in namespace deployment-3947 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-12-19 11:11:34 +0000 UTC 2023-12-19 11:11:34 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-ns76k-5d576bd769" is progressing.}
  Dec 19 11:11:36.754: INFO: Observed &Deployment event: MODIFIED
  Dec 19 11:11:36.754: INFO: Observed Deployment test-deployment-ns76k in namespace deployment-3947 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-12-19 11:11:35 +0000 UTC 2023-12-19 11:11:35 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Dec 19 11:11:36.754: INFO: Observed Deployment test-deployment-ns76k in namespace deployment-3947 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-12-19 11:11:35 +0000 UTC 2023-12-19 11:11:34 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-ns76k-5d576bd769" has successfully progressed.}
  Dec 19 11:11:36.755: INFO: Observed &Deployment event: MODIFIED
  Dec 19 11:11:36.756: INFO: Observed Deployment test-deployment-ns76k in namespace deployment-3947 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-12-19 11:11:35 +0000 UTC 2023-12-19 11:11:35 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Dec 19 11:11:36.756: INFO: Observed Deployment test-deployment-ns76k in namespace deployment-3947 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-12-19 11:11:35 +0000 UTC 2023-12-19 11:11:34 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-ns76k-5d576bd769" has successfully progressed.}
  Dec 19 11:11:36.756: INFO: Found Deployment test-deployment-ns76k in namespace deployment-3947 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Dec 19 11:11:36.757: INFO: Deployment test-deployment-ns76k has an updated status
  STEP: patching the Statefulset Status @ 12/19/23 11:11:36.758
  Dec 19 11:11:36.758: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Dec 19 11:11:36.773: INFO: Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 12/19/23 11:11:36.773
  Dec 19 11:11:36.777: INFO: Observed &Deployment event: ADDED
  Dec 19 11:11:36.777: INFO: Observed deployment test-deployment-ns76k in namespace deployment-3947 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-12-19 11:11:34 +0000 UTC 2023-12-19 11:11:34 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-ns76k-5d576bd769"}
  Dec 19 11:11:36.777: INFO: Observed &Deployment event: MODIFIED
  Dec 19 11:11:36.778: INFO: Observed deployment test-deployment-ns76k in namespace deployment-3947 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-12-19 11:11:34 +0000 UTC 2023-12-19 11:11:34 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-ns76k-5d576bd769"}
  Dec 19 11:11:36.778: INFO: Observed deployment test-deployment-ns76k in namespace deployment-3947 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-12-19 11:11:34 +0000 UTC 2023-12-19 11:11:34 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Dec 19 11:11:36.779: INFO: Observed &Deployment event: MODIFIED
  Dec 19 11:11:36.779: INFO: Observed deployment test-deployment-ns76k in namespace deployment-3947 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-12-19 11:11:34 +0000 UTC 2023-12-19 11:11:34 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Dec 19 11:11:36.779: INFO: Observed deployment test-deployment-ns76k in namespace deployment-3947 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-12-19 11:11:34 +0000 UTC 2023-12-19 11:11:34 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-ns76k-5d576bd769" is progressing.}
  Dec 19 11:11:36.780: INFO: Observed &Deployment event: MODIFIED
  Dec 19 11:11:36.780: INFO: Observed deployment test-deployment-ns76k in namespace deployment-3947 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-12-19 11:11:35 +0000 UTC 2023-12-19 11:11:35 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Dec 19 11:11:36.780: INFO: Observed deployment test-deployment-ns76k in namespace deployment-3947 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-12-19 11:11:35 +0000 UTC 2023-12-19 11:11:34 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-ns76k-5d576bd769" has successfully progressed.}
  Dec 19 11:11:36.781: INFO: Observed &Deployment event: MODIFIED
  Dec 19 11:11:36.781: INFO: Observed deployment test-deployment-ns76k in namespace deployment-3947 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-12-19 11:11:35 +0000 UTC 2023-12-19 11:11:35 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Dec 19 11:11:36.781: INFO: Observed deployment test-deployment-ns76k in namespace deployment-3947 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-12-19 11:11:35 +0000 UTC 2023-12-19 11:11:34 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-ns76k-5d576bd769" has successfully progressed.}
  Dec 19 11:11:36.781: INFO: Observed deployment test-deployment-ns76k in namespace deployment-3947 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Dec 19 11:11:36.782: INFO: Observed &Deployment event: MODIFIED
  Dec 19 11:11:36.782: INFO: Found deployment test-deployment-ns76k in namespace deployment-3947 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  Dec 19 11:11:36.782: INFO: Deployment test-deployment-ns76k has a patched status
  Dec 19 11:11:36.796: INFO: Deployment "test-deployment-ns76k":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-ns76k",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3947",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "84348b23-2763-4576-8294-798f14277f90",
      ResourceVersion: (string) (len=5) "29818",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838581094,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838581094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838581096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838581096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838581096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838581096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=56) "Found new replica set \"test-deployment-ns76k-5d576bd769\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Dec 19 11:11:36.832: INFO: New ReplicaSet "test-deployment-ns76k-5d576bd769" of Deployment "test-deployment-ns76k":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-ns76k-5d576bd769",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3947",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "73aa3b94-618a-4ae3-8948-951b99fca5ec",
      ResourceVersion: (string) (len=5) "29810",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838581094,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-ns76k",
          UID: (types.UID) (len=36) "84348b23-2763-4576-8294-798f14277f90",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838581094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 38 34 33  |k:{\"uid\":\"843|
              00000120  34 38 62 32 33 2d 32 37  36 33 2d 34 35 37 36 2d  |48b23-2763-4576-|
              00000130  38 32 39 34 2d 37 39 38  66 31 34 32 37 37 66 39  |8294-798f14277f9|
              00000140  30 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |0\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838581095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Dec 19 11:11:36.851: INFO: Pod "test-deployment-ns76k-5d576bd769-j9mkq" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=38) "test-deployment-ns76k-5d576bd769-j9mkq",
      GenerateName: (string) (len=33) "test-deployment-ns76k-5d576bd769-",
      Namespace: (string) (len=15) "deployment-3947",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "813e6288-20a4-4049-8343-c93a338a8851",
      ResourceVersion: (string) (len=5) "29809",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838581094,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769",
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=32) "test-deployment-ns76k-5d576bd769",
          UID: (types.UID) (len=36) "73aa3b94-618a-4ae3-8948-951b99fca5ec",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838581094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 37 33 61 61 33 62 39  34 2d 36 31 38 61 2d 34  |"73aa3b94-618a-4|
              000000a0  61 65 33 2d 38 39 34 38  2d 39 35 31 62 39 39 66  |ae3-8948-951b99f|
              000000b0  63 61 35 65 63 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |ca5ec\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838581095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 36 2e  37 32 5c 22 7d 22 3a 7b  |.233.66.72\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kkpz5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kkpz5",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "dah7vaemeeho-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838581095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838581094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838581095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838581095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838581094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.250",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.250"
        }
      },
      PodIP: (string) (len=12) "10.233.66.72",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.66.72"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838581094,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63838581095,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=64) "987dae5a853a43c663ab2f902708e65874bd2c0189aa0bc57d81ffb57187d089",
          ContainerID: (string) (len=72) "cri-o://8bf2e57f4d7a3ccf645fe559dd613e361f672431dc5b9adfeaebdeb34e13b9cb",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 19 11:11:36.861: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-3947" for this suite. @ 12/19/23 11:11:36.874
• [2.294 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
test/e2e/apimachinery/namespace.go:274
  STEP: Creating a kubernetes client @ 12/19/23 11:11:36.893
  Dec 19 11:11:36.893: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename namespaces @ 12/19/23 11:11:36.896
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:11:36.927
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:11:36.937
  STEP: creating a Namespace @ 12/19/23 11:11:36.943
  STEP: patching the Namespace @ 12/19/23 11:11:36.966
  STEP: get the Namespace and ensuring it has the label @ 12/19/23 11:11:36.978
  Dec 19 11:11:36.983: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-4214" for this suite. @ 12/19/23 11:11:36.991
  STEP: Destroying namespace "nspatchtest-6356728a-c630-47e7-a96a-8dd82ca6b47e-9086" for this suite. @ 12/19/23 11:11:37.01
• [0.134 seconds]
------------------------------
SSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1731
  STEP: Creating a kubernetes client @ 12/19/23 11:11:37.031
  Dec 19 11:11:37.031: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename kubectl @ 12/19/23 11:11:37.035
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:11:37.115
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:11:37.12
  Dec 19 11:11:37.126: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=kubectl-4631 version'
  Dec 19 11:11:37.302: INFO: stderr: ""
  Dec 19 11:11:37.302: INFO: stdout: "Client Version: v1.29.0\nKustomize Version: v5.0.4-0.20230601165947-6ce0bf390ce3\nServer Version: v1.29.0\n"
  Dec 19 11:11:37.302: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4631" for this suite. @ 12/19/23 11:11:37.315
• [0.302 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/downwardapi.go:46
  STEP: Creating a kubernetes client @ 12/19/23 11:11:37.334
  Dec 19 11:11:37.334: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename downward-api @ 12/19/23 11:11:37.337
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:11:37.379
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:11:37.401
  STEP: Creating a pod to test downward api env vars @ 12/19/23 11:11:37.412
  STEP: Saw pod success @ 12/19/23 11:11:41.466
  Dec 19 11:11:41.473: INFO: Trying to get logs from node dah7vaemeeho-3 pod downward-api-2d3ac81e-03be-4227-9188-8911674521e6 container dapi-container: <nil>
  STEP: delete the pod @ 12/19/23 11:11:41.487
  Dec 19 11:11:41.520: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3239" for this suite. @ 12/19/23 11:11:41.527
• [4.210 seconds]
------------------------------
SS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
test/e2e/auth/service_accounts.go:531
  STEP: Creating a kubernetes client @ 12/19/23 11:11:41.544
  Dec 19 11:11:41.544: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename svcaccounts @ 12/19/23 11:11:41.547
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:11:41.58
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:11:41.59
  Dec 19 11:11:41.630: INFO: created pod
  STEP: Saw pod success @ 12/19/23 11:11:45.666
  Dec 19 11:12:15.668: INFO: polling logs
  Dec 19 11:12:15.691: INFO: Pod logs: 
  I1219 11:11:42.393531       1 log.go:194] OK: Got token
  I1219 11:11:42.395208       1 log.go:194] validating with in-cluster discovery
  I1219 11:11:42.396086       1 log.go:194] OK: got issuer https://kubernetes.default.svc.cluster.local
  I1219 11:11:42.396139       1 log.go:194] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-7454:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc00042ec50), NotBefore:(*jwt.NumericDate)(0xc00042ed38), IssuedAt:(*jwt.NumericDate)(0xc00042ec60), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-7454", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"59d565e7-dd24-4303-951f-54f96adee651"}}}
  I1219 11:11:42.456297       1 log.go:194] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc.cluster.local
  I1219 11:11:42.481161       1 log.go:194] OK: Validated signature on JWT
  I1219 11:11:42.482561       1 log.go:194] OK: Got valid claims from token!
  I1219 11:11:42.482685       1 log.go:194] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-7454:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc0000ad9f0), NotBefore:(*jwt.NumericDate)(0xc0000ada18), IssuedAt:(*jwt.NumericDate)(0xc0000ad9f8), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-7454", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"59d565e7-dd24-4303-951f-54f96adee651"}}}

  Dec 19 11:12:15.694: INFO: completed pod
  Dec 19 11:12:15.713: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-7454" for this suite. @ 12/19/23 11:12:15.729
• [34.203 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
test/e2e/auth/service_accounts.go:277
  STEP: Creating a kubernetes client @ 12/19/23 11:12:15.749
  Dec 19 11:12:15.749: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename svcaccounts @ 12/19/23 11:12:15.759
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:12:15.791
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:12:15.799
  STEP: Creating a pod to test service account token:  @ 12/19/23 11:12:15.807
  STEP: Saw pod success @ 12/19/23 11:12:19.857
  Dec 19 11:12:19.865: INFO: Trying to get logs from node dah7vaemeeho-3 pod test-pod-778d63a2-2257-44ca-9e37-3387c271aa79 container agnhost-container: <nil>
  STEP: delete the pod @ 12/19/23 11:12:19.883
  Dec 19 11:12:19.918: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6869" for this suite. @ 12/19/23 11:12:19.931
• [4.197 seconds]
------------------------------
S
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
test/e2e/scheduling/predicates.go:446
  STEP: Creating a kubernetes client @ 12/19/23 11:12:19.948
  Dec 19 11:12:19.948: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename sched-pred @ 12/19/23 11:12:19.951
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:12:19.992
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:12:19.998
  Dec 19 11:12:20.004: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Dec 19 11:12:20.026: INFO: Waiting for terminating namespaces to be deleted...
  Dec 19 11:12:20.035: INFO: 
  Logging pods the apiserver thinks is on node dah7vaemeeho-1 before test
  Dec 19 11:12:20.054: INFO: coredns-76f75df574-k2zr4 from kube-system started at 2023-12-19 09:34:54 +0000 UTC (1 container statuses recorded)
  Dec 19 11:12:20.054: INFO: 	Container coredns ready: true, restart count 1
  Dec 19 11:12:20.055: INFO: coredns-76f75df574-sc56n from kube-system started at 2023-12-19 09:34:54 +0000 UTC (1 container statuses recorded)
  Dec 19 11:12:20.055: INFO: 	Container coredns ready: true, restart count 1
  Dec 19 11:12:20.056: INFO: kube-addon-manager-dah7vaemeeho-1 from kube-system started at 2023-12-19 09:47:18 +0000 UTC (1 container statuses recorded)
  Dec 19 11:12:20.057: INFO: 	Container kube-addon-manager ready: true, restart count 1
  Dec 19 11:12:20.057: INFO: kube-apiserver-dah7vaemeeho-1 from kube-system started at 2023-12-19 09:47:18 +0000 UTC (1 container statuses recorded)
  Dec 19 11:12:20.057: INFO: 	Container kube-apiserver ready: true, restart count 1
  Dec 19 11:12:20.057: INFO: kube-controller-manager-dah7vaemeeho-1 from kube-system started at 2023-12-19 09:47:18 +0000 UTC (1 container statuses recorded)
  Dec 19 11:12:20.058: INFO: 	Container kube-controller-manager ready: true, restart count 1
  Dec 19 11:12:20.058: INFO: kube-flannel-ds-r2kgn from kube-system started at 2023-12-19 09:36:45 +0000 UTC (1 container statuses recorded)
  Dec 19 11:12:20.058: INFO: 	Container kube-flannel ready: true, restart count 1
  Dec 19 11:12:20.058: INFO: kube-proxy-xscgp from kube-system started at 2023-12-19 09:34:54 +0000 UTC (1 container statuses recorded)
  Dec 19 11:12:20.059: INFO: 	Container kube-proxy ready: true, restart count 1
  Dec 19 11:12:20.059: INFO: kube-scheduler-dah7vaemeeho-1 from kube-system started at 2023-12-19 09:47:18 +0000 UTC (1 container statuses recorded)
  Dec 19 11:12:20.059: INFO: 	Container kube-scheduler ready: true, restart count 1
  Dec 19 11:12:20.059: INFO: sonobuoy-systemd-logs-daemon-set-ec23f534379c4b15-9ftzt from sonobuoy started at 2023-12-19 10:01:09 +0000 UTC (2 container statuses recorded)
  Dec 19 11:12:20.060: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Dec 19 11:12:20.060: INFO: 	Container systemd-logs ready: true, restart count 0
  Dec 19 11:12:20.060: INFO: 
  Logging pods the apiserver thinks is on node dah7vaemeeho-2 before test
  Dec 19 11:12:20.086: INFO: kube-addon-manager-dah7vaemeeho-2 from kube-system started at 2023-12-19 09:47:43 +0000 UTC (1 container statuses recorded)
  Dec 19 11:12:20.086: INFO: 	Container kube-addon-manager ready: true, restart count 1
  Dec 19 11:12:20.087: INFO: kube-apiserver-dah7vaemeeho-2 from kube-system started at 2023-12-19 09:47:43 +0000 UTC (1 container statuses recorded)
  Dec 19 11:12:20.087: INFO: 	Container kube-apiserver ready: true, restart count 1
  Dec 19 11:12:20.087: INFO: kube-controller-manager-dah7vaemeeho-2 from kube-system started at 2023-12-19 09:47:43 +0000 UTC (1 container statuses recorded)
  Dec 19 11:12:20.087: INFO: 	Container kube-controller-manager ready: true, restart count 1
  Dec 19 11:12:20.087: INFO: kube-flannel-ds-rq84x from kube-system started at 2023-12-19 09:36:45 +0000 UTC (1 container statuses recorded)
  Dec 19 11:12:20.088: INFO: 	Container kube-flannel ready: true, restart count 1
  Dec 19 11:12:20.088: INFO: kube-proxy-qr9gj from kube-system started at 2023-12-19 09:35:51 +0000 UTC (1 container statuses recorded)
  Dec 19 11:12:20.089: INFO: 	Container kube-proxy ready: true, restart count 1
  Dec 19 11:12:20.089: INFO: kube-scheduler-dah7vaemeeho-2 from kube-system started at 2023-12-19 09:47:43 +0000 UTC (1 container statuses recorded)
  Dec 19 11:12:20.089: INFO: 	Container kube-scheduler ready: true, restart count 1
  Dec 19 11:12:20.089: INFO: sonobuoy-systemd-logs-daemon-set-ec23f534379c4b15-n4n5n from sonobuoy started at 2023-12-19 10:01:09 +0000 UTC (2 container statuses recorded)
  Dec 19 11:12:20.089: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Dec 19 11:12:20.089: INFO: 	Container systemd-logs ready: true, restart count 0
  Dec 19 11:12:20.089: INFO: 
  Logging pods the apiserver thinks is on node dah7vaemeeho-3 before test
  Dec 19 11:12:20.111: INFO: kube-flannel-ds-v2m2l from kube-system started at 2023-12-19 10:34:10 +0000 UTC (1 container statuses recorded)
  Dec 19 11:12:20.111: INFO: 	Container kube-flannel ready: true, restart count 0
  Dec 19 11:12:20.111: INFO: kube-proxy-79v5d from kube-system started at 2023-12-19 09:36:16 +0000 UTC (1 container statuses recorded)
  Dec 19 11:12:20.111: INFO: 	Container kube-proxy ready: true, restart count 1
  Dec 19 11:12:20.111: INFO: sonobuoy from sonobuoy started at 2023-12-19 10:00:57 +0000 UTC (1 container statuses recorded)
  Dec 19 11:12:20.111: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Dec 19 11:12:20.111: INFO: sonobuoy-e2e-job-f0765e9942714abd from sonobuoy started at 2023-12-19 10:01:09 +0000 UTC (2 container statuses recorded)
  Dec 19 11:12:20.111: INFO: 	Container e2e ready: true, restart count 0
  Dec 19 11:12:20.111: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Dec 19 11:12:20.111: INFO: sonobuoy-systemd-logs-daemon-set-ec23f534379c4b15-xhnpz from sonobuoy started at 2023-12-19 10:01:09 +0000 UTC (2 container statuses recorded)
  Dec 19 11:12:20.111: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Dec 19 11:12:20.111: INFO: 	Container systemd-logs ready: true, restart count 0
  Dec 19 11:12:20.111: INFO: oidc-discovery-validator from svcaccounts-7454 started at 2023-12-19 11:11:41 +0000 UTC (1 container statuses recorded)
  Dec 19 11:12:20.111: INFO: 	Container oidc-discovery-validator ready: false, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 12/19/23 11:12:20.111
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.17a2373c0e31b0d7], Reason = [FailedScheduling], Message = [0/3 nodes are available: 3 node(s) didn't match Pod's node affinity/selector. preemption: 0/3 nodes are available: 3 Preemption is not helpful for scheduling.] @ 12/19/23 11:12:20.185
  Dec 19 11:12:21.183: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-6485" for this suite. @ 12/19/23 11:12:21.191
• [1.260 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
test/e2e/apimachinery/namespace.go:372
  STEP: Creating a kubernetes client @ 12/19/23 11:12:21.208
  Dec 19 11:12:21.208: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename namespaces @ 12/19/23 11:12:21.211
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:12:21.247
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:12:21.258
  STEP: Updating Namespace "namespaces-2828" @ 12/19/23 11:12:21.273
  Dec 19 11:12:21.304: INFO: Namespace "namespaces-2828" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"1d5a44d0-9df6-4f8e-9b48-0ec920a51630", "kubernetes.io/metadata.name":"namespaces-2828", "namespaces-2828":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  Dec 19 11:12:21.304: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-2828" for this suite. @ 12/19/23 11:12:21.314
• [0.123 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
test/e2e/apimachinery/namespace.go:254
  STEP: Creating a kubernetes client @ 12/19/23 11:12:21.34
  Dec 19 11:12:21.340: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename namespaces @ 12/19/23 11:12:21.344
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:12:21.384
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:12:21.395
  STEP: Creating a test namespace @ 12/19/23 11:12:21.404
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:12:21.466
  STEP: Creating a service in the namespace @ 12/19/23 11:12:21.482
  STEP: Deleting the namespace @ 12/19/23 11:12:21.521
  STEP: Waiting for the namespace to be removed. @ 12/19/23 11:12:21.565
  STEP: Recreating the namespace @ 12/19/23 11:12:27.574
  STEP: Verifying there is no service in the namespace @ 12/19/23 11:12:27.604
  Dec 19 11:12:27.614: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-7421" for this suite. @ 12/19/23 11:12:27.629
  STEP: Destroying namespace "nsdeletetest-9960" for this suite. @ 12/19/23 11:12:27.642
  Dec 19 11:12:27.651: INFO: Namespace nsdeletetest-9960 was already deleted
  STEP: Destroying namespace "nsdeletetest-2141" for this suite. @ 12/19/23 11:12:27.651
• [6.329 seconds]
------------------------------
SS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
test/e2e/network/dns.go:407
  STEP: Creating a kubernetes client @ 12/19/23 11:12:27.669
  Dec 19 11:12:27.669: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename dns @ 12/19/23 11:12:27.674
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:12:27.703
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:12:27.71
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 12/19/23 11:12:27.718
  Dec 19 11:12:27.738: INFO: Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-1997  cb9d9b9f-768d-47d5-bd29-bb4ebbef9773 30079 0 2023-12-19 11:12:27 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2023-12-19 11:12:27 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-vljvz,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.45,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-vljvz,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  STEP: Verifying customized DNS suffix list is configured on pod... @ 12/19/23 11:12:29.768
  Dec 19 11:12:29.769: INFO: ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-1997 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 19 11:12:29.769: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  Dec 19 11:12:29.772: INFO: ExecWithOptions: Clientset creation
  Dec 19 11:12:29.772: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/dns-1997/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 12/19/23 11:12:29.961
  Dec 19 11:12:29.962: INFO: ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-1997 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 19 11:12:29.963: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  Dec 19 11:12:29.965: INFO: ExecWithOptions: Clientset creation
  Dec 19 11:12:29.966: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/dns-1997/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Dec 19 11:12:30.122: INFO: Deleting pod test-dns-nameservers...
  Dec 19 11:12:30.166: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-1997" for this suite. @ 12/19/23 11:12:30.183
• [2.526 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/downwardapi.go:219
  STEP: Creating a kubernetes client @ 12/19/23 11:12:30.196
  Dec 19 11:12:30.196: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename downward-api @ 12/19/23 11:12:30.205
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:12:30.243
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:12:30.25
  STEP: Creating a pod to test downward api env vars @ 12/19/23 11:12:30.258
  STEP: Saw pod success @ 12/19/23 11:12:32.362
  Dec 19 11:12:32.370: INFO: Trying to get logs from node dah7vaemeeho-3 pod downward-api-c523f58f-c742-4eae-8285-4c31eb3a9fa4 container dapi-container: <nil>
  STEP: delete the pod @ 12/19/23 11:12:32.388
  Dec 19 11:12:32.434: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1208" for this suite. @ 12/19/23 11:12:32.441
• [2.264 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:210
  STEP: Creating a kubernetes client @ 12/19/23 11:12:32.462
  Dec 19 11:12:32.462: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename emptydir @ 12/19/23 11:12:32.468
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:12:32.496
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:12:32.502
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 12/19/23 11:12:32.508
  STEP: Saw pod success @ 12/19/23 11:12:36.557
  Dec 19 11:12:36.564: INFO: Trying to get logs from node dah7vaemeeho-3 pod pod-592e811f-5010-4b1f-8975-12e75eb9008b container test-container: <nil>
  STEP: delete the pod @ 12/19/23 11:12:36.581
  Dec 19 11:12:36.620: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2380" for this suite. @ 12/19/23 11:12:36.637
• [4.192 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:251
  STEP: Creating a kubernetes client @ 12/19/23 11:12:36.654
  Dec 19 11:12:36.654: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename projected @ 12/19/23 11:12:36.658
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:12:36.688
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:12:36.697
  STEP: Creating a pod to test downward API volume plugin @ 12/19/23 11:12:36.707
  STEP: Saw pod success @ 12/19/23 11:12:40.765
  Dec 19 11:12:40.776: INFO: Trying to get logs from node dah7vaemeeho-3 pod downwardapi-volume-4924f864-4c88-42e5-88fe-1a0b116a082e container client-container: <nil>
  STEP: delete the pod @ 12/19/23 11:12:40.796
  Dec 19 11:12:40.870: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-213" for this suite. @ 12/19/23 11:12:40.88
• [4.239 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/container_probe.go:107
  STEP: Creating a kubernetes client @ 12/19/23 11:12:40.898
  Dec 19 11:12:40.898: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename container-probe @ 12/19/23 11:12:40.902
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:12:40.936
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:12:40.942
  Dec 19 11:13:40.978: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7989" for this suite. @ 12/19/23 11:13:40.993
• [60.114 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 12/19/23 11:13:41.013
  Dec 19 11:13:41.013: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename cronjob @ 12/19/23 11:13:41.02
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:13:41.091
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:13:41.098
  STEP: Creating a suspended cronjob @ 12/19/23 11:13:41.119
  STEP: Ensuring no jobs are scheduled @ 12/19/23 11:13:41.176
  STEP: Ensuring no job exists by listing jobs explicitly @ 12/19/23 11:18:41.194
  STEP: Removing cronjob @ 12/19/23 11:18:41.203
  Dec 19 11:18:41.225: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-9459" for this suite. @ 12/19/23 11:18:41.238
• [300.238 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1764
  STEP: Creating a kubernetes client @ 12/19/23 11:18:41.258
  Dec 19 11:18:41.259: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename kubectl @ 12/19/23 11:18:41.264
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:18:41.294
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:18:41.299
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 12/19/23 11:18:41.306
  Dec 19 11:18:41.306: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=kubectl-7466 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  Dec 19 11:18:41.523: INFO: stderr: ""
  Dec 19 11:18:41.523: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 12/19/23 11:18:41.523
  Dec 19 11:18:41.533: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=kubectl-7466 delete pods e2e-test-httpd-pod'
  Dec 19 11:18:43.682: INFO: stderr: ""
  Dec 19 11:18:43.682: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Dec 19 11:18:43.682: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7466" for this suite. @ 12/19/23 11:18:43.697
• [2.457 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/field_validation.go:474
  STEP: Creating a kubernetes client @ 12/19/23 11:18:43.716
  Dec 19 11:18:43.716: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename field-validation @ 12/19/23 11:18:43.72
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:18:43.798
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:18:43.803
  Dec 19 11:18:43.809: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  W1219 11:18:46.649951      14 warnings.go:70] unknown field "alpha"
  W1219 11:18:46.650663      14 warnings.go:70] unknown field "beta"
  W1219 11:18:46.651036      14 warnings.go:70] unknown field "delta"
  W1219 11:18:46.651437      14 warnings.go:70] unknown field "epsilon"
  W1219 11:18:46.651814      14 warnings.go:70] unknown field "gamma"
  Dec 19 11:18:47.276: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-6582" for this suite. @ 12/19/23 11:18:47.285
• [3.583 seconds]
------------------------------
SSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:2177
  STEP: Creating a kubernetes client @ 12/19/23 11:18:47.299
  Dec 19 11:18:47.299: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename services @ 12/19/23 11:18:47.304
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:18:47.336
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:18:47.344
  STEP: creating service in namespace services-1325 @ 12/19/23 11:18:47.349
  STEP: creating service affinity-clusterip in namespace services-1325 @ 12/19/23 11:18:47.35
  STEP: creating replication controller affinity-clusterip in namespace services-1325 @ 12/19/23 11:18:47.374
  I1219 11:18:47.416122      14 runners.go:197] Created replication controller with name: affinity-clusterip, namespace: services-1325, replica count: 3
  I1219 11:18:50.468745      14 runners.go:197] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Dec 19 11:18:50.487: INFO: Creating new exec pod
  Dec 19 11:18:53.527: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=services-1325 exec execpod-affinitynlh6d -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  Dec 19 11:18:53.931: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
  Dec 19 11:18:53.931: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Dec 19 11:18:53.932: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=services-1325 exec execpod-affinitynlh6d -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.14.105 80'
  Dec 19 11:18:54.258: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.14.105 80\nConnection to 10.233.14.105 80 port [tcp/http] succeeded!\n"
  Dec 19 11:18:54.258: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Dec 19 11:18:54.259: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=services-1325 exec execpod-affinitynlh6d -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.233.14.105:80/ ; done'
  Dec 19 11:18:54.783: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.14.105:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.14.105:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.14.105:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.14.105:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.14.105:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.14.105:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.14.105:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.14.105:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.14.105:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.14.105:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.14.105:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.14.105:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.14.105:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.14.105:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.14.105:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.14.105:80/\n"
  Dec 19 11:18:54.783: INFO: stdout: "\naffinity-clusterip-6j7kh\naffinity-clusterip-6j7kh\naffinity-clusterip-6j7kh\naffinity-clusterip-6j7kh\naffinity-clusterip-6j7kh\naffinity-clusterip-6j7kh\naffinity-clusterip-6j7kh\naffinity-clusterip-6j7kh\naffinity-clusterip-6j7kh\naffinity-clusterip-6j7kh\naffinity-clusterip-6j7kh\naffinity-clusterip-6j7kh\naffinity-clusterip-6j7kh\naffinity-clusterip-6j7kh\naffinity-clusterip-6j7kh\naffinity-clusterip-6j7kh"
  Dec 19 11:18:54.783: INFO: Received response from host: affinity-clusterip-6j7kh
  Dec 19 11:18:54.783: INFO: Received response from host: affinity-clusterip-6j7kh
  Dec 19 11:18:54.783: INFO: Received response from host: affinity-clusterip-6j7kh
  Dec 19 11:18:54.783: INFO: Received response from host: affinity-clusterip-6j7kh
  Dec 19 11:18:54.783: INFO: Received response from host: affinity-clusterip-6j7kh
  Dec 19 11:18:54.783: INFO: Received response from host: affinity-clusterip-6j7kh
  Dec 19 11:18:54.783: INFO: Received response from host: affinity-clusterip-6j7kh
  Dec 19 11:18:54.783: INFO: Received response from host: affinity-clusterip-6j7kh
  Dec 19 11:18:54.783: INFO: Received response from host: affinity-clusterip-6j7kh
  Dec 19 11:18:54.783: INFO: Received response from host: affinity-clusterip-6j7kh
  Dec 19 11:18:54.783: INFO: Received response from host: affinity-clusterip-6j7kh
  Dec 19 11:18:54.783: INFO: Received response from host: affinity-clusterip-6j7kh
  Dec 19 11:18:54.783: INFO: Received response from host: affinity-clusterip-6j7kh
  Dec 19 11:18:54.783: INFO: Received response from host: affinity-clusterip-6j7kh
  Dec 19 11:18:54.783: INFO: Received response from host: affinity-clusterip-6j7kh
  Dec 19 11:18:54.783: INFO: Received response from host: affinity-clusterip-6j7kh
  Dec 19 11:18:54.783: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-1325, will wait for the garbage collector to delete the pods @ 12/19/23 11:18:54.824
  Dec 19 11:18:54.902: INFO: Deleting ReplicationController affinity-clusterip took: 18.17974ms
  Dec 19 11:18:55.003: INFO: Terminating ReplicationController affinity-clusterip pods took: 100.669928ms
  Dec 19 11:18:58.073: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1325" for this suite. @ 12/19/23 11:18:58.094
• [10.811 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
test/e2e/common/node/configmap.go:170
  STEP: Creating a kubernetes client @ 12/19/23 11:18:58.112
  Dec 19 11:18:58.112: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename configmap @ 12/19/23 11:18:58.118
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:18:58.16
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:18:58.171
  STEP: creating a ConfigMap @ 12/19/23 11:18:58.18
  STEP: fetching the ConfigMap @ 12/19/23 11:18:58.2
  STEP: patching the ConfigMap @ 12/19/23 11:18:58.218
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 12/19/23 11:18:58.233
  STEP: deleting the ConfigMap by collection with a label selector @ 12/19/23 11:18:58.243
  STEP: listing all ConfigMaps in test namespace @ 12/19/23 11:18:58.274
  Dec 19 11:18:58.283: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2794" for this suite. @ 12/19/23 11:18:58.292
• [0.194 seconds]
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 12/19/23 11:18:58.307
  Dec 19 11:18:58.307: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename container-runtime @ 12/19/23 11:18:58.311
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:18:58.344
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:18:58.35
  STEP: create the container @ 12/19/23 11:18:58.358
  W1219 11:18:58.379086      14 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 12/19/23 11:18:58.379
  STEP: get the container status @ 12/19/23 11:19:01.415
  STEP: the container should be terminated @ 12/19/23 11:19:01.421
  STEP: the termination message should be set @ 12/19/23 11:19:01.422
  Dec 19 11:19:01.422: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 12/19/23 11:19:01.422
  Dec 19 11:19:01.453: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-8267" for this suite. @ 12/19/23 11:19:01.465
• [3.171 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 12/19/23 11:19:01.482
  Dec 19 11:19:01.482: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename pods @ 12/19/23 11:19:01.485
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:19:01.511
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:19:01.519
  STEP: creating the pod @ 12/19/23 11:19:01.526
  STEP: setting up watch @ 12/19/23 11:19:01.528
  STEP: submitting the pod to kubernetes @ 12/19/23 11:19:01.638
  STEP: verifying the pod is in kubernetes @ 12/19/23 11:19:01.66
  STEP: verifying pod creation was observed @ 12/19/23 11:19:01.678
  STEP: deleting the pod gracefully @ 12/19/23 11:19:03.722
  STEP: verifying pod deletion was observed @ 12/19/23 11:19:03.745
  Dec 19 11:19:04.856: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5855" for this suite. @ 12/19/23 11:19:04.87
• [3.413 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:887
  STEP: Creating a kubernetes client @ 12/19/23 11:19:04.898
  Dec 19 11:19:04.898: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename kubectl @ 12/19/23 11:19:04.903
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:19:04.941
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:19:04.948
  STEP: validating api versions @ 12/19/23 11:19:04.956
  Dec 19 11:19:04.957: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=kubectl-3990 api-versions'
  Dec 19 11:19:05.157: INFO: stderr: ""
  Dec 19 11:19:05.157: INFO: stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta3\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nv1\n"
  Dec 19 11:19:05.157: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3990" for this suite. @ 12/19/23 11:19:05.172
• [0.294 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 12/19/23 11:19:05.194
  Dec 19 11:19:05.194: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename pods @ 12/19/23 11:19:05.198
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:19:05.232
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:19:05.238
  STEP: creating pod @ 12/19/23 11:19:05.245
  Dec 19 11:19:07.294: INFO: Pod pod-hostip-b473ac5c-6b63-45fc-9d33-3b3c90000051 has hostIP: 192.168.121.250
  Dec 19 11:19:07.294: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-708" for this suite. @ 12/19/23 11:19:07.306
• [2.129 seconds]
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
test/e2e/apps/replica_set.go:166
  STEP: Creating a kubernetes client @ 12/19/23 11:19:07.324
  Dec 19 11:19:07.324: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename replicaset @ 12/19/23 11:19:07.329
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:19:07.363
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:19:07.371
  STEP: Create a ReplicaSet @ 12/19/23 11:19:07.378
  STEP: Verify that the required pods have come up @ 12/19/23 11:19:07.392
  Dec 19 11:19:07.401: INFO: Pod name sample-pod: Found 0 pods out of 3
  Dec 19 11:19:12.414: INFO: Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 12/19/23 11:19:12.415
  Dec 19 11:19:12.421: INFO: Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 12/19/23 11:19:12.422
  STEP: DeleteCollection of the ReplicaSets @ 12/19/23 11:19:12.431
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 12/19/23 11:19:12.449
  Dec 19 11:19:12.459: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-7090" for this suite. @ 12/19/23 11:19:12.498
• [5.299 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/secrets.go:96
  STEP: Creating a kubernetes client @ 12/19/23 11:19:12.623
  Dec 19 11:19:12.623: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename secrets @ 12/19/23 11:19:12.627
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:19:12.68
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:19:12.686
  STEP: creating secret secrets-6371/secret-test-25a6271a-3497-44be-b251-b1eab2cdb2fe @ 12/19/23 11:19:12.693
  STEP: Creating a pod to test consume secrets @ 12/19/23 11:19:12.711
  STEP: Saw pod success @ 12/19/23 11:19:16.792
  Dec 19 11:19:16.802: INFO: Trying to get logs from node dah7vaemeeho-3 pod pod-configmaps-afc8fb90-5343-4ccb-bfb1-6a81601390d5 container env-test: <nil>
  STEP: delete the pod @ 12/19/23 11:19:16.847
  Dec 19 11:19:16.898: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6371" for this suite. @ 12/19/23 11:19:16.909
• [4.299 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:572
  STEP: Creating a kubernetes client @ 12/19/23 11:19:16.926
  Dec 19 11:19:16.926: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename webhook @ 12/19/23 11:19:16.929
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:19:16.956
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:19:16.968
  STEP: Setting up server cert @ 12/19/23 11:19:17.016
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/19/23 11:19:19.315
  STEP: Deploying the webhook pod @ 12/19/23 11:19:19.331
  STEP: Wait for the deployment to be ready @ 12/19/23 11:19:19.353
  Dec 19 11:19:19.372: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 12/19/23 11:19:21.396
  STEP: Verifying the service has paired with the endpoint @ 12/19/23 11:19:21.431
  Dec 19 11:19:22.432: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 12/19/23 11:19:22.588
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 12/19/23 11:19:22.665
  STEP: Deleting the collection of validation webhooks @ 12/19/23 11:19:22.718
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 12/19/23 11:19:22.838
  Dec 19 11:19:22.976: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9686" for this suite. @ 12/19/23 11:19:22.998
  STEP: Destroying namespace "webhook-markers-3815" for this suite. @ 12/19/23 11:19:23.012
• [6.110 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 12/19/23 11:19:23.038
  Dec 19 11:19:23.039: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename container-runtime @ 12/19/23 11:19:23.042
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:19:23.075
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:19:23.086
  STEP: create the container @ 12/19/23 11:19:23.097
  W1219 11:19:23.134065      14 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 12/19/23 11:19:23.134
  STEP: get the container status @ 12/19/23 11:19:25.162
  STEP: the container should be terminated @ 12/19/23 11:19:25.169
  STEP: the termination message should be set @ 12/19/23 11:19:25.169
  Dec 19 11:19:25.169: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 12/19/23 11:19:25.169
  Dec 19 11:19:25.198: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-4982" for this suite. @ 12/19/23 11:19:25.21
• [2.186 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
test/e2e/apps/cronjob.go:324
  STEP: Creating a kubernetes client @ 12/19/23 11:19:25.23
  Dec 19 11:19:25.230: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename cronjob @ 12/19/23 11:19:25.234
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:19:25.266
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:19:25.271
  STEP: Creating a cronjob @ 12/19/23 11:19:25.278
  STEP: creating @ 12/19/23 11:19:25.278
  STEP: getting @ 12/19/23 11:19:25.29
  STEP: listing @ 12/19/23 11:19:25.298
  STEP: watching @ 12/19/23 11:19:25.304
  Dec 19 11:19:25.304: INFO: starting watch
  STEP: cluster-wide listing @ 12/19/23 11:19:25.307
  STEP: cluster-wide watching @ 12/19/23 11:19:25.314
  Dec 19 11:19:25.315: INFO: starting watch
  STEP: patching @ 12/19/23 11:19:25.318
  STEP: updating @ 12/19/23 11:19:25.333
  Dec 19 11:19:25.348: INFO: waiting for watch events with expected annotations
  Dec 19 11:19:25.348: INFO: saw patched and updated annotations
  STEP: patching /status @ 12/19/23 11:19:25.349
  STEP: updating /status @ 12/19/23 11:19:25.361
  STEP: get /status @ 12/19/23 11:19:25.377
  STEP: deleting @ 12/19/23 11:19:25.385
  STEP: deleting a collection @ 12/19/23 11:19:25.421
  Dec 19 11:19:25.449: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-5722" for this suite. @ 12/19/23 11:19:25.463
• [0.252 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
test/e2e/storage/persistent_volumes.go:669
  STEP: Creating a kubernetes client @ 12/19/23 11:19:25.485
  Dec 19 11:19:25.485: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename pv @ 12/19/23 11:19:25.489
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:19:25.523
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:19:25.528
  STEP: Creating initial PV and PVC @ 12/19/23 11:19:25.534
  Dec 19 11:19:25.534: INFO: Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-1047" @ 12/19/23 11:19:25.568
  STEP: Listing PVCs in namespace "pv-1047" @ 12/19/23 11:19:25.575
  STEP: Reading "pvc-wxj94" Status @ 12/19/23 11:19:25.582
  STEP: Reading "pv-1047-skmvl" Status @ 12/19/23 11:19:25.599
  STEP: Patching "pvc-wxj94" Status @ 12/19/23 11:19:25.624
  STEP: Patching "pv-1047-skmvl" Status @ 12/19/23 11:19:25.638
  STEP: Updating "pvc-wxj94" Status @ 12/19/23 11:19:25.681
  STEP: Updating "pv-1047-skmvl" Status @ 12/19/23 11:19:25.732
  Dec 19 11:19:25.757: INFO: AfterEach: deleting 1 PVCs and 1 PVs...
  Dec 19 11:19:25.757: INFO: Deleting PersistentVolumeClaim "pvc-wxj94"
  Dec 19 11:19:25.773: INFO: Deleting PersistentVolume "pv-1047-skmvl"
  Dec 19 11:19:25.795: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-1047" for this suite. @ 12/19/23 11:19:25.807
• [0.338 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:263
  STEP: Creating a kubernetes client @ 12/19/23 11:19:25.825
  Dec 19 11:19:25.825: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename projected @ 12/19/23 11:19:25.829
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:19:25.862
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:19:25.868
  STEP: Creating a pod to test downward API volume plugin @ 12/19/23 11:19:25.88
  STEP: Saw pod success @ 12/19/23 11:19:29.947
  Dec 19 11:19:29.956: INFO: Trying to get logs from node dah7vaemeeho-3 pod downwardapi-volume-203ef591-1f4d-423a-a5b8-0b6b30de2f7c container client-container: <nil>
  STEP: delete the pod @ 12/19/23 11:19:29.971
  Dec 19 11:19:30.002: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2444" for this suite. @ 12/19/23 11:19:30.014
• [4.203 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:453
  STEP: Creating a kubernetes client @ 12/19/23 11:19:30.028
  Dec 19 11:19:30.028: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename resourcequota @ 12/19/23 11:19:30.031
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:19:30.061
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:19:30.064
  STEP: Counting existing ResourceQuota @ 12/19/23 11:19:30.071
  STEP: Creating a ResourceQuota @ 12/19/23 11:19:35.079
  STEP: Ensuring resource quota status is calculated @ 12/19/23 11:19:35.095
  STEP: Creating a ReplicaSet @ 12/19/23 11:19:37.105
  STEP: Ensuring resource quota status captures replicaset creation @ 12/19/23 11:19:37.133
  STEP: Deleting a ReplicaSet @ 12/19/23 11:19:39.146
  STEP: Ensuring resource quota status released usage @ 12/19/23 11:19:39.162
  Dec 19 11:19:41.173: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4900" for this suite. @ 12/19/23 11:19:41.185
• [11.176 seconds]
------------------------------
S
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 12/19/23 11:19:41.206
  Dec 19 11:19:41.206: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename events @ 12/19/23 11:19:41.209
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:19:41.243
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:19:41.248
  STEP: Create set of events @ 12/19/23 11:19:41.254
  STEP: get a list of Events with a label in the current namespace @ 12/19/23 11:19:41.291
  STEP: delete a list of events @ 12/19/23 11:19:41.3
  Dec 19 11:19:41.300: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 12/19/23 11:19:41.347
  Dec 19 11:19:41.355: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-3924" for this suite. @ 12/19/23 11:19:41.376
• [0.190 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1838
  STEP: Creating a kubernetes client @ 12/19/23 11:19:41.43
  Dec 19 11:19:41.431: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename kubectl @ 12/19/23 11:19:41.433
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:19:41.482
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:19:41.488
  STEP: starting the proxy server @ 12/19/23 11:19:41.493
  Dec 19 11:19:41.493: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=kubectl-3021 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 12/19/23 11:19:41.647
  Dec 19 11:19:41.669: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3021" for this suite. @ 12/19/23 11:19:41.679
• [0.267 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:120
  STEP: Creating a kubernetes client @ 12/19/23 11:19:41.693
  Dec 19 11:19:41.693: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename emptydir @ 12/19/23 11:19:41.697
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:19:41.727
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:19:41.733
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 12/19/23 11:19:41.74
  STEP: Saw pod success @ 12/19/23 11:19:45.809
  Dec 19 11:19:45.814: INFO: Trying to get logs from node dah7vaemeeho-3 pod pod-6fc8ebc8-e2ae-433d-ab67-37edbc008b94 container test-container: <nil>
  STEP: delete the pod @ 12/19/23 11:19:45.828
  Dec 19 11:19:45.865: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1762" for this suite. @ 12/19/23 11:19:45.875
• [4.199 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 12/19/23 11:19:45.895
  Dec 19 11:19:45.896: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename secrets @ 12/19/23 11:19:45.899
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:19:45.933
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:19:45.939
  STEP: Creating secret with name secret-test-map-e92c6025-6a7c-49d8-9de5-000b1f366cd3 @ 12/19/23 11:19:45.944
  STEP: Creating a pod to test consume secrets @ 12/19/23 11:19:45.958
  STEP: Saw pod success @ 12/19/23 11:19:50.01
  Dec 19 11:19:50.019: INFO: Trying to get logs from node dah7vaemeeho-3 pod pod-secrets-a5ba454c-4e7e-4720-8498-1eb317557a0e container secret-volume-test: <nil>
  STEP: delete the pod @ 12/19/23 11:19:50.039
  Dec 19 11:19:50.090: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5466" for this suite. @ 12/19/23 11:19:50.099
• [4.223 seconds]
------------------------------
S
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 12/19/23 11:19:50.12
  Dec 19 11:19:50.120: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename subpath @ 12/19/23 11:19:50.124
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:19:50.153
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:19:50.158
  STEP: Setting up data @ 12/19/23 11:19:50.168
  STEP: Creating pod pod-subpath-test-downwardapi-7tdc @ 12/19/23 11:19:50.193
  STEP: Creating a pod to test atomic-volume-subpath @ 12/19/23 11:19:50.193
  STEP: Saw pod success @ 12/19/23 11:20:14.36
  Dec 19 11:20:14.367: INFO: Trying to get logs from node dah7vaemeeho-3 pod pod-subpath-test-downwardapi-7tdc container test-container-subpath-downwardapi-7tdc: <nil>
  STEP: delete the pod @ 12/19/23 11:20:14.387
  STEP: Deleting pod pod-subpath-test-downwardapi-7tdc @ 12/19/23 11:20:14.433
  Dec 19 11:20:14.434: INFO: Deleting pod "pod-subpath-test-downwardapi-7tdc" in namespace "subpath-3844"
  Dec 19 11:20:14.442: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-3844" for this suite. @ 12/19/23 11:20:14.457
• [24.356 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 12/19/23 11:20:14.479
  Dec 19 11:20:14.479: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename pods @ 12/19/23 11:20:14.486
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:20:14.524
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:20:14.533
  STEP: Create a pod @ 12/19/23 11:20:14.539
  STEP: patching /status @ 12/19/23 11:20:16.575
  Dec 19 11:20:16.596: INFO: Status Message: "Patched by e2e test" and Reason: "E2E"
  Dec 19 11:20:16.596: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6660" for this suite. @ 12/19/23 11:20:16.607
• [2.150 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/configmap.go:94
  STEP: Creating a kubernetes client @ 12/19/23 11:20:16.633
  Dec 19 11:20:16.634: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename configmap @ 12/19/23 11:20:16.637
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:20:16.672
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:20:16.677
  STEP: Creating configMap configmap-4971/configmap-test-f35d2600-043f-4ed3-8fda-97c8dd3c05ba @ 12/19/23 11:20:16.685
  STEP: Creating a pod to test consume configMaps @ 12/19/23 11:20:16.7
  STEP: Saw pod success @ 12/19/23 11:20:20.772
  Dec 19 11:20:20.779: INFO: Trying to get logs from node dah7vaemeeho-3 pod pod-configmaps-12f71577-22e9-4d7a-907a-766ccf7102c4 container env-test: <nil>
  STEP: delete the pod @ 12/19/23 11:20:20.806
  Dec 19 11:20:20.845: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4971" for this suite. @ 12/19/23 11:20:20.854
• [4.236 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/downwardapi.go:168
  STEP: Creating a kubernetes client @ 12/19/23 11:20:20.873
  Dec 19 11:20:20.873: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename downward-api @ 12/19/23 11:20:20.877
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:20:20.917
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:20:20.924
  STEP: Creating a pod to test downward api env vars @ 12/19/23 11:20:20.929
  STEP: Saw pod success @ 12/19/23 11:20:24.976
  Dec 19 11:20:24.984: INFO: Trying to get logs from node dah7vaemeeho-3 pod downward-api-ecfd2c72-f8a4-466f-afb1-f05427ce3fb1 container dapi-container: <nil>
  STEP: delete the pod @ 12/19/23 11:20:25.017
  Dec 19 11:20:25.098: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4589" for this suite. @ 12/19/23 11:20:25.109
• [4.253 seconds]
------------------------------
S
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
test/e2e/apps/daemon_set.go:836
  STEP: Creating a kubernetes client @ 12/19/23 11:20:25.129
  Dec 19 11:20:25.129: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename daemonsets @ 12/19/23 11:20:25.135
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:20:25.166
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:20:25.172
  STEP: Creating simple DaemonSet "daemon-set" @ 12/19/23 11:20:25.231
  STEP: Check that daemon pods launch on every node of the cluster. @ 12/19/23 11:20:25.243
  Dec 19 11:20:25.259: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 19 11:20:25.259: INFO: Node dah7vaemeeho-1 is running 0 daemon pod, expected 1
  Dec 19 11:20:26.288: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Dec 19 11:20:26.288: INFO: Node dah7vaemeeho-1 is running 0 daemon pod, expected 1
  Dec 19 11:20:27.275: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Dec 19 11:20:27.275: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: listing all DaemonSets @ 12/19/23 11:20:27.284
  STEP: DeleteCollection of the DaemonSets @ 12/19/23 11:20:27.294
  STEP: Verify that ReplicaSets have been deleted @ 12/19/23 11:20:27.31
  Dec 19 11:20:27.338: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"31768"},"items":null}

  Dec 19 11:20:27.354: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"31768"},"items":[{"metadata":{"name":"daemon-set-b9kx2","generateName":"daemon-set-","namespace":"daemonsets-4918","uid":"7ee0ff8f-9000-4bc4-a1b2-eeda65a6efb7","resourceVersion":"31765","creationTimestamp":"2023-12-19T11:20:25Z","labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"d8bbbfc2-b9e0-4572-ba0c-663e43f9de95","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2023-12-19T11:20:25Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"d8bbbfc2-b9e0-4572-ba0c-663e43f9de95\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2023-12-19T11:20:27Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.233.64.146\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-27dtb","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-27dtb","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"dah7vaemeeho-1","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["dah7vaemeeho-1"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-12-19T11:20:27Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-12-19T11:20:25Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-12-19T11:20:27Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-12-19T11:20:27Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-12-19T11:20:25Z"}],"hostIP":"192.168.121.226","hostIPs":[{"ip":"192.168.121.226"}],"podIP":"10.233.64.146","podIPs":[{"ip":"10.233.64.146"}],"startTime":"2023-12-19T11:20:25Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-12-19T11:20:26Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"987dae5a853a43c663ab2f902708e65874bd2c0189aa0bc57d81ffb57187d089","containerID":"cri-o://86048bcafeb6dee4e7d249009f2702d934434f33cef81fc6048f3228dc1adc47","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-gm6kj","generateName":"daemon-set-","namespace":"daemonsets-4918","uid":"0d30a1ec-6dbf-45b7-a5fe-6cbd07ef810d","resourceVersion":"31763","creationTimestamp":"2023-12-19T11:20:25Z","labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"d8bbbfc2-b9e0-4572-ba0c-663e43f9de95","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2023-12-19T11:20:25Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"d8bbbfc2-b9e0-4572-ba0c-663e43f9de95\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2023-12-19T11:20:26Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.233.65.145\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-l2mrd","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-l2mrd","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"dah7vaemeeho-2","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["dah7vaemeeho-2"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-12-19T11:20:26Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-12-19T11:20:25Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-12-19T11:20:26Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-12-19T11:20:26Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-12-19T11:20:25Z"}],"hostIP":"192.168.121.147","hostIPs":[{"ip":"192.168.121.147"}],"podIP":"10.233.65.145","podIPs":[{"ip":"10.233.65.145"}],"startTime":"2023-12-19T11:20:25Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-12-19T11:20:26Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"987dae5a853a43c663ab2f902708e65874bd2c0189aa0bc57d81ffb57187d089","containerID":"cri-o://f9024d036143830e12e5fde71b28796518c2c49b38dc4432381892b19aa2d718","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-xstcj","generateName":"daemon-set-","namespace":"daemonsets-4918","uid":"cb787f93-9586-4134-9e41-511d43be96fa","resourceVersion":"31748","creationTimestamp":"2023-12-19T11:20:25Z","labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"d8bbbfc2-b9e0-4572-ba0c-663e43f9de95","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2023-12-19T11:20:25Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"d8bbbfc2-b9e0-4572-ba0c-663e43f9de95\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2023-12-19T11:20:26Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.233.66.97\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-2pm75","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-2pm75","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"dah7vaemeeho-3","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["dah7vaemeeho-3"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-12-19T11:20:26Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-12-19T11:20:25Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-12-19T11:20:26Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-12-19T11:20:26Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-12-19T11:20:25Z"}],"hostIP":"192.168.121.250","hostIPs":[{"ip":"192.168.121.250"}],"podIP":"10.233.66.97","podIPs":[{"ip":"10.233.66.97"}],"startTime":"2023-12-19T11:20:25Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-12-19T11:20:25Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"987dae5a853a43c663ab2f902708e65874bd2c0189aa0bc57d81ffb57187d089","containerID":"cri-o://734c086d3092c16703ccb7b33f72612ee5e50a2643c96b148a60800b35aa9ac3","started":true}],"qosClass":"BestEffort"}}]}

  Dec 19 11:20:27.442: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-4918" for this suite. @ 12/19/23 11:20:27.457
• [2.356 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/lifecycle_hook.go:136
  STEP: Creating a kubernetes client @ 12/19/23 11:20:27.485
  Dec 19 11:20:27.485: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 12/19/23 11:20:27.501
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:20:27.539
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:20:27.548
  STEP: create the container to handle the HTTPGet hook request. @ 12/19/23 11:20:27.563
  STEP: create the pod with lifecycle hook @ 12/19/23 11:20:29.614
  STEP: check poststart hook @ 12/19/23 11:20:31.646
  STEP: delete the pod with lifecycle hook @ 12/19/23 11:20:31.705
  Dec 19 11:20:35.758: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-1408" for this suite. @ 12/19/23 11:20:35.771
• [8.300 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 12/19/23 11:20:35.786
  Dec 19 11:20:35.786: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename projected @ 12/19/23 11:20:35.788
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:20:35.819
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:20:35.823
  STEP: Creating projection with secret that has name projected-secret-test-map-509774d1-addb-4e41-a1c2-29b87830853d @ 12/19/23 11:20:35.828
  STEP: Creating a pod to test consume secrets @ 12/19/23 11:20:35.838
  STEP: Saw pod success @ 12/19/23 11:20:39.881
  Dec 19 11:20:39.891: INFO: Trying to get logs from node dah7vaemeeho-3 pod pod-projected-secrets-1926741c-0dd3-4122-a753-e994956620a8 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 12/19/23 11:20:39.91
  Dec 19 11:20:39.942: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5526" for this suite. @ 12/19/23 11:20:39.953
• [4.182 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:132
  STEP: Creating a kubernetes client @ 12/19/23 11:20:39.974
  Dec 19 11:20:39.974: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename projected @ 12/19/23 11:20:39.979
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:20:40.017
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:20:40.025
  STEP: Creating the pod @ 12/19/23 11:20:40.031
  Dec 19 11:20:42.635: INFO: Successfully updated pod "labelsupdatec45a819e-f0e3-4f15-919c-1bd62b2d5ac9"
  Dec 19 11:20:46.698: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5504" for this suite. @ 12/19/23 11:20:46.713
• [6.760 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:70
  STEP: Creating a kubernetes client @ 12/19/23 11:20:46.738
  Dec 19 11:20:46.738: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename downward-api @ 12/19/23 11:20:46.745
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:20:46.774
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:20:46.78
  STEP: Creating a pod to test downward API volume plugin @ 12/19/23 11:20:46.785
  STEP: Saw pod success @ 12/19/23 11:20:50.841
  Dec 19 11:20:50.850: INFO: Trying to get logs from node dah7vaemeeho-3 pod downwardapi-volume-ba73c36f-c230-4c05-8841-560b3112e060 container client-container: <nil>
  STEP: delete the pod @ 12/19/23 11:20:50.87
  Dec 19 11:20:50.905: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7802" for this suite. @ 12/19/23 11:20:50.915
• [4.194 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:250
  STEP: Creating a kubernetes client @ 12/19/23 11:20:50.933
  Dec 19 11:20:50.933: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename webhook @ 12/19/23 11:20:50.937
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:20:50.978
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:20:50.984
  STEP: Setting up server cert @ 12/19/23 11:20:51.065
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/19/23 11:20:52.73
  STEP: Deploying the webhook pod @ 12/19/23 11:20:52.758
  STEP: Wait for the deployment to be ready @ 12/19/23 11:20:52.8
  Dec 19 11:20:52.854: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/19/23 11:20:54.876
  STEP: Verifying the service has paired with the endpoint @ 12/19/23 11:20:54.903
  Dec 19 11:20:55.903: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 12/19/23 11:20:55.92
  STEP: create a configmap that should be updated by the webhook @ 12/19/23 11:20:55.975
  Dec 19 11:20:56.178: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2918" for this suite. @ 12/19/23 11:20:56.195
  STEP: Destroying namespace "webhook-markers-8222" for this suite. @ 12/19/23 11:20:56.216
• [5.298 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/aggregator.go:98
  STEP: Creating a kubernetes client @ 12/19/23 11:20:56.231
  Dec 19 11:20:56.231: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename aggregator @ 12/19/23 11:20:56.234
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:20:56.276
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:20:56.285
  Dec 19 11:20:56.297: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Registering the sample API server. @ 12/19/23 11:20:56.299
  Dec 19 11:20:57.006: INFO: Found ClusterRoles; assuming RBAC is enabled.
  Dec 19 11:20:57.166: INFO: deployment "sample-apiserver-deployment" doesn't have the required revision set
  Dec 19 11:20:59.263: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.December, 19, 11, 20, 57, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 11, 20, 57, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 19, 11, 20, 57, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 11, 20, 57, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Dec 19 11:21:01.281: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.December, 19, 11, 20, 57, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 11, 20, 57, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 19, 11, 20, 57, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 11, 20, 57, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Dec 19 11:21:03.280: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.December, 19, 11, 20, 57, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 11, 20, 57, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 19, 11, 20, 57, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 11, 20, 57, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Dec 19 11:21:05.273: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.December, 19, 11, 20, 57, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 11, 20, 57, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 19, 11, 20, 57, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 11, 20, 57, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Dec 19 11:21:07.277: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.December, 19, 11, 20, 57, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 11, 20, 57, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 19, 11, 20, 57, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 11, 20, 57, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Dec 19 11:21:09.280: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.December, 19, 11, 20, 57, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 11, 20, 57, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 19, 11, 20, 57, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 11, 20, 57, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Dec 19 11:21:11.286: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.December, 19, 11, 20, 57, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 11, 20, 57, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 19, 11, 20, 57, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 11, 20, 57, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Dec 19 11:21:13.270: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.December, 19, 11, 20, 57, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 11, 20, 57, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 19, 11, 20, 57, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 11, 20, 57, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Dec 19 11:21:15.277: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.December, 19, 11, 20, 57, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 11, 20, 57, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 19, 11, 20, 57, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 11, 20, 57, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Dec 19 11:21:17.273: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.December, 19, 11, 20, 57, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 11, 20, 57, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 19, 11, 20, 57, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 11, 20, 57, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Dec 19 11:21:19.277: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.December, 19, 11, 20, 57, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 11, 20, 57, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 19, 11, 20, 57, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 11, 20, 57, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Dec 19 11:21:21.274: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.December, 19, 11, 20, 57, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 11, 20, 57, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 19, 11, 20, 57, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 11, 20, 57, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-99565549d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Dec 19 11:21:23.464: INFO: Waited 144.055083ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 12/19/23 11:21:23.574
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 12/19/23 11:21:23.582
  STEP: List APIServices @ 12/19/23 11:21:23.603
  Dec 19 11:21:23.624: INFO: Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 12/19/23 11:21:23.624
  Dec 19 11:21:23.667: INFO: APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 12/19/23 11:21:23.668
  Dec 19 11:21:23.701: INFO: updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2023, time.December, 19, 11, 21, 23, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 12/19/23 11:21:23.702
  Dec 19 11:21:23.715: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2023-12-19 11:21:23 +0000 UTC Passed all checks passed}
  Dec 19 11:21:23.715: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Dec 19 11:21:23.715: INFO: Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 12/19/23 11:21:23.715
  Dec 19 11:21:23.735: INFO: Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-1662396045" @ 12/19/23 11:21:23.736
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 12/19/23 11:21:23.776
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 12/19/23 11:21:23.794
  STEP: Patch APIService Status @ 12/19/23 11:21:23.807
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 12/19/23 11:21:23.828
  Dec 19 11:21:23.840: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2023-12-19 11:21:23 +0000 UTC Passed all checks passed}
  Dec 19 11:21:23.840: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Dec 19 11:21:23.841: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  Dec 19 11:21:23.841: INFO: Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 12/19/23 11:21:23.841
  STEP: Confirm that the generated APIService has been deleted @ 12/19/23 11:21:23.871
  Dec 19 11:21:23.872: INFO: Requesting list of APIServices to confirm quantity
  Dec 19 11:21:23.886: INFO: Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  Dec 19 11:21:23.886: INFO: APIService v1alpha1.wardle.example.com has been deleted.
  Dec 19 11:21:24.179: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-5219" for this suite. @ 12/19/23 11:21:24.197
• [27.983 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:1632
  STEP: Creating a kubernetes client @ 12/19/23 11:21:24.216
  Dec 19 11:21:24.216: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename kubectl @ 12/19/23 11:21:24.22
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:21:24.25
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:21:24.261
  STEP: creating the pod @ 12/19/23 11:21:24.265
  Dec 19 11:21:24.275: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=kubectl-8135 create -f -'
  Dec 19 11:21:24.709: INFO: stderr: ""
  Dec 19 11:21:24.709: INFO: stdout: "pod/pause created\n"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 12/19/23 11:21:26.738
  Dec 19 11:21:26.738: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=kubectl-8135 label pods pause testing-label=testing-label-value'
  Dec 19 11:21:26.989: INFO: stderr: ""
  Dec 19 11:21:26.989: INFO: stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 12/19/23 11:21:26.989
  Dec 19 11:21:26.990: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=kubectl-8135 get pod pause -L testing-label'
  Dec 19 11:21:27.220: INFO: stderr: ""
  Dec 19 11:21:27.220: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          3s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 12/19/23 11:21:27.22
  Dec 19 11:21:27.220: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=kubectl-8135 label pods pause testing-label-'
  Dec 19 11:21:27.471: INFO: stderr: ""
  Dec 19 11:21:27.471: INFO: stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 12/19/23 11:21:27.471
  Dec 19 11:21:27.472: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=kubectl-8135 get pod pause -L testing-label'
  Dec 19 11:21:27.660: INFO: stderr: ""
  Dec 19 11:21:27.660: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          3s    \n"
  STEP: using delete to clean up resources @ 12/19/23 11:21:27.661
  Dec 19 11:21:27.661: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=kubectl-8135 delete --grace-period=0 --force -f -'
  Dec 19 11:21:27.893: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Dec 19 11:21:27.893: INFO: stdout: "pod \"pause\" force deleted\n"
  Dec 19 11:21:27.894: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=kubectl-8135 get rc,svc -l name=pause --no-headers'
  Dec 19 11:21:28.081: INFO: stderr: "No resources found in kubectl-8135 namespace.\n"
  Dec 19 11:21:28.081: INFO: stdout: ""
  Dec 19 11:21:28.081: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=kubectl-8135 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Dec 19 11:21:28.240: INFO: stderr: ""
  Dec 19 11:21:28.240: INFO: stdout: ""
  Dec 19 11:21:28.240: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8135" for this suite. @ 12/19/23 11:21:28.252
• [4.051 seconds]
------------------------------
SSS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:2236
  STEP: Creating a kubernetes client @ 12/19/23 11:21:28.266
  Dec 19 11:21:28.266: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename services @ 12/19/23 11:21:28.269
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:21:28.304
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:21:28.313
  STEP: creating service in namespace services-8231 @ 12/19/23 11:21:28.319
  STEP: creating service affinity-nodeport-transition in namespace services-8231 @ 12/19/23 11:21:28.319
  STEP: creating replication controller affinity-nodeport-transition in namespace services-8231 @ 12/19/23 11:21:28.353
  I1219 11:21:28.372486      14 runners.go:197] Created replication controller with name: affinity-nodeport-transition, namespace: services-8231, replica count: 3
  I1219 11:21:31.428456      14 runners.go:197] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Dec 19 11:21:31.477: INFO: Creating new exec pod
  Dec 19 11:21:34.530: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=services-8231 exec execpod-affinityj4kd4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  Dec 19 11:21:34.904: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
  Dec 19 11:21:34.904: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Dec 19 11:21:34.905: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=services-8231 exec execpod-affinityj4kd4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.11.168 80'
  Dec 19 11:21:35.241: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.11.168 80\nConnection to 10.233.11.168 80 port [tcp/http] succeeded!\n"
  Dec 19 11:21:35.241: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Dec 19 11:21:35.242: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=services-8231 exec execpod-affinityj4kd4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.147 32095'
  Dec 19 11:21:35.563: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.147 32095\nConnection to 192.168.121.147 32095 port [tcp/*] succeeded!\n"
  Dec 19 11:21:35.563: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Dec 19 11:21:35.563: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=services-8231 exec execpod-affinityj4kd4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.250 32095'
  Dec 19 11:21:35.883: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.250 32095\nConnection to 192.168.121.250 32095 port [tcp/*] succeeded!\n"
  Dec 19 11:21:35.883: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Dec 19 11:21:35.906: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=services-8231 exec execpod-affinityj4kd4 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.121.226:32095/ ; done'
  Dec 19 11:21:36.465: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.226:32095/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.226:32095/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.226:32095/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.226:32095/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.226:32095/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.226:32095/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.226:32095/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.226:32095/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.226:32095/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.226:32095/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.226:32095/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.226:32095/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.226:32095/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.226:32095/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.226:32095/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.226:32095/\n"
  Dec 19 11:21:36.465: INFO: stdout: "\naffinity-nodeport-transition-4mcnd\naffinity-nodeport-transition-s57xn\naffinity-nodeport-transition-cbtf7\naffinity-nodeport-transition-cbtf7\naffinity-nodeport-transition-s57xn\naffinity-nodeport-transition-s57xn\naffinity-nodeport-transition-cbtf7\naffinity-nodeport-transition-cbtf7\naffinity-nodeport-transition-4mcnd\naffinity-nodeport-transition-cbtf7\naffinity-nodeport-transition-cbtf7\naffinity-nodeport-transition-cbtf7\naffinity-nodeport-transition-s57xn\naffinity-nodeport-transition-s57xn\naffinity-nodeport-transition-cbtf7\naffinity-nodeport-transition-4mcnd"
  Dec 19 11:21:36.465: INFO: Received response from host: affinity-nodeport-transition-4mcnd
  Dec 19 11:21:36.465: INFO: Received response from host: affinity-nodeport-transition-s57xn
  Dec 19 11:21:36.465: INFO: Received response from host: affinity-nodeport-transition-cbtf7
  Dec 19 11:21:36.465: INFO: Received response from host: affinity-nodeport-transition-cbtf7
  Dec 19 11:21:36.466: INFO: Received response from host: affinity-nodeport-transition-s57xn
  Dec 19 11:21:36.466: INFO: Received response from host: affinity-nodeport-transition-s57xn
  Dec 19 11:21:36.466: INFO: Received response from host: affinity-nodeport-transition-cbtf7
  Dec 19 11:21:36.466: INFO: Received response from host: affinity-nodeport-transition-cbtf7
  Dec 19 11:21:36.466: INFO: Received response from host: affinity-nodeport-transition-4mcnd
  Dec 19 11:21:36.466: INFO: Received response from host: affinity-nodeport-transition-cbtf7
  Dec 19 11:21:36.466: INFO: Received response from host: affinity-nodeport-transition-cbtf7
  Dec 19 11:21:36.466: INFO: Received response from host: affinity-nodeport-transition-cbtf7
  Dec 19 11:21:36.466: INFO: Received response from host: affinity-nodeport-transition-s57xn
  Dec 19 11:21:36.466: INFO: Received response from host: affinity-nodeport-transition-s57xn
  Dec 19 11:21:36.466: INFO: Received response from host: affinity-nodeport-transition-cbtf7
  Dec 19 11:21:36.466: INFO: Received response from host: affinity-nodeport-transition-4mcnd
  Dec 19 11:21:36.488: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=services-8231 exec execpod-affinityj4kd4 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.121.226:32095/ ; done'
  Dec 19 11:21:37.046: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.226:32095/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.226:32095/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.226:32095/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.226:32095/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.226:32095/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.226:32095/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.226:32095/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.226:32095/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.226:32095/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.226:32095/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.226:32095/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.226:32095/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.226:32095/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.226:32095/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.226:32095/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.226:32095/\n"
  Dec 19 11:21:37.046: INFO: stdout: "\naffinity-nodeport-transition-cbtf7\naffinity-nodeport-transition-cbtf7\naffinity-nodeport-transition-cbtf7\naffinity-nodeport-transition-cbtf7\naffinity-nodeport-transition-cbtf7\naffinity-nodeport-transition-cbtf7\naffinity-nodeport-transition-cbtf7\naffinity-nodeport-transition-cbtf7\naffinity-nodeport-transition-cbtf7\naffinity-nodeport-transition-cbtf7\naffinity-nodeport-transition-cbtf7\naffinity-nodeport-transition-cbtf7\naffinity-nodeport-transition-cbtf7\naffinity-nodeport-transition-cbtf7\naffinity-nodeport-transition-cbtf7\naffinity-nodeport-transition-cbtf7"
  Dec 19 11:21:37.047: INFO: Received response from host: affinity-nodeport-transition-cbtf7
  Dec 19 11:21:37.047: INFO: Received response from host: affinity-nodeport-transition-cbtf7
  Dec 19 11:21:37.047: INFO: Received response from host: affinity-nodeport-transition-cbtf7
  Dec 19 11:21:37.047: INFO: Received response from host: affinity-nodeport-transition-cbtf7
  Dec 19 11:21:37.047: INFO: Received response from host: affinity-nodeport-transition-cbtf7
  Dec 19 11:21:37.050: INFO: Received response from host: affinity-nodeport-transition-cbtf7
  Dec 19 11:21:37.050: INFO: Received response from host: affinity-nodeport-transition-cbtf7
  Dec 19 11:21:37.050: INFO: Received response from host: affinity-nodeport-transition-cbtf7
  Dec 19 11:21:37.050: INFO: Received response from host: affinity-nodeport-transition-cbtf7
  Dec 19 11:21:37.050: INFO: Received response from host: affinity-nodeport-transition-cbtf7
  Dec 19 11:21:37.050: INFO: Received response from host: affinity-nodeport-transition-cbtf7
  Dec 19 11:21:37.050: INFO: Received response from host: affinity-nodeport-transition-cbtf7
  Dec 19 11:21:37.050: INFO: Received response from host: affinity-nodeport-transition-cbtf7
  Dec 19 11:21:37.050: INFO: Received response from host: affinity-nodeport-transition-cbtf7
  Dec 19 11:21:37.050: INFO: Received response from host: affinity-nodeport-transition-cbtf7
  Dec 19 11:21:37.050: INFO: Received response from host: affinity-nodeport-transition-cbtf7
  Dec 19 11:21:37.052: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-8231, will wait for the garbage collector to delete the pods @ 12/19/23 11:21:37.128
  Dec 19 11:21:37.207: INFO: Deleting ReplicationController affinity-nodeport-transition took: 22.11074ms
  Dec 19 11:21:37.309: INFO: Terminating ReplicationController affinity-nodeport-transition pods took: 101.646438ms
  Dec 19 11:21:40.873: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8231" for this suite. @ 12/19/23 11:21:40.887
• [12.634 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 12/19/23 11:21:40.908
  Dec 19 11:21:40.908: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename watch @ 12/19/23 11:21:40.912
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:21:40.947
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:21:40.955
  STEP: creating a watch on configmaps with label A @ 12/19/23 11:21:40.963
  STEP: creating a watch on configmaps with label B @ 12/19/23 11:21:40.968
  STEP: creating a watch on configmaps with label A or B @ 12/19/23 11:21:40.973
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 12/19/23 11:21:40.978
  Dec 19 11:21:40.992: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-1465  76cce35c-245a-432d-8ef4-0091c3060cbb 32332 0 2023-12-19 11:21:40 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-12-19 11:21:40 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Dec 19 11:21:40.996: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-1465  76cce35c-245a-432d-8ef4-0091c3060cbb 32332 0 2023-12-19 11:21:40 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-12-19 11:21:40 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 12/19/23 11:21:40.997
  Dec 19 11:21:41.021: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-1465  76cce35c-245a-432d-8ef4-0091c3060cbb 32333 0 2023-12-19 11:21:40 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-12-19 11:21:41 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  Dec 19 11:21:41.022: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-1465  76cce35c-245a-432d-8ef4-0091c3060cbb 32333 0 2023-12-19 11:21:40 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-12-19 11:21:41 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 12/19/23 11:21:41.022
  Dec 19 11:21:41.085: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-1465  76cce35c-245a-432d-8ef4-0091c3060cbb 32334 0 2023-12-19 11:21:40 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-12-19 11:21:41 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Dec 19 11:21:41.089: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-1465  76cce35c-245a-432d-8ef4-0091c3060cbb 32334 0 2023-12-19 11:21:40 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-12-19 11:21:41 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 12/19/23 11:21:41.091
  Dec 19 11:21:41.131: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-1465  76cce35c-245a-432d-8ef4-0091c3060cbb 32336 0 2023-12-19 11:21:40 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-12-19 11:21:41 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Dec 19 11:21:41.133: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-1465  76cce35c-245a-432d-8ef4-0091c3060cbb 32336 0 2023-12-19 11:21:40 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-12-19 11:21:41 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 12/19/23 11:21:41.133
  Dec 19 11:21:41.150: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-1465  f4705f95-b671-4e85-b525-47096d74b401 32337 0 2023-12-19 11:21:41 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-12-19 11:21:41 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Dec 19 11:21:41.151: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-1465  f4705f95-b671-4e85-b525-47096d74b401 32337 0 2023-12-19 11:21:41 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-12-19 11:21:41 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 12/19/23 11:21:51.153
  Dec 19 11:21:51.175: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-1465  f4705f95-b671-4e85-b525-47096d74b401 32383 0 2023-12-19 11:21:41 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-12-19 11:21:41 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Dec 19 11:21:51.176: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-1465  f4705f95-b671-4e85-b525-47096d74b401 32383 0 2023-12-19 11:21:41 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-12-19 11:21:41 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Dec 19 11:22:01.181: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-1465" for this suite. @ 12/19/23 11:22:01.195
• [20.304 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/containers.go:41
  STEP: Creating a kubernetes client @ 12/19/23 11:22:01.225
  Dec 19 11:22:01.225: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename containers @ 12/19/23 11:22:01.229
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:22:01.259
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:22:01.267
  Dec 19 11:22:03.347: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-5377" for this suite. @ 12/19/23 11:22:03.361
• [2.153 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_configmap.go:100
  STEP: Creating a kubernetes client @ 12/19/23 11:22:03.39
  Dec 19 11:22:03.390: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename projected @ 12/19/23 11:22:03.394
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:22:03.441
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:22:03.454
  STEP: Creating configMap with name projected-configmap-test-volume-map-103a8f53-1908-49de-9954-e64f43d50c10 @ 12/19/23 11:22:03.462
  STEP: Creating a pod to test consume configMaps @ 12/19/23 11:22:03.475
  STEP: Saw pod success @ 12/19/23 11:22:07.555
  Dec 19 11:22:07.567: INFO: Trying to get logs from node dah7vaemeeho-3 pod pod-projected-configmaps-13790c5e-186d-42d1-b1ba-d71a7ad7bc65 container agnhost-container: <nil>
  STEP: delete the pod @ 12/19/23 11:22:07.587
  Dec 19 11:22:07.619: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9495" for this suite. @ 12/19/23 11:22:07.633
• [4.267 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
test/e2e/common/node/expansion.go:115
  STEP: Creating a kubernetes client @ 12/19/23 11:22:07.66
  Dec 19 11:22:07.661: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename var-expansion @ 12/19/23 11:22:07.665
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:22:07.723
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:22:07.736
  STEP: Creating a pod to test substitution in volume subpath @ 12/19/23 11:22:07.75
  STEP: Saw pod success @ 12/19/23 11:22:11.836
  Dec 19 11:22:11.842: INFO: Trying to get logs from node dah7vaemeeho-3 pod var-expansion-dc8800cc-aaef-498a-ad1e-b4ae467711ee container dapi-container: <nil>
  STEP: delete the pod @ 12/19/23 11:22:11.854
  Dec 19 11:22:11.889: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-5684" for this suite. @ 12/19/23 11:22:11.904
• [4.260 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/logs.go:114
  STEP: Creating a kubernetes client @ 12/19/23 11:22:11.92
  Dec 19 11:22:11.920: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename kubectl-logs @ 12/19/23 11:22:11.923
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:22:11.964
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:22:11.97
  STEP: creating an pod @ 12/19/23 11:22:11.976
  Dec 19 11:22:11.976: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=kubectl-logs-9276 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.45 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  Dec 19 11:22:12.217: INFO: stderr: ""
  Dec 19 11:22:12.217: INFO: stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 12/19/23 11:22:12.217
  Dec 19 11:22:12.218: INFO: Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  Dec 19 11:22:14.242: INFO: Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 12/19/23 11:22:14.243
  Dec 19 11:22:14.243: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=kubectl-logs-9276 logs logs-generator logs-generator'
  Dec 19 11:22:14.472: INFO: stderr: ""
  Dec 19 11:22:14.472: INFO: stdout: "I1219 11:22:13.031694       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/kube-system/pods/2qt4 308\nI1219 11:22:13.231313       1 logs_generator.go:76] 1 GET /api/v1/namespaces/kube-system/pods/7nc 330\nI1219 11:22:13.434275       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/default/pods/ld2 536\nI1219 11:22:13.631748       1 logs_generator.go:76] 3 POST /api/v1/namespaces/kube-system/pods/d6hv 342\nI1219 11:22:13.831194       1 logs_generator.go:76] 4 GET /api/v1/namespaces/kube-system/pods/ftwt 413\nI1219 11:22:14.032579       1 logs_generator.go:76] 5 PUT /api/v1/namespaces/default/pods/9pb 306\nI1219 11:22:14.231118       1 logs_generator.go:76] 6 POST /api/v1/namespaces/default/pods/fqw 597\nI1219 11:22:14.431675       1 logs_generator.go:76] 7 GET /api/v1/namespaces/default/pods/2qp 332\n"
  STEP: limiting log lines @ 12/19/23 11:22:14.472
  Dec 19 11:22:14.473: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=kubectl-logs-9276 logs logs-generator logs-generator --tail=1'
  Dec 19 11:22:14.635: INFO: stderr: ""
  Dec 19 11:22:14.635: INFO: stdout: "I1219 11:22:14.431675       1 logs_generator.go:76] 7 GET /api/v1/namespaces/default/pods/2qp 332\n"
  Dec 19 11:22:14.635: INFO: got output "I1219 11:22:14.431675       1 logs_generator.go:76] 7 GET /api/v1/namespaces/default/pods/2qp 332\n"
  STEP: limiting log bytes @ 12/19/23 11:22:14.635
  Dec 19 11:22:14.635: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=kubectl-logs-9276 logs logs-generator logs-generator --limit-bytes=1'
  Dec 19 11:22:14.827: INFO: stderr: ""
  Dec 19 11:22:14.835: INFO: stdout: "I"
  Dec 19 11:22:14.836: INFO: got output "I"
  STEP: exposing timestamps @ 12/19/23 11:22:14.837
  Dec 19 11:22:14.839: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=kubectl-logs-9276 logs logs-generator logs-generator --tail=1 --timestamps'
  Dec 19 11:22:15.093: INFO: stderr: ""
  Dec 19 11:22:15.093: INFO: stdout: "2023-12-19T11:22:15.032201039Z I1219 11:22:15.032115       1 logs_generator.go:76] 10 PUT /api/v1/namespaces/ns/pods/5hb 410\n"
  Dec 19 11:22:15.093: INFO: got output "2023-12-19T11:22:15.032201039Z I1219 11:22:15.032115       1 logs_generator.go:76] 10 PUT /api/v1/namespaces/ns/pods/5hb 410\n"
  STEP: restricting to a time range @ 12/19/23 11:22:15.093
  Dec 19 11:22:17.594: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=kubectl-logs-9276 logs logs-generator logs-generator --since=1s'
  Dec 19 11:22:17.802: INFO: stderr: ""
  Dec 19 11:22:17.803: INFO: stdout: "I1219 11:22:16.831757       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/default/pods/bsvg 301\nI1219 11:22:17.031172       1 logs_generator.go:76] 20 PUT /api/v1/namespaces/ns/pods/hrn 491\nI1219 11:22:17.231599       1 logs_generator.go:76] 21 GET /api/v1/namespaces/default/pods/wdv8 367\nI1219 11:22:17.430912       1 logs_generator.go:76] 22 PUT /api/v1/namespaces/default/pods/8rm6 575\nI1219 11:22:17.631562       1 logs_generator.go:76] 23 GET /api/v1/namespaces/default/pods/lmvq 326\n"
  Dec 19 11:22:17.804: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=kubectl-logs-9276 logs logs-generator logs-generator --since=24h'
  Dec 19 11:22:18.001: INFO: stderr: ""
  Dec 19 11:22:18.001: INFO: stdout: "I1219 11:22:13.031694       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/kube-system/pods/2qt4 308\nI1219 11:22:13.231313       1 logs_generator.go:76] 1 GET /api/v1/namespaces/kube-system/pods/7nc 330\nI1219 11:22:13.434275       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/default/pods/ld2 536\nI1219 11:22:13.631748       1 logs_generator.go:76] 3 POST /api/v1/namespaces/kube-system/pods/d6hv 342\nI1219 11:22:13.831194       1 logs_generator.go:76] 4 GET /api/v1/namespaces/kube-system/pods/ftwt 413\nI1219 11:22:14.032579       1 logs_generator.go:76] 5 PUT /api/v1/namespaces/default/pods/9pb 306\nI1219 11:22:14.231118       1 logs_generator.go:76] 6 POST /api/v1/namespaces/default/pods/fqw 597\nI1219 11:22:14.431675       1 logs_generator.go:76] 7 GET /api/v1/namespaces/default/pods/2qp 332\nI1219 11:22:14.631016       1 logs_generator.go:76] 8 POST /api/v1/namespaces/kube-system/pods/dhx 486\nI1219 11:22:14.834958       1 logs_generator.go:76] 9 GET /api/v1/namespaces/default/pods/xbs 480\nI1219 11:22:15.032115       1 logs_generator.go:76] 10 PUT /api/v1/namespaces/ns/pods/5hb 410\nI1219 11:22:15.231416       1 logs_generator.go:76] 11 GET /api/v1/namespaces/ns/pods/pf7w 254\nI1219 11:22:15.430791       1 logs_generator.go:76] 12 GET /api/v1/namespaces/default/pods/wdj 315\nI1219 11:22:15.631206       1 logs_generator.go:76] 13 GET /api/v1/namespaces/ns/pods/8tkb 381\nI1219 11:22:15.831663       1 logs_generator.go:76] 14 PUT /api/v1/namespaces/ns/pods/6ccb 329\nI1219 11:22:16.030932       1 logs_generator.go:76] 15 POST /api/v1/namespaces/ns/pods/dt5w 494\nI1219 11:22:16.231394       1 logs_generator.go:76] 16 GET /api/v1/namespaces/default/pods/cfg 291\nI1219 11:22:16.431760       1 logs_generator.go:76] 17 POST /api/v1/namespaces/ns/pods/957 218\nI1219 11:22:16.631177       1 logs_generator.go:76] 18 POST /api/v1/namespaces/ns/pods/tnjk 412\nI1219 11:22:16.831757       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/default/pods/bsvg 301\nI1219 11:22:17.031172       1 logs_generator.go:76] 20 PUT /api/v1/namespaces/ns/pods/hrn 491\nI1219 11:22:17.231599       1 logs_generator.go:76] 21 GET /api/v1/namespaces/default/pods/wdv8 367\nI1219 11:22:17.430912       1 logs_generator.go:76] 22 PUT /api/v1/namespaces/default/pods/8rm6 575\nI1219 11:22:17.631562       1 logs_generator.go:76] 23 GET /api/v1/namespaces/default/pods/lmvq 326\nI1219 11:22:17.832057       1 logs_generator.go:76] 24 PUT /api/v1/namespaces/kube-system/pods/m5jt 252\n"
  Dec 19 11:22:18.001: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=kubectl-logs-9276 delete pod logs-generator'
  Dec 19 11:22:19.233: INFO: stderr: ""
  Dec 19 11:22:19.236: INFO: stdout: "pod \"logs-generator\" deleted\n"
  Dec 19 11:22:19.248: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-9276" for this suite. @ 12/19/23 11:22:19.274
• [7.376 seconds]
------------------------------
S
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 12/19/23 11:22:19.298
  Dec 19 11:22:19.298: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename subpath @ 12/19/23 11:22:19.307
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:22:19.349
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:22:19.366
  STEP: Setting up data @ 12/19/23 11:22:19.377
  STEP: Creating pod pod-subpath-test-projected-d7sw @ 12/19/23 11:22:19.413
  STEP: Creating a pod to test atomic-volume-subpath @ 12/19/23 11:22:19.414
  STEP: Saw pod success @ 12/19/23 11:22:43.572
  Dec 19 11:22:43.578: INFO: Trying to get logs from node dah7vaemeeho-3 pod pod-subpath-test-projected-d7sw container test-container-subpath-projected-d7sw: <nil>
  STEP: delete the pod @ 12/19/23 11:22:43.597
  STEP: Deleting pod pod-subpath-test-projected-d7sw @ 12/19/23 11:22:43.629
  Dec 19 11:22:43.629: INFO: Deleting pod "pod-subpath-test-projected-d7sw" in namespace "subpath-643"
  Dec 19 11:22:43.637: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-643" for this suite. @ 12/19/23 11:22:43.647
• [24.368 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 12/19/23 11:22:43.672
  Dec 19 11:22:43.673: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename pods @ 12/19/23 11:22:43.677
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:22:43.715
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:22:43.719
  STEP: Saw pod success @ 12/19/23 11:22:49.849
  Dec 19 11:22:49.859: INFO: Trying to get logs from node dah7vaemeeho-3 pod client-envvars-89beed51-1392-4a4d-87ba-a663104ecc5c container env3cont: <nil>
  STEP: delete the pod @ 12/19/23 11:22:49.886
  Dec 19 11:22:49.921: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6119" for this suite. @ 12/19/23 11:22:49.93
• [6.272 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
test/e2e/common/node/podtemplates.go:123
  STEP: Creating a kubernetes client @ 12/19/23 11:22:49.945
  Dec 19 11:22:49.945: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename podtemplate @ 12/19/23 11:22:49.947
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:22:49.987
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:22:49.993
  STEP: Create set of pod templates @ 12/19/23 11:22:49.998
  Dec 19 11:22:50.012: INFO: created test-podtemplate-1
  Dec 19 11:22:50.023: INFO: created test-podtemplate-2
  Dec 19 11:22:50.034: INFO: created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 12/19/23 11:22:50.034
  STEP: delete collection of pod templates @ 12/19/23 11:22:50.043
  Dec 19 11:22:50.043: INFO: requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 12/19/23 11:22:50.084
  Dec 19 11:22:50.084: INFO: requesting list of pod templates to confirm quantity
  Dec 19 11:22:50.089: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-4668" for this suite. @ 12/19/23 11:22:50.099
• [0.167 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:223
  STEP: Creating a kubernetes client @ 12/19/23 11:22:50.115
  Dec 19 11:22:50.115: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename downward-api @ 12/19/23 11:22:50.118
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:22:50.144
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:22:50.15
  STEP: Creating a pod to test downward API volume plugin @ 12/19/23 11:22:50.157
  STEP: Saw pod success @ 12/19/23 11:22:54.209
  Dec 19 11:22:54.220: INFO: Trying to get logs from node dah7vaemeeho-3 pod downwardapi-volume-a4b02c4a-de43-4bc9-916b-c77f18f7ba8a container client-container: <nil>
  STEP: delete the pod @ 12/19/23 11:22:54.234
  Dec 19 11:22:54.297: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7193" for this suite. @ 12/19/23 11:22:54.309
• [4.210 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
test/e2e/common/node/runtimeclass.go:191
  STEP: Creating a kubernetes client @ 12/19/23 11:22:54.328
  Dec 19 11:22:54.328: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename runtimeclass @ 12/19/23 11:22:54.334
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:22:54.361
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:22:54.369
  STEP: getting /apis @ 12/19/23 11:22:54.375
  STEP: getting /apis/node.k8s.io @ 12/19/23 11:22:54.382
  STEP: getting /apis/node.k8s.io/v1 @ 12/19/23 11:22:54.385
  STEP: creating @ 12/19/23 11:22:54.387
  STEP: watching @ 12/19/23 11:22:54.423
  Dec 19 11:22:54.424: INFO: starting watch
  STEP: getting @ 12/19/23 11:22:54.438
  STEP: listing @ 12/19/23 11:22:54.444
  STEP: patching @ 12/19/23 11:22:54.45
  STEP: updating @ 12/19/23 11:22:54.463
  Dec 19 11:22:54.480: INFO: waiting for watch events with expected annotations
  STEP: deleting @ 12/19/23 11:22:54.48
  STEP: deleting a collection @ 12/19/23 11:22:54.51
  Dec 19 11:22:54.546: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-3518" for this suite. @ 12/19/23 11:22:54.555
• [0.243 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_configmap.go:175
  STEP: Creating a kubernetes client @ 12/19/23 11:22:54.573
  Dec 19 11:22:54.574: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename projected @ 12/19/23 11:22:54.578
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:22:54.606
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:22:54.615
  STEP: Creating configMap with name cm-test-opt-del-251ac617-723d-4cac-878b-29bd9d65cb3d @ 12/19/23 11:22:54.632
  STEP: Creating configMap with name cm-test-opt-upd-703e0ef3-f609-4f0a-8c85-6adbcaeeaf8a @ 12/19/23 11:22:54.643
  STEP: Creating the pod @ 12/19/23 11:22:54.651
  STEP: Deleting configmap cm-test-opt-del-251ac617-723d-4cac-878b-29bd9d65cb3d @ 12/19/23 11:22:56.76
  STEP: Updating configmap cm-test-opt-upd-703e0ef3-f609-4f0a-8c85-6adbcaeeaf8a @ 12/19/23 11:22:56.789
  STEP: Creating configMap with name cm-test-opt-create-cb1c91a8-8573-4d56-b42d-f45eedea12cd @ 12/19/23 11:22:56.811
  STEP: waiting to observe update in volume @ 12/19/23 11:22:56.825
  Dec 19 11:22:58.908: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8951" for this suite. @ 12/19/23 11:22:58.923
• [4.372 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/security_context.go:349
  STEP: Creating a kubernetes client @ 12/19/23 11:22:58.956
  Dec 19 11:22:58.957: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename security-context-test @ 12/19/23 11:22:58.961
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:22:59.001
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:22:59.012
  Dec 19 11:23:03.073: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-547" for this suite. @ 12/19/23 11:23:03.084
• [4.143 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/discovery.go:172
  STEP: Creating a kubernetes client @ 12/19/23 11:23:03.104
  Dec 19 11:23:03.104: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename discovery @ 12/19/23 11:23:03.107
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:23:03.142
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:23:03.149
  STEP: Setting up server cert @ 12/19/23 11:23:03.158
  STEP: Requesting APIResourceList from "/api/v1" @ 12/19/23 11:23:04.392
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 12/19/23 11:23:04.401
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 12/19/23 11:23:04.408
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 12/19/23 11:23:04.41
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 12/19/23 11:23:04.412
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 12/19/23 11:23:04.414
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 12/19/23 11:23:04.417
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 12/19/23 11:23:04.422
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 12/19/23 11:23:04.428
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 12/19/23 11:23:04.434
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 12/19/23 11:23:04.437
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 12/19/23 11:23:04.441
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 12/19/23 11:23:04.444
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 12/19/23 11:23:04.446
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 12/19/23 11:23:04.448
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 12/19/23 11:23:04.451
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 12/19/23 11:23:04.456
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 12/19/23 11:23:04.459
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 12/19/23 11:23:04.461
  Dec 19 11:23:04.469: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-9895" for this suite. @ 12/19/23 11:23:04.487
• [1.405 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 12/19/23 11:23:04.509
  Dec 19 11:23:04.509: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename deployment @ 12/19/23 11:23:04.513
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:23:04.556
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:23:04.569
  Dec 19 11:23:04.578: INFO: Creating simple deployment test-new-deployment
  Dec 19 11:23:04.650: INFO: deployment "test-new-deployment" doesn't have the required revision set
  STEP: getting scale subresource @ 12/19/23 11:23:06.687
  STEP: updating a scale subresource @ 12/19/23 11:23:06.696
  STEP: verifying the deployment Spec.Replicas was modified @ 12/19/23 11:23:06.709
  STEP: Patch a scale subresource @ 12/19/23 11:23:06.724
  Dec 19 11:23:06.814: INFO: Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6573",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "751ceb84-a0da-4d59-82cd-652336bb4345",
      ResourceVersion: (string) (len=5) "32839",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838581784,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838581784,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838581786,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838581785,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838581784,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-557759b7c7\" has successfully progressed."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838581786,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838581786,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Dec 19 11:23:06.862: INFO: New ReplicaSet "test-new-deployment-557759b7c7" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6573",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "86bbde4a-df8c-41a7-8eb3-dafe79b0174a",
      ResourceVersion: (string) (len=5) "32841",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838581784,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "4",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "5",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "751ceb84-a0da-4d59-82cd-652336bb4345",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838581786,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 37 35 31 63 65 62  38 34 2d 61 30 64 61 2d  |\"751ceb84-a0da-|
              00000120  34 64 35 39 2d 38 32 63  64 2d 36 35 32 33 33 36  |4d59-82cd-652336|
              00000130  62 62 34 33 34 35 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |bb4345\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838581786,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(4),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Dec 19 11:23:06.896: INFO: Pod "test-new-deployment-557759b7c7-265cz" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-265cz",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6573",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c49abd25-3980-4c6d-afea-063484934ebc",
      ResourceVersion: (string) (len=5) "32842",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838581786,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "86bbde4a-df8c-41a7-8eb3-dafe79b0174a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838581786,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 36  62 62 64 65 34 61 2d 64  |d\":\"86bbde4a-d|
              00000090  66 38 63 2d 34 31 61 37  2d 38 65 62 33 2d 64 61  |f8c-41a7-8eb3-da|
              000000a0  66 65 37 39 62 30 31 37  34 61 5c 22 7d 22 3a 7b  |fe79b0174a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838581786,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pvwvv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pvwvv",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "dah7vaemeeho-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838581786,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838581786,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838581786,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838581786,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838581786,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.147",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.147"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838581786,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 19 11:23:06.901: INFO: Pod "test-new-deployment-557759b7c7-fjw4j" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-fjw4j",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6573",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e7d3a92c-b06b-45cf-aec0-a1dc6b79c6c3",
      ResourceVersion: (string) (len=5) "32827",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838581784,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "86bbde4a-df8c-41a7-8eb3-dafe79b0174a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838581784,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 36  62 62 64 65 34 61 2d 64  |d\":\"86bbde4a-d|
              00000090  66 38 63 2d 34 31 61 37  2d 38 65 62 33 2d 64 61  |f8c-41a7-8eb3-da|
              000000a0  66 65 37 39 62 30 31 37  34 61 5c 22 7d 22 3a 7b  |fe79b0174a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838581785,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 36 2e  31 31 37 5c 22 7d 22 3a  |.233.66.117\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cctts",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cctts",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "dah7vaemeeho-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838581785,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838581784,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838581785,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838581785,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838581784,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.250",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.250"
        }
      },
      PodIP: (string) (len=13) "10.233.66.117",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.66.117"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838581784,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63838581785,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=64) "987dae5a853a43c663ab2f902708e65874bd2c0189aa0bc57d81ffb57187d089",
          ContainerID: (string) (len=72) "cri-o://b93e06e485f243f1a3a9fd6c71d244a6a127a4ac6c1f5c7f7ca621fa367ce171",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 19 11:23:06.905: INFO: Pod "test-new-deployment-557759b7c7-jpggz" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-jpggz",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-6573",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "550cc81c-b038-467d-9a6d-fbc7c72b5708",
      ResourceVersion: (string) (len=5) "32848",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838581786,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "86bbde4a-df8c-41a7-8eb3-dafe79b0174a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838581786,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 36  62 62 64 65 34 61 2d 64  |d\":\"86bbde4a-d|
              00000090  66 38 63 2d 34 31 61 37  2d 38 65 62 33 2d 64 61  |f8c-41a7-8eb3-da|
              000000a0  66 65 37 39 62 30 31 37  34 61 5c 22 7d 22 3a 7b  |fe79b0174a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-r2kmv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-r2kmv",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 19 11:23:06.909: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6573" for this suite. @ 12/19/23 11:23:06.932
• [2.521 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
test/e2e/common/node/configmap.go:139
  STEP: Creating a kubernetes client @ 12/19/23 11:23:07.035
  Dec 19 11:23:07.035: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename configmap @ 12/19/23 11:23:07.039
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:23:07.105
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:23:07.12
  STEP: Creating configMap that has name configmap-test-emptyKey-df401f7f-bfd1-4ea3-8add-3a643602a3af @ 12/19/23 11:23:07.136
  Dec 19 11:23:07.140: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-558" for this suite. @ 12/19/23 11:23:07.153
• [0.138 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 12/19/23 11:23:07.175
  Dec 19 11:23:07.175: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename projected @ 12/19/23 11:23:07.179
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:23:07.222
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:23:07.23
  STEP: Creating projection with secret that has name projected-secret-test-5e9af09e-09cc-43d8-8174-2684a8b4b3c4 @ 12/19/23 11:23:07.24
  STEP: Creating a pod to test consume secrets @ 12/19/23 11:23:07.254
  STEP: Saw pod success @ 12/19/23 11:23:11.313
  Dec 19 11:23:11.322: INFO: Trying to get logs from node dah7vaemeeho-3 pod pod-projected-secrets-62f71d99-9e6d-4856-8754-202e306dd8d5 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 12/19/23 11:23:11.336
  Dec 19 11:23:11.377: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9019" for this suite. @ 12/19/23 11:23:11.393
• [4.234 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
test/e2e/apps/job.go:855
  STEP: Creating a kubernetes client @ 12/19/23 11:23:11.41
  Dec 19 11:23:11.410: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename job @ 12/19/23 11:23:11.412
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:23:11.44
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:23:11.447
  STEP: Creating a suspended job @ 12/19/23 11:23:11.465
  STEP: Patching the Job @ 12/19/23 11:23:11.48
  STEP: Watching for Job to be patched @ 12/19/23 11:23:11.537
  Dec 19 11:23:11.540: INFO: Event ADDED observed for Job e2e-pks4f in namespace job-2330 with labels: map[e2e-job-label:e2e-pks4f] and annotations: map[]
  Dec 19 11:23:11.540: INFO: Event MODIFIED observed for Job e2e-pks4f in namespace job-2330 with labels: map[e2e-job-label:e2e-pks4f] and annotations: map[]
  Dec 19 11:23:11.540: INFO: Event MODIFIED found for Job e2e-pks4f in namespace job-2330 with labels: map[e2e-job-label:e2e-pks4f e2e-pks4f:patched] and annotations: map[]
  STEP: Updating the job @ 12/19/23 11:23:11.541
  STEP: Watching for Job to be updated @ 12/19/23 11:23:11.562
  Dec 19 11:23:11.574: INFO: Event MODIFIED found for Job e2e-pks4f in namespace job-2330 with labels: map[e2e-job-label:e2e-pks4f e2e-pks4f:patched] and annotations: map[updated:true]
  Dec 19 11:23:11.574: INFO: Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 12/19/23 11:23:11.575
  Dec 19 11:23:11.587: INFO: Job: e2e-pks4f as labels: map[e2e-job-label:e2e-pks4f e2e-pks4f:patched]
  STEP: Waiting for job to complete @ 12/19/23 11:23:11.587
  STEP: Delete a job collection with a labelselector @ 12/19/23 11:23:19.597
  STEP: Watching for Job to be deleted @ 12/19/23 11:23:19.617
  Dec 19 11:23:19.620: INFO: Event MODIFIED observed for Job e2e-pks4f in namespace job-2330 with labels: map[e2e-job-label:e2e-pks4f e2e-pks4f:patched] and annotations: map[updated:true]
  Dec 19 11:23:19.621: INFO: Event MODIFIED observed for Job e2e-pks4f in namespace job-2330 with labels: map[e2e-job-label:e2e-pks4f e2e-pks4f:patched] and annotations: map[updated:true]
  Dec 19 11:23:19.628: INFO: Event MODIFIED observed for Job e2e-pks4f in namespace job-2330 with labels: map[e2e-job-label:e2e-pks4f e2e-pks4f:patched] and annotations: map[updated:true]
  Dec 19 11:23:19.632: INFO: Event MODIFIED observed for Job e2e-pks4f in namespace job-2330 with labels: map[e2e-job-label:e2e-pks4f e2e-pks4f:patched] and annotations: map[updated:true]
  Dec 19 11:23:19.633: INFO: Event MODIFIED observed for Job e2e-pks4f in namespace job-2330 with labels: map[e2e-job-label:e2e-pks4f e2e-pks4f:patched] and annotations: map[updated:true]
  Dec 19 11:23:19.635: INFO: Event MODIFIED observed for Job e2e-pks4f in namespace job-2330 with labels: map[e2e-job-label:e2e-pks4f e2e-pks4f:patched] and annotations: map[updated:true]
  Dec 19 11:23:19.637: INFO: Event MODIFIED observed for Job e2e-pks4f in namespace job-2330 with labels: map[e2e-job-label:e2e-pks4f e2e-pks4f:patched] and annotations: map[updated:true]
  Dec 19 11:23:19.638: INFO: Event DELETED found for Job e2e-pks4f in namespace job-2330 with labels: map[e2e-job-label:e2e-pks4f e2e-pks4f:patched] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 12/19/23 11:23:19.639
  Dec 19 11:23:19.651: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-2330" for this suite. @ 12/19/23 11:23:19.669
• [8.285 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
test/e2e/node/security_context.go:170
  STEP: Creating a kubernetes client @ 12/19/23 11:23:19.696
  Dec 19 11:23:19.696: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename security-context @ 12/19/23 11:23:19.699
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:23:19.743
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:23:19.75
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 12/19/23 11:23:19.76
  STEP: Saw pod success @ 12/19/23 11:23:23.806
  Dec 19 11:23:23.815: INFO: Trying to get logs from node dah7vaemeeho-3 pod security-context-db10dffa-f785-4e44-8a12-822f8d8e0e0f container test-container: <nil>
  STEP: delete the pod @ 12/19/23 11:23:23.834
  Dec 19 11:23:23.868: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-8038" for this suite. @ 12/19/23 11:23:23.883
• [4.200 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 12/19/23 11:23:23.899
  Dec 19 11:23:23.900: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename subpath @ 12/19/23 11:23:23.904
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:23:23.938
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:23:23.945
  STEP: Setting up data @ 12/19/23 11:23:23.956
  STEP: Creating pod pod-subpath-test-configmap-jmkz @ 12/19/23 11:23:23.984
  STEP: Creating a pod to test atomic-volume-subpath @ 12/19/23 11:23:23.984
  STEP: Saw pod success @ 12/19/23 11:23:48.201
  Dec 19 11:23:48.209: INFO: Trying to get logs from node dah7vaemeeho-3 pod pod-subpath-test-configmap-jmkz container test-container-subpath-configmap-jmkz: <nil>
  STEP: delete the pod @ 12/19/23 11:23:48.231
  STEP: Deleting pod pod-subpath-test-configmap-jmkz @ 12/19/23 11:23:48.268
  Dec 19 11:23:48.268: INFO: Deleting pod "pod-subpath-test-configmap-jmkz" in namespace "subpath-6694"
  Dec 19 11:23:48.275: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-6694" for this suite. @ 12/19/23 11:23:48.286
• [24.403 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_configmap.go:75
  STEP: Creating a kubernetes client @ 12/19/23 11:23:48.304
  Dec 19 11:23:48.304: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename projected @ 12/19/23 11:23:48.309
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:23:48.352
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:23:48.36
  STEP: Creating configMap with name projected-configmap-test-volume-db0942f4-1939-4b91-a8fd-596f3db4588c @ 12/19/23 11:23:48.371
  STEP: Creating a pod to test consume configMaps @ 12/19/23 11:23:48.384
  STEP: Saw pod success @ 12/19/23 11:23:52.435
  Dec 19 11:23:52.445: INFO: Trying to get logs from node dah7vaemeeho-3 pod pod-projected-configmaps-9b432e3e-f1fe-4af8-86d4-25a018670441 container agnhost-container: <nil>
  STEP: delete the pod @ 12/19/23 11:23:52.469
  Dec 19 11:23:52.519: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1411" for this suite. @ 12/19/23 11:23:52.53
• [4.242 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/flowcontrol.go:270
  STEP: Creating a kubernetes client @ 12/19/23 11:23:52.555
  Dec 19 11:23:52.556: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename apf @ 12/19/23 11:23:52.56
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:23:52.593
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:23:52.599
  STEP: getting /apis @ 12/19/23 11:23:52.606
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 12/19/23 11:23:52.616
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 12/19/23 11:23:52.619
  STEP: creating @ 12/19/23 11:23:52.622
  STEP: getting @ 12/19/23 11:23:52.67
  STEP: listing @ 12/19/23 11:23:52.678
  STEP: watching @ 12/19/23 11:23:52.699
  Dec 19 11:23:52.699: INFO: starting watch
  STEP: patching @ 12/19/23 11:23:52.701
  STEP: updating @ 12/19/23 11:23:52.716
  Dec 19 11:23:52.750: INFO: waiting for watch events with expected annotations
  Dec 19 11:23:52.750: INFO: missing expected annotations, waiting: map[string]string(nil)
  STEP: getting /status @ 12/19/23 11:23:52.75
  STEP: patching /status @ 12/19/23 11:23:52.758
  STEP: updating /status @ 12/19/23 11:23:52.782
  STEP: deleting @ 12/19/23 11:23:52.86
  STEP: deleting a collection @ 12/19/23 11:23:52.899
  Dec 19 11:23:52.958: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-5209" for this suite. @ 12/19/23 11:23:52.97
• [0.432 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_conversion_webhook.go:142
  STEP: Creating a kubernetes client @ 12/19/23 11:23:52.998
  Dec 19 11:23:52.998: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename crd-webhook @ 12/19/23 11:23:53.003
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:23:53.033
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:23:53.041
  STEP: Setting up server cert @ 12/19/23 11:23:53.049
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 12/19/23 11:23:53.774
  STEP: Deploying the custom resource conversion webhook pod @ 12/19/23 11:23:53.807
  STEP: Wait for the deployment to be ready @ 12/19/23 11:23:53.837
  Dec 19 11:23:53.854: INFO: new replicaset for deployment "sample-crd-conversion-webhook-deployment" is yet to be created
  Dec 19 11:23:55.885: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.December, 19, 11, 23, 53, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 11, 23, 53, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 19, 11, 23, 54, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 11, 23, 53, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-crd-conversion-webhook-deployment-7ff47d8d4c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Dec 19 11:23:57.910: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.December, 19, 11, 23, 53, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 11, 23, 53, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 19, 11, 23, 54, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 11, 23, 53, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-crd-conversion-webhook-deployment-7ff47d8d4c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Dec 19 11:23:59.896: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.December, 19, 11, 23, 53, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 11, 23, 53, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 19, 11, 23, 54, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 11, 23, 53, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-crd-conversion-webhook-deployment-7ff47d8d4c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Dec 19 11:24:01.895: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.December, 19, 11, 23, 53, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 11, 23, 53, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 19, 11, 23, 54, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 11, 23, 53, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-crd-conversion-webhook-deployment-7ff47d8d4c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Dec 19 11:24:03.898: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.December, 19, 11, 23, 53, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 11, 23, 53, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 19, 11, 23, 54, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 11, 23, 53, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-crd-conversion-webhook-deployment-7ff47d8d4c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 12/19/23 11:24:05.896
  STEP: Verifying the service has paired with the endpoint @ 12/19/23 11:24:05.933
  Dec 19 11:24:06.933: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Dec 19 11:24:06.951: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Creating a v1 custom resource @ 12/19/23 11:24:09.803
  STEP: v2 custom resource should be converted @ 12/19/23 11:24:09.817
  Dec 19 11:24:10.518: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-4744" for this suite. @ 12/19/23 11:24:10.529
• [17.565 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 12/19/23 11:24:10.567
  Dec 19 11:24:10.567: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 12/19/23 11:24:10.571
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:24:10.619
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:24:10.626
  STEP: creating a target pod @ 12/19/23 11:24:10.636
  STEP: adding an ephemeral container @ 12/19/23 11:24:12.704
  STEP: checking pod container endpoints @ 12/19/23 11:24:14.749
  Dec 19 11:24:14.749: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-4522 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 19 11:24:14.749: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  Dec 19 11:24:14.751: INFO: ExecWithOptions: Clientset creation
  Dec 19 11:24:14.751: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/ephemeral-containers-test-4522/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  Dec 19 11:24:14.876: INFO: Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 12/19/23 11:24:14.906
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 12/19/23 11:24:14.92
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 12/19/23 11:24:14.951
  Dec 19 11:24:14.961: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-4522" for this suite. @ 12/19/23 11:24:14.97
• [4.414 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:1416
  STEP: Creating a kubernetes client @ 12/19/23 11:24:14.982
  Dec 19 11:24:14.982: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename services @ 12/19/23 11:24:14.985
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:24:15.013
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:24:15.02
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-6455 @ 12/19/23 11:24:15.028
  STEP: changing the ExternalName service to type=ClusterIP @ 12/19/23 11:24:15.044
  STEP: creating replication controller externalname-service in namespace services-6455 @ 12/19/23 11:24:15.078
  I1219 11:24:15.111381      14 runners.go:197] Created replication controller with name: externalname-service, namespace: services-6455, replica count: 2
  I1219 11:24:18.162896      14 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Dec 19 11:24:18.163: INFO: Creating new exec pod
  Dec 19 11:24:21.214: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=services-6455 exec execpod6srlx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Dec 19 11:24:21.611: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Dec 19 11:24:21.611: INFO: stdout: ""
  Dec 19 11:24:22.212: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=services-6455 exec execpod6srlx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Dec 19 11:24:22.550: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Dec 19 11:24:22.550: INFO: stdout: "externalname-service-2pzpr"
  Dec 19 11:24:22.551: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=services-6455 exec execpod6srlx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.62.216 80'
  Dec 19 11:24:22.855: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.62.216 80\nConnection to 10.233.62.216 80 port [tcp/http] succeeded!\n"
  Dec 19 11:24:22.855: INFO: stdout: "externalname-service-2pzpr"
  Dec 19 11:24:22.856: INFO: Cleaning up the ExternalName to ClusterIP test service
  Dec 19 11:24:22.894: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6455" for this suite. @ 12/19/23 11:24:22.905
• [7.943 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:119
  STEP: Creating a kubernetes client @ 12/19/23 11:24:22.926
  Dec 19 11:24:22.926: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename webhook @ 12/19/23 11:24:22.934
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:24:22.975
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:24:22.979
  STEP: Setting up server cert @ 12/19/23 11:24:23.029
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/19/23 11:24:24.274
  STEP: Deploying the webhook pod @ 12/19/23 11:24:24.292
  STEP: Wait for the deployment to be ready @ 12/19/23 11:24:24.314
  Dec 19 11:24:24.339: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  Dec 19 11:24:26.385: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.December, 19, 11, 24, 24, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 11, 24, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 19, 11, 24, 24, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 11, 24, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7646f658cc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Dec 19 11:24:28.426: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.December, 19, 11, 24, 24, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 11, 24, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 19, 11, 24, 24, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 11, 24, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7646f658cc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Dec 19 11:24:30.393: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.December, 19, 11, 24, 24, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 11, 24, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 19, 11, 24, 24, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 11, 24, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7646f658cc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Dec 19 11:24:32.391: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.December, 19, 11, 24, 24, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 11, 24, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 19, 11, 24, 24, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 11, 24, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7646f658cc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 12/19/23 11:24:34.398
  STEP: Verifying the service has paired with the endpoint @ 12/19/23 11:24:34.422
  Dec 19 11:24:35.423: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 12/19/23 11:24:35.437
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 12/19/23 11:24:35.44
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 12/19/23 11:24:35.441
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 12/19/23 11:24:35.441
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 12/19/23 11:24:35.444
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 12/19/23 11:24:35.444
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 12/19/23 11:24:35.447
  Dec 19 11:24:35.545: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5660" for this suite. @ 12/19/23 11:24:35.57
  STEP: Destroying namespace "webhook-markers-6595" for this suite. @ 12/19/23 11:24:35.59
• [12.700 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:69
  STEP: Creating a kubernetes client @ 12/19/23 11:24:35.627
  Dec 19 11:24:35.627: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/19/23 11:24:35.633
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:24:35.665
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:24:35.671
  Dec 19 11:24:35.677: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 12/19/23 11:24:37.84
  Dec 19 11:24:37.841: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=crd-publish-openapi-304 --namespace=crd-publish-openapi-304 create -f -'
  Dec 19 11:24:38.207: INFO: stderr: ""
  Dec 19 11:24:38.207: INFO: stdout: "e2e-test-crd-publish-openapi-1556-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  Dec 19 11:24:38.208: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=crd-publish-openapi-304 --namespace=crd-publish-openapi-304 delete e2e-test-crd-publish-openapi-1556-crds test-foo'
  Dec 19 11:24:38.390: INFO: stderr: ""
  Dec 19 11:24:38.390: INFO: stdout: "e2e-test-crd-publish-openapi-1556-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  Dec 19 11:24:38.390: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=crd-publish-openapi-304 --namespace=crd-publish-openapi-304 apply -f -'
  Dec 19 11:24:38.588: INFO: stderr: ""
  Dec 19 11:24:38.588: INFO: stdout: "e2e-test-crd-publish-openapi-1556-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  Dec 19 11:24:38.589: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=crd-publish-openapi-304 --namespace=crd-publish-openapi-304 delete e2e-test-crd-publish-openapi-1556-crds test-foo'
  Dec 19 11:24:38.885: INFO: stderr: ""
  Dec 19 11:24:38.885: INFO: stdout: "e2e-test-crd-publish-openapi-1556-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 12/19/23 11:24:38.885
  Dec 19 11:24:38.885: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=crd-publish-openapi-304 --namespace=crd-publish-openapi-304 create -f -'
  Dec 19 11:24:39.053: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 12/19/23 11:24:39.054
  Dec 19 11:24:39.054: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=crd-publish-openapi-304 --namespace=crd-publish-openapi-304 create -f -'
  Dec 19 11:24:39.211: INFO: rc: 1
  Dec 19 11:24:39.212: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=crd-publish-openapi-304 --namespace=crd-publish-openapi-304 apply -f -'
  Dec 19 11:24:39.375: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 12/19/23 11:24:39.375
  Dec 19 11:24:39.376: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=crd-publish-openapi-304 --namespace=crd-publish-openapi-304 create -f -'
  Dec 19 11:24:39.538: INFO: rc: 1
  Dec 19 11:24:39.539: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=crd-publish-openapi-304 --namespace=crd-publish-openapi-304 apply -f -'
  Dec 19 11:24:39.709: INFO: rc: 1
  STEP: kubectl explain works to explain CR properties @ 12/19/23 11:24:39.71
  Dec 19 11:24:39.710: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=crd-publish-openapi-304 explain e2e-test-crd-publish-openapi-1556-crds'
  Dec 19 11:24:39.875: INFO: stderr: ""
  Dec 19 11:24:39.876: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-1556-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 12/19/23 11:24:39.877
  Dec 19 11:24:39.877: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=crd-publish-openapi-304 explain e2e-test-crd-publish-openapi-1556-crds.metadata'
  Dec 19 11:24:40.020: INFO: stderr: ""
  Dec 19 11:24:40.020: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-1556-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  Dec 19 11:24:40.022: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=crd-publish-openapi-304 explain e2e-test-crd-publish-openapi-1556-crds.spec'
  Dec 19 11:24:40.163: INFO: stderr: ""
  Dec 19 11:24:40.163: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-1556-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  Dec 19 11:24:40.163: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=crd-publish-openapi-304 explain e2e-test-crd-publish-openapi-1556-crds.spec.bars'
  Dec 19 11:24:40.341: INFO: stderr: ""
  Dec 19 11:24:40.342: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-1556-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 12/19/23 11:24:40.342
  Dec 19 11:24:40.343: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=crd-publish-openapi-304 explain e2e-test-crd-publish-openapi-1556-crds.spec.bars2'
  Dec 19 11:24:40.507: INFO: rc: 1
  Dec 19 11:24:42.353: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-304" for this suite. @ 12/19/23 11:24:42.375
• [6.763 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 12/19/23 11:24:42.396
  Dec 19 11:24:42.396: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename secrets @ 12/19/23 11:24:42.4
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:24:42.442
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:24:42.446
  STEP: Creating secret with name secret-test-65997cb9-ba94-46ad-b4f7-d24a9a7a9dc2 @ 12/19/23 11:24:42.499
  STEP: Creating a pod to test consume secrets @ 12/19/23 11:24:42.508
  STEP: Saw pod success @ 12/19/23 11:24:46.55
  Dec 19 11:24:46.558: INFO: Trying to get logs from node dah7vaemeeho-3 pod pod-secrets-c38c7017-06c7-49e5-ad29-84034a5a7bab container secret-volume-test: <nil>
  STEP: delete the pod @ 12/19/23 11:24:46.598
  Dec 19 11:24:46.625: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5191" for this suite. @ 12/19/23 11:24:46.635
  STEP: Destroying namespace "secret-namespace-4335" for this suite. @ 12/19/23 11:24:46.654
• [4.275 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/configmap_volume.go:241
  STEP: Creating a kubernetes client @ 12/19/23 11:24:46.674
  Dec 19 11:24:46.674: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename configmap @ 12/19/23 11:24:46.678
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:24:46.712
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:24:46.716
  STEP: Creating configMap with name cm-test-opt-del-79c72721-f632-47f6-afc9-a45f658435ae @ 12/19/23 11:24:46.729
  STEP: Creating configMap with name cm-test-opt-upd-b3bc2087-08a0-4e36-9ff4-9c02526586f9 @ 12/19/23 11:24:46.741
  STEP: Creating the pod @ 12/19/23 11:24:46.75
  STEP: Deleting configmap cm-test-opt-del-79c72721-f632-47f6-afc9-a45f658435ae @ 12/19/23 11:24:48.852
  STEP: Updating configmap cm-test-opt-upd-b3bc2087-08a0-4e36-9ff4-9c02526586f9 @ 12/19/23 11:24:48.869
  STEP: Creating configMap with name cm-test-opt-create-94004ea9-6c25-4a61-9c3e-eda84575d169 @ 12/19/23 11:24:48.879
  STEP: waiting to observe update in volume @ 12/19/23 11:24:48.889
  Dec 19 11:25:59.730: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9955" for this suite. @ 12/19/23 11:25:59.747
• [73.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/custom_resource_definition.go:199
  STEP: Creating a kubernetes client @ 12/19/23 11:25:59.765
  Dec 19 11:25:59.765: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename custom-resource-definition @ 12/19/23 11:25:59.77
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:25:59.803
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:25:59.81
  STEP: fetching the /apis discovery document @ 12/19/23 11:25:59.817
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 12/19/23 11:25:59.82
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 12/19/23 11:25:59.82
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 12/19/23 11:25:59.821
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 12/19/23 11:25:59.823
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 12/19/23 11:25:59.823
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 12/19/23 11:25:59.826
  Dec 19 11:25:59.827: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-7210" for this suite. @ 12/19/23 11:25:59.838
• [0.083 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/garbage_collector.go:539
  STEP: Creating a kubernetes client @ 12/19/23 11:25:59.859
  Dec 19 11:25:59.860: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename gc @ 12/19/23 11:25:59.864
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:25:59.897
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:25:59.904
  STEP: create the deployment @ 12/19/23 11:25:59.911
  W1219 11:25:59.933076      14 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 12/19/23 11:25:59.933
  STEP: delete the deployment @ 12/19/23 11:26:00.071
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 12/19/23 11:26:00.087
  STEP: Gathering metrics @ 12/19/23 11:26:00.639
  Dec 19 11:26:00.877: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Dec 19 11:26:00.886: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-8480" for this suite. @ 12/19/23 11:26:00.901
• [1.069 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 12/19/23 11:26:00.937
  Dec 19 11:26:00.937: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename prestop @ 12/19/23 11:26:00.945
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:26:00.982
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:26:00.987
  STEP: Creating server pod server in namespace prestop-799 @ 12/19/23 11:26:00.992
  STEP: Waiting for pods to come up. @ 12/19/23 11:26:01.014
  STEP: Creating tester pod tester in namespace prestop-799 @ 12/19/23 11:26:03.056
  STEP: Deleting pre-stop pod @ 12/19/23 11:26:07.128
  Dec 19 11:26:12.158: INFO: Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 12/19/23 11:26:12.161
  Dec 19 11:26:12.193: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-799" for this suite. @ 12/19/23 11:26:12.206
• [11.284 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 12/19/23 11:26:12.232
  Dec 19 11:26:12.232: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename subpath @ 12/19/23 11:26:12.236
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:26:12.317
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:26:12.326
  STEP: Setting up data @ 12/19/23 11:26:12.333
  STEP: Creating pod pod-subpath-test-secret-jqm7 @ 12/19/23 11:26:12.353
  STEP: Creating a pod to test atomic-volume-subpath @ 12/19/23 11:26:12.353
  STEP: Saw pod success @ 12/19/23 11:26:36.515
  Dec 19 11:26:36.521: INFO: Trying to get logs from node dah7vaemeeho-3 pod pod-subpath-test-secret-jqm7 container test-container-subpath-secret-jqm7: <nil>
  STEP: delete the pod @ 12/19/23 11:26:36.551
  STEP: Deleting pod pod-subpath-test-secret-jqm7 @ 12/19/23 11:26:36.588
  Dec 19 11:26:36.588: INFO: Deleting pod "pod-subpath-test-secret-jqm7" in namespace "subpath-9962"
  Dec 19 11:26:36.594: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-9962" for this suite. @ 12/19/23 11:26:36.602
• [24.387 seconds]
------------------------------
S
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/runtimeclass.go:57
  STEP: Creating a kubernetes client @ 12/19/23 11:26:36.621
  Dec 19 11:26:36.621: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename runtimeclass @ 12/19/23 11:26:36.625
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:26:36.66
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:26:36.665
  Dec 19 11:26:36.686: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-6724" for this suite. @ 12/19/23 11:26:36.701
• [0.095 seconds]
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 12/19/23 11:26:36.717
  Dec 19 11:26:36.717: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename init-container @ 12/19/23 11:26:36.722
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:26:36.783
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:26:36.789
  STEP: creating the pod @ 12/19/23 11:26:36.795
  Dec 19 11:26:36.796: INFO: PodSpec: initContainers in spec.initContainers
  Dec 19 11:26:40.949: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-6935" for this suite. @ 12/19/23 11:26:40.964
• [4.261 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 12/19/23 11:26:40.978
  Dec 19 11:26:40.978: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename proxy @ 12/19/23 11:26:40.984
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:26:41.018
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:26:41.024
  Dec 19 11:26:41.031: INFO: Creating pod...
  Dec 19 11:26:43.107: INFO: Creating service...
  Dec 19 11:26:43.129: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-323/pods/agnhost/proxy?method=DELETE
  Dec 19 11:26:43.167: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Dec 19 11:26:43.168: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-323/pods/agnhost/proxy?method=OPTIONS
  Dec 19 11:26:43.179: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Dec 19 11:26:43.179: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-323/pods/agnhost/proxy?method=PATCH
  Dec 19 11:26:43.185: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Dec 19 11:26:43.186: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-323/pods/agnhost/proxy?method=POST
  Dec 19 11:26:43.194: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Dec 19 11:26:43.194: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-323/pods/agnhost/proxy?method=PUT
  Dec 19 11:26:43.200: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Dec 19 11:26:43.200: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-323/services/e2e-proxy-test-service/proxy?method=DELETE
  Dec 19 11:26:43.218: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Dec 19 11:26:43.219: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-323/services/e2e-proxy-test-service/proxy?method=OPTIONS
  Dec 19 11:26:43.229: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Dec 19 11:26:43.229: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-323/services/e2e-proxy-test-service/proxy?method=PATCH
  Dec 19 11:26:43.244: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Dec 19 11:26:43.245: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-323/services/e2e-proxy-test-service/proxy?method=POST
  Dec 19 11:26:43.256: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Dec 19 11:26:43.257: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-323/services/e2e-proxy-test-service/proxy?method=PUT
  Dec 19 11:26:43.267: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Dec 19 11:26:43.267: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-323/pods/agnhost/proxy?method=GET
  Dec 19 11:26:43.276: INFO: http.Client request:GET StatusCode:301
  Dec 19 11:26:43.276: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-323/services/e2e-proxy-test-service/proxy?method=GET
  Dec 19 11:26:43.286: INFO: http.Client request:GET StatusCode:301
  Dec 19 11:26:43.286: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-323/pods/agnhost/proxy?method=HEAD
  Dec 19 11:26:43.292: INFO: http.Client request:HEAD StatusCode:301
  Dec 19 11:26:43.292: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-323/services/e2e-proxy-test-service/proxy?method=HEAD
  Dec 19 11:26:43.303: INFO: http.Client request:HEAD StatusCode:301
  Dec 19 11:26:43.304: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-323" for this suite. @ 12/19/23 11:26:43.317
• [2.353 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:357
  STEP: Creating a kubernetes client @ 12/19/23 11:26:43.338
  Dec 19 11:26:43.338: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/19/23 11:26:43.341
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:26:43.371
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:26:43.378
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 12/19/23 11:26:43.384
  Dec 19 11:26:43.385: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  Dec 19 11:26:45.667: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  Dec 19 11:26:53.336: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9220" for this suite. @ 12/19/23 11:26:53.362
• [10.044 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:70
  STEP: Creating a kubernetes client @ 12/19/23 11:26:53.389
  Dec 19 11:26:53.389: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename projected @ 12/19/23 11:26:53.395
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:26:53.443
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:26:53.451
  STEP: Creating a pod to test downward API volume plugin @ 12/19/23 11:26:53.457
  STEP: Saw pod success @ 12/19/23 11:26:57.513
  Dec 19 11:26:57.519: INFO: Trying to get logs from node dah7vaemeeho-3 pod downwardapi-volume-2d8cc426-a427-40bd-b39d-91a0949b158a container client-container: <nil>
  STEP: delete the pod @ 12/19/23 11:26:57.547
  Dec 19 11:26:57.580: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1408" for this suite. @ 12/19/23 11:26:57.589
• [4.217 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 12/19/23 11:26:57.61
  Dec 19 11:26:57.610: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename projected @ 12/19/23 11:26:57.614
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:26:57.638
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:26:57.644
  STEP: Creating secret with name s-test-opt-del-3857d7c5-0bc5-49b9-9f12-b26b6a2bd78c @ 12/19/23 11:26:57.658
  STEP: Creating secret with name s-test-opt-upd-267345e8-fff8-4ed3-83d9-e3cbb29d1180 @ 12/19/23 11:26:57.668
  STEP: Creating the pod @ 12/19/23 11:26:57.676
  STEP: Deleting secret s-test-opt-del-3857d7c5-0bc5-49b9-9f12-b26b6a2bd78c @ 12/19/23 11:26:59.79
  STEP: Updating secret s-test-opt-upd-267345e8-fff8-4ed3-83d9-e3cbb29d1180 @ 12/19/23 11:26:59.807
  STEP: Creating secret with name s-test-opt-create-4ab9ce9b-9357-4d21-8f77-85608d91ee8e @ 12/19/23 11:26:59.823
  STEP: waiting to observe update in volume @ 12/19/23 11:26:59.833
  Dec 19 11:28:20.694: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8063" for this suite. @ 12/19/23 11:28:20.707
• [83.111 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:238
  STEP: Creating a kubernetes client @ 12/19/23 11:28:20.724
  Dec 19 11:28:20.724: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename webhook @ 12/19/23 11:28:20.728
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:28:20.757
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:28:20.764
  STEP: Setting up server cert @ 12/19/23 11:28:20.834
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/19/23 11:28:22.104
  STEP: Deploying the webhook pod @ 12/19/23 11:28:22.12
  STEP: Wait for the deployment to be ready @ 12/19/23 11:28:22.138
  Dec 19 11:28:22.151: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  Dec 19 11:28:24.176: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.December, 19, 11, 28, 22, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 11, 28, 22, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 19, 11, 28, 22, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 11, 28, 22, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7646f658cc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Dec 19 11:28:26.184: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.December, 19, 11, 28, 22, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 11, 28, 22, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 19, 11, 28, 22, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 11, 28, 22, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7646f658cc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Dec 19 11:28:28.184: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.December, 19, 11, 28, 22, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 11, 28, 22, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 19, 11, 28, 22, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 11, 28, 22, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7646f658cc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Dec 19 11:28:30.184: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.December, 19, 11, 28, 22, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 11, 28, 22, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 19, 11, 28, 22, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 11, 28, 22, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7646f658cc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Dec 19 11:28:32.184: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.December, 19, 11, 28, 22, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 11, 28, 22, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 19, 11, 28, 22, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 11, 28, 22, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7646f658cc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 12/19/23 11:28:34.185
  STEP: Verifying the service has paired with the endpoint @ 12/19/23 11:28:34.204
  Dec 19 11:28:35.205: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 12/19/23 11:28:35.221
  STEP: create a namespace for the webhook @ 12/19/23 11:28:35.255
  STEP: create a configmap should be unconditionally rejected by the webhook @ 12/19/23 11:28:35.28
  Dec 19 11:28:35.426: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2155" for this suite. @ 12/19/23 11:28:35.457
  STEP: Destroying namespace "webhook-markers-4507" for this suite. @ 12/19/23 11:28:35.472
  STEP: Destroying namespace "fail-closed-namespace-3559" for this suite. @ 12/19/23 11:28:35.486
• [14.780 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
test/e2e/apps/disruption.go:164
  STEP: Creating a kubernetes client @ 12/19/23 11:28:35.52
  Dec 19 11:28:35.520: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename disruption @ 12/19/23 11:28:35.523
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:28:35.557
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:28:35.567
  STEP: Waiting for the pdb to be processed @ 12/19/23 11:28:35.586
  STEP: Updating PodDisruptionBudget status @ 12/19/23 11:28:37.596
  STEP: Waiting for all pods to be running @ 12/19/23 11:28:37.618
  Dec 19 11:28:37.634: INFO: running pods: 0 < 1
  STEP: locating a running pod @ 12/19/23 11:28:39.629
  STEP: Waiting for the pdb to be processed @ 12/19/23 11:28:39.655
  STEP: Patching PodDisruptionBudget status @ 12/19/23 11:28:39.677
  STEP: Waiting for the pdb to be processed @ 12/19/23 11:28:39.699
  Dec 19 11:28:39.707: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-4337" for this suite. @ 12/19/23 11:28:39.725
• [4.224 seconds]
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 12/19/23 11:28:39.746
  Dec 19 11:28:39.746: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename deployment @ 12/19/23 11:28:39.751
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:28:39.783
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:28:39.789
  Dec 19 11:28:39.794: INFO: Creating replica set "test-rolling-update-controller" (going to be adopted)
  Dec 19 11:28:39.808: INFO: Pod name sample-pod: Found 0 pods out of 1
  Dec 19 11:28:44.818: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 12/19/23 11:28:44.818
  Dec 19 11:28:44.818: INFO: Creating deployment "test-rolling-update-deployment"
  Dec 19 11:28:44.833: INFO: Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  Dec 19 11:28:44.852: INFO: new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  Dec 19 11:28:46.867: INFO: Ensuring status for deployment "test-rolling-update-deployment" is the expected
  Dec 19 11:28:46.872: INFO: Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  Dec 19 11:28:46.894: INFO: Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2989",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e949de7e-776d-4749-b310-79454ddf3036",
      ResourceVersion: (string) (len=5) "34566",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838582124,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838582124,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838582126,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838582124,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838582124,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838582126,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838582124,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=82) "ReplicaSet \"test-rolling-update-deployment-7f5c55c64\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Dec 19 11:28:46.908: INFO: New ReplicaSet "test-rolling-update-deployment-7f5c55c64" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-rolling-update-deployment-7f5c55c64",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2989",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9056a5ab-2553-4f3e-bfbe-2afd65d70e6b",
      ResourceVersion: (string) (len=5) "34556",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838582124,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64",
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "e949de7e-776d-4749-b310-79454ddf3036",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838582124,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 65 39 34 39 64 65  37 65 2d 37 37 36 64 2d  |\"e949de7e-776d-|
              00000120  34 37 34 39 2d 62 33 31  30 2d 37 39 34 35 34 64  |4749-b310-79454d|
              00000130  64 66 33 30 33 36 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |df3036\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838582126,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64",
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Dec 19 11:28:46.914: INFO: All old ReplicaSets of Deployment "test-rolling-update-deployment":
  Dec 19 11:28:46.914: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2989",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "816b8385-75af-4726-8027-d7dcfa6b96e2",
      ResourceVersion: (string) (len=5) "34565",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838582119,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "e949de7e-776d-4749-b310-79454ddf3036",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838582119,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838582126,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 65 39 34 39 64 65 37  |"uid\":\"e949de7|
              000000b0  65 2d 37 37 36 64 2d 34  37 34 39 2d 62 33 31 30  |e-776d-4749-b310|
              000000c0  2d 37 39 34 35 34 64 64  66 33 30 33 36 5c 22 7d  |-79454ddf3036\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838582126,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Dec 19 11:28:46.923: INFO: Pod "test-rolling-update-deployment-7f5c55c64-b52kp" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=46) "test-rolling-update-deployment-7f5c55c64-b52kp",
      GenerateName: (string) (len=41) "test-rolling-update-deployment-7f5c55c64-",
      Namespace: (string) (len=15) "deployment-2989",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f972fd9d-10bd-4230-9b0b-9ed3e58bbbfd",
      ResourceVersion: (string) (len=5) "34555",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838582124,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=40) "test-rolling-update-deployment-7f5c55c64",
          UID: (types.UID) (len=36) "9056a5ab-2553-4f3e-bfbe-2afd65d70e6b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838582124,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 30  35 36 61 35 61 62 2d 32  |d\":\"9056a5ab-2|
              00000090  35 35 33 2d 34 66 33 65  2d 62 66 62 65 2d 32 61  |553-4f3e-bfbe-2a|
              000000a0  66 64 36 35 64 37 30 65  36 62 5c 22 7d 22 3a 7b  |fd65d70e6b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838582126,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 36 2e  31 34 33 5c 22 7d 22 3a  |.233.66.143\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dxnb6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dxnb6",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "dah7vaemeeho-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838582126,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838582124,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838582126,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838582126,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838582124,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.250",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.250"
        }
      },
      PodIP: (string) (len=13) "10.233.66.143",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.66.143"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838582124,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63838582125,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          ImageID: (string) (len=64) "077cda6b1f5995dcc056c00f92d40b5147132839f522d46d9ca84acd44ad76a7",
          ContainerID: (string) (len=72) "cri-o://7593e2d4a60143f73e2bba0b5fa7846a79cf80beabd213d279d78736681faaee",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 19 11:28:46.926: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-2989" for this suite. @ 12/19/23 11:28:46.935
• [7.202 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 12/19/23 11:28:46.95
  Dec 19 11:28:46.950: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename pods @ 12/19/23 11:28:46.953
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:28:46.979
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:28:46.987
  Dec 19 11:28:46.993: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: creating the pod @ 12/19/23 11:28:46.997
  STEP: submitting the pod to kubernetes @ 12/19/23 11:28:46.998
  Dec 19 11:28:49.114: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9903" for this suite. @ 12/19/23 11:28:49.126
• [2.193 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance] [sig-node, Slow, Conformance]
test/e2e/common/node/expansion.go:189
  STEP: Creating a kubernetes client @ 12/19/23 11:28:49.149
  Dec 19 11:28:49.149: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename var-expansion @ 12/19/23 11:28:49.153
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:28:49.185
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:28:49.192
  Dec 19 11:28:51.240: INFO: Deleting pod "var-expansion-9deea020-b190-40b6-ac3c-1859e4166bd9" in namespace "var-expansion-60"
  Dec 19 11:28:51.258: INFO: Wait up to 5m0s for pod "var-expansion-9deea020-b190-40b6-ac3c-1859e4166bd9" to be fully deleted
  Dec 19 11:28:53.273: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-60" for this suite. @ 12/19/23 11:28:53.282
• [4.143 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
test/e2e/auth/service_accounts.go:80
  STEP: Creating a kubernetes client @ 12/19/23 11:28:53.31
  Dec 19 11:28:53.310: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename svcaccounts @ 12/19/23 11:28:53.313
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:28:53.392
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:28:53.398
  STEP: reading a file in the container @ 12/19/23 11:28:55.448
  Dec 19 11:28:55.449: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-604 pod-service-account-61882943-97f3-4431-b9b4-f03d1f0aed9f -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 12/19/23 11:28:55.785
  Dec 19 11:28:55.785: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-604 pod-service-account-61882943-97f3-4431-b9b4-f03d1f0aed9f -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 12/19/23 11:28:56.027
  Dec 19 11:28:56.027: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-604 pod-service-account-61882943-97f3-4431-b9b4-f03d1f0aed9f -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  Dec 19 11:28:56.304: INFO: Got root ca configmap in namespace "svcaccounts-604"
  Dec 19 11:28:56.308: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-604" for this suite. @ 12/19/23 11:28:56.317
• [3.018 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 12/19/23 11:28:56.332
  Dec 19 11:28:56.332: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename deployment @ 12/19/23 11:28:56.335
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:28:56.359
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:28:56.366
  Dec 19 11:28:56.388: INFO: Pod name rollover-pod: Found 0 pods out of 1
  Dec 19 11:29:01.407: INFO: Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 12/19/23 11:29:01.408
  Dec 19 11:29:01.409: INFO: Waiting for pods owned by replica set "test-rollover-controller" to become ready
  Dec 19 11:29:03.420: INFO: Creating deployment "test-rollover-deployment"
  Dec 19 11:29:03.444: INFO: Make sure deployment "test-rollover-deployment" performs scaling operations
  Dec 19 11:29:05.463: INFO: Check revision of new replica set for deployment "test-rollover-deployment"
  Dec 19 11:29:05.480: INFO: Ensure that both replica sets have 1 created replica
  Dec 19 11:29:05.498: INFO: Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  Dec 19 11:29:05.520: INFO: Updating deployment test-rollover-deployment
  Dec 19 11:29:05.521: INFO: Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  Dec 19 11:29:07.562: INFO: Wait for revision update of deployment "test-rollover-deployment" to 2
  Dec 19 11:29:07.579: INFO: Make sure deployment "test-rollover-deployment" is complete
  Dec 19 11:29:07.594: INFO: all replica sets need to contain the pod-template-hash label
  Dec 19 11:29:07.594: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.December, 19, 11, 29, 3, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 11, 29, 3, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 19, 11, 29, 6, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 11, 29, 3, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Dec 19 11:29:09.611: INFO: all replica sets need to contain the pod-template-hash label
  Dec 19 11:29:09.611: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.December, 19, 11, 29, 3, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 11, 29, 3, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 19, 11, 29, 6, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 11, 29, 3, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Dec 19 11:29:11.614: INFO: all replica sets need to contain the pod-template-hash label
  Dec 19 11:29:11.614: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.December, 19, 11, 29, 3, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 11, 29, 3, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 19, 11, 29, 6, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 11, 29, 3, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Dec 19 11:29:13.614: INFO: all replica sets need to contain the pod-template-hash label
  Dec 19 11:29:13.614: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.December, 19, 11, 29, 3, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 11, 29, 3, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 19, 11, 29, 6, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 11, 29, 3, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Dec 19 11:29:15.617: INFO: all replica sets need to contain the pod-template-hash label
  Dec 19 11:29:15.617: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.December, 19, 11, 29, 3, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 11, 29, 3, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 19, 11, 29, 6, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 11, 29, 3, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Dec 19 11:29:17.610: INFO: 
  Dec 19 11:29:17.610: INFO: Ensure that both old replica sets have no replicas
  Dec 19 11:29:17.645: INFO: Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9716",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "22ef72b3-891b-4ad6-9769-ff0f84bff266",
      ResourceVersion: (string) (len=5) "34791",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838582143,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838582145,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838582156,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838582143,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838582143,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838582156,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838582143,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-5d484bf7f9\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Dec 19 11:29:17.664: INFO: New ReplicaSet "test-rollover-deployment-5d484bf7f9" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-5d484bf7f9",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9716",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4ab6af13-832f-428e-995b-5077e2d1deec",
      ResourceVersion: (string) (len=5) "34781",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838582145,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "22ef72b3-891b-4ad6-9769-ff0f84bff266",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838582145,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 32 32 65 66 37 32  62 33 2d 38 39 31 62 2d  |\"22ef72b3-891b-|
              00000120  34 61 64 36 2d 39 37 36  39 2d 66 66 30 66 38 34  |4ad6-9769-ff0f84|
              00000130  62 66 66 32 36 36 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |bff266\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838582156,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Dec 19 11:29:17.666: INFO: All old ReplicaSets of Deployment "test-rollover-deployment":
  Dec 19 11:29:17.667: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9716",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f959e069-561e-41d0-85de-1d14db3686e2",
      ResourceVersion: (string) (len=5) "34790",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838582136,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "22ef72b3-891b-4ad6-9769-ff0f84bff266",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838582136,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838582156,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  32 32 65 66 37 32 62 33  2d 38 39 31 62 2d 34 61  |22ef72b3-891b-4a|
              000000c0  64 36 2d 39 37 36 39 2d  66 66 30 66 38 34 62 66  |d6-9769-ff0f84bf|
              000000d0  66 32 36 36 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |f266\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838582156,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Dec 19 11:29:17.684: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-664fc6c874",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9716",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ab229a06-65a3-4d40-825a-d67b51fe2946",
      ResourceVersion: (string) (len=5) "34753",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838582143,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "22ef72b3-891b-4ad6-9769-ff0f84bff266",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838582145,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 32 32 65 66 37 32  62 33 2d 38 39 31 62 2d  |\"22ef72b3-891b-|
              00000120  34 61 64 36 2d 39 37 36  39 2d 66 66 30 66 38 34  |4ad6-9769-ff0f84|
              00000130  62 66 66 32 36 36 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |bff266\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838582145,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Dec 19 11:29:17.698: INFO: Pod "test-rollover-deployment-5d484bf7f9-wdl9t" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-5d484bf7f9-wdl9t",
      GenerateName: (string) (len=36) "test-rollover-deployment-5d484bf7f9-",
      Namespace: (string) (len=15) "deployment-9716",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4cd94890-e588-4de5-806a-c2f793f6310b",
      ResourceVersion: (string) (len=5) "34761",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838582145,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-5d484bf7f9",
          UID: (types.UID) (len=36) "4ab6af13-832f-428e-995b-5077e2d1deec",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838582145,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 61  62 36 61 66 31 33 2d 38  |d\":\"4ab6af13-8|
              00000090  33 32 66 2d 34 32 38 65  2d 39 39 35 62 2d 35 30  |32f-428e-995b-50|
              000000a0  37 37 65 32 64 31 64 65  65 63 5c 22 7d 22 3a 7b  |77e2d1deec\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838582146,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 36 2e  31 34 39 5c 22 7d 22 3a  |.233.66.149\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-542hn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-542hn",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "dah7vaemeeho-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838582146,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838582145,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838582146,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838582146,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63838582145,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.250",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.250"
        }
      },
      PodIP: (string) (len=13) "10.233.66.149",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.66.149"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63838582145,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63838582146,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          ImageID: (string) (len=64) "077cda6b1f5995dcc056c00f92d40b5147132839f522d46d9ca84acd44ad76a7",
          ContainerID: (string) (len=72) "cri-o://aa3a4137d58364bb8483c1efc867b4782ad5dd8a5de9acdfbae20262178c9417",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Dec 19 11:29:17.709: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9716" for this suite. @ 12/19/23 11:29:17.719
• [21.399 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
test/e2e/storage/persistent_volumes.go:430
  STEP: Creating a kubernetes client @ 12/19/23 11:29:17.737
  Dec 19 11:29:17.737: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename pv @ 12/19/23 11:29:17.742
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:29:17.768
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:29:17.772
  STEP: Creating initial PV and PVC @ 12/19/23 11:29:17.778
  Dec 19 11:29:17.778: INFO: Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-1536" @ 12/19/23 11:29:17.81
  STEP: Listing PVCs in namespace "pv-1536" @ 12/19/23 11:29:17.827
  STEP: Patching the PV "pv-1536-qgx2v" @ 12/19/23 11:29:17.837
  STEP: Patching the PVC "pvc-pgxv5" @ 12/19/23 11:29:17.866
  STEP: Getting PV "pv-1536-qgx2v" @ 12/19/23 11:29:17.882
  STEP: Getting PVC "pvc-pgxv5" @ 12/19/23 11:29:17.886
  STEP: Deleting PVC "pvc-pgxv5" @ 12/19/23 11:29:17.893
  STEP: Confirm deletion of PVC "pvc-pgxv5" @ 12/19/23 11:29:17.907
  STEP: Deleting PV "pv-1536-qgx2v" @ 12/19/23 11:29:19.924
  STEP: Confirm deletion of PV "pv-1536-qgx2v" @ 12/19/23 11:29:19.94
  STEP: Recreating another PV & PVC @ 12/19/23 11:29:21.961
  Dec 19 11:29:21.962: INFO: Creating a PV followed by a PVC
  STEP: Updating the PV "pv-1536-bkl7z" @ 12/19/23 11:29:21.981
  STEP: Updating the PVC "pvc-m7gwd" @ 12/19/23 11:29:22.005
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-m7gwd=updated" @ 12/19/23 11:29:22.02
  STEP: Deleting PVC "pvc-m7gwd" via DeleteCollection @ 12/19/23 11:29:22.025
  STEP: Confirm deletion of PVC "pvc-m7gwd" @ 12/19/23 11:29:22.054
  STEP: Deleting PV "pv-1536-bkl7z" via DeleteCollection @ 12/19/23 11:29:24.072
  STEP: Confirm deletion of PV "pv-1536-bkl7z" @ 12/19/23 11:29:24.094
  Dec 19 11:29:26.110: INFO: AfterEach: deleting 1 PVCs and 1 PVs...
  Dec 19 11:29:26.110: INFO: Deleting PersistentVolumeClaim "pvc-m7gwd"
  Dec 19 11:29:26.116: INFO: Deleting PersistentVolume "pv-1536-bkl7z"
  Dec 19 11:29:26.124: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-1536" for this suite. @ 12/19/23 11:29:26.133
• [8.410 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:315
  STEP: Creating a kubernetes client @ 12/19/23 11:29:26.157
  Dec 19 11:29:26.157: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename webhook @ 12/19/23 11:29:26.161
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:29:26.201
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:29:26.215
  STEP: Setting up server cert @ 12/19/23 11:29:26.268
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/19/23 11:29:27.2
  STEP: Deploying the webhook pod @ 12/19/23 11:29:27.222
  STEP: Wait for the deployment to be ready @ 12/19/23 11:29:27.249
  Dec 19 11:29:27.264: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  Dec 19 11:29:29.288: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.December, 19, 11, 29, 27, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 11, 29, 27, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.December, 19, 11, 29, 27, 0, time.Local), LastTransitionTime:time.Date(2023, time.December, 19, 11, 29, 27, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7646f658cc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 12/19/23 11:29:31.298
  STEP: Verifying the service has paired with the endpoint @ 12/19/23 11:29:31.329
  Dec 19 11:29:32.330: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Dec 19 11:29:32.344: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-7700-crds.webhook.example.com via the AdmissionRegistration API @ 12/19/23 11:29:32.876
  STEP: Creating a custom resource while v1 is storage version @ 12/19/23 11:29:32.924
  STEP: Patching Custom Resource Definition to set v2 as storage @ 12/19/23 11:29:34.956
  STEP: Patching the custom resource while v2 is storage version @ 12/19/23 11:29:35.003
  Dec 19 11:29:35.729: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1237" for this suite. @ 12/19/23 11:29:35.746
  STEP: Destroying namespace "webhook-markers-5896" for this suite. @ 12/19/23 11:29:35.768
• [9.628 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:236
  STEP: Creating a kubernetes client @ 12/19/23 11:29:35.803
  Dec 19 11:29:35.803: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/19/23 11:29:35.806
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:29:35.842
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:29:35.851
  Dec 19 11:29:35.860: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 12/19/23 11:29:38.059
  Dec 19 11:29:38.060: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=crd-publish-openapi-304 --namespace=crd-publish-openapi-304 create -f -'
  Dec 19 11:29:38.461: INFO: stderr: ""
  Dec 19 11:29:38.461: INFO: stdout: "e2e-test-crd-publish-openapi-5-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  Dec 19 11:29:38.462: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=crd-publish-openapi-304 --namespace=crd-publish-openapi-304 delete e2e-test-crd-publish-openapi-5-crds test-cr'
  Dec 19 11:29:38.811: INFO: stderr: ""
  Dec 19 11:29:38.812: INFO: stdout: "e2e-test-crd-publish-openapi-5-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  Dec 19 11:29:38.812: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=crd-publish-openapi-304 --namespace=crd-publish-openapi-304 apply -f -'
  Dec 19 11:29:39.005: INFO: stderr: ""
  Dec 19 11:29:39.005: INFO: stdout: "e2e-test-crd-publish-openapi-5-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  Dec 19 11:29:39.005: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=crd-publish-openapi-304 --namespace=crd-publish-openapi-304 delete e2e-test-crd-publish-openapi-5-crds test-cr'
  Dec 19 11:29:39.209: INFO: stderr: ""
  Dec 19 11:29:39.209: INFO: stdout: "e2e-test-crd-publish-openapi-5-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 12/19/23 11:29:39.209
  Dec 19 11:29:39.209: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=crd-publish-openapi-304 explain e2e-test-crd-publish-openapi-5-crds'
  Dec 19 11:29:39.366: INFO: stderr: ""
  Dec 19 11:29:39.366: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-5-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  Dec 19 11:29:41.177: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-304" for this suite. @ 12/19/23 11:29:41.208
• [5.431 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
test/e2e/instrumentation/core_events.go:58
  STEP: Creating a kubernetes client @ 12/19/23 11:29:41.236
  Dec 19 11:29:41.236: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename events @ 12/19/23 11:29:41.24
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:29:41.315
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:29:41.322
  STEP: creating a test event @ 12/19/23 11:29:41.329
  STEP: listing all events in all namespaces @ 12/19/23 11:29:41.342
  STEP: patching the test event @ 12/19/23 11:29:41.355
  STEP: fetching the test event @ 12/19/23 11:29:41.375
  STEP: updating the test event @ 12/19/23 11:29:41.388
  STEP: getting the test event @ 12/19/23 11:29:41.42
  STEP: deleting the test event @ 12/19/23 11:29:41.432
  STEP: listing all events in all namespaces @ 12/19/23 11:29:41.458
  Dec 19 11:29:41.496: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-5533" for this suite. @ 12/19/23 11:29:41.52
• [0.311 seconds]
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
test/e2e/kubectl/kubectl.go:399
  STEP: Creating a kubernetes client @ 12/19/23 11:29:41.548
  Dec 19 11:29:41.548: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename kubectl @ 12/19/23 11:29:41.551
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:29:41.606
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:29:41.618
  STEP: creating all guestbook components @ 12/19/23 11:29:41.63
  Dec 19 11:29:41.631: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  Dec 19 11:29:41.639: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=kubectl-1899 create -f -'
  Dec 19 11:29:42.015: INFO: stderr: ""
  Dec 19 11:29:42.015: INFO: stdout: "service/agnhost-replica created\n"
  Dec 19 11:29:42.015: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  Dec 19 11:29:42.016: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=kubectl-1899 create -f -'
  Dec 19 11:29:42.386: INFO: stderr: ""
  Dec 19 11:29:42.386: INFO: stdout: "service/agnhost-primary created\n"
  Dec 19 11:29:42.386: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  Dec 19 11:29:42.387: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=kubectl-1899 create -f -'
  Dec 19 11:29:42.706: INFO: stderr: ""
  Dec 19 11:29:42.706: INFO: stdout: "service/frontend created\n"
  Dec 19 11:29:42.706: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.45
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  Dec 19 11:29:42.707: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=kubectl-1899 create -f -'
  Dec 19 11:29:42.954: INFO: stderr: ""
  Dec 19 11:29:42.954: INFO: stdout: "deployment.apps/frontend created\n"
  Dec 19 11:29:42.954: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.45
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  Dec 19 11:29:42.956: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=kubectl-1899 create -f -'
  Dec 19 11:29:43.321: INFO: stderr: ""
  Dec 19 11:29:43.321: INFO: stdout: "deployment.apps/agnhost-primary created\n"
  Dec 19 11:29:43.322: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.45
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  Dec 19 11:29:43.322: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=kubectl-1899 create -f -'
  Dec 19 11:29:43.740: INFO: stderr: ""
  Dec 19 11:29:43.740: INFO: stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 12/19/23 11:29:43.741
  Dec 19 11:29:43.741: INFO: Waiting for all frontend pods to be Running.
  Dec 19 11:29:48.793: INFO: Waiting for frontend to serve content.
  Dec 19 11:29:48.830: INFO: Trying to add a new entry to the guestbook.
  Dec 19 11:29:48.862: INFO: Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 12/19/23 11:29:48.88
  Dec 19 11:29:48.881: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=kubectl-1899 delete --grace-period=0 --force -f -'
  Dec 19 11:29:49.122: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Dec 19 11:29:49.122: INFO: stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 12/19/23 11:29:49.122
  Dec 19 11:29:49.123: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=kubectl-1899 delete --grace-period=0 --force -f -'
  Dec 19 11:29:49.277: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Dec 19 11:29:49.278: INFO: stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 12/19/23 11:29:49.278
  Dec 19 11:29:49.278: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=kubectl-1899 delete --grace-period=0 --force -f -'
  Dec 19 11:29:49.428: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Dec 19 11:29:49.428: INFO: stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 12/19/23 11:29:49.428
  Dec 19 11:29:49.429: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=kubectl-1899 delete --grace-period=0 --force -f -'
  Dec 19 11:29:49.591: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Dec 19 11:29:49.591: INFO: stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 12/19/23 11:29:49.591
  Dec 19 11:29:49.592: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=kubectl-1899 delete --grace-period=0 --force -f -'
  Dec 19 11:29:49.787: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Dec 19 11:29:49.787: INFO: stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 12/19/23 11:29:49.788
  Dec 19 11:29:49.788: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=kubectl-1899 delete --grace-period=0 --force -f -'
  Dec 19 11:29:50.017: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Dec 19 11:29:50.018: INFO: stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  Dec 19 11:29:50.018: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1899" for this suite. @ 12/19/23 11:29:50.033
• [8.506 seconds]
------------------------------
SSS
------------------------------
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:785
  STEP: Creating a kubernetes client @ 12/19/23 11:29:50.054
  Dec 19 11:29:50.054: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename services @ 12/19/23 11:29:50.058
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:29:50.16
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:29:50.165
  STEP: creating service endpoint-test2 in namespace services-9011 @ 12/19/23 11:29:50.18
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-9011 to expose endpoints map[] @ 12/19/23 11:29:50.202
  Dec 19 11:29:50.221: INFO: Failed go get Endpoints object: endpoints "endpoint-test2" not found
  Dec 19 11:29:51.240: INFO: successfully validated that service endpoint-test2 in namespace services-9011 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-9011 @ 12/19/23 11:29:51.24
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-9011 to expose endpoints map[pod1:[80]] @ 12/19/23 11:29:53.273
  Dec 19 11:29:53.290: INFO: successfully validated that service endpoint-test2 in namespace services-9011 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 12/19/23 11:29:53.29
  Dec 19 11:29:53.291: INFO: Creating new exec pod
  Dec 19 11:29:56.317: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=services-9011 exec execpodcn7zq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Dec 19 11:29:56.632: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Dec 19 11:29:56.632: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Dec 19 11:29:56.633: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=services-9011 exec execpodcn7zq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.23.38 80'
  Dec 19 11:29:56.873: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.23.38 80\nConnection to 10.233.23.38 80 port [tcp/http] succeeded!\n"
  Dec 19 11:29:56.873: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-9011 @ 12/19/23 11:29:56.873
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-9011 to expose endpoints map[pod1:[80] pod2:[80]] @ 12/19/23 11:29:58.9
  Dec 19 11:29:58.919: INFO: successfully validated that service endpoint-test2 in namespace services-9011 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 12/19/23 11:29:58.919
  Dec 19 11:29:59.920: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=services-9011 exec execpodcn7zq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Dec 19 11:30:00.142: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Dec 19 11:30:00.142: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Dec 19 11:30:00.143: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=services-9011 exec execpodcn7zq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.23.38 80'
  Dec 19 11:30:00.355: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.23.38 80\nConnection to 10.233.23.38 80 port [tcp/http] succeeded!\n"
  Dec 19 11:30:00.355: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-9011 @ 12/19/23 11:30:00.355
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-9011 to expose endpoints map[pod2:[80]] @ 12/19/23 11:30:00.376
  Dec 19 11:30:01.424: INFO: successfully validated that service endpoint-test2 in namespace services-9011 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 12/19/23 11:30:01.425
  Dec 19 11:30:02.426: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=services-9011 exec execpodcn7zq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Dec 19 11:30:02.668: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Dec 19 11:30:02.668: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Dec 19 11:30:02.669: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=services-9011 exec execpodcn7zq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.23.38 80'
  Dec 19 11:30:02.880: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.23.38 80\nConnection to 10.233.23.38 80 port [tcp/http] succeeded!\n"
  Dec 19 11:30:02.880: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-9011 @ 12/19/23 11:30:02.88
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-9011 to expose endpoints map[] @ 12/19/23 11:30:02.903
  Dec 19 11:30:03.949: INFO: successfully validated that service endpoint-test2 in namespace services-9011 exposes endpoints map[]
  Dec 19 11:30:03.981: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9011" for this suite. @ 12/19/23 11:30:03.994
• [13.952 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/garbage_collector.go:480
  STEP: Creating a kubernetes client @ 12/19/23 11:30:04.006
  Dec 19 11:30:04.006: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename gc @ 12/19/23 11:30:04.009
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:30:04.034
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:30:04.041
  STEP: create the deployment @ 12/19/23 11:30:04.047
  W1219 11:30:04.057740      14 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 12/19/23 11:30:04.057
  STEP: delete the deployment @ 12/19/23 11:30:04.573
  STEP: wait for all rs to be garbage collected @ 12/19/23 11:30:04.583
  STEP: expected 0 rs, got 1 rs @ 12/19/23 11:30:04.596
  STEP: expected 0 pods, got 2 pods @ 12/19/23 11:30:04.605
  STEP: Gathering metrics @ 12/19/23 11:30:05.11
  Dec 19 11:30:05.306: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Dec 19 11:30:05.315: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-288" for this suite. @ 12/19/23 11:30:05.325
• [1.330 seconds]
------------------------------
SS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/kubelet.go:183
  STEP: Creating a kubernetes client @ 12/19/23 11:30:05.336
  Dec 19 11:30:05.336: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename kubelet-test @ 12/19/23 11:30:05.339
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:30:05.37
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:30:05.378
  Dec 19 11:30:07.465: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-6610" for this suite. @ 12/19/23 11:30:07.477
• [2.152 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
test/e2e/network/endpointslice.go:208
  STEP: Creating a kubernetes client @ 12/19/23 11:30:07.49
  Dec 19 11:30:07.490: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename endpointslice @ 12/19/23 11:30:07.493
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:30:07.523
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:30:07.529
  STEP: referencing a single matching pod @ 12/19/23 11:30:12.702
  STEP: referencing matching pods with named port @ 12/19/23 11:30:17.733
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 12/19/23 11:30:22.75
  STEP: recreating EndpointSlices after they've been deleted @ 12/19/23 11:30:27.767
  Dec 19 11:30:27.820: INFO: EndpointSlice for Service endpointslice-6487/example-named-port not found
  Dec 19 11:30:37.829: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-6487" for this suite. @ 12/19/23 11:30:37.838
• [30.361 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/runtimeclass.go:131
  STEP: Creating a kubernetes client @ 12/19/23 11:30:37.853
  Dec 19 11:30:37.853: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename runtimeclass @ 12/19/23 11:30:37.858
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:30:37.891
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:30:37.901
  Dec 19 11:30:39.964: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-5642" for this suite. @ 12/19/23 11:30:39.977
• [2.140 seconds]
------------------------------
S
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/container_probe.go:550
  STEP: Creating a kubernetes client @ 12/19/23 11:30:39.996
  Dec 19 11:30:39.996: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename container-probe @ 12/19/23 11:30:40.003
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:30:40.036
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:30:40.042
  STEP: Creating pod test-grpc-06f6b0ab-0938-4993-8f79-23545eb8cd56 in namespace container-probe-734 @ 12/19/23 11:30:40.052
  STEP: checking the pod's current state and verifying that restartCount is present @ 12/19/23 11:30:42.119
  Dec 19 11:30:42.126: INFO: Initial restart count of pod test-grpc-06f6b0ab-0938-4993-8f79-23545eb8cd56 is 0
  Dec 19 11:30:42.131: INFO: Get pod test-grpc-06f6b0ab-0938-4993-8f79-23545eb8cd56 in namespace container-probe-734
  Dec 19 11:30:44.141: INFO: Get pod test-grpc-06f6b0ab-0938-4993-8f79-23545eb8cd56 in namespace container-probe-734
  Dec 19 11:30:46.152: INFO: Get pod test-grpc-06f6b0ab-0938-4993-8f79-23545eb8cd56 in namespace container-probe-734
  Dec 19 11:30:48.170: INFO: Get pod test-grpc-06f6b0ab-0938-4993-8f79-23545eb8cd56 in namespace container-probe-734
  Dec 19 11:30:50.180: INFO: Get pod test-grpc-06f6b0ab-0938-4993-8f79-23545eb8cd56 in namespace container-probe-734
  Dec 19 11:30:52.187: INFO: Get pod test-grpc-06f6b0ab-0938-4993-8f79-23545eb8cd56 in namespace container-probe-734
  Dec 19 11:30:54.197: INFO: Get pod test-grpc-06f6b0ab-0938-4993-8f79-23545eb8cd56 in namespace container-probe-734
  Dec 19 11:30:56.204: INFO: Get pod test-grpc-06f6b0ab-0938-4993-8f79-23545eb8cd56 in namespace container-probe-734
  Dec 19 11:30:58.237: INFO: Get pod test-grpc-06f6b0ab-0938-4993-8f79-23545eb8cd56 in namespace container-probe-734
  Dec 19 11:31:00.245: INFO: Get pod test-grpc-06f6b0ab-0938-4993-8f79-23545eb8cd56 in namespace container-probe-734
  Dec 19 11:31:02.252: INFO: Get pod test-grpc-06f6b0ab-0938-4993-8f79-23545eb8cd56 in namespace container-probe-734
  Dec 19 11:31:04.262: INFO: Get pod test-grpc-06f6b0ab-0938-4993-8f79-23545eb8cd56 in namespace container-probe-734
  Dec 19 11:31:06.270: INFO: Get pod test-grpc-06f6b0ab-0938-4993-8f79-23545eb8cd56 in namespace container-probe-734
  Dec 19 11:31:08.279: INFO: Get pod test-grpc-06f6b0ab-0938-4993-8f79-23545eb8cd56 in namespace container-probe-734
  Dec 19 11:31:10.288: INFO: Get pod test-grpc-06f6b0ab-0938-4993-8f79-23545eb8cd56 in namespace container-probe-734
  Dec 19 11:31:12.297: INFO: Get pod test-grpc-06f6b0ab-0938-4993-8f79-23545eb8cd56 in namespace container-probe-734
  Dec 19 11:31:14.307: INFO: Get pod test-grpc-06f6b0ab-0938-4993-8f79-23545eb8cd56 in namespace container-probe-734
  Dec 19 11:31:16.317: INFO: Get pod test-grpc-06f6b0ab-0938-4993-8f79-23545eb8cd56 in namespace container-probe-734
  Dec 19 11:31:18.329: INFO: Get pod test-grpc-06f6b0ab-0938-4993-8f79-23545eb8cd56 in namespace container-probe-734
  Dec 19 11:31:20.338: INFO: Get pod test-grpc-06f6b0ab-0938-4993-8f79-23545eb8cd56 in namespace container-probe-734
  Dec 19 11:31:22.346: INFO: Get pod test-grpc-06f6b0ab-0938-4993-8f79-23545eb8cd56 in namespace container-probe-734
  Dec 19 11:31:24.355: INFO: Get pod test-grpc-06f6b0ab-0938-4993-8f79-23545eb8cd56 in namespace container-probe-734
  Dec 19 11:31:26.366: INFO: Get pod test-grpc-06f6b0ab-0938-4993-8f79-23545eb8cd56 in namespace container-probe-734
  Dec 19 11:31:28.376: INFO: Get pod test-grpc-06f6b0ab-0938-4993-8f79-23545eb8cd56 in namespace container-probe-734
  Dec 19 11:31:30.386: INFO: Get pod test-grpc-06f6b0ab-0938-4993-8f79-23545eb8cd56 in namespace container-probe-734
  Dec 19 11:31:32.394: INFO: Get pod test-grpc-06f6b0ab-0938-4993-8f79-23545eb8cd56 in namespace container-probe-734
  Dec 19 11:31:34.406: INFO: Get pod test-grpc-06f6b0ab-0938-4993-8f79-23545eb8cd56 in namespace container-probe-734
  Dec 19 11:31:36.413: INFO: Get pod test-grpc-06f6b0ab-0938-4993-8f79-23545eb8cd56 in namespace container-probe-734
  Dec 19 11:31:38.422: INFO: Get pod test-grpc-06f6b0ab-0938-4993-8f79-23545eb8cd56 in namespace container-probe-734
  Dec 19 11:31:40.430: INFO: Get pod test-grpc-06f6b0ab-0938-4993-8f79-23545eb8cd56 in namespace container-probe-734
  Dec 19 11:31:42.440: INFO: Get pod test-grpc-06f6b0ab-0938-4993-8f79-23545eb8cd56 in namespace container-probe-734
  Dec 19 11:31:44.446: INFO: Get pod test-grpc-06f6b0ab-0938-4993-8f79-23545eb8cd56 in namespace container-probe-734
  Dec 19 11:31:46.491: INFO: Get pod test-grpc-06f6b0ab-0938-4993-8f79-23545eb8cd56 in namespace container-probe-734
  Dec 19 11:31:46.491: INFO: Restart count of pod container-probe-734/test-grpc-06f6b0ab-0938-4993-8f79-23545eb8cd56 is now 1 (1m4.364811724s elapsed)
  STEP: deleting the pod @ 12/19/23 11:31:46.492
  Dec 19 11:31:46.526: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-734" for this suite. @ 12/19/23 11:31:46.54
• [66.559 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
test/e2e/storage/csistoragecapacity.go:50
  STEP: Creating a kubernetes client @ 12/19/23 11:31:46.561
  Dec 19 11:31:46.561: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename csistoragecapacity @ 12/19/23 11:31:46.566
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:31:46.625
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:31:46.632
  STEP: getting /apis @ 12/19/23 11:31:46.647
  STEP: getting /apis/storage.k8s.io @ 12/19/23 11:31:46.659
  STEP: getting /apis/storage.k8s.io/v1 @ 12/19/23 11:31:46.666
  STEP: creating @ 12/19/23 11:31:46.669
  STEP: watching @ 12/19/23 11:31:46.758
  Dec 19 11:31:46.758: INFO: starting watch
  STEP: getting @ 12/19/23 11:31:46.788
  STEP: listing in namespace @ 12/19/23 11:31:46.796
  STEP: listing across namespaces @ 12/19/23 11:31:46.805
  STEP: patching @ 12/19/23 11:31:46.811
  STEP: updating @ 12/19/23 11:31:46.821
  Dec 19 11:31:46.831: INFO: waiting for watch events with expected annotations in namespace
  Dec 19 11:31:46.831: INFO: waiting for watch events with expected annotations across namespace
  STEP: deleting @ 12/19/23 11:31:46.831
  STEP: deleting a collection @ 12/19/23 11:31:46.856
  Dec 19 11:31:46.896: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-5989" for this suite. @ 12/19/23 11:31:46.908
• [0.360 seconds]
------------------------------
SSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 12/19/23 11:31:46.922
  Dec 19 11:31:46.922: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 12/19/23 11:31:46.925
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:31:46.955
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:31:46.961
  STEP: creating a target pod @ 12/19/23 11:31:46.968
  STEP: adding an ephemeral container @ 12/19/23 11:31:49.021
  STEP: checking pod container endpoints @ 12/19/23 11:31:51.091
  Dec 19 11:31:51.091: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-4376 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 19 11:31:51.091: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  Dec 19 11:31:51.096: INFO: ExecWithOptions: Clientset creation
  Dec 19 11:31:51.096: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/ephemeral-containers-test-4376/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  Dec 19 11:31:51.222: INFO: Exec stderr: ""
  Dec 19 11:31:51.266: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-4376" for this suite. @ 12/19/23 11:31:51.279
• [4.375 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/container_probe.go:198
  STEP: Creating a kubernetes client @ 12/19/23 11:31:51.3
  Dec 19 11:31:51.300: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename container-probe @ 12/19/23 11:31:51.303
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:31:51.334
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:31:51.34
  STEP: Creating pod liveness-8a747cba-abe5-4c15-adb5-5094423c9860 in namespace container-probe-1756 @ 12/19/23 11:31:51.347
  STEP: checking the pod's current state and verifying that restartCount is present @ 12/19/23 11:31:53.393
  Dec 19 11:31:53.403: INFO: Initial restart count of pod liveness-8a747cba-abe5-4c15-adb5-5094423c9860 is 0
  Dec 19 11:31:53.411: INFO: Get pod liveness-8a747cba-abe5-4c15-adb5-5094423c9860 in namespace container-probe-1756
  Dec 19 11:31:55.422: INFO: Get pod liveness-8a747cba-abe5-4c15-adb5-5094423c9860 in namespace container-probe-1756
  Dec 19 11:31:57.432: INFO: Get pod liveness-8a747cba-abe5-4c15-adb5-5094423c9860 in namespace container-probe-1756
  Dec 19 11:31:59.444: INFO: Get pod liveness-8a747cba-abe5-4c15-adb5-5094423c9860 in namespace container-probe-1756
  Dec 19 11:32:01.452: INFO: Get pod liveness-8a747cba-abe5-4c15-adb5-5094423c9860 in namespace container-probe-1756
  Dec 19 11:32:03.461: INFO: Get pod liveness-8a747cba-abe5-4c15-adb5-5094423c9860 in namespace container-probe-1756
  Dec 19 11:32:05.471: INFO: Get pod liveness-8a747cba-abe5-4c15-adb5-5094423c9860 in namespace container-probe-1756
  Dec 19 11:32:07.479: INFO: Get pod liveness-8a747cba-abe5-4c15-adb5-5094423c9860 in namespace container-probe-1756
  Dec 19 11:32:09.489: INFO: Get pod liveness-8a747cba-abe5-4c15-adb5-5094423c9860 in namespace container-probe-1756
  Dec 19 11:32:11.498: INFO: Get pod liveness-8a747cba-abe5-4c15-adb5-5094423c9860 in namespace container-probe-1756
  Dec 19 11:32:13.508: INFO: Get pod liveness-8a747cba-abe5-4c15-adb5-5094423c9860 in namespace container-probe-1756
  Dec 19 11:32:13.508: INFO: Restart count of pod container-probe-1756/liveness-8a747cba-abe5-4c15-adb5-5094423c9860 is now 1 (20.105121599s elapsed)
  Dec 19 11:32:15.517: INFO: Get pod liveness-8a747cba-abe5-4c15-adb5-5094423c9860 in namespace container-probe-1756
  Dec 19 11:32:17.525: INFO: Get pod liveness-8a747cba-abe5-4c15-adb5-5094423c9860 in namespace container-probe-1756
  Dec 19 11:32:19.537: INFO: Get pod liveness-8a747cba-abe5-4c15-adb5-5094423c9860 in namespace container-probe-1756
  Dec 19 11:32:21.552: INFO: Get pod liveness-8a747cba-abe5-4c15-adb5-5094423c9860 in namespace container-probe-1756
  Dec 19 11:32:23.569: INFO: Get pod liveness-8a747cba-abe5-4c15-adb5-5094423c9860 in namespace container-probe-1756
  Dec 19 11:32:25.586: INFO: Get pod liveness-8a747cba-abe5-4c15-adb5-5094423c9860 in namespace container-probe-1756
  Dec 19 11:32:27.597: INFO: Get pod liveness-8a747cba-abe5-4c15-adb5-5094423c9860 in namespace container-probe-1756
  Dec 19 11:32:29.608: INFO: Get pod liveness-8a747cba-abe5-4c15-adb5-5094423c9860 in namespace container-probe-1756
  Dec 19 11:32:31.619: INFO: Get pod liveness-8a747cba-abe5-4c15-adb5-5094423c9860 in namespace container-probe-1756
  Dec 19 11:32:33.628: INFO: Get pod liveness-8a747cba-abe5-4c15-adb5-5094423c9860 in namespace container-probe-1756
  Dec 19 11:32:33.628: INFO: Restart count of pod container-probe-1756/liveness-8a747cba-abe5-4c15-adb5-5094423c9860 is now 2 (40.225009934s elapsed)
  Dec 19 11:32:35.638: INFO: Get pod liveness-8a747cba-abe5-4c15-adb5-5094423c9860 in namespace container-probe-1756
  Dec 19 11:32:37.647: INFO: Get pod liveness-8a747cba-abe5-4c15-adb5-5094423c9860 in namespace container-probe-1756
  Dec 19 11:32:39.655: INFO: Get pod liveness-8a747cba-abe5-4c15-adb5-5094423c9860 in namespace container-probe-1756
  Dec 19 11:32:41.669: INFO: Get pod liveness-8a747cba-abe5-4c15-adb5-5094423c9860 in namespace container-probe-1756
  Dec 19 11:32:43.679: INFO: Get pod liveness-8a747cba-abe5-4c15-adb5-5094423c9860 in namespace container-probe-1756
  Dec 19 11:32:45.689: INFO: Get pod liveness-8a747cba-abe5-4c15-adb5-5094423c9860 in namespace container-probe-1756
  Dec 19 11:32:47.702: INFO: Get pod liveness-8a747cba-abe5-4c15-adb5-5094423c9860 in namespace container-probe-1756
  Dec 19 11:32:49.712: INFO: Get pod liveness-8a747cba-abe5-4c15-adb5-5094423c9860 in namespace container-probe-1756
  Dec 19 11:32:51.726: INFO: Get pod liveness-8a747cba-abe5-4c15-adb5-5094423c9860 in namespace container-probe-1756
  Dec 19 11:32:53.736: INFO: Get pod liveness-8a747cba-abe5-4c15-adb5-5094423c9860 in namespace container-probe-1756
  Dec 19 11:32:53.737: INFO: Restart count of pod container-probe-1756/liveness-8a747cba-abe5-4c15-adb5-5094423c9860 is now 3 (1m0.334494552s elapsed)
  Dec 19 11:32:55.748: INFO: Get pod liveness-8a747cba-abe5-4c15-adb5-5094423c9860 in namespace container-probe-1756
  Dec 19 11:32:57.760: INFO: Get pod liveness-8a747cba-abe5-4c15-adb5-5094423c9860 in namespace container-probe-1756
  Dec 19 11:32:59.781: INFO: Get pod liveness-8a747cba-abe5-4c15-adb5-5094423c9860 in namespace container-probe-1756
  Dec 19 11:33:01.789: INFO: Get pod liveness-8a747cba-abe5-4c15-adb5-5094423c9860 in namespace container-probe-1756
  Dec 19 11:33:03.798: INFO: Get pod liveness-8a747cba-abe5-4c15-adb5-5094423c9860 in namespace container-probe-1756
  Dec 19 11:33:05.808: INFO: Get pod liveness-8a747cba-abe5-4c15-adb5-5094423c9860 in namespace container-probe-1756
  Dec 19 11:33:07.818: INFO: Get pod liveness-8a747cba-abe5-4c15-adb5-5094423c9860 in namespace container-probe-1756
  Dec 19 11:33:09.830: INFO: Get pod liveness-8a747cba-abe5-4c15-adb5-5094423c9860 in namespace container-probe-1756
  Dec 19 11:33:11.842: INFO: Get pod liveness-8a747cba-abe5-4c15-adb5-5094423c9860 in namespace container-probe-1756
  Dec 19 11:33:13.849: INFO: Get pod liveness-8a747cba-abe5-4c15-adb5-5094423c9860 in namespace container-probe-1756
  Dec 19 11:33:13.850: INFO: Restart count of pod container-probe-1756/liveness-8a747cba-abe5-4c15-adb5-5094423c9860 is now 4 (1m20.447270173s elapsed)
  Dec 19 11:33:15.860: INFO: Get pod liveness-8a747cba-abe5-4c15-adb5-5094423c9860 in namespace container-probe-1756
  Dec 19 11:33:17.870: INFO: Get pod liveness-8a747cba-abe5-4c15-adb5-5094423c9860 in namespace container-probe-1756
  Dec 19 11:33:19.880: INFO: Get pod liveness-8a747cba-abe5-4c15-adb5-5094423c9860 in namespace container-probe-1756
  Dec 19 11:33:21.888: INFO: Get pod liveness-8a747cba-abe5-4c15-adb5-5094423c9860 in namespace container-probe-1756
  Dec 19 11:33:23.897: INFO: Get pod liveness-8a747cba-abe5-4c15-adb5-5094423c9860 in namespace container-probe-1756
  Dec 19 11:33:25.904: INFO: Get pod liveness-8a747cba-abe5-4c15-adb5-5094423c9860 in namespace container-probe-1756
  Dec 19 11:33:27.914: INFO: Get pod liveness-8a747cba-abe5-4c15-adb5-5094423c9860 in namespace container-probe-1756
  Dec 19 11:33:29.924: INFO: Get pod liveness-8a747cba-abe5-4c15-adb5-5094423c9860 in namespace container-probe-1756
  Dec 19 11:33:31.936: INFO: Get pod liveness-8a747cba-abe5-4c15-adb5-5094423c9860 in namespace container-probe-1756
  Dec 19 11:33:33.945: INFO: Get pod liveness-8a747cba-abe5-4c15-adb5-5094423c9860 in namespace container-probe-1756
  Dec 19 11:33:35.955: INFO: Get pod liveness-8a747cba-abe5-4c15-adb5-5094423c9860 in namespace container-probe-1756
  Dec 19 11:33:37.965: INFO: Get pod liveness-8a747cba-abe5-4c15-adb5-5094423c9860 in namespace container-probe-1756
  Dec 19 11:33:39.975: INFO: Get pod liveness-8a747cba-abe5-4c15-adb5-5094423c9860 in namespace container-probe-1756
  Dec 19 11:33:41.984: INFO: Get pod liveness-8a747cba-abe5-4c15-adb5-5094423c9860 in namespace container-probe-1756
  Dec 19 11:33:43.993: INFO: Get pod liveness-8a747cba-abe5-4c15-adb5-5094423c9860 in namespace container-probe-1756
  Dec 19 11:33:46.002: INFO: Get pod liveness-8a747cba-abe5-4c15-adb5-5094423c9860 in namespace container-probe-1756
  Dec 19 11:33:48.013: INFO: Get pod liveness-8a747cba-abe5-4c15-adb5-5094423c9860 in namespace container-probe-1756
  Dec 19 11:33:50.026: INFO: Get pod liveness-8a747cba-abe5-4c15-adb5-5094423c9860 in namespace container-probe-1756
  Dec 19 11:33:52.038: INFO: Get pod liveness-8a747cba-abe5-4c15-adb5-5094423c9860 in namespace container-probe-1756
  Dec 19 11:33:54.048: INFO: Get pod liveness-8a747cba-abe5-4c15-adb5-5094423c9860 in namespace container-probe-1756
  Dec 19 11:33:56.056: INFO: Get pod liveness-8a747cba-abe5-4c15-adb5-5094423c9860 in namespace container-probe-1756
  Dec 19 11:33:58.067: INFO: Get pod liveness-8a747cba-abe5-4c15-adb5-5094423c9860 in namespace container-probe-1756
  Dec 19 11:34:00.077: INFO: Get pod liveness-8a747cba-abe5-4c15-adb5-5094423c9860 in namespace container-probe-1756
  Dec 19 11:34:02.086: INFO: Get pod liveness-8a747cba-abe5-4c15-adb5-5094423c9860 in namespace container-probe-1756
  Dec 19 11:34:04.100: INFO: Get pod liveness-8a747cba-abe5-4c15-adb5-5094423c9860 in namespace container-probe-1756
  Dec 19 11:34:06.112: INFO: Get pod liveness-8a747cba-abe5-4c15-adb5-5094423c9860 in namespace container-probe-1756
  Dec 19 11:34:08.122: INFO: Get pod liveness-8a747cba-abe5-4c15-adb5-5094423c9860 in namespace container-probe-1756
  Dec 19 11:34:10.131: INFO: Get pod liveness-8a747cba-abe5-4c15-adb5-5094423c9860 in namespace container-probe-1756
  Dec 19 11:34:12.143: INFO: Get pod liveness-8a747cba-abe5-4c15-adb5-5094423c9860 in namespace container-probe-1756
  Dec 19 11:34:14.152: INFO: Get pod liveness-8a747cba-abe5-4c15-adb5-5094423c9860 in namespace container-probe-1756
  Dec 19 11:34:14.152: INFO: Restart count of pod container-probe-1756/liveness-8a747cba-abe5-4c15-adb5-5094423c9860 is now 5 (2m20.749063029s elapsed)
  STEP: deleting the pod @ 12/19/23 11:34:14.153
  Dec 19 11:34:14.175: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-1756" for this suite. @ 12/19/23 11:34:14.184
• [142.897 seconds]
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
test/e2e/apps/disruption.go:349
  STEP: Creating a kubernetes client @ 12/19/23 11:34:14.197
  Dec 19 11:34:14.198: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename disruption @ 12/19/23 11:34:14.235
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:34:14.357
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:34:14.364
  STEP: Creating a pdb that targets all three pods in a test replica set @ 12/19/23 11:34:14.373
  STEP: Waiting for the pdb to be processed @ 12/19/23 11:34:14.397
  STEP: First trying to evict a pod which shouldn't be evictable @ 12/19/23 11:34:14.425
  STEP: Waiting for all pods to be running @ 12/19/23 11:34:14.425
  Dec 19 11:34:14.431: INFO: pods: 0 < 3
  STEP: locating a running pod @ 12/19/23 11:34:16.436
  STEP: Updating the pdb to allow a pod to be evicted @ 12/19/23 11:34:16.461
  STEP: Waiting for the pdb to be processed @ 12/19/23 11:34:16.48
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 12/19/23 11:34:18.493
  STEP: Waiting for all pods to be running @ 12/19/23 11:34:18.494
  STEP: Waiting for the pdb to observed all healthy pods @ 12/19/23 11:34:18.505
  STEP: Patching the pdb to disallow a pod to be evicted @ 12/19/23 11:34:18.556
  STEP: Waiting for the pdb to be processed @ 12/19/23 11:34:18.675
  STEP: Waiting for all pods to be running @ 12/19/23 11:34:20.689
  STEP: locating a running pod @ 12/19/23 11:34:20.699
  STEP: Deleting the pdb to allow a pod to be evicted @ 12/19/23 11:34:20.729
  STEP: Waiting for the pdb to be deleted @ 12/19/23 11:34:20.742
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 12/19/23 11:34:20.754
  STEP: Waiting for all pods to be running @ 12/19/23 11:34:20.755
  Dec 19 11:34:20.851: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-9695" for this suite. @ 12/19/23 11:34:20.877
• [6.746 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_conversion_webhook.go:177
  STEP: Creating a kubernetes client @ 12/19/23 11:34:20.946
  Dec 19 11:34:20.946: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename crd-webhook @ 12/19/23 11:34:20.95
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:34:21.228
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:34:21.237
  STEP: Setting up server cert @ 12/19/23 11:34:21.245
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 12/19/23 11:34:22.284
  STEP: Deploying the custom resource conversion webhook pod @ 12/19/23 11:34:22.301
  STEP: Wait for the deployment to be ready @ 12/19/23 11:34:22.328
  Dec 19 11:34:22.345: INFO: new replicaset for deployment "sample-crd-conversion-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 12/19/23 11:34:24.368
  STEP: Verifying the service has paired with the endpoint @ 12/19/23 11:34:24.395
  Dec 19 11:34:25.396: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Dec 19 11:34:25.411: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Creating a v1 custom resource @ 12/19/23 11:34:28.311
  STEP: Create a v2 custom resource @ 12/19/23 11:34:28.352
  STEP: List CRs in v1 @ 12/19/23 11:34:28.604
  STEP: List CRs in v2 @ 12/19/23 11:34:28.618
  Dec 19 11:34:29.293: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-7703" for this suite. @ 12/19/23 11:34:29.314
• [8.395 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_configmap.go:125
  STEP: Creating a kubernetes client @ 12/19/23 11:34:29.341
  Dec 19 11:34:29.341: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename projected @ 12/19/23 11:34:29.345
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:34:29.396
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:34:29.4
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-f5d8b7ae-6274-428f-b1eb-d0cf46b7fd97 @ 12/19/23 11:34:29.414
  STEP: Creating the pod @ 12/19/23 11:34:29.425
  STEP: Updating configmap projected-configmap-test-upd-f5d8b7ae-6274-428f-b1eb-d0cf46b7fd97 @ 12/19/23 11:34:31.515
  STEP: waiting to observe update in volume @ 12/19/23 11:34:31.531
  Dec 19 11:35:42.305: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7635" for this suite. @ 12/19/23 11:35:42.317
• [72.990 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:3565
  STEP: Creating a kubernetes client @ 12/19/23 11:35:42.333
  Dec 19 11:35:42.333: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename services @ 12/19/23 11:35:42.336
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:35:42.369
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:35:42.375
  STEP: creating a collection of services @ 12/19/23 11:35:42.381
  Dec 19 11:35:42.381: INFO: Creating e2e-svc-a-6ght8
  Dec 19 11:35:42.420: INFO: Creating e2e-svc-b-7s655
  Dec 19 11:35:42.455: INFO: Creating e2e-svc-c-hn9c5
  STEP: deleting service collection @ 12/19/23 11:35:42.499
  Dec 19 11:35:42.572: INFO: Collection of services has been deleted
  Dec 19 11:35:42.572: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9235" for this suite. @ 12/19/23 11:35:42.58
• [0.262 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
test/e2e/apimachinery/namespace.go:305
  STEP: Creating a kubernetes client @ 12/19/23 11:35:42.597
  Dec 19 11:35:42.597: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename namespaces @ 12/19/23 11:35:42.6
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:35:42.652
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:35:42.658
  STEP: Read namespace status @ 12/19/23 11:35:42.665
  Dec 19 11:35:42.676: INFO: Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 12/19/23 11:35:42.677
  Dec 19 11:35:42.692: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 12/19/23 11:35:42.693
  Dec 19 11:35:42.713: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  Dec 19 11:35:42.713: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-7612" for this suite. @ 12/19/23 11:35:42.723
• [0.143 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:1493
  STEP: Creating a kubernetes client @ 12/19/23 11:35:42.741
  Dec 19 11:35:42.742: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename services @ 12/19/23 11:35:42.744
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:35:42.784
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:35:42.792
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-8041 @ 12/19/23 11:35:42.801
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 12/19/23 11:35:42.826
  STEP: creating service externalsvc in namespace services-8041 @ 12/19/23 11:35:42.826
  STEP: creating replication controller externalsvc in namespace services-8041 @ 12/19/23 11:35:42.852
  I1219 11:35:42.871402      14 runners.go:197] Created replication controller with name: externalsvc, namespace: services-8041, replica count: 2
  I1219 11:35:45.924979      14 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 12/19/23 11:35:45.934
  Dec 19 11:35:45.973: INFO: Creating new exec pod
  Dec 19 11:35:48.015: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=services-8041 exec execpodp965z -- /bin/sh -x -c nslookup clusterip-service.services-8041.svc.cluster.local'
  Dec 19 11:35:48.545: INFO: stderr: "+ nslookup clusterip-service.services-8041.svc.cluster.local\n"
  Dec 19 11:35:48.545: INFO: stdout: "Server:\t\t10.233.0.10\nAddress:\t10.233.0.10#53\n\nclusterip-service.services-8041.svc.cluster.local\tcanonical name = externalsvc.services-8041.svc.cluster.local.\nName:\texternalsvc.services-8041.svc.cluster.local\nAddress: 10.233.23.3\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-8041, will wait for the garbage collector to delete the pods @ 12/19/23 11:35:48.546
  Dec 19 11:35:48.619: INFO: Deleting ReplicationController externalsvc took: 14.201352ms
  Dec 19 11:35:48.720: INFO: Terminating ReplicationController externalsvc pods took: 100.864922ms
  Dec 19 11:35:51.772: INFO: Cleaning up the ClusterIP to ExternalName test service
  Dec 19 11:35:51.807: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8041" for this suite. @ 12/19/23 11:35:51.825
• [9.101 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 12/19/23 11:35:51.845
  Dec 19 11:35:51.845: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename init-container @ 12/19/23 11:35:51.85
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:35:51.883
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:35:51.887
  STEP: creating the pod @ 12/19/23 11:35:51.896
  Dec 19 11:35:51.896: INFO: PodSpec: initContainers in spec.initContainers
  Dec 19 11:36:32.845: INFO: init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-74ba4138-ddf6-4b28-87c9-3ce9f7bfc855", GenerateName:"", Namespace:"init-container-324", SelfLink:"", UID:"89bbbf4e-f935-4607-bd31-ad30ea4368b2", ResourceVersion:"36705", Generation:0, CreationTimestamp:time.Date(2023, time.December, 19, 11, 35, 51, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"896382451"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 19, 11, 35, 51, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001584318), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.December, 19, 11, 36, 32, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001584378), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-8lljm", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc004ec1100), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-8lljm", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-8lljm", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.9", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-8lljm", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc003dba790), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"dah7vaemeeho-3", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc003fc5500), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc003dba820)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc003dba840)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc003dba848), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc003dba84c), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc004273ab0), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.December, 19, 11, 35, 52, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.December, 19, 11, 35, 51, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.December, 19, 11, 35, 51, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.December, 19, 11, 35, 51, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.December, 19, 11, 35, 51, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"192.168.121.250", HostIPs:[]v1.HostIP{v1.HostIP{IP:"192.168.121.250"}}, PodIP:"10.233.66.167", PodIPs:[]v1.PodIP{v1.PodIP{IP:"10.233.66.167"}}, StartTime:time.Date(2023, time.December, 19, 11, 35, 51, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc003fc5650)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc003fc56c0)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"3e0d9138669908f438c06993e9a6815bbd8c05411b8e9acfc297b3c8b017c28c", ContainerID:"cri-o://59b2c98223c61d496729fabe349188b38680402a950f372dee4f1e3b19f56e7d", Started:(*bool)(0xc003dba8ef), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc004ec1160), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"", ContainerID:"", Started:(*bool)(0xc003dba8f5), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc004ec1140), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.9", ImageID:"", ContainerID:"", Started:(*bool)(0xc003dba8c4), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  Dec 19 11:36:32.848: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-324" for this suite. @ 12/19/23 11:36:32.864
• [41.035 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 12/19/23 11:36:32.882
  Dec 19 11:36:32.883: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename tables @ 12/19/23 11:36:32.888
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:36:32.942
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:36:32.948
  Dec 19 11:36:32.958: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-9299" for this suite. @ 12/19/23 11:36:32.967
• [0.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/configmap_volume.go:58
  STEP: Creating a kubernetes client @ 12/19/23 11:36:32.989
  Dec 19 11:36:32.989: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename configmap @ 12/19/23 11:36:32.996
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:36:33.069
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:36:33.074
  STEP: Creating configMap with name configmap-test-volume-5d9bc633-2ab2-40f1-81fa-15b93b8ffac7 @ 12/19/23 11:36:33.082
  STEP: Creating a pod to test consume configMaps @ 12/19/23 11:36:33.094
  STEP: Saw pod success @ 12/19/23 11:36:37.156
  Dec 19 11:36:37.168: INFO: Trying to get logs from node dah7vaemeeho-3 pod pod-configmaps-194529a6-642d-433b-be2a-c077c577a5e1 container agnhost-container: <nil>
  STEP: delete the pod @ 12/19/23 11:36:37.187
  Dec 19 11:36:37.225: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-827" for this suite. @ 12/19/23 11:36:37.238
• [4.264 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:140
  STEP: Creating a kubernetes client @ 12/19/23 11:36:37.256
  Dec 19 11:36:37.256: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename emptydir @ 12/19/23 11:36:37.259
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:36:37.3
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:36:37.306
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 12/19/23 11:36:37.315
  STEP: Saw pod success @ 12/19/23 11:36:41.367
  Dec 19 11:36:41.374: INFO: Trying to get logs from node dah7vaemeeho-3 pod pod-a3461d3a-52bf-453a-b7fa-27b81b2f580b container test-container: <nil>
  STEP: delete the pod @ 12/19/23 11:36:41.391
  Dec 19 11:36:41.428: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6851" for this suite. @ 12/19/23 11:36:41.441
• [4.201 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 12/19/23 11:36:41.458
  Dec 19 11:36:41.458: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename watch @ 12/19/23 11:36:41.462
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:36:41.534
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:36:41.542
  STEP: creating a new configmap @ 12/19/23 11:36:41.549
  STEP: modifying the configmap once @ 12/19/23 11:36:41.559
  STEP: modifying the configmap a second time @ 12/19/23 11:36:41.578
  STEP: deleting the configmap @ 12/19/23 11:36:41.598
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 12/19/23 11:36:41.61
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 12/19/23 11:36:41.612
  Dec 19 11:36:41.613: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-8535  30729b31-d1fc-4cbf-ae81-f4fa8298d962 36785 0 2023-12-19 11:36:41 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2023-12-19 11:36:41 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Dec 19 11:36:41.614: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-8535  30729b31-d1fc-4cbf-ae81-f4fa8298d962 36786 0 2023-12-19 11:36:41 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2023-12-19 11:36:41 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Dec 19 11:36:41.614: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-8535" for this suite. @ 12/19/23 11:36:41.623
• [0.177 seconds]
------------------------------
SSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 12/19/23 11:36:41.638
  Dec 19 11:36:41.638: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename container-runtime @ 12/19/23 11:36:41.641
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:36:41.694
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:36:41.699
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 12/19/23 11:36:41.729
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 12/19/23 11:36:56.882
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 12/19/23 11:36:56.89
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 12/19/23 11:36:56.905
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 12/19/23 11:36:56.905
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 12/19/23 11:36:57.014
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 12/19/23 11:36:59.043
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 12/19/23 11:37:01.091
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 12/19/23 11:37:01.107
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 12/19/23 11:37:01.107
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 12/19/23 11:37:01.144
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 12/19/23 11:37:02.162
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 12/19/23 11:37:03.177
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 12/19/23 11:37:03.19
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 12/19/23 11:37:03.19
  Dec 19 11:37:03.248: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-5379" for this suite. @ 12/19/23 11:37:03.264
• [21.639 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 12/19/23 11:37:03.284
  Dec 19 11:37:03.284: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename daemonsets @ 12/19/23 11:37:03.288
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:37:03.327
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:37:03.334
  Dec 19 11:37:03.381: INFO: Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 12/19/23 11:37:03.396
  Dec 19 11:37:03.405: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 19 11:37:03.405: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 12/19/23 11:37:03.406
  Dec 19 11:37:03.461: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 19 11:37:03.461: INFO: Node dah7vaemeeho-1 is running 0 daemon pod, expected 1
  Dec 19 11:37:04.457: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 19 11:37:04.458: INFO: Node dah7vaemeeho-1 is running 0 daemon pod, expected 1
  Dec 19 11:37:05.458: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Dec 19 11:37:05.458: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 12/19/23 11:37:05.464
  Dec 19 11:37:05.497: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Dec 19 11:37:05.497: INFO: Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
  Dec 19 11:37:06.501: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 19 11:37:06.501: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 12/19/23 11:37:06.501
  Dec 19 11:37:06.533: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 19 11:37:06.534: INFO: Node dah7vaemeeho-1 is running 0 daemon pod, expected 1
  Dec 19 11:37:07.526: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 19 11:37:07.526: INFO: Node dah7vaemeeho-1 is running 0 daemon pod, expected 1
  Dec 19 11:37:08.534: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Dec 19 11:37:08.535: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 12/19/23 11:37:08.552
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-8445, will wait for the garbage collector to delete the pods @ 12/19/23 11:37:08.553
  Dec 19 11:37:08.627: INFO: Deleting DaemonSet.extensions daemon-set took: 13.285902ms
  Dec 19 11:37:08.728: INFO: Terminating DaemonSet.extensions daemon-set pods took: 101.024011ms
  Dec 19 11:37:09.637: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 19 11:37:09.637: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Dec 19 11:37:09.645: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"36981"},"items":null}

  Dec 19 11:37:09.650: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"36981"},"items":null}

  Dec 19 11:37:09.712: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-8445" for this suite. @ 12/19/23 11:37:09.722
• [6.464 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
test/e2e/apps/replica_set.go:132
  STEP: Creating a kubernetes client @ 12/19/23 11:37:09.75
  Dec 19 11:37:09.750: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename replicaset @ 12/19/23 11:37:09.753
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:37:09.803
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:37:09.816
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 12/19/23 11:37:09.826
  STEP: When a replicaset with a matching selector is created @ 12/19/23 11:37:11.868
  STEP: Then the orphan pod is adopted @ 12/19/23 11:37:11.888
  STEP: When the matched label of one of its pods change @ 12/19/23 11:37:12.906
  Dec 19 11:37:12.913: INFO: Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 12/19/23 11:37:12.938
  Dec 19 11:37:13.964: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-5084" for this suite. @ 12/19/23 11:37:13.976
• [4.240 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:86
  STEP: Creating a kubernetes client @ 12/19/23 11:37:13.999
  Dec 19 11:37:13.999: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename projected @ 12/19/23 11:37:14.002
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:37:14.032
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:37:14.042
  STEP: Creating a pod to test downward API volume plugin @ 12/19/23 11:37:14.052
  STEP: Saw pod success @ 12/19/23 11:37:18.115
  Dec 19 11:37:18.123: INFO: Trying to get logs from node dah7vaemeeho-3 pod downwardapi-volume-4d695d04-b43b-4812-9e79-fc0fafded289 container client-container: <nil>
  STEP: delete the pod @ 12/19/23 11:37:18.138
  Dec 19 11:37:18.175: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5804" for this suite. @ 12/19/23 11:37:18.187
• [4.202 seconds]
------------------------------
S
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/kubelet.go:134
  STEP: Creating a kubernetes client @ 12/19/23 11:37:18.204
  Dec 19 11:37:18.205: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename kubelet-test @ 12/19/23 11:37:18.208
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:37:18.251
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:37:18.266
  Dec 19 11:37:18.353: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-6417" for this suite. @ 12/19/23 11:37:18.363
• [0.173 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/field_validation.go:168
  STEP: Creating a kubernetes client @ 12/19/23 11:37:18.387
  Dec 19 11:37:18.387: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename field-validation @ 12/19/23 11:37:18.392
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:37:18.427
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:37:18.432
  Dec 19 11:37:18.440: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  W1219 11:37:21.225181      14 warnings.go:70] unknown field "alpha"
  W1219 11:37:21.225494      14 warnings.go:70] unknown field "beta"
  W1219 11:37:21.225666      14 warnings.go:70] unknown field "delta"
  W1219 11:37:21.225815      14 warnings.go:70] unknown field "epsilon"
  W1219 11:37:21.226016      14 warnings.go:70] unknown field "gamma"
  Dec 19 11:37:21.850: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-2287" for this suite. @ 12/19/23 11:37:21.872
• [3.510 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/kubelet.go:147
  STEP: Creating a kubernetes client @ 12/19/23 11:37:21.899
  Dec 19 11:37:21.899: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename kubelet-test @ 12/19/23 11:37:21.903
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:37:21.954
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:37:21.959
  STEP: Waiting for pod completion @ 12/19/23 11:37:21.989
  Dec 19 11:37:26.059: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-6795" for this suite. @ 12/19/23 11:37:26.075
• [4.194 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/server_version.go:41
  STEP: Creating a kubernetes client @ 12/19/23 11:37:26.109
  Dec 19 11:37:26.110: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename server-version @ 12/19/23 11:37:26.113
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:37:26.154
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:37:26.159
  STEP: Request ServerVersion @ 12/19/23 11:37:26.164
  STEP: Confirm major version @ 12/19/23 11:37:26.167
  Dec 19 11:37:26.167: INFO: Major version: 1
  STEP: Confirm minor version @ 12/19/23 11:37:26.168
  Dec 19 11:37:26.168: INFO: cleanMinorVersion: 29
  Dec 19 11:37:26.169: INFO: Minor version: 29
  Dec 19 11:37:26.170: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-3203" for this suite. @ 12/19/23 11:37:26.181
• [0.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:261
  STEP: Creating a kubernetes client @ 12/19/23 11:37:26.201
  Dec 19 11:37:26.202: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename webhook @ 12/19/23 11:37:26.206
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:37:26.244
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:37:26.253
  STEP: Setting up server cert @ 12/19/23 11:37:26.304
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/19/23 11:37:26.851
  STEP: Deploying the webhook pod @ 12/19/23 11:37:26.873
  STEP: Wait for the deployment to be ready @ 12/19/23 11:37:26.9
  Dec 19 11:37:26.928: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/19/23 11:37:28.95
  STEP: Verifying the service has paired with the endpoint @ 12/19/23 11:37:28.973
  Dec 19 11:37:29.974: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 12/19/23 11:37:29.987
  STEP: create a pod that should be updated by the webhook @ 12/19/23 11:37:30.022
  Dec 19 11:37:30.188: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1878" for this suite. @ 12/19/23 11:37:30.195
  STEP: Destroying namespace "webhook-markers-7310" for this suite. @ 12/19/23 11:37:30.232
• [4.053 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
test/e2e/instrumentation/core_events.go:176
  STEP: Creating a kubernetes client @ 12/19/23 11:37:30.256
  Dec 19 11:37:30.256: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename events @ 12/19/23 11:37:30.259
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:37:30.294
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:37:30.299
  STEP: Create set of events @ 12/19/23 11:37:30.31
  Dec 19 11:37:30.321: INFO: created test-event-1
  Dec 19 11:37:30.330: INFO: created test-event-2
  Dec 19 11:37:30.337: INFO: created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 12/19/23 11:37:30.337
  STEP: delete collection of events @ 12/19/23 11:37:30.342
  Dec 19 11:37:30.342: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 12/19/23 11:37:30.379
  Dec 19 11:37:30.379: INFO: requesting list of events to confirm quantity
  Dec 19 11:37:30.386: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-9926" for this suite. @ 12/19/23 11:37:30.398
• [0.155 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
test/e2e/network/endpointslice.go:356
  STEP: Creating a kubernetes client @ 12/19/23 11:37:30.415
  Dec 19 11:37:30.415: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename endpointslice @ 12/19/23 11:37:30.419
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:37:30.452
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:37:30.458
  STEP: getting /apis @ 12/19/23 11:37:30.465
  STEP: getting /apis/discovery.k8s.io @ 12/19/23 11:37:30.476
  STEP: getting /apis/discovery.k8s.iov1 @ 12/19/23 11:37:30.479
  STEP: creating @ 12/19/23 11:37:30.481
  STEP: getting @ 12/19/23 11:37:30.513
  STEP: listing @ 12/19/23 11:37:30.52
  STEP: watching @ 12/19/23 11:37:30.53
  Dec 19 11:37:30.530: INFO: starting watch
  STEP: cluster-wide listing @ 12/19/23 11:37:30.532
  STEP: cluster-wide watching @ 12/19/23 11:37:30.539
  Dec 19 11:37:30.539: INFO: starting watch
  STEP: patching @ 12/19/23 11:37:30.542
  STEP: updating @ 12/19/23 11:37:30.554
  Dec 19 11:37:30.570: INFO: waiting for watch events with expected annotations
  Dec 19 11:37:30.570: INFO: saw patched and updated annotations
  STEP: deleting @ 12/19/23 11:37:30.57
  STEP: deleting a collection @ 12/19/23 11:37:30.597
  Dec 19 11:37:30.634: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-7809" for this suite. @ 12/19/23 11:37:30.646
• [0.242 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/expansion.go:95
  STEP: Creating a kubernetes client @ 12/19/23 11:37:30.659
  Dec 19 11:37:30.659: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename var-expansion @ 12/19/23 11:37:30.662
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:37:30.694
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:37:30.701
  STEP: Creating a pod to test substitution in container's args @ 12/19/23 11:37:30.708
  STEP: Saw pod success @ 12/19/23 11:37:34.772
  Dec 19 11:37:34.778: INFO: Trying to get logs from node dah7vaemeeho-3 pod var-expansion-e38d739d-c83c-4eea-a2b0-ac44be10e956 container dapi-container: <nil>
  STEP: delete the pod @ 12/19/23 11:37:34.794
  Dec 19 11:37:34.826: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9368" for this suite. @ 12/19/23 11:37:34.835
• [4.189 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
test/e2e/network/dns.go:137
  STEP: Creating a kubernetes client @ 12/19/23 11:37:34.849
  Dec 19 11:37:34.849: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename dns @ 12/19/23 11:37:34.852
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:37:34.878
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:37:34.883
  STEP: Creating a test headless service @ 12/19/23 11:37:34.887
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9353.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-9353.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9353.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-9353.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-9353.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-9353.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-9353.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-9353.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-9353.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-9353.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-9353.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-9353.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 40.48.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.48.40_udp@PTR;check="$$(dig +tcp +noall +answer +search 40.48.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.48.40_tcp@PTR;sleep 1; done
   @ 12/19/23 11:37:34.919
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9353.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-9353.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9353.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-9353.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-9353.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-9353.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-9353.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-9353.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-9353.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-9353.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-9353.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-9353.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 40.48.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.48.40_udp@PTR;check="$$(dig +tcp +noall +answer +search 40.48.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.48.40_tcp@PTR;sleep 1; done
   @ 12/19/23 11:37:34.919
  STEP: creating a pod to probe DNS @ 12/19/23 11:37:34.919
  STEP: submitting the pod to kubernetes @ 12/19/23 11:37:34.919
  STEP: retrieving the pod @ 12/19/23 11:37:36.954
  STEP: looking for the results for each expected name from probers @ 12/19/23 11:37:36.962
  Dec 19 11:37:36.973: INFO: Unable to read wheezy_udp@dns-test-service.dns-9353.svc.cluster.local from pod dns-9353/dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb: the server could not find the requested resource (get pods dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb)
  Dec 19 11:37:36.982: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9353.svc.cluster.local from pod dns-9353/dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb: the server could not find the requested resource (get pods dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb)
  Dec 19 11:37:37.011: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-9353.svc.cluster.local from pod dns-9353/dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb: the server could not find the requested resource (get pods dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb)
  Dec 19 11:37:37.038: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-9353.svc.cluster.local from pod dns-9353/dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb: the server could not find the requested resource (get pods dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb)
  Dec 19 11:37:37.119: INFO: Unable to read jessie_udp@dns-test-service.dns-9353.svc.cluster.local from pod dns-9353/dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb: the server could not find the requested resource (get pods dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb)
  Dec 19 11:37:37.126: INFO: Unable to read jessie_tcp@dns-test-service.dns-9353.svc.cluster.local from pod dns-9353/dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb: the server could not find the requested resource (get pods dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb)
  Dec 19 11:37:37.135: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9353.svc.cluster.local from pod dns-9353/dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb: the server could not find the requested resource (get pods dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb)
  Dec 19 11:37:37.142: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9353.svc.cluster.local from pod dns-9353/dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb: the server could not find the requested resource (get pods dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb)
  Dec 19 11:37:37.170: INFO: Lookups using dns-9353/dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb failed for: [wheezy_udp@dns-test-service.dns-9353.svc.cluster.local wheezy_tcp@dns-test-service.dns-9353.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-9353.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-9353.svc.cluster.local jessie_udp@dns-test-service.dns-9353.svc.cluster.local jessie_tcp@dns-test-service.dns-9353.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-9353.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-9353.svc.cluster.local]

  Dec 19 11:37:37.184: INFO: Pod client logs for webserver: 
  Dec 19 11:37:37.197: INFO: Pod client logs for querier: 
  Dec 19 11:37:37.210: INFO: Pod client logs for jessie-querier: 
  Dec 19 11:37:41.972: INFO: Unable to read wheezy_udp@dns-test-service.dns-9353.svc.cluster.local from pod dns-9353/dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb: the server could not find the requested resource (get pods dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb)
  Dec 19 11:37:41.979: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9353.svc.cluster.local from pod dns-9353/dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb: the server could not find the requested resource (get pods dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb)
  Dec 19 11:37:41.987: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-9353.svc.cluster.local from pod dns-9353/dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb: the server could not find the requested resource (get pods dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb)
  Dec 19 11:37:41.996: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-9353.svc.cluster.local from pod dns-9353/dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb: the server could not find the requested resource (get pods dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb)
  Dec 19 11:37:42.032: INFO: Unable to read jessie_udp@dns-test-service.dns-9353.svc.cluster.local from pod dns-9353/dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb: the server could not find the requested resource (get pods dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb)
  Dec 19 11:37:42.040: INFO: Unable to read jessie_tcp@dns-test-service.dns-9353.svc.cluster.local from pod dns-9353/dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb: the server could not find the requested resource (get pods dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb)
  Dec 19 11:37:42.048: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9353.svc.cluster.local from pod dns-9353/dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb: the server could not find the requested resource (get pods dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb)
  Dec 19 11:37:42.056: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9353.svc.cluster.local from pod dns-9353/dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb: the server could not find the requested resource (get pods dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb)
  Dec 19 11:37:42.092: INFO: Lookups using dns-9353/dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb failed for: [wheezy_udp@dns-test-service.dns-9353.svc.cluster.local wheezy_tcp@dns-test-service.dns-9353.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-9353.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-9353.svc.cluster.local jessie_udp@dns-test-service.dns-9353.svc.cluster.local jessie_tcp@dns-test-service.dns-9353.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-9353.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-9353.svc.cluster.local]

  Dec 19 11:37:42.108: INFO: Pod client logs for webserver: 
  Dec 19 11:37:42.120: INFO: Pod client logs for querier: 
  Dec 19 11:37:42.132: INFO: Pod client logs for jessie-querier: 
  Dec 19 11:37:46.970: INFO: Unable to read wheezy_udp@dns-test-service.dns-9353.svc.cluster.local from pod dns-9353/dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb: the server could not find the requested resource (get pods dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb)
  Dec 19 11:37:46.979: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9353.svc.cluster.local from pod dns-9353/dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb: the server could not find the requested resource (get pods dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb)
  Dec 19 11:37:46.988: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-9353.svc.cluster.local from pod dns-9353/dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb: the server could not find the requested resource (get pods dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb)
  Dec 19 11:37:46.995: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-9353.svc.cluster.local from pod dns-9353/dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb: the server could not find the requested resource (get pods dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb)
  Dec 19 11:37:47.032: INFO: Unable to read jessie_udp@dns-test-service.dns-9353.svc.cluster.local from pod dns-9353/dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb: the server could not find the requested resource (get pods dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb)
  Dec 19 11:37:47.038: INFO: Unable to read jessie_tcp@dns-test-service.dns-9353.svc.cluster.local from pod dns-9353/dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb: the server could not find the requested resource (get pods dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb)
  Dec 19 11:37:47.044: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9353.svc.cluster.local from pod dns-9353/dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb: the server could not find the requested resource (get pods dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb)
  Dec 19 11:37:47.051: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9353.svc.cluster.local from pod dns-9353/dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb: the server could not find the requested resource (get pods dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb)
  Dec 19 11:37:47.079: INFO: Lookups using dns-9353/dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb failed for: [wheezy_udp@dns-test-service.dns-9353.svc.cluster.local wheezy_tcp@dns-test-service.dns-9353.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-9353.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-9353.svc.cluster.local jessie_udp@dns-test-service.dns-9353.svc.cluster.local jessie_tcp@dns-test-service.dns-9353.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-9353.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-9353.svc.cluster.local]

  Dec 19 11:37:47.093: INFO: Pod client logs for webserver: 
  Dec 19 11:37:47.107: INFO: Pod client logs for querier: 
  Dec 19 11:37:47.122: INFO: Pod client logs for jessie-querier: 
  Dec 19 11:37:51.975: INFO: Unable to read wheezy_udp@dns-test-service.dns-9353.svc.cluster.local from pod dns-9353/dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb: the server could not find the requested resource (get pods dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb)
  Dec 19 11:37:51.982: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9353.svc.cluster.local from pod dns-9353/dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb: the server could not find the requested resource (get pods dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb)
  Dec 19 11:37:51.990: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-9353.svc.cluster.local from pod dns-9353/dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb: the server could not find the requested resource (get pods dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb)
  Dec 19 11:37:51.998: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-9353.svc.cluster.local from pod dns-9353/dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb: the server could not find the requested resource (get pods dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb)
  Dec 19 11:37:52.032: INFO: Unable to read jessie_udp@dns-test-service.dns-9353.svc.cluster.local from pod dns-9353/dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb: the server could not find the requested resource (get pods dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb)
  Dec 19 11:37:52.040: INFO: Unable to read jessie_tcp@dns-test-service.dns-9353.svc.cluster.local from pod dns-9353/dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb: the server could not find the requested resource (get pods dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb)
  Dec 19 11:37:52.048: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9353.svc.cluster.local from pod dns-9353/dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb: the server could not find the requested resource (get pods dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb)
  Dec 19 11:37:52.057: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9353.svc.cluster.local from pod dns-9353/dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb: the server could not find the requested resource (get pods dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb)
  Dec 19 11:37:52.089: INFO: Lookups using dns-9353/dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb failed for: [wheezy_udp@dns-test-service.dns-9353.svc.cluster.local wheezy_tcp@dns-test-service.dns-9353.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-9353.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-9353.svc.cluster.local jessie_udp@dns-test-service.dns-9353.svc.cluster.local jessie_tcp@dns-test-service.dns-9353.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-9353.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-9353.svc.cluster.local]

  Dec 19 11:37:52.108: INFO: Pod client logs for webserver: 
  Dec 19 11:37:52.123: INFO: Pod client logs for querier: 
  Dec 19 11:37:52.136: INFO: Pod client logs for jessie-querier: 
  Dec 19 11:37:56.973: INFO: Unable to read wheezy_udp@dns-test-service.dns-9353.svc.cluster.local from pod dns-9353/dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb: the server could not find the requested resource (get pods dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb)
  Dec 19 11:37:56.985: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9353.svc.cluster.local from pod dns-9353/dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb: the server could not find the requested resource (get pods dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb)
  Dec 19 11:37:56.992: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-9353.svc.cluster.local from pod dns-9353/dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb: the server could not find the requested resource (get pods dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb)
  Dec 19 11:37:57.004: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-9353.svc.cluster.local from pod dns-9353/dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb: the server could not find the requested resource (get pods dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb)
  Dec 19 11:37:57.102: INFO: Unable to read jessie_udp@dns-test-service.dns-9353.svc.cluster.local from pod dns-9353/dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb: the server could not find the requested resource (get pods dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb)
  Dec 19 11:37:57.110: INFO: Unable to read jessie_tcp@dns-test-service.dns-9353.svc.cluster.local from pod dns-9353/dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb: the server could not find the requested resource (get pods dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb)
  Dec 19 11:37:57.121: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9353.svc.cluster.local from pod dns-9353/dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb: the server could not find the requested resource (get pods dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb)
  Dec 19 11:37:57.131: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9353.svc.cluster.local from pod dns-9353/dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb: the server could not find the requested resource (get pods dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb)
  Dec 19 11:37:57.172: INFO: Lookups using dns-9353/dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb failed for: [wheezy_udp@dns-test-service.dns-9353.svc.cluster.local wheezy_tcp@dns-test-service.dns-9353.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-9353.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-9353.svc.cluster.local jessie_udp@dns-test-service.dns-9353.svc.cluster.local jessie_tcp@dns-test-service.dns-9353.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-9353.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-9353.svc.cluster.local]

  Dec 19 11:37:57.187: INFO: Pod client logs for webserver: 
  Dec 19 11:37:57.200: INFO: Pod client logs for querier: 
  Dec 19 11:37:57.217: INFO: Pod client logs for jessie-querier: 
  Dec 19 11:38:01.973: INFO: Unable to read wheezy_udp@dns-test-service.dns-9353.svc.cluster.local from pod dns-9353/dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb: the server could not find the requested resource (get pods dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb)
  Dec 19 11:38:01.982: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9353.svc.cluster.local from pod dns-9353/dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb: the server could not find the requested resource (get pods dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb)
  Dec 19 11:38:01.989: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-9353.svc.cluster.local from pod dns-9353/dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb: the server could not find the requested resource (get pods dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb)
  Dec 19 11:38:01.997: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-9353.svc.cluster.local from pod dns-9353/dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb: the server could not find the requested resource (get pods dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb)
  Dec 19 11:38:02.031: INFO: Unable to read jessie_udp@dns-test-service.dns-9353.svc.cluster.local from pod dns-9353/dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb: the server could not find the requested resource (get pods dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb)
  Dec 19 11:38:02.037: INFO: Unable to read jessie_tcp@dns-test-service.dns-9353.svc.cluster.local from pod dns-9353/dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb: the server could not find the requested resource (get pods dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb)
  Dec 19 11:38:02.046: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9353.svc.cluster.local from pod dns-9353/dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb: the server could not find the requested resource (get pods dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb)
  Dec 19 11:38:02.053: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9353.svc.cluster.local from pod dns-9353/dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb: the server could not find the requested resource (get pods dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb)
  Dec 19 11:38:02.084: INFO: Lookups using dns-9353/dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb failed for: [wheezy_udp@dns-test-service.dns-9353.svc.cluster.local wheezy_tcp@dns-test-service.dns-9353.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-9353.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-9353.svc.cluster.local jessie_udp@dns-test-service.dns-9353.svc.cluster.local jessie_tcp@dns-test-service.dns-9353.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-9353.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-9353.svc.cluster.local]

  Dec 19 11:38:02.101: INFO: Pod client logs for webserver: 
  Dec 19 11:38:02.117: INFO: Pod client logs for querier: 
  Dec 19 11:38:02.129: INFO: Pod client logs for jessie-querier: 
  Dec 19 11:38:07.068: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9353.svc.cluster.local from pod dns-9353/dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb: the server could not find the requested resource (get pods dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb)
  Dec 19 11:38:07.080: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9353.svc.cluster.local from pod dns-9353/dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb: the server could not find the requested resource (get pods dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb)
  Dec 19 11:38:07.122: INFO: Lookups using dns-9353/dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb failed for: [jessie_udp@_http._tcp.dns-test-service.dns-9353.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-9353.svc.cluster.local]

  Dec 19 11:38:07.145: INFO: Pod client logs for webserver: 
  Dec 19 11:38:07.160: INFO: Pod client logs for querier: 
  Dec 19 11:38:07.185: INFO: Pod client logs for jessie-querier: 
  Dec 19 11:38:12.092: INFO: DNS probes using dns-9353/dns-test-378ec4d5-d3a8-436c-aac4-5a31b7d614cb succeeded

  STEP: deleting the pod @ 12/19/23 11:38:12.093
  STEP: deleting the test service @ 12/19/23 11:38:12.144
  STEP: deleting the test headless service @ 12/19/23 11:38:12.189
  Dec 19 11:38:12.207: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9353" for this suite. @ 12/19/23 11:38:12.228
• [37.403 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_configmap.go:110
  STEP: Creating a kubernetes client @ 12/19/23 11:38:12.255
  Dec 19 11:38:12.255: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename projected @ 12/19/23 11:38:12.27
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:38:12.342
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:38:12.347
  STEP: Creating configMap with name projected-configmap-test-volume-map-770c9d23-557b-424b-a3f1-d571502d0761 @ 12/19/23 11:38:12.355
  STEP: Creating a pod to test consume configMaps @ 12/19/23 11:38:12.369
  STEP: Saw pod success @ 12/19/23 11:38:16.43
  Dec 19 11:38:16.439: INFO: Trying to get logs from node dah7vaemeeho-3 pod pod-projected-configmaps-d91b39de-fca9-4edf-893a-3b38eab68701 container agnhost-container: <nil>
  STEP: delete the pod @ 12/19/23 11:38:16.452
  Dec 19 11:38:16.491: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9369" for this suite. @ 12/19/23 11:38:16.508
• [4.268 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/containers.go:75
  STEP: Creating a kubernetes client @ 12/19/23 11:38:16.532
  Dec 19 11:38:16.532: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename containers @ 12/19/23 11:38:16.537
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:38:16.574
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:38:16.58
  STEP: Creating a pod to test override command @ 12/19/23 11:38:16.586
  STEP: Saw pod success @ 12/19/23 11:38:20.628
  Dec 19 11:38:20.635: INFO: Trying to get logs from node dah7vaemeeho-3 pod client-containers-8151387f-98be-42a6-8ec0-888d9e4d8b6a container agnhost-container: <nil>
  STEP: delete the pod @ 12/19/23 11:38:20.649
  Dec 19 11:38:20.685: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-8318" for this suite. @ 12/19/23 11:38:20.695
• [4.176 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 12/19/23 11:38:20.711
  Dec 19 11:38:20.711: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename events @ 12/19/23 11:38:20.713
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:38:20.751
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:38:20.757
  STEP: creating a test event @ 12/19/23 11:38:20.761
  STEP: listing events in all namespaces @ 12/19/23 11:38:20.775
  STEP: listing events in test namespace @ 12/19/23 11:38:20.784
  STEP: listing events with field selection filtering on source @ 12/19/23 11:38:20.79
  STEP: listing events with field selection filtering on reportingController @ 12/19/23 11:38:20.8
  STEP: getting the test event @ 12/19/23 11:38:20.805
  STEP: patching the test event @ 12/19/23 11:38:20.811
  STEP: getting the test event @ 12/19/23 11:38:20.833
  STEP: updating the test event @ 12/19/23 11:38:20.838
  STEP: getting the test event @ 12/19/23 11:38:20.853
  STEP: deleting the test event @ 12/19/23 11:38:20.86
  STEP: listing events in all namespaces @ 12/19/23 11:38:20.876
  STEP: listing events in test namespace @ 12/19/23 11:38:20.884
  Dec 19 11:38:20.891: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-5802" for this suite. @ 12/19/23 11:38:20.9
• [0.204 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
test/e2e/node/security_context.go:135
  STEP: Creating a kubernetes client @ 12/19/23 11:38:20.917
  Dec 19 11:38:20.917: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename security-context @ 12/19/23 11:38:20.92
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:38:20.95
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:38:20.955
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 12/19/23 11:38:20.96
  STEP: Saw pod success @ 12/19/23 11:38:25.003
  Dec 19 11:38:25.008: INFO: Trying to get logs from node dah7vaemeeho-3 pod security-context-1a50090a-4908-4231-8363-d5e850b96ccd container test-container: <nil>
  STEP: delete the pod @ 12/19/23 11:38:25.021
  Dec 19 11:38:25.049: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-4203" for this suite. @ 12/19/23 11:38:25.082
• [4.186 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
test/e2e/apps/rc.go:95
  STEP: Creating a kubernetes client @ 12/19/23 11:38:25.104
  Dec 19 11:38:25.104: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename replication-controller @ 12/19/23 11:38:25.107
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:38:25.142
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:38:25.148
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 12/19/23 11:38:25.154
  STEP: When a replication controller with a matching selector is created @ 12/19/23 11:38:27.197
  STEP: Then the orphan pod is adopted @ 12/19/23 11:38:27.208
  Dec 19 11:38:28.223: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-291" for this suite. @ 12/19/23 11:38:28.235
• [3.144 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/garbage_collector.go:322
  STEP: Creating a kubernetes client @ 12/19/23 11:38:28.249
  Dec 19 11:38:28.249: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename gc @ 12/19/23 11:38:28.253
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:38:28.286
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:38:28.292
  STEP: create the rc @ 12/19/23 11:38:28.297
  W1219 11:38:28.306542      14 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 12/19/23 11:38:33.324
  STEP: wait for all pods to be garbage collected @ 12/19/23 11:38:33.364
  STEP: Gathering metrics @ 12/19/23 11:38:38.379
  Dec 19 11:38:38.610: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Dec 19 11:38:38.611: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-5795" for this suite. @ 12/19/23 11:38:38.625
• [10.390 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/kubelet_etc_hosts.go:64
  STEP: Creating a kubernetes client @ 12/19/23 11:38:38.642
  Dec 19 11:38:38.642: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 12/19/23 11:38:38.645
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:38:38.735
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:38:38.745
  STEP: Setting up the test @ 12/19/23 11:38:38.751
  STEP: Creating hostNetwork=false pod @ 12/19/23 11:38:38.752
  STEP: Creating hostNetwork=true pod @ 12/19/23 11:38:40.814
  STEP: Running the test @ 12/19/23 11:38:42.869
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 12/19/23 11:38:42.869
  Dec 19 11:38:42.869: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-8124 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 19 11:38:42.869: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  Dec 19 11:38:42.870: INFO: ExecWithOptions: Clientset creation
  Dec 19 11:38:42.871: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8124/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Dec 19 11:38:43.037: INFO: Exec stderr: ""
  Dec 19 11:38:43.038: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-8124 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 19 11:38:43.038: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  Dec 19 11:38:43.041: INFO: ExecWithOptions: Clientset creation
  Dec 19 11:38:43.042: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8124/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Dec 19 11:38:43.162: INFO: Exec stderr: ""
  Dec 19 11:38:43.162: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-8124 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 19 11:38:43.163: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  Dec 19 11:38:43.169: INFO: ExecWithOptions: Clientset creation
  Dec 19 11:38:43.170: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8124/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Dec 19 11:38:43.319: INFO: Exec stderr: ""
  Dec 19 11:38:43.319: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-8124 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 19 11:38:43.319: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  Dec 19 11:38:43.321: INFO: ExecWithOptions: Clientset creation
  Dec 19 11:38:43.322: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8124/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Dec 19 11:38:43.468: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 12/19/23 11:38:43.469
  Dec 19 11:38:43.469: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-8124 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 19 11:38:43.470: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  Dec 19 11:38:43.473: INFO: ExecWithOptions: Clientset creation
  Dec 19 11:38:43.473: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8124/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  Dec 19 11:38:43.588: INFO: Exec stderr: ""
  Dec 19 11:38:43.589: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-8124 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 19 11:38:43.589: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  Dec 19 11:38:43.592: INFO: ExecWithOptions: Clientset creation
  Dec 19 11:38:43.593: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8124/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  Dec 19 11:38:43.700: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 12/19/23 11:38:43.7
  Dec 19 11:38:43.700: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-8124 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 19 11:38:43.700: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  Dec 19 11:38:43.702: INFO: ExecWithOptions: Clientset creation
  Dec 19 11:38:43.702: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8124/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Dec 19 11:38:43.843: INFO: Exec stderr: ""
  Dec 19 11:38:43.843: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-8124 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 19 11:38:43.844: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  Dec 19 11:38:43.847: INFO: ExecWithOptions: Clientset creation
  Dec 19 11:38:43.847: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8124/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Dec 19 11:38:43.949: INFO: Exec stderr: ""
  Dec 19 11:38:43.949: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-8124 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 19 11:38:43.949: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  Dec 19 11:38:43.952: INFO: ExecWithOptions: Clientset creation
  Dec 19 11:38:43.952: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8124/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Dec 19 11:38:44.067: INFO: Exec stderr: ""
  Dec 19 11:38:44.067: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-8124 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Dec 19 11:38:44.067: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  Dec 19 11:38:44.072: INFO: ExecWithOptions: Clientset creation
  Dec 19 11:38:44.072: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8124/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Dec 19 11:38:44.223: INFO: Exec stderr: ""
  Dec 19 11:38:44.224: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-8124" for this suite. @ 12/19/23 11:38:44.232
• [5.604 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:889
  STEP: Creating a kubernetes client @ 12/19/23 11:38:44.257
  Dec 19 11:38:44.257: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename resourcequota @ 12/19/23 11:38:44.261
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:38:44.308
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:38:44.315
  STEP: Creating a ResourceQuota @ 12/19/23 11:38:44.321
  STEP: Getting a ResourceQuota @ 12/19/23 11:38:44.33
  STEP: Updating a ResourceQuota @ 12/19/23 11:38:44.34
  STEP: Verifying a ResourceQuota was modified @ 12/19/23 11:38:44.358
  STEP: Deleting a ResourceQuota @ 12/19/23 11:38:44.372
  STEP: Verifying the deleted ResourceQuota @ 12/19/23 11:38:44.396
  Dec 19 11:38:44.410: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2600" for this suite. @ 12/19/23 11:38:44.422
• [0.183 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/container_probe.go:183
  STEP: Creating a kubernetes client @ 12/19/23 11:38:44.445
  Dec 19 11:38:44.446: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename container-probe @ 12/19/23 11:38:44.449
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:38:44.493
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:38:44.5
  STEP: Creating pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718 @ 12/19/23 11:38:44.509
  STEP: checking the pod's current state and verifying that restartCount is present @ 12/19/23 11:38:46.56
  Dec 19 11:38:46.569: INFO: Initial restart count of pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 is 0
  Dec 19 11:38:46.577: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:38:48.589: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:38:50.596: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:38:52.605: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:38:54.617: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:38:56.631: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:38:58.649: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:39:00.660: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:39:02.671: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:39:04.682: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:39:06.690: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:39:08.697: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:39:10.713: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:39:12.722: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:39:14.734: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:39:16.743: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:39:18.751: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:39:20.764: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:39:22.773: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:39:24.780: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:39:26.790: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:39:28.798: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:39:30.807: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:39:32.824: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:39:34.835: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:39:36.843: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:39:38.856: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:39:40.864: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:39:42.875: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:39:44.885: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:39:46.894: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:39:48.902: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:39:50.910: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:39:52.918: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:39:54.927: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:39:56.936: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:39:58.944: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:40:00.952: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:40:02.958: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:40:04.967: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:40:06.975: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:40:08.983: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:40:10.991: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:40:13.001: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:40:15.010: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:40:17.016: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:40:19.024: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:40:21.051: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:40:23.059: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:40:25.074: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:40:27.084: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:40:29.095: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:40:31.104: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:40:33.123: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:40:35.138: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:40:37.147: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:40:39.162: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:40:41.174: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:40:43.183: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:40:45.211: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:40:47.221: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:40:49.231: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:40:51.241: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:40:53.250: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:40:55.259: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:40:57.268: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:40:59.278: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:41:01.288: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:41:03.300: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:41:05.310: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:41:07.320: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:41:09.328: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:41:11.337: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:41:13.344: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:41:15.357: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:41:17.365: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:41:19.375: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:41:21.385: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:41:23.402: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:41:25.411: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:41:27.420: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:41:29.430: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:41:31.442: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:41:33.451: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:41:35.461: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:41:37.479: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:41:39.488: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:41:41.497: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:41:43.505: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:41:45.516: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:41:47.527: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:41:49.537: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:41:51.550: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:41:53.560: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:41:55.576: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:41:57.585: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:41:59.594: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:42:01.605: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:42:03.614: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:42:05.624: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:42:07.632: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:42:09.641: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:42:11.650: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:42:13.659: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:42:15.669: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:42:17.677: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:42:19.694: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:42:21.703: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:42:23.712: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:42:25.723: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:42:27.731: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:42:29.740: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:42:31.748: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:42:33.764: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:42:35.773: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:42:37.780: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:42:39.791: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:42:41.800: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:42:43.811: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  Dec 19 11:42:45.825: INFO: Get pod liveness-d7ccf560-5af9-4c89-8fb1-dbbe8c4badc1 in namespace container-probe-6718
  STEP: deleting the pod @ 12/19/23 11:42:47.826
  Dec 19 11:42:47.879: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6718" for this suite. @ 12/19/23 11:42:47.896
• [243.476 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:103
  STEP: Creating a kubernetes client @ 12/19/23 11:42:47.923
  Dec 19 11:42:47.923: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename resourcequota @ 12/19/23 11:42:47.928
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:42:47.971
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:42:47.979
  STEP: Counting existing ResourceQuota @ 12/19/23 11:42:47.985
  STEP: Creating a ResourceQuota @ 12/19/23 11:42:52.996
  STEP: Ensuring resource quota status is calculated @ 12/19/23 11:42:53.01
  STEP: Creating a Service @ 12/19/23 11:42:55.018
  STEP: Creating a NodePort Service @ 12/19/23 11:42:55.066
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 12/19/23 11:42:55.131
  STEP: Ensuring resource quota status captures service creation @ 12/19/23 11:42:55.198
  STEP: Deleting Services @ 12/19/23 11:42:57.209
  STEP: Ensuring resource quota status released usage @ 12/19/23 11:42:57.301
  Dec 19 11:42:59.313: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6111" for this suite. @ 12/19/23 11:42:59.328
• [11.427 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/discovery.go:126
  STEP: Creating a kubernetes client @ 12/19/23 11:42:59.353
  Dec 19 11:42:59.353: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename discovery @ 12/19/23 11:42:59.361
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:42:59.401
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:42:59.41
  STEP: Setting up server cert @ 12/19/23 11:42:59.423
  Dec 19 11:43:01.144: INFO: Checking APIGroup: apiregistration.k8s.io
  Dec 19 11:43:01.146: INFO: PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  Dec 19 11:43:01.146: INFO: Versions found [{apiregistration.k8s.io/v1 v1}]
  Dec 19 11:43:01.147: INFO: apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  Dec 19 11:43:01.147: INFO: Checking APIGroup: apps
  Dec 19 11:43:01.149: INFO: PreferredVersion.GroupVersion: apps/v1
  Dec 19 11:43:01.149: INFO: Versions found [{apps/v1 v1}]
  Dec 19 11:43:01.149: INFO: apps/v1 matches apps/v1
  Dec 19 11:43:01.149: INFO: Checking APIGroup: events.k8s.io
  Dec 19 11:43:01.151: INFO: PreferredVersion.GroupVersion: events.k8s.io/v1
  Dec 19 11:43:01.151: INFO: Versions found [{events.k8s.io/v1 v1}]
  Dec 19 11:43:01.151: INFO: events.k8s.io/v1 matches events.k8s.io/v1
  Dec 19 11:43:01.152: INFO: Checking APIGroup: authentication.k8s.io
  Dec 19 11:43:01.153: INFO: PreferredVersion.GroupVersion: authentication.k8s.io/v1
  Dec 19 11:43:01.153: INFO: Versions found [{authentication.k8s.io/v1 v1}]
  Dec 19 11:43:01.153: INFO: authentication.k8s.io/v1 matches authentication.k8s.io/v1
  Dec 19 11:43:01.153: INFO: Checking APIGroup: authorization.k8s.io
  Dec 19 11:43:01.155: INFO: PreferredVersion.GroupVersion: authorization.k8s.io/v1
  Dec 19 11:43:01.155: INFO: Versions found [{authorization.k8s.io/v1 v1}]
  Dec 19 11:43:01.155: INFO: authorization.k8s.io/v1 matches authorization.k8s.io/v1
  Dec 19 11:43:01.155: INFO: Checking APIGroup: autoscaling
  Dec 19 11:43:01.159: INFO: PreferredVersion.GroupVersion: autoscaling/v2
  Dec 19 11:43:01.159: INFO: Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  Dec 19 11:43:01.160: INFO: autoscaling/v2 matches autoscaling/v2
  Dec 19 11:43:01.160: INFO: Checking APIGroup: batch
  Dec 19 11:43:01.163: INFO: PreferredVersion.GroupVersion: batch/v1
  Dec 19 11:43:01.163: INFO: Versions found [{batch/v1 v1}]
  Dec 19 11:43:01.163: INFO: batch/v1 matches batch/v1
  Dec 19 11:43:01.164: INFO: Checking APIGroup: certificates.k8s.io
  Dec 19 11:43:01.165: INFO: PreferredVersion.GroupVersion: certificates.k8s.io/v1
  Dec 19 11:43:01.165: INFO: Versions found [{certificates.k8s.io/v1 v1}]
  Dec 19 11:43:01.165: INFO: certificates.k8s.io/v1 matches certificates.k8s.io/v1
  Dec 19 11:43:01.165: INFO: Checking APIGroup: networking.k8s.io
  Dec 19 11:43:01.167: INFO: PreferredVersion.GroupVersion: networking.k8s.io/v1
  Dec 19 11:43:01.167: INFO: Versions found [{networking.k8s.io/v1 v1}]
  Dec 19 11:43:01.168: INFO: networking.k8s.io/v1 matches networking.k8s.io/v1
  Dec 19 11:43:01.168: INFO: Checking APIGroup: policy
  Dec 19 11:43:01.171: INFO: PreferredVersion.GroupVersion: policy/v1
  Dec 19 11:43:01.171: INFO: Versions found [{policy/v1 v1}]
  Dec 19 11:43:01.171: INFO: policy/v1 matches policy/v1
  Dec 19 11:43:01.171: INFO: Checking APIGroup: rbac.authorization.k8s.io
  Dec 19 11:43:01.172: INFO: PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  Dec 19 11:43:01.173: INFO: Versions found [{rbac.authorization.k8s.io/v1 v1}]
  Dec 19 11:43:01.173: INFO: rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  Dec 19 11:43:01.174: INFO: Checking APIGroup: storage.k8s.io
  Dec 19 11:43:01.176: INFO: PreferredVersion.GroupVersion: storage.k8s.io/v1
  Dec 19 11:43:01.176: INFO: Versions found [{storage.k8s.io/v1 v1}]
  Dec 19 11:43:01.176: INFO: storage.k8s.io/v1 matches storage.k8s.io/v1
  Dec 19 11:43:01.176: INFO: Checking APIGroup: admissionregistration.k8s.io
  Dec 19 11:43:01.178: INFO: PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  Dec 19 11:43:01.178: INFO: Versions found [{admissionregistration.k8s.io/v1 v1}]
  Dec 19 11:43:01.179: INFO: admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  Dec 19 11:43:01.179: INFO: Checking APIGroup: apiextensions.k8s.io
  Dec 19 11:43:01.182: INFO: PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  Dec 19 11:43:01.182: INFO: Versions found [{apiextensions.k8s.io/v1 v1}]
  Dec 19 11:43:01.182: INFO: apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  Dec 19 11:43:01.182: INFO: Checking APIGroup: scheduling.k8s.io
  Dec 19 11:43:01.184: INFO: PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  Dec 19 11:43:01.184: INFO: Versions found [{scheduling.k8s.io/v1 v1}]
  Dec 19 11:43:01.185: INFO: scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  Dec 19 11:43:01.185: INFO: Checking APIGroup: coordination.k8s.io
  Dec 19 11:43:01.188: INFO: PreferredVersion.GroupVersion: coordination.k8s.io/v1
  Dec 19 11:43:01.188: INFO: Versions found [{coordination.k8s.io/v1 v1}]
  Dec 19 11:43:01.188: INFO: coordination.k8s.io/v1 matches coordination.k8s.io/v1
  Dec 19 11:43:01.188: INFO: Checking APIGroup: node.k8s.io
  Dec 19 11:43:01.190: INFO: PreferredVersion.GroupVersion: node.k8s.io/v1
  Dec 19 11:43:01.191: INFO: Versions found [{node.k8s.io/v1 v1}]
  Dec 19 11:43:01.191: INFO: node.k8s.io/v1 matches node.k8s.io/v1
  Dec 19 11:43:01.191: INFO: Checking APIGroup: discovery.k8s.io
  Dec 19 11:43:01.194: INFO: PreferredVersion.GroupVersion: discovery.k8s.io/v1
  Dec 19 11:43:01.194: INFO: Versions found [{discovery.k8s.io/v1 v1}]
  Dec 19 11:43:01.194: INFO: discovery.k8s.io/v1 matches discovery.k8s.io/v1
  Dec 19 11:43:01.194: INFO: Checking APIGroup: flowcontrol.apiserver.k8s.io
  Dec 19 11:43:01.196: INFO: PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  Dec 19 11:43:01.196: INFO: Versions found [{flowcontrol.apiserver.k8s.io/v1 v1} {flowcontrol.apiserver.k8s.io/v1beta3 v1beta3}]
  Dec 19 11:43:01.196: INFO: flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  Dec 19 11:43:01.197: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-7956" for this suite. @ 12/19/23 11:43:01.214
• [1.879 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/expansion.go:76
  STEP: Creating a kubernetes client @ 12/19/23 11:43:01.235
  Dec 19 11:43:01.235: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename var-expansion @ 12/19/23 11:43:01.238
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:43:01.279
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:43:01.286
  STEP: Creating a pod to test substitution in container's command @ 12/19/23 11:43:01.295
  STEP: Saw pod success @ 12/19/23 11:43:05.35
  Dec 19 11:43:05.359: INFO: Trying to get logs from node dah7vaemeeho-3 pod var-expansion-323b708d-aacd-490c-89f0-e8469b3420bf container dapi-container: <nil>
  STEP: delete the pod @ 12/19/23 11:43:05.399
  Dec 19 11:43:05.437: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-2377" for this suite. @ 12/19/23 11:43:05.45
• [4.238 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/container_probe.go:151
  STEP: Creating a kubernetes client @ 12/19/23 11:43:05.489
  Dec 19 11:43:05.489: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename container-probe @ 12/19/23 11:43:05.497
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:43:05.541
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:43:05.549
  STEP: Creating pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987 @ 12/19/23 11:43:05.559
  STEP: checking the pod's current state and verifying that restartCount is present @ 12/19/23 11:43:07.618
  Dec 19 11:43:07.628: INFO: Initial restart count of pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d is 0
  Dec 19 11:43:07.637: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:43:09.649: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:43:11.671: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:43:13.683: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:43:15.694: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:43:17.705: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:43:19.717: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:43:21.727: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:43:23.736: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:43:25.746: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:43:27.757: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:43:29.766: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:43:31.773: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:43:33.784: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:43:35.792: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:43:37.802: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:43:39.811: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:43:41.822: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:43:43.831: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:43:45.841: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:43:47.852: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:43:49.864: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:43:51.874: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:43:53.883: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:43:55.897: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:43:57.909: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:43:59.920: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:44:01.927: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:44:03.940: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:44:05.948: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:44:07.961: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:44:09.969: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:44:11.978: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:44:13.985: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:44:15.999: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:44:18.007: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:44:20.017: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:44:22.028: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:44:24.040: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:44:26.048: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:44:28.059: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:44:30.069: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:44:32.078: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:44:34.087: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:44:36.100: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:44:38.119: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:44:40.128: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:44:42.139: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:44:44.148: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:44:46.163: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:44:48.173: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:44:50.181: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:44:52.190: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:44:54.199: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:44:56.212: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:44:58.237: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:45:00.251: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:45:02.262: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:45:04.275: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:45:06.292: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:45:08.305: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:45:10.313: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:45:12.325: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:45:14.336: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:45:16.343: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:45:18.354: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:45:20.363: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:45:22.372: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:45:24.382: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:45:26.391: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:45:28.403: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:45:30.415: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:45:32.425: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:45:34.439: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:45:36.451: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:45:38.460: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:45:40.470: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:45:42.478: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:45:44.487: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:45:46.497: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:45:48.508: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:45:50.517: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:45:52.528: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:45:54.537: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:45:56.547: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:45:58.558: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:46:00.574: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:46:02.588: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:46:04.597: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:46:06.611: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:46:08.623: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:46:10.633: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:46:12.642: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:46:14.655: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:46:16.663: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:46:18.676: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:46:20.685: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:46:22.696: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:46:24.705: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:46:26.714: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:46:28.729: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:46:30.740: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:46:32.759: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:46:34.768: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:46:36.779: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:46:38.789: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:46:40.797: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:46:42.804: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:46:44.817: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:46:46.827: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:46:48.837: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:46:50.847: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:46:52.855: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:46:54.864: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:46:56.870: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:46:58.880: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:47:00.893: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:47:02.903: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:47:04.913: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  Dec 19 11:47:06.920: INFO: Get pod busybox-4840e843-8f6e-42b5-bf4d-97618d98035d in namespace container-probe-3987
  STEP: deleting the pod @ 12/19/23 11:47:08.922
  Dec 19 11:47:08.949: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3987" for this suite. @ 12/19/23 11:47:08.973
• [243.511 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
test/e2e/storage/storageclass.go:53
  STEP: Creating a kubernetes client @ 12/19/23 11:47:09.005
  Dec 19 11:47:09.005: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename csi-storageclass @ 12/19/23 11:47:09.011
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:47:09.086
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:47:09.097
  STEP: Creating a StorageClass @ 12/19/23 11:47:09.105
  STEP: Get StorageClass "e2e-zjf7b" @ 12/19/23 11:47:09.114
  STEP: Patching the StorageClass "e2e-zjf7b" @ 12/19/23 11:47:09.123
  STEP: Delete StorageClass "e2e-zjf7b" @ 12/19/23 11:47:09.141
  STEP: Confirm deletion of StorageClass "e2e-zjf7b" @ 12/19/23 11:47:09.157
  STEP: Create a replacement StorageClass @ 12/19/23 11:47:09.164
  STEP: Updating StorageClass "e2e-v2-xd6x7" @ 12/19/23 11:47:09.175
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-xd6x7=updated" @ 12/19/23 11:47:09.191
  STEP: Deleting StorageClass "e2e-v2-xd6x7" via DeleteCollection @ 12/19/23 11:47:09.197
  STEP: Confirm deletion of StorageClass "e2e-v2-xd6x7" @ 12/19/23 11:47:09.218
  Dec 19 11:47:09.223: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-9715" for this suite. @ 12/19/23 11:47:09.237
• [0.248 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:190
  STEP: Creating a kubernetes client @ 12/19/23 11:47:09.254
  Dec 19 11:47:09.254: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename emptydir @ 12/19/23 11:47:09.259
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:47:09.297
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:47:09.302
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 12/19/23 11:47:09.306
  STEP: Saw pod success @ 12/19/23 11:47:13.347
  Dec 19 11:47:13.351: INFO: Trying to get logs from node dah7vaemeeho-3 pod pod-ee73dd44-7178-480c-bb40-da1ec4b5652b container test-container: <nil>
  STEP: delete the pod @ 12/19/23 11:47:13.381
  Dec 19 11:47:13.424: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4646" for this suite. @ 12/19/23 11:47:13.435
• [4.193 seconds]
------------------------------
SS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 12/19/23 11:47:13.448
  Dec 19 11:47:13.448: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename secrets @ 12/19/23 11:47:13.451
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:47:13.495
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:47:13.505
  STEP: Creating secret with name secret-test-160a0d6d-3687-40c7-adde-5b62bf3a1f51 @ 12/19/23 11:47:13.51
  STEP: Creating a pod to test consume secrets @ 12/19/23 11:47:13.522
  STEP: Saw pod success @ 12/19/23 11:47:17.572
  Dec 19 11:47:17.581: INFO: Trying to get logs from node dah7vaemeeho-3 pod pod-secrets-c19392f0-6e8c-489b-bc7d-1a441d656d47 container secret-volume-test: <nil>
  STEP: delete the pod @ 12/19/23 11:47:17.597
  Dec 19 11:47:17.621: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1337" for this suite. @ 12/19/23 11:47:17.631
• [4.194 seconds]
------------------------------
S
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:2214
  STEP: Creating a kubernetes client @ 12/19/23 11:47:17.643
  Dec 19 11:47:17.643: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename services @ 12/19/23 11:47:17.646
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:47:17.672
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:47:17.68
  STEP: creating service in namespace services-5302 @ 12/19/23 11:47:17.687
  STEP: creating service affinity-nodeport in namespace services-5302 @ 12/19/23 11:47:17.687
  STEP: creating replication controller affinity-nodeport in namespace services-5302 @ 12/19/23 11:47:17.716
  I1219 11:47:17.738639      14 runners.go:197] Created replication controller with name: affinity-nodeport, namespace: services-5302, replica count: 3
  I1219 11:47:20.793626      14 runners.go:197] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Dec 19 11:47:20.820: INFO: Creating new exec pod
  Dec 19 11:47:23.867: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=services-5302 exec execpod-affinitykzrxt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  Dec 19 11:47:24.247: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
  Dec 19 11:47:24.247: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Dec 19 11:47:24.248: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=services-5302 exec execpod-affinitykzrxt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.5.234 80'
  Dec 19 11:47:24.584: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.5.234 80\nConnection to 10.233.5.234 80 port [tcp/http] succeeded!\n"
  Dec 19 11:47:24.585: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Dec 19 11:47:24.586: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=services-5302 exec execpod-affinitykzrxt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.226 31008'
  Dec 19 11:47:24.917: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.226 31008\nConnection to 192.168.121.226 31008 port [tcp/*] succeeded!\n"
  Dec 19 11:47:24.917: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Dec 19 11:47:24.919: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=services-5302 exec execpod-affinitykzrxt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.147 31008'
  Dec 19 11:47:25.229: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.147 31008\nConnection to 192.168.121.147 31008 port [tcp/*] succeeded!\n"
  Dec 19 11:47:25.229: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Dec 19 11:47:25.229: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=services-5302 exec execpod-affinitykzrxt -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.121.226:31008/ ; done'
  Dec 19 11:47:25.758: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.226:31008/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.226:31008/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.226:31008/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.226:31008/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.226:31008/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.226:31008/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.226:31008/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.226:31008/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.226:31008/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.226:31008/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.226:31008/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.226:31008/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.226:31008/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.226:31008/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.226:31008/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.226:31008/\n"
  Dec 19 11:47:25.758: INFO: stdout: "\naffinity-nodeport-bj4vc\naffinity-nodeport-bj4vc\naffinity-nodeport-bj4vc\naffinity-nodeport-bj4vc\naffinity-nodeport-bj4vc\naffinity-nodeport-bj4vc\naffinity-nodeport-bj4vc\naffinity-nodeport-bj4vc\naffinity-nodeport-bj4vc\naffinity-nodeport-bj4vc\naffinity-nodeport-bj4vc\naffinity-nodeport-bj4vc\naffinity-nodeport-bj4vc\naffinity-nodeport-bj4vc\naffinity-nodeport-bj4vc\naffinity-nodeport-bj4vc"
  Dec 19 11:47:25.758: INFO: Received response from host: affinity-nodeport-bj4vc
  Dec 19 11:47:25.759: INFO: Received response from host: affinity-nodeport-bj4vc
  Dec 19 11:47:25.759: INFO: Received response from host: affinity-nodeport-bj4vc
  Dec 19 11:47:25.759: INFO: Received response from host: affinity-nodeport-bj4vc
  Dec 19 11:47:25.759: INFO: Received response from host: affinity-nodeport-bj4vc
  Dec 19 11:47:25.759: INFO: Received response from host: affinity-nodeport-bj4vc
  Dec 19 11:47:25.759: INFO: Received response from host: affinity-nodeport-bj4vc
  Dec 19 11:47:25.759: INFO: Received response from host: affinity-nodeport-bj4vc
  Dec 19 11:47:25.759: INFO: Received response from host: affinity-nodeport-bj4vc
  Dec 19 11:47:25.759: INFO: Received response from host: affinity-nodeport-bj4vc
  Dec 19 11:47:25.759: INFO: Received response from host: affinity-nodeport-bj4vc
  Dec 19 11:47:25.759: INFO: Received response from host: affinity-nodeport-bj4vc
  Dec 19 11:47:25.759: INFO: Received response from host: affinity-nodeport-bj4vc
  Dec 19 11:47:25.759: INFO: Received response from host: affinity-nodeport-bj4vc
  Dec 19 11:47:25.759: INFO: Received response from host: affinity-nodeport-bj4vc
  Dec 19 11:47:25.759: INFO: Received response from host: affinity-nodeport-bj4vc
  Dec 19 11:47:25.760: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-5302, will wait for the garbage collector to delete the pods @ 12/19/23 11:47:25.796
  Dec 19 11:47:25.878: INFO: Deleting ReplicationController affinity-nodeport took: 12.995729ms
  Dec 19 11:47:25.979: INFO: Terminating ReplicationController affinity-nodeport pods took: 101.40427ms
  Dec 19 11:47:29.339: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5302" for this suite. @ 12/19/23 11:47:29.356
• [11.732 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
test/e2e/network/service.go:1455
  STEP: Creating a kubernetes client @ 12/19/23 11:47:29.38
  Dec 19 11:47:29.380: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename services @ 12/19/23 11:47:29.387
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:47:29.428
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:47:29.436
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-7432 @ 12/19/23 11:47:29.444
  STEP: changing the ExternalName service to type=NodePort @ 12/19/23 11:47:29.457
  STEP: creating replication controller externalname-service in namespace services-7432 @ 12/19/23 11:47:29.497
  I1219 11:47:29.516403      14 runners.go:197] Created replication controller with name: externalname-service, namespace: services-7432, replica count: 2
  I1219 11:47:32.573487      14 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Dec 19 11:47:32.573: INFO: Creating new exec pod
  Dec 19 11:47:35.628: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=services-7432 exec execpodcdstt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Dec 19 11:47:36.023: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Dec 19 11:47:36.023: INFO: stdout: "externalname-service-qvxfz"
  Dec 19 11:47:36.024: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=services-7432 exec execpodcdstt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.37.170 80'
  Dec 19 11:47:36.338: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.37.170 80\nConnection to 10.233.37.170 80 port [tcp/http] succeeded!\n"
  Dec 19 11:47:36.338: INFO: stdout: "externalname-service-qvxfz"
  Dec 19 11:47:36.339: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=services-7432 exec execpodcdstt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.250 30740'
  Dec 19 11:47:36.568: INFO: stderr: "+ + nc -v -t -w 2 192.168.121.250 30740echo\n hostName\nConnection to 192.168.121.250 30740 port [tcp/*] succeeded!\n"
  Dec 19 11:47:36.568: INFO: stdout: ""
  Dec 19 11:47:37.339: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=services-7432 exec execpodcdstt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.250 30740'
  Dec 19 11:47:37.662: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.250 30740\nConnection to 192.168.121.250 30740 port [tcp/*] succeeded!\n"
  Dec 19 11:47:37.663: INFO: stdout: ""
  Dec 19 11:47:38.339: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=services-7432 exec execpodcdstt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.250 30740'
  Dec 19 11:47:38.698: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.250 30740\nConnection to 192.168.121.250 30740 port [tcp/*] succeeded!\n"
  Dec 19 11:47:38.698: INFO: stdout: ""
  Dec 19 11:47:39.340: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=services-7432 exec execpodcdstt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.250 30740'
  Dec 19 11:47:39.604: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.250 30740\nConnection to 192.168.121.250 30740 port [tcp/*] succeeded!\n"
  Dec 19 11:47:39.604: INFO: stdout: "externalname-service-6fnlt"
  Dec 19 11:47:39.605: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-518538418 --namespace=services-7432 exec execpodcdstt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.147 30740'
  Dec 19 11:47:39.937: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.147 30740\nConnection to 192.168.121.147 30740 port [tcp/*] succeeded!\n"
  Dec 19 11:47:39.937: INFO: stdout: "externalname-service-6fnlt"
  Dec 19 11:47:39.938: INFO: Cleaning up the ExternalName to NodePort test service
  Dec 19 11:47:39.995: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7432" for this suite. @ 12/19/23 11:47:40.01
• [10.649 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:251
  STEP: Creating a kubernetes client @ 12/19/23 11:47:40.03
  Dec 19 11:47:40.030: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename downward-api @ 12/19/23 11:47:40.037
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:47:40.086
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:47:40.095
  STEP: Creating a pod to test downward API volume plugin @ 12/19/23 11:47:40.102
  STEP: Saw pod success @ 12/19/23 11:47:44.159
  Dec 19 11:47:44.168: INFO: Trying to get logs from node dah7vaemeeho-3 pod downwardapi-volume-0a899d50-db8a-481c-9ac5-2a763cbb40bf container client-container: <nil>
  STEP: delete the pod @ 12/19/23 11:47:44.186
  Dec 19 11:47:44.214: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8821" for this suite. @ 12/19/23 11:47:44.224
• [4.207 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:234
  STEP: Creating a kubernetes client @ 12/19/23 11:47:44.238
  Dec 19 11:47:44.238: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename resourcequota @ 12/19/23 11:47:44.241
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:47:44.28
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:47:44.29
  STEP: Counting existing ResourceQuota @ 12/19/23 11:47:44.298
  STEP: Creating a ResourceQuota @ 12/19/23 11:47:49.306
  STEP: Ensuring resource quota status is calculated @ 12/19/23 11:47:49.315
  STEP: Creating a Pod that fits quota @ 12/19/23 11:47:51.328
  STEP: Ensuring ResourceQuota status captures the pod usage @ 12/19/23 11:47:51.366
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 12/19/23 11:47:53.374
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 12/19/23 11:47:53.378
  STEP: Ensuring a pod cannot update its resource requirements @ 12/19/23 11:47:53.384
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 12/19/23 11:47:53.395
  STEP: Deleting the pod @ 12/19/23 11:47:55.407
  STEP: Ensuring resource quota status released the pod usage @ 12/19/23 11:47:55.427
  Dec 19 11:47:57.439: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5818" for this suite. @ 12/19/23 11:47:57.45
• [13.226 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
test/e2e/auth/service_accounts.go:742
  STEP: Creating a kubernetes client @ 12/19/23 11:47:57.466
  Dec 19 11:47:57.466: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename svcaccounts @ 12/19/23 11:47:57.471
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:47:57.504
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:47:57.51
  Dec 19 11:47:57.523: INFO: Got root ca configmap in namespace "svcaccounts-1775"
  Dec 19 11:47:57.536: INFO: Deleted root ca configmap in namespace "svcaccounts-1775"
  STEP: waiting for a new root ca configmap created @ 12/19/23 11:47:58.038
  Dec 19 11:47:58.046: INFO: Recreated root ca configmap in namespace "svcaccounts-1775"
  Dec 19 11:47:58.056: INFO: Updated root ca configmap in namespace "svcaccounts-1775"
  STEP: waiting for the root ca configmap reconciled @ 12/19/23 11:47:58.556
  Dec 19 11:47:58.566: INFO: Reconciled root ca configmap in namespace "svcaccounts-1775"
  Dec 19 11:47:58.566: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1775" for this suite. @ 12/19/23 11:47:58.576
• [1.128 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/custom_resource_definition.go:270
  STEP: Creating a kubernetes client @ 12/19/23 11:47:58.6
  Dec 19 11:47:58.600: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename custom-resource-definition @ 12/19/23 11:47:58.604
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:47:58.635
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:47:58.64
  Dec 19 11:47:58.646: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  Dec 19 11:48:02.124: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-6414" for this suite. @ 12/19/23 11:48:02.134
• [3.548 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:55
  STEP: Creating a kubernetes client @ 12/19/23 11:48:02.149
  Dec 19 11:48:02.149: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename downward-api @ 12/19/23 11:48:02.151
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:48:02.183
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:48:02.188
  STEP: Creating a pod to test downward API volume plugin @ 12/19/23 11:48:02.193
  STEP: Saw pod success @ 12/19/23 11:48:06.246
  Dec 19 11:48:06.256: INFO: Trying to get logs from node dah7vaemeeho-3 pod downwardapi-volume-1f334b98-fc4f-4640-8cfb-b8656bcf4496 container client-container: <nil>
  STEP: delete the pod @ 12/19/23 11:48:06.316
  Dec 19 11:48:06.343: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1887" for this suite. @ 12/19/23 11:48:06.352
• [4.217 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
test/e2e/common/node/secrets.go:141
  STEP: Creating a kubernetes client @ 12/19/23 11:48:06.368
  Dec 19 11:48:06.368: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename secrets @ 12/19/23 11:48:06.37
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:48:06.411
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:48:06.418
  STEP: Creating projection with secret that has name secret-emptykey-test-75c32cf1-4af9-4578-acb4-db106d540a2f @ 12/19/23 11:48:06.422
  Dec 19 11:48:06.427: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-942" for this suite. @ 12/19/23 11:48:06.44
• [0.086 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/projected_downwardapi.go:55
  STEP: Creating a kubernetes client @ 12/19/23 11:48:06.457
  Dec 19 11:48:06.457: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename projected @ 12/19/23 11:48:06.461
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:48:06.496
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:48:06.512
  STEP: Creating a pod to test downward API volume plugin @ 12/19/23 11:48:06.519
  STEP: Saw pod success @ 12/19/23 11:48:10.595
  Dec 19 11:48:10.603: INFO: Trying to get logs from node dah7vaemeeho-3 pod downwardapi-volume-d62b3181-c553-4528-84e7-8abff98dc9f4 container client-container: <nil>
  STEP: delete the pod @ 12/19/23 11:48:10.616
  Dec 19 11:48:10.653: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5709" for this suite. @ 12/19/23 11:48:10.664
• [4.227 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:180
  STEP: Creating a kubernetes client @ 12/19/23 11:48:10.692
  Dec 19 11:48:10.693: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename emptydir @ 12/19/23 11:48:10.698
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:48:10.75
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:48:10.757
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 12/19/23 11:48:10.769
  STEP: Saw pod success @ 12/19/23 11:48:14.824
  Dec 19 11:48:14.832: INFO: Trying to get logs from node dah7vaemeeho-3 pod pod-8df484c5-c8bb-46d8-8800-811efb8d245b container test-container: <nil>
  STEP: delete the pod @ 12/19/23 11:48:14.852
  Dec 19 11:48:14.883: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5726" for this suite. @ 12/19/23 11:48:14.894
• [4.216 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/downwardapi_volume.go:209
  STEP: Creating a kubernetes client @ 12/19/23 11:48:14.913
  Dec 19 11:48:14.913: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename downward-api @ 12/19/23 11:48:14.917
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:48:14.944
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:48:14.951
  STEP: Creating a pod to test downward API volume plugin @ 12/19/23 11:48:14.958
  STEP: Saw pod success @ 12/19/23 11:48:19.011
  Dec 19 11:48:19.019: INFO: Trying to get logs from node dah7vaemeeho-3 pod downwardapi-volume-994872dd-6237-4c87-9f6b-19b71fc4b0bf container client-container: <nil>
  STEP: delete the pod @ 12/19/23 11:48:19.034
  Dec 19 11:48:19.069: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6616" for this suite. @ 12/19/23 11:48:19.081
• [4.187 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:276
  STEP: Creating a kubernetes client @ 12/19/23 11:48:19.103
  Dec 19 11:48:19.103: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/19/23 11:48:19.107
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:48:19.142
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:48:19.154
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 12/19/23 11:48:19.163
  Dec 19 11:48:19.168: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  Dec 19 11:48:21.046: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  Dec 19 11:48:28.582: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8407" for this suite. @ 12/19/23 11:48:28.607
• [9.516 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
test/e2e/apps/rc.go:113
  STEP: Creating a kubernetes client @ 12/19/23 11:48:28.62
  Dec 19 11:48:28.620: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename replication-controller @ 12/19/23 11:48:28.623
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:48:28.654
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:48:28.662
  STEP: creating a ReplicationController @ 12/19/23 11:48:28.673
  STEP: waiting for RC to be added @ 12/19/23 11:48:28.682
  STEP: waiting for available Replicas @ 12/19/23 11:48:28.683
  STEP: patching ReplicationController @ 12/19/23 11:48:30.036
  STEP: waiting for RC to be modified @ 12/19/23 11:48:30.056
  STEP: patching ReplicationController status @ 12/19/23 11:48:30.056
  STEP: waiting for RC to be modified @ 12/19/23 11:48:30.071
  STEP: waiting for available Replicas @ 12/19/23 11:48:30.072
  STEP: fetching ReplicationController status @ 12/19/23 11:48:30.084
  STEP: patching ReplicationController scale @ 12/19/23 11:48:30.092
  STEP: waiting for RC to be modified @ 12/19/23 11:48:30.109
  STEP: waiting for ReplicationController's scale to be the max amount @ 12/19/23 11:48:30.11
  STEP: fetching ReplicationController; ensuring that it's patched @ 12/19/23 11:48:31.467
  STEP: updating ReplicationController status @ 12/19/23 11:48:31.476
  STEP: waiting for RC to be modified @ 12/19/23 11:48:31.485
  STEP: listing all ReplicationControllers @ 12/19/23 11:48:31.486
  STEP: checking that ReplicationController has expected values @ 12/19/23 11:48:31.503
  STEP: deleting ReplicationControllers by collection @ 12/19/23 11:48:31.504
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 12/19/23 11:48:31.519
  Dec 19 11:48:31.632: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E1219 11:48:31.633798      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-3718" for this suite. @ 12/19/23 11:48:31.64
• [3.035 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
test/e2e/scheduling/limit_range.go:253
  STEP: Creating a kubernetes client @ 12/19/23 11:48:31.655
  Dec 19 11:48:31.655: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename limitrange @ 12/19/23 11:48:31.658
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:48:31.693
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:48:31.701
  STEP: Creating LimitRange "e2e-limitrange-c5gr6" in namespace "limitrange-2181" @ 12/19/23 11:48:31.708
  STEP: Creating another limitRange in another namespace @ 12/19/23 11:48:31.72
  Dec 19 11:48:31.745: INFO: Namespace "e2e-limitrange-c5gr6-4200" created
  Dec 19 11:48:31.745: INFO: Creating LimitRange "e2e-limitrange-c5gr6" in namespace "e2e-limitrange-c5gr6-4200"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-c5gr6" @ 12/19/23 11:48:31.755
  Dec 19 11:48:31.762: INFO: Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-c5gr6" in "limitrange-2181" namespace @ 12/19/23 11:48:31.762
  Dec 19 11:48:31.780: INFO: LimitRange "e2e-limitrange-c5gr6" has been patched
  STEP: Delete LimitRange "e2e-limitrange-c5gr6" by Collection with labelSelector: "e2e-limitrange-c5gr6=patched" @ 12/19/23 11:48:31.781
  STEP: Confirm that the limitRange "e2e-limitrange-c5gr6" has been deleted @ 12/19/23 11:48:31.794
  Dec 19 11:48:31.794: INFO: Requesting list of LimitRange to confirm quantity
  Dec 19 11:48:31.800: INFO: Found 0 LimitRange with label "e2e-limitrange-c5gr6=patched"
  Dec 19 11:48:31.800: INFO: LimitRange "e2e-limitrange-c5gr6" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-c5gr6" @ 12/19/23 11:48:31.8
  Dec 19 11:48:31.806: INFO: Found 1 limitRange
  Dec 19 11:48:31.806: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-2181" for this suite. @ 12/19/23 11:48:31.814
  STEP: Destroying namespace "e2e-limitrange-c5gr6-4200" for this suite. @ 12/19/23 11:48:31.829
• [0.185 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 12/19/23 11:48:31.85
  Dec 19 11:48:31.850: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename emptydir-wrapper @ 12/19/23 11:48:31.853
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:48:31.88
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:48:31.885
  STEP: Creating 50 configmaps @ 12/19/23 11:48:31.892
  STEP: Creating RC which spawns configmap-volume pods @ 12/19/23 11:48:32.337
  Dec 19 11:48:32.375: INFO: Pod name wrapped-volume-race-13b7c82b-12c1-4523-b70f-2873aa82a5bb: Found 0 pods out of 5
  E1219 11:48:32.635274      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:48:33.635440      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:48:34.636180      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:48:35.636190      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:48:36.637004      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 19 11:48:37.394: INFO: Pod name wrapped-volume-race-13b7c82b-12c1-4523-b70f-2873aa82a5bb: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 12/19/23 11:48:37.394
  STEP: Creating RC which spawns configmap-volume pods @ 12/19/23 11:48:37.522
  Dec 19 11:48:37.578: INFO: Pod name wrapped-volume-race-12c7e5a5-3057-443f-99c7-b24a738f6a12: Found 0 pods out of 5
  E1219 11:48:37.637659      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:48:38.638445      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:48:39.638916      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:48:40.639112      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:48:41.639470      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 19 11:48:42.600: INFO: Pod name wrapped-volume-race-12c7e5a5-3057-443f-99c7-b24a738f6a12: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 12/19/23 11:48:42.6
  E1219 11:48:42.642603      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating RC which spawns configmap-volume pods @ 12/19/23 11:48:42.66
  Dec 19 11:48:42.691: INFO: Pod name wrapped-volume-race-39085ff2-5b19-43fd-a981-5c49810eaa1c: Found 0 pods out of 5
  E1219 11:48:43.641068      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:48:44.641096      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:48:45.642051      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:48:46.642395      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:48:47.642823      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 19 11:48:47.711: INFO: Pod name wrapped-volume-race-39085ff2-5b19-43fd-a981-5c49810eaa1c: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 12/19/23 11:48:47.711
  STEP: deleting ReplicationController wrapped-volume-race-39085ff2-5b19-43fd-a981-5c49810eaa1c in namespace emptydir-wrapper-7473, will wait for the garbage collector to delete the pods @ 12/19/23 11:48:47.749
  Dec 19 11:48:47.821: INFO: Deleting ReplicationController wrapped-volume-race-39085ff2-5b19-43fd-a981-5c49810eaa1c took: 12.901763ms
  Dec 19 11:48:48.021: INFO: Terminating ReplicationController wrapped-volume-race-39085ff2-5b19-43fd-a981-5c49810eaa1c pods took: 200.597661ms
  E1219 11:48:48.643472      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:48:49.643472      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-12c7e5a5-3057-443f-99c7-b24a738f6a12 in namespace emptydir-wrapper-7473, will wait for the garbage collector to delete the pods @ 12/19/23 11:48:50.622
  E1219 11:48:50.643904      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 19 11:48:50.703: INFO: Deleting ReplicationController wrapped-volume-race-12c7e5a5-3057-443f-99c7-b24a738f6a12 took: 15.5741ms
  Dec 19 11:48:51.005: INFO: Terminating ReplicationController wrapped-volume-race-12c7e5a5-3057-443f-99c7-b24a738f6a12 pods took: 301.483301ms
  E1219 11:48:51.643990      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:48:52.644242      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-13b7c82b-12c1-4523-b70f-2873aa82a5bb in namespace emptydir-wrapper-7473, will wait for the garbage collector to delete the pods @ 12/19/23 11:48:53.206
  Dec 19 11:48:53.287: INFO: Deleting ReplicationController wrapped-volume-race-13b7c82b-12c1-4523-b70f-2873aa82a5bb took: 16.799718ms
  Dec 19 11:48:53.488: INFO: Terminating ReplicationController wrapped-volume-race-13b7c82b-12c1-4523-b70f-2873aa82a5bb pods took: 201.310786ms
  E1219 11:48:53.645298      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:48:54.646331      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:48:55.646850      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Cleaning up the configMaps @ 12/19/23 11:48:55.689
  Dec 19 11:48:56.363: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-7473" for this suite. @ 12/19/23 11:48:56.376
• [24.544 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/empty_dir.go:160
  STEP: Creating a kubernetes client @ 12/19/23 11:48:56.407
  Dec 19 11:48:56.408: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename emptydir @ 12/19/23 11:48:56.414
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:48:56.484
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:48:56.499
  STEP: Creating a pod to test emptydir volume type on node default medium @ 12/19/23 11:48:56.507
  E1219 11:48:56.647647      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:48:57.647680      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:48:58.648721      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:48:59.648775      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/19/23 11:49:00.568
  Dec 19 11:49:00.576: INFO: Trying to get logs from node dah7vaemeeho-3 pod pod-74b05421-ccbe-4ded-940a-0c995fbc0fef container test-container: <nil>
  STEP: delete the pod @ 12/19/23 11:49:00.612
  E1219 11:49:00.649135      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 19 11:49:00.650: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5269" for this suite. @ 12/19/23 11:49:00.66
• [4.265 seconds]
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 12/19/23 11:49:00.673
  Dec 19 11:49:00.673: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename daemonsets @ 12/19/23 11:49:00.678
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:49:00.713
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:49:00.719
  STEP: Creating a simple DaemonSet "daemon-set" @ 12/19/23 11:49:00.797
  STEP: Check that daemon pods launch on every node of the cluster. @ 12/19/23 11:49:00.808
  Dec 19 11:49:00.822: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 19 11:49:00.823: INFO: Node dah7vaemeeho-1 is running 0 daemon pod, expected 1
  E1219 11:49:01.650151      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 19 11:49:01.832: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 19 11:49:01.832: INFO: Node dah7vaemeeho-1 is running 0 daemon pod, expected 1
  E1219 11:49:02.650565      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 19 11:49:02.836: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Dec 19 11:49:02.836: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 12/19/23 11:49:02.845
  Dec 19 11:49:02.910: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Dec 19 11:49:02.910: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 12/19/23 11:49:02.91
  E1219 11:49:03.652285      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting DaemonSet "daemon-set" @ 12/19/23 11:49:03.936
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-8528, will wait for the garbage collector to delete the pods @ 12/19/23 11:49:03.936
  Dec 19 11:49:04.012: INFO: Deleting DaemonSet.extensions daemon-set took: 16.258988ms
  Dec 19 11:49:04.112: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.684922ms
  E1219 11:49:04.652769      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:49:05.653551      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:49:06.655887      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 19 11:49:06.724: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Dec 19 11:49:06.724: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Dec 19 11:49:06.731: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"40010"},"items":null}

  Dec 19 11:49:06.738: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"40010"},"items":null}

  Dec 19 11:49:06.764: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-8528" for this suite. @ 12/19/23 11:49:06.773
• [6.114 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
test/e2e/common/storage/configmap_volume.go:125
  STEP: Creating a kubernetes client @ 12/19/23 11:49:06.834
  Dec 19 11:49:06.834: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename configmap @ 12/19/23 11:49:06.837
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:49:06.864
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:49:06.874
  STEP: Creating configMap with name configmap-test-upd-0b274e1f-1160-4a75-bdbe-0fc9c3c462a4 @ 12/19/23 11:49:06.889
  STEP: Creating the pod @ 12/19/23 11:49:06.9
  E1219 11:49:07.656403      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:49:08.656928      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating configmap configmap-test-upd-0b274e1f-1160-4a75-bdbe-0fc9c3c462a4 @ 12/19/23 11:49:08.965
  STEP: waiting to observe update in volume @ 12/19/23 11:49:08.988
  E1219 11:49:09.659926      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:49:10.659248      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:49:11.660046      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:49:12.660744      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:49:13.661630      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:49:14.662315      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:49:15.662411      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:49:16.662619      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:49:17.663747      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:49:18.664870      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:49:19.665221      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:49:20.666002      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:49:21.666770      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:49:22.666966      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:49:23.667152      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:49:24.668082      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:49:25.668335      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:49:26.669514      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:49:27.669572      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:49:28.669770      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:49:29.669922      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:49:30.669981      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:49:31.670148      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:49:32.670318      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:49:33.671401      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:49:34.672077      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:49:35.675808      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:49:36.676746      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:49:37.676981      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:49:38.677278      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:49:39.678230      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:49:40.679084      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:49:41.679688      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:49:42.680059      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:49:43.680758      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:49:44.681407      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:49:45.682216      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:49:46.682590      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:49:47.683680      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:49:48.684338      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:49:49.685145      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:49:50.688522      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:49:51.687407      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:49:52.687868      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:49:53.688071      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:49:54.689287      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:49:55.689092      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:49:56.689295      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:49:57.690545      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:49:58.690552      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:49:59.691668      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:50:00.692249      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:50:01.692825      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:50:02.693138      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:50:03.693453      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:50:04.694368      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:50:05.695101      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:50:06.696183      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:50:07.696830      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:50:08.697658      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:50:09.699276      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:50:10.699529      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:50:11.699883      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:50:12.700391      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:50:13.700716      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:50:14.700965      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:50:15.701873      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:50:16.702510      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:50:17.703398      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:50:18.703594      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:50:19.703792      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:50:20.704027      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:50:21.704307      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:50:22.704496      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:50:23.704774      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:50:24.705049      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:50:25.705699      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:50:26.706549      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:50:27.706717      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:50:28.707128      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:50:29.708042      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 19 11:50:29.931: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7211" for this suite. @ 12/19/23 11:50:29.946
• [83.127 seconds]
------------------------------
SS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
test/e2e/auth/service_accounts.go:163
  STEP: Creating a kubernetes client @ 12/19/23 11:50:29.962
  Dec 19 11:50:29.962: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename svcaccounts @ 12/19/23 11:50:29.968
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:50:30.009
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:50:30.019
  Dec 19 11:50:30.087: INFO: created pod pod-service-account-defaultsa
  Dec 19 11:50:30.087: INFO: pod pod-service-account-defaultsa service account token volume mount: true
  Dec 19 11:50:30.136: INFO: created pod pod-service-account-mountsa
  Dec 19 11:50:30.136: INFO: pod pod-service-account-mountsa service account token volume mount: true
  Dec 19 11:50:30.176: INFO: created pod pod-service-account-nomountsa
  Dec 19 11:50:30.177: INFO: pod pod-service-account-nomountsa service account token volume mount: false
  Dec 19 11:50:30.196: INFO: created pod pod-service-account-defaultsa-mountspec
  Dec 19 11:50:30.196: INFO: pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  Dec 19 11:50:30.226: INFO: created pod pod-service-account-mountsa-mountspec
  Dec 19 11:50:30.227: INFO: pod pod-service-account-mountsa-mountspec service account token volume mount: true
  Dec 19 11:50:30.253: INFO: created pod pod-service-account-nomountsa-mountspec
  Dec 19 11:50:30.253: INFO: pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  Dec 19 11:50:30.403: INFO: created pod pod-service-account-defaultsa-nomountspec
  Dec 19 11:50:30.403: INFO: pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  Dec 19 11:50:30.421: INFO: created pod pod-service-account-mountsa-nomountspec
  Dec 19 11:50:30.421: INFO: pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  Dec 19 11:50:30.464: INFO: created pod pod-service-account-nomountsa-nomountspec
  Dec 19 11:50:30.464: INFO: pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  Dec 19 11:50:30.464: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-2283" for this suite. @ 12/19/23 11:50:30.477
• [0.586 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/downwardapi.go:92
  STEP: Creating a kubernetes client @ 12/19/23 11:50:30.548
  Dec 19 11:50:30.548: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename downward-api @ 12/19/23 11:50:30.565
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:50:30.634
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:50:30.638
  STEP: Creating a pod to test downward api env vars @ 12/19/23 11:50:30.648
  E1219 11:50:30.708953      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:50:31.709771      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:50:32.710593      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:50:33.711409      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/19/23 11:50:34.708
  E1219 11:50:34.712009      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 19 11:50:34.715: INFO: Trying to get logs from node dah7vaemeeho-3 pod downward-api-1a441e26-57e8-4a4c-b4b8-c3e9dd0b457f container dapi-container: <nil>
  STEP: delete the pod @ 12/19/23 11:50:34.73
  Dec 19 11:50:34.760: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7962" for this suite. @ 12/19/23 11:50:34.774
• [4.241 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/resource_quota.go:330
  STEP: Creating a kubernetes client @ 12/19/23 11:50:34.791
  Dec 19 11:50:34.791: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename resourcequota @ 12/19/23 11:50:34.794
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:50:34.82
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:50:34.83
  E1219 11:50:35.712355      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:50:36.712319      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:50:37.712935      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:50:38.713499      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:50:39.714499      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:50:40.714952      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:50:41.716015      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:50:42.717218      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:50:43.717282      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:50:44.717658      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:50:45.717980      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:50:46.718224      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:50:47.722213      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:50:48.718924      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:50:49.719717      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:50:50.719940      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:50:51.720237      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 12/19/23 11:50:51.846
  E1219 11:50:52.720795      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:50:53.720979      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:50:54.722111      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:50:55.722756      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:50:56.723685      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 12/19/23 11:50:56.853
  STEP: Ensuring resource quota status is calculated @ 12/19/23 11:50:56.865
  E1219 11:50:57.725117      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:50:58.725089      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ConfigMap @ 12/19/23 11:50:58.874
  STEP: Ensuring resource quota status captures configMap creation @ 12/19/23 11:50:58.901
  E1219 11:50:59.725827      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:51:00.726027      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ConfigMap @ 12/19/23 11:51:00.91
  STEP: Ensuring resource quota status released usage @ 12/19/23 11:51:00.921
  E1219 11:51:01.726895      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:51:02.727110      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 19 11:51:02.931: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-527" for this suite. @ 12/19/23 11:51:02.939
• [28.162 seconds]
------------------------------
SSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
test/e2e/network/dns.go:286
  STEP: Creating a kubernetes client @ 12/19/23 11:51:02.955
  Dec 19 11:51:02.955: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename dns @ 12/19/23 11:51:02.961
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:51:02.994
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:51:03.002
  STEP: Creating a test headless service @ 12/19/23 11:51:03.012
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-9149.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-9149.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-9149.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-9149.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-9149.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-9149.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-9149.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-9149.svc.cluster.local;sleep 1; done
   @ 12/19/23 11:51:03.029
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-9149.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-9149.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-9149.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-9149.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-9149.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-9149.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-9149.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-9149.svc.cluster.local;sleep 1; done
   @ 12/19/23 11:51:03.03
  STEP: creating a pod to probe DNS @ 12/19/23 11:51:03.03
  STEP: submitting the pod to kubernetes @ 12/19/23 11:51:03.031
  E1219 11:51:03.727793      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:51:04.728298      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 12/19/23 11:51:05.087
  STEP: looking for the results for each expected name from probers @ 12/19/23 11:51:05.094
  Dec 19 11:51:05.107: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-9149.svc.cluster.local from pod dns-9149/dns-test-d613fb16-880e-4f36-be65-86ed463a57e6: the server could not find the requested resource (get pods dns-test-d613fb16-880e-4f36-be65-86ed463a57e6)
  Dec 19 11:51:05.115: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-9149.svc.cluster.local from pod dns-9149/dns-test-d613fb16-880e-4f36-be65-86ed463a57e6: the server could not find the requested resource (get pods dns-test-d613fb16-880e-4f36-be65-86ed463a57e6)
  Dec 19 11:51:05.122: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-9149.svc.cluster.local from pod dns-9149/dns-test-d613fb16-880e-4f36-be65-86ed463a57e6: the server could not find the requested resource (get pods dns-test-d613fb16-880e-4f36-be65-86ed463a57e6)
  Dec 19 11:51:05.129: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-9149.svc.cluster.local from pod dns-9149/dns-test-d613fb16-880e-4f36-be65-86ed463a57e6: the server could not find the requested resource (get pods dns-test-d613fb16-880e-4f36-be65-86ed463a57e6)
  Dec 19 11:51:05.136: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-9149.svc.cluster.local from pod dns-9149/dns-test-d613fb16-880e-4f36-be65-86ed463a57e6: the server could not find the requested resource (get pods dns-test-d613fb16-880e-4f36-be65-86ed463a57e6)
  Dec 19 11:51:05.142: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-9149.svc.cluster.local from pod dns-9149/dns-test-d613fb16-880e-4f36-be65-86ed463a57e6: the server could not find the requested resource (get pods dns-test-d613fb16-880e-4f36-be65-86ed463a57e6)
  Dec 19 11:51:05.150: INFO: Unable to read jessie_udp@dns-test-service-2.dns-9149.svc.cluster.local from pod dns-9149/dns-test-d613fb16-880e-4f36-be65-86ed463a57e6: the server could not find the requested resource (get pods dns-test-d613fb16-880e-4f36-be65-86ed463a57e6)
  Dec 19 11:51:05.158: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-9149.svc.cluster.local from pod dns-9149/dns-test-d613fb16-880e-4f36-be65-86ed463a57e6: the server could not find the requested resource (get pods dns-test-d613fb16-880e-4f36-be65-86ed463a57e6)
  Dec 19 11:51:05.158: INFO: Lookups using dns-9149/dns-test-d613fb16-880e-4f36-be65-86ed463a57e6 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-9149.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-9149.svc.cluster.local wheezy_udp@dns-test-service-2.dns-9149.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-9149.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-9149.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-9149.svc.cluster.local jessie_udp@dns-test-service-2.dns-9149.svc.cluster.local jessie_tcp@dns-test-service-2.dns-9149.svc.cluster.local]

  Dec 19 11:51:05.172: INFO: Pod client logs for webserver: 
  Dec 19 11:51:05.188: INFO: Pod client logs for querier: 
  Dec 19 11:51:05.202: INFO: Pod client logs for jessie-querier: 
  E1219 11:51:05.728987      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:51:06.729932      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:51:07.729563      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:51:08.730706      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:51:09.730425      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 19 11:51:10.103: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-9149.svc.cluster.local from pod dns-9149/dns-test-d613fb16-880e-4f36-be65-86ed463a57e6: the server could not find the requested resource (get pods dns-test-d613fb16-880e-4f36-be65-86ed463a57e6)
  Dec 19 11:51:10.113: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-9149.svc.cluster.local from pod dns-9149/dns-test-d613fb16-880e-4f36-be65-86ed463a57e6: the server could not find the requested resource (get pods dns-test-d613fb16-880e-4f36-be65-86ed463a57e6)
  Dec 19 11:51:10.121: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-9149.svc.cluster.local from pod dns-9149/dns-test-d613fb16-880e-4f36-be65-86ed463a57e6: the server could not find the requested resource (get pods dns-test-d613fb16-880e-4f36-be65-86ed463a57e6)
  Dec 19 11:51:10.129: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-9149.svc.cluster.local from pod dns-9149/dns-test-d613fb16-880e-4f36-be65-86ed463a57e6: the server could not find the requested resource (get pods dns-test-d613fb16-880e-4f36-be65-86ed463a57e6)
  Dec 19 11:51:10.139: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-9149.svc.cluster.local from pod dns-9149/dns-test-d613fb16-880e-4f36-be65-86ed463a57e6: the server could not find the requested resource (get pods dns-test-d613fb16-880e-4f36-be65-86ed463a57e6)
  Dec 19 11:51:10.147: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-9149.svc.cluster.local from pod dns-9149/dns-test-d613fb16-880e-4f36-be65-86ed463a57e6: the server could not find the requested resource (get pods dns-test-d613fb16-880e-4f36-be65-86ed463a57e6)
  Dec 19 11:51:10.154: INFO: Unable to read jessie_udp@dns-test-service-2.dns-9149.svc.cluster.local from pod dns-9149/dns-test-d613fb16-880e-4f36-be65-86ed463a57e6: the server could not find the requested resource (get pods dns-test-d613fb16-880e-4f36-be65-86ed463a57e6)
  Dec 19 11:51:10.164: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-9149.svc.cluster.local from pod dns-9149/dns-test-d613fb16-880e-4f36-be65-86ed463a57e6: the server could not find the requested resource (get pods dns-test-d613fb16-880e-4f36-be65-86ed463a57e6)
  Dec 19 11:51:10.165: INFO: Lookups using dns-9149/dns-test-d613fb16-880e-4f36-be65-86ed463a57e6 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-9149.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-9149.svc.cluster.local wheezy_udp@dns-test-service-2.dns-9149.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-9149.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-9149.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-9149.svc.cluster.local jessie_udp@dns-test-service-2.dns-9149.svc.cluster.local jessie_tcp@dns-test-service-2.dns-9149.svc.cluster.local]

  Dec 19 11:51:10.185: INFO: Pod client logs for webserver: 
  Dec 19 11:51:10.201: INFO: Pod client logs for querier: 
  Dec 19 11:51:10.225: INFO: Pod client logs for jessie-querier: 
  E1219 11:51:10.731770      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:51:11.731865      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:51:12.733679      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:51:13.734222      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:51:14.735463      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 19 11:51:15.105: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-9149.svc.cluster.local from pod dns-9149/dns-test-d613fb16-880e-4f36-be65-86ed463a57e6: the server could not find the requested resource (get pods dns-test-d613fb16-880e-4f36-be65-86ed463a57e6)
  Dec 19 11:51:15.112: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-9149.svc.cluster.local from pod dns-9149/dns-test-d613fb16-880e-4f36-be65-86ed463a57e6: the server could not find the requested resource (get pods dns-test-d613fb16-880e-4f36-be65-86ed463a57e6)
  Dec 19 11:51:15.123: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-9149.svc.cluster.local from pod dns-9149/dns-test-d613fb16-880e-4f36-be65-86ed463a57e6: the server could not find the requested resource (get pods dns-test-d613fb16-880e-4f36-be65-86ed463a57e6)
  Dec 19 11:51:15.134: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-9149.svc.cluster.local from pod dns-9149/dns-test-d613fb16-880e-4f36-be65-86ed463a57e6: the server could not find the requested resource (get pods dns-test-d613fb16-880e-4f36-be65-86ed463a57e6)
  Dec 19 11:51:15.142: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-9149.svc.cluster.local from pod dns-9149/dns-test-d613fb16-880e-4f36-be65-86ed463a57e6: the server could not find the requested resource (get pods dns-test-d613fb16-880e-4f36-be65-86ed463a57e6)
  Dec 19 11:51:15.156: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-9149.svc.cluster.local from pod dns-9149/dns-test-d613fb16-880e-4f36-be65-86ed463a57e6: the server could not find the requested resource (get pods dns-test-d613fb16-880e-4f36-be65-86ed463a57e6)
  Dec 19 11:51:15.164: INFO: Unable to read jessie_udp@dns-test-service-2.dns-9149.svc.cluster.local from pod dns-9149/dns-test-d613fb16-880e-4f36-be65-86ed463a57e6: the server could not find the requested resource (get pods dns-test-d613fb16-880e-4f36-be65-86ed463a57e6)
  Dec 19 11:51:15.170: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-9149.svc.cluster.local from pod dns-9149/dns-test-d613fb16-880e-4f36-be65-86ed463a57e6: the server could not find the requested resource (get pods dns-test-d613fb16-880e-4f36-be65-86ed463a57e6)
  Dec 19 11:51:15.170: INFO: Lookups using dns-9149/dns-test-d613fb16-880e-4f36-be65-86ed463a57e6 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-9149.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-9149.svc.cluster.local wheezy_udp@dns-test-service-2.dns-9149.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-9149.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-9149.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-9149.svc.cluster.local jessie_udp@dns-test-service-2.dns-9149.svc.cluster.local jessie_tcp@dns-test-service-2.dns-9149.svc.cluster.local]

  Dec 19 11:51:15.194: INFO: Pod client logs for webserver: 
  Dec 19 11:51:15.208: INFO: Pod client logs for querier: 
  Dec 19 11:51:15.219: INFO: Pod client logs for jessie-querier: 
  E1219 11:51:15.736257      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:51:16.737222      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:51:17.737958      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:51:18.738770      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:51:19.738985      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 19 11:51:20.107: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-9149.svc.cluster.local from pod dns-9149/dns-test-d613fb16-880e-4f36-be65-86ed463a57e6: the server could not find the requested resource (get pods dns-test-d613fb16-880e-4f36-be65-86ed463a57e6)
  Dec 19 11:51:20.121: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-9149.svc.cluster.local from pod dns-9149/dns-test-d613fb16-880e-4f36-be65-86ed463a57e6: the server could not find the requested resource (get pods dns-test-d613fb16-880e-4f36-be65-86ed463a57e6)
  Dec 19 11:51:20.130: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-9149.svc.cluster.local from pod dns-9149/dns-test-d613fb16-880e-4f36-be65-86ed463a57e6: the server could not find the requested resource (get pods dns-test-d613fb16-880e-4f36-be65-86ed463a57e6)
  Dec 19 11:51:20.139: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-9149.svc.cluster.local from pod dns-9149/dns-test-d613fb16-880e-4f36-be65-86ed463a57e6: the server could not find the requested resource (get pods dns-test-d613fb16-880e-4f36-be65-86ed463a57e6)
  Dec 19 11:51:20.146: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-9149.svc.cluster.local from pod dns-9149/dns-test-d613fb16-880e-4f36-be65-86ed463a57e6: the server could not find the requested resource (get pods dns-test-d613fb16-880e-4f36-be65-86ed463a57e6)
  Dec 19 11:51:20.154: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-9149.svc.cluster.local from pod dns-9149/dns-test-d613fb16-880e-4f36-be65-86ed463a57e6: the server could not find the requested resource (get pods dns-test-d613fb16-880e-4f36-be65-86ed463a57e6)
  Dec 19 11:51:20.171: INFO: Unable to read jessie_udp@dns-test-service-2.dns-9149.svc.cluster.local from pod dns-9149/dns-test-d613fb16-880e-4f36-be65-86ed463a57e6: the server could not find the requested resource (get pods dns-test-d613fb16-880e-4f36-be65-86ed463a57e6)
  Dec 19 11:51:20.184: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-9149.svc.cluster.local from pod dns-9149/dns-test-d613fb16-880e-4f36-be65-86ed463a57e6: the server could not find the requested resource (get pods dns-test-d613fb16-880e-4f36-be65-86ed463a57e6)
  Dec 19 11:51:20.185: INFO: Lookups using dns-9149/dns-test-d613fb16-880e-4f36-be65-86ed463a57e6 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-9149.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-9149.svc.cluster.local wheezy_udp@dns-test-service-2.dns-9149.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-9149.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-9149.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-9149.svc.cluster.local jessie_udp@dns-test-service-2.dns-9149.svc.cluster.local jessie_tcp@dns-test-service-2.dns-9149.svc.cluster.local]

  Dec 19 11:51:20.203: INFO: Pod client logs for webserver: 
  Dec 19 11:51:20.218: INFO: Pod client logs for querier: 
  Dec 19 11:51:20.236: INFO: Pod client logs for jessie-querier: 
  E1219 11:51:20.739445      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:51:21.740956      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:51:22.740068      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:51:23.740987      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:51:24.741764      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 19 11:51:25.110: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-9149.svc.cluster.local from pod dns-9149/dns-test-d613fb16-880e-4f36-be65-86ed463a57e6: the server could not find the requested resource (get pods dns-test-d613fb16-880e-4f36-be65-86ed463a57e6)
  Dec 19 11:51:25.120: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-9149.svc.cluster.local from pod dns-9149/dns-test-d613fb16-880e-4f36-be65-86ed463a57e6: the server could not find the requested resource (get pods dns-test-d613fb16-880e-4f36-be65-86ed463a57e6)
  Dec 19 11:51:25.129: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-9149.svc.cluster.local from pod dns-9149/dns-test-d613fb16-880e-4f36-be65-86ed463a57e6: the server could not find the requested resource (get pods dns-test-d613fb16-880e-4f36-be65-86ed463a57e6)
  Dec 19 11:51:25.139: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-9149.svc.cluster.local from pod dns-9149/dns-test-d613fb16-880e-4f36-be65-86ed463a57e6: the server could not find the requested resource (get pods dns-test-d613fb16-880e-4f36-be65-86ed463a57e6)
  Dec 19 11:51:25.149: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-9149.svc.cluster.local from pod dns-9149/dns-test-d613fb16-880e-4f36-be65-86ed463a57e6: the server could not find the requested resource (get pods dns-test-d613fb16-880e-4f36-be65-86ed463a57e6)
  Dec 19 11:51:25.158: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-9149.svc.cluster.local from pod dns-9149/dns-test-d613fb16-880e-4f36-be65-86ed463a57e6: the server could not find the requested resource (get pods dns-test-d613fb16-880e-4f36-be65-86ed463a57e6)
  Dec 19 11:51:25.170: INFO: Unable to read jessie_udp@dns-test-service-2.dns-9149.svc.cluster.local from pod dns-9149/dns-test-d613fb16-880e-4f36-be65-86ed463a57e6: the server could not find the requested resource (get pods dns-test-d613fb16-880e-4f36-be65-86ed463a57e6)
  Dec 19 11:51:25.179: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-9149.svc.cluster.local from pod dns-9149/dns-test-d613fb16-880e-4f36-be65-86ed463a57e6: the server could not find the requested resource (get pods dns-test-d613fb16-880e-4f36-be65-86ed463a57e6)
  Dec 19 11:51:25.180: INFO: Lookups using dns-9149/dns-test-d613fb16-880e-4f36-be65-86ed463a57e6 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-9149.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-9149.svc.cluster.local wheezy_udp@dns-test-service-2.dns-9149.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-9149.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-9149.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-9149.svc.cluster.local jessie_udp@dns-test-service-2.dns-9149.svc.cluster.local jessie_tcp@dns-test-service-2.dns-9149.svc.cluster.local]

  Dec 19 11:51:25.198: INFO: Pod client logs for webserver: 
  Dec 19 11:51:25.219: INFO: Pod client logs for querier: 
  Dec 19 11:51:25.234: INFO: Pod client logs for jessie-querier: 
  E1219 11:51:25.741995      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:51:26.743112      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:51:27.743609      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:51:28.743645      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:51:29.744652      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 19 11:51:30.108: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-9149.svc.cluster.local from pod dns-9149/dns-test-d613fb16-880e-4f36-be65-86ed463a57e6: the server could not find the requested resource (get pods dns-test-d613fb16-880e-4f36-be65-86ed463a57e6)
  Dec 19 11:51:30.122: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-9149.svc.cluster.local from pod dns-9149/dns-test-d613fb16-880e-4f36-be65-86ed463a57e6: the server could not find the requested resource (get pods dns-test-d613fb16-880e-4f36-be65-86ed463a57e6)
  Dec 19 11:51:30.130: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-9149.svc.cluster.local from pod dns-9149/dns-test-d613fb16-880e-4f36-be65-86ed463a57e6: the server could not find the requested resource (get pods dns-test-d613fb16-880e-4f36-be65-86ed463a57e6)
  Dec 19 11:51:30.139: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-9149.svc.cluster.local from pod dns-9149/dns-test-d613fb16-880e-4f36-be65-86ed463a57e6: the server could not find the requested resource (get pods dns-test-d613fb16-880e-4f36-be65-86ed463a57e6)
  Dec 19 11:51:30.147: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-9149.svc.cluster.local from pod dns-9149/dns-test-d613fb16-880e-4f36-be65-86ed463a57e6: the server could not find the requested resource (get pods dns-test-d613fb16-880e-4f36-be65-86ed463a57e6)
  Dec 19 11:51:30.159: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-9149.svc.cluster.local from pod dns-9149/dns-test-d613fb16-880e-4f36-be65-86ed463a57e6: the server could not find the requested resource (get pods dns-test-d613fb16-880e-4f36-be65-86ed463a57e6)
  Dec 19 11:51:30.168: INFO: Unable to read jessie_udp@dns-test-service-2.dns-9149.svc.cluster.local from pod dns-9149/dns-test-d613fb16-880e-4f36-be65-86ed463a57e6: the server could not find the requested resource (get pods dns-test-d613fb16-880e-4f36-be65-86ed463a57e6)
  Dec 19 11:51:30.177: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-9149.svc.cluster.local from pod dns-9149/dns-test-d613fb16-880e-4f36-be65-86ed463a57e6: the server could not find the requested resource (get pods dns-test-d613fb16-880e-4f36-be65-86ed463a57e6)
  Dec 19 11:51:30.177: INFO: Lookups using dns-9149/dns-test-d613fb16-880e-4f36-be65-86ed463a57e6 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-9149.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-9149.svc.cluster.local wheezy_udp@dns-test-service-2.dns-9149.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-9149.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-9149.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-9149.svc.cluster.local jessie_udp@dns-test-service-2.dns-9149.svc.cluster.local jessie_tcp@dns-test-service-2.dns-9149.svc.cluster.local]

  Dec 19 11:51:30.192: INFO: Pod client logs for webserver: 
  Dec 19 11:51:30.215: INFO: Pod client logs for querier: 
  Dec 19 11:51:30.241: INFO: Pod client logs for jessie-querier: 
  E1219 11:51:30.744886      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:51:31.745068      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:51:32.745840      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:51:33.746681      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:51:34.747147      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 19 11:51:35.165: INFO: DNS probes using dns-9149/dns-test-d613fb16-880e-4f36-be65-86ed463a57e6 succeeded

  STEP: deleting the pod @ 12/19/23 11:51:35.166
  STEP: deleting the test headless service @ 12/19/23 11:51:35.219
  Dec 19 11:51:35.257: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9149" for this suite. @ 12/19/23 11:51:35.278
• [32.341 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/webhook.go:498
  STEP: Creating a kubernetes client @ 12/19/23 11:51:35.296
  Dec 19 11:51:35.296: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename webhook @ 12/19/23 11:51:35.301
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:51:35.339
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:51:35.346
  STEP: Setting up server cert @ 12/19/23 11:51:35.42
  E1219 11:51:35.748016      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/19/23 11:51:36.131
  STEP: Deploying the webhook pod @ 12/19/23 11:51:36.148
  STEP: Wait for the deployment to be ready @ 12/19/23 11:51:36.173
  Dec 19 11:51:36.199: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E1219 11:51:36.748245      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:51:37.748477      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/19/23 11:51:38.228
  STEP: Verifying the service has paired with the endpoint @ 12/19/23 11:51:38.27
  E1219 11:51:38.749596      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 19 11:51:39.270: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 12/19/23 11:51:39.287
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 12/19/23 11:51:39.343
  STEP: Creating a configMap that should not be mutated @ 12/19/23 11:51:39.355
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 12/19/23 11:51:39.377
  STEP: Creating a configMap that should be mutated @ 12/19/23 11:51:39.394
  Dec 19 11:51:39.568: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8276" for this suite. @ 12/19/23 11:51:39.583
  STEP: Destroying namespace "webhook-markers-572" for this suite. @ 12/19/23 11:51:39.605
• [4.326 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
test/e2e/apps/rc.go:86
  STEP: Creating a kubernetes client @ 12/19/23 11:51:39.622
  Dec 19 11:51:39.622: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename replication-controller @ 12/19/23 11:51:39.625
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:51:39.658
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:51:39.666
  Dec 19 11:51:39.674: INFO: Creating quota "condition-test" that allows only two pods to run in the current namespace
  E1219 11:51:39.750912      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 12/19/23 11:51:40.713
  STEP: Checking rc "condition-test" has the desired failure condition set @ 12/19/23 11:51:40.729
  E1219 11:51:40.751565      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 12/19/23 11:51:41.746
  E1219 11:51:41.751820      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 19 11:51:41.776: INFO: Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 12/19/23 11:51:41.777
  E1219 11:51:42.752356      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 19 11:51:42.797: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-6644" for this suite. @ 12/19/23 11:51:42.806
• [3.198 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
test/e2e/scheduling/predicates.go:334
  STEP: Creating a kubernetes client @ 12/19/23 11:51:42.824
  Dec 19 11:51:42.824: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename sched-pred @ 12/19/23 11:51:42.827
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:51:42.868
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:51:42.877
  Dec 19 11:51:42.886: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Dec 19 11:51:42.905: INFO: Waiting for terminating namespaces to be deleted...
  Dec 19 11:51:42.911: INFO: 
  Logging pods the apiserver thinks is on node dah7vaemeeho-1 before test
  Dec 19 11:51:42.932: INFO: coredns-76f75df574-k2zr4 from kube-system started at 2023-12-19 09:34:54 +0000 UTC (1 container statuses recorded)
  Dec 19 11:51:42.933: INFO: 	Container coredns ready: true, restart count 1
  Dec 19 11:51:42.933: INFO: coredns-76f75df574-sc56n from kube-system started at 2023-12-19 09:34:54 +0000 UTC (1 container statuses recorded)
  Dec 19 11:51:42.934: INFO: 	Container coredns ready: true, restart count 1
  Dec 19 11:51:42.934: INFO: kube-addon-manager-dah7vaemeeho-1 from kube-system started at 2023-12-19 09:47:18 +0000 UTC (1 container statuses recorded)
  Dec 19 11:51:42.935: INFO: 	Container kube-addon-manager ready: true, restart count 1
  Dec 19 11:51:42.935: INFO: kube-apiserver-dah7vaemeeho-1 from kube-system started at 2023-12-19 09:47:18 +0000 UTC (1 container statuses recorded)
  Dec 19 11:51:42.936: INFO: 	Container kube-apiserver ready: true, restart count 1
  Dec 19 11:51:42.936: INFO: kube-controller-manager-dah7vaemeeho-1 from kube-system started at 2023-12-19 09:47:18 +0000 UTC (1 container statuses recorded)
  Dec 19 11:51:42.937: INFO: 	Container kube-controller-manager ready: true, restart count 1
  Dec 19 11:51:42.937: INFO: kube-flannel-ds-r2kgn from kube-system started at 2023-12-19 09:36:45 +0000 UTC (1 container statuses recorded)
  Dec 19 11:51:42.938: INFO: 	Container kube-flannel ready: true, restart count 1
  Dec 19 11:51:42.938: INFO: kube-proxy-xscgp from kube-system started at 2023-12-19 09:34:54 +0000 UTC (1 container statuses recorded)
  Dec 19 11:51:42.939: INFO: 	Container kube-proxy ready: true, restart count 1
  Dec 19 11:51:42.939: INFO: kube-scheduler-dah7vaemeeho-1 from kube-system started at 2023-12-19 09:47:18 +0000 UTC (1 container statuses recorded)
  Dec 19 11:51:42.939: INFO: 	Container kube-scheduler ready: true, restart count 1
  Dec 19 11:51:42.940: INFO: sonobuoy-systemd-logs-daemon-set-ec23f534379c4b15-9ftzt from sonobuoy started at 2023-12-19 10:01:09 +0000 UTC (2 container statuses recorded)
  Dec 19 11:51:42.940: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Dec 19 11:51:42.940: INFO: 	Container systemd-logs ready: true, restart count 0
  Dec 19 11:51:42.941: INFO: 
  Logging pods the apiserver thinks is on node dah7vaemeeho-2 before test
  Dec 19 11:51:42.958: INFO: kube-addon-manager-dah7vaemeeho-2 from kube-system started at 2023-12-19 09:47:43 +0000 UTC (1 container statuses recorded)
  Dec 19 11:51:42.958: INFO: 	Container kube-addon-manager ready: true, restart count 1
  Dec 19 11:51:42.959: INFO: kube-apiserver-dah7vaemeeho-2 from kube-system started at 2023-12-19 09:47:43 +0000 UTC (1 container statuses recorded)
  Dec 19 11:51:42.959: INFO: 	Container kube-apiserver ready: true, restart count 1
  Dec 19 11:51:42.960: INFO: kube-controller-manager-dah7vaemeeho-2 from kube-system started at 2023-12-19 09:47:43 +0000 UTC (1 container statuses recorded)
  Dec 19 11:51:42.960: INFO: 	Container kube-controller-manager ready: true, restart count 1
  Dec 19 11:51:42.961: INFO: kube-flannel-ds-rq84x from kube-system started at 2023-12-19 09:36:45 +0000 UTC (1 container statuses recorded)
  Dec 19 11:51:42.961: INFO: 	Container kube-flannel ready: true, restart count 1
  Dec 19 11:51:42.962: INFO: kube-proxy-qr9gj from kube-system started at 2023-12-19 09:35:51 +0000 UTC (1 container statuses recorded)
  Dec 19 11:51:42.963: INFO: 	Container kube-proxy ready: true, restart count 1
  Dec 19 11:51:42.964: INFO: kube-scheduler-dah7vaemeeho-2 from kube-system started at 2023-12-19 09:47:43 +0000 UTC (1 container statuses recorded)
  Dec 19 11:51:42.964: INFO: 	Container kube-scheduler ready: true, restart count 1
  Dec 19 11:51:42.965: INFO: condition-test-xvvz5 from replication-controller-6644 started at 2023-12-19 11:51:40 +0000 UTC (1 container statuses recorded)
  Dec 19 11:51:42.965: INFO: 	Container httpd ready: true, restart count 0
  Dec 19 11:51:42.965: INFO: sonobuoy-systemd-logs-daemon-set-ec23f534379c4b15-n4n5n from sonobuoy started at 2023-12-19 10:01:09 +0000 UTC (2 container statuses recorded)
  Dec 19 11:51:42.966: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Dec 19 11:51:42.966: INFO: 	Container systemd-logs ready: true, restart count 0
  Dec 19 11:51:42.966: INFO: 
  Logging pods the apiserver thinks is on node dah7vaemeeho-3 before test
  Dec 19 11:51:42.982: INFO: kube-flannel-ds-v2m2l from kube-system started at 2023-12-19 10:34:10 +0000 UTC (1 container statuses recorded)
  Dec 19 11:51:42.983: INFO: 	Container kube-flannel ready: true, restart count 0
  Dec 19 11:51:42.984: INFO: kube-proxy-79v5d from kube-system started at 2023-12-19 09:36:16 +0000 UTC (1 container statuses recorded)
  Dec 19 11:51:42.985: INFO: 	Container kube-proxy ready: true, restart count 1
  Dec 19 11:51:42.985: INFO: condition-test-z2njl from replication-controller-6644 started at 2023-12-19 11:51:40 +0000 UTC (1 container statuses recorded)
  Dec 19 11:51:42.985: INFO: 	Container httpd ready: true, restart count 0
  Dec 19 11:51:42.985: INFO: sonobuoy from sonobuoy started at 2023-12-19 10:00:57 +0000 UTC (1 container statuses recorded)
  Dec 19 11:51:42.985: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Dec 19 11:51:42.985: INFO: sonobuoy-e2e-job-f0765e9942714abd from sonobuoy started at 2023-12-19 10:01:09 +0000 UTC (2 container statuses recorded)
  Dec 19 11:51:42.985: INFO: 	Container e2e ready: true, restart count 0
  Dec 19 11:51:42.985: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Dec 19 11:51:42.985: INFO: sonobuoy-systemd-logs-daemon-set-ec23f534379c4b15-xhnpz from sonobuoy started at 2023-12-19 10:01:09 +0000 UTC (2 container statuses recorded)
  Dec 19 11:51:42.985: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Dec 19 11:51:42.985: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node dah7vaemeeho-1 @ 12/19/23 11:51:43.034
  STEP: verifying the node has the label node dah7vaemeeho-2 @ 12/19/23 11:51:43.064
  STEP: verifying the node has the label node dah7vaemeeho-3 @ 12/19/23 11:51:43.094
  Dec 19 11:51:43.142: INFO: Pod coredns-76f75df574-k2zr4 requesting resource cpu=100m on Node dah7vaemeeho-1
  Dec 19 11:51:43.142: INFO: Pod coredns-76f75df574-sc56n requesting resource cpu=100m on Node dah7vaemeeho-1
  Dec 19 11:51:43.142: INFO: Pod kube-addon-manager-dah7vaemeeho-1 requesting resource cpu=5m on Node dah7vaemeeho-1
  Dec 19 11:51:43.142: INFO: Pod kube-addon-manager-dah7vaemeeho-2 requesting resource cpu=5m on Node dah7vaemeeho-2
  Dec 19 11:51:43.142: INFO: Pod kube-apiserver-dah7vaemeeho-1 requesting resource cpu=250m on Node dah7vaemeeho-1
  Dec 19 11:51:43.142: INFO: Pod kube-apiserver-dah7vaemeeho-2 requesting resource cpu=250m on Node dah7vaemeeho-2
  Dec 19 11:51:43.142: INFO: Pod kube-controller-manager-dah7vaemeeho-1 requesting resource cpu=200m on Node dah7vaemeeho-1
  Dec 19 11:51:43.142: INFO: Pod kube-controller-manager-dah7vaemeeho-2 requesting resource cpu=200m on Node dah7vaemeeho-2
  Dec 19 11:51:43.142: INFO: Pod kube-flannel-ds-r2kgn requesting resource cpu=100m on Node dah7vaemeeho-1
  Dec 19 11:51:43.142: INFO: Pod kube-flannel-ds-rq84x requesting resource cpu=100m on Node dah7vaemeeho-2
  Dec 19 11:51:43.142: INFO: Pod kube-flannel-ds-v2m2l requesting resource cpu=100m on Node dah7vaemeeho-3
  Dec 19 11:51:43.142: INFO: Pod kube-proxy-79v5d requesting resource cpu=0m on Node dah7vaemeeho-3
  Dec 19 11:51:43.142: INFO: Pod kube-proxy-qr9gj requesting resource cpu=0m on Node dah7vaemeeho-2
  Dec 19 11:51:43.142: INFO: Pod kube-proxy-xscgp requesting resource cpu=0m on Node dah7vaemeeho-1
  Dec 19 11:51:43.142: INFO: Pod kube-scheduler-dah7vaemeeho-1 requesting resource cpu=100m on Node dah7vaemeeho-1
  Dec 19 11:51:43.142: INFO: Pod kube-scheduler-dah7vaemeeho-2 requesting resource cpu=100m on Node dah7vaemeeho-2
  Dec 19 11:51:43.142: INFO: Pod condition-test-xvvz5 requesting resource cpu=0m on Node dah7vaemeeho-2
  Dec 19 11:51:43.142: INFO: Pod condition-test-z2njl requesting resource cpu=0m on Node dah7vaemeeho-3
  Dec 19 11:51:43.142: INFO: Pod sonobuoy requesting resource cpu=0m on Node dah7vaemeeho-3
  Dec 19 11:51:43.142: INFO: Pod sonobuoy-e2e-job-f0765e9942714abd requesting resource cpu=0m on Node dah7vaemeeho-3
  Dec 19 11:51:43.142: INFO: Pod sonobuoy-systemd-logs-daemon-set-ec23f534379c4b15-9ftzt requesting resource cpu=0m on Node dah7vaemeeho-1
  Dec 19 11:51:43.142: INFO: Pod sonobuoy-systemd-logs-daemon-set-ec23f534379c4b15-n4n5n requesting resource cpu=0m on Node dah7vaemeeho-2
  Dec 19 11:51:43.142: INFO: Pod sonobuoy-systemd-logs-daemon-set-ec23f534379c4b15-xhnpz requesting resource cpu=0m on Node dah7vaemeeho-3
  STEP: Starting Pods to consume most of the cluster CPU. @ 12/19/23 11:51:43.142
  Dec 19 11:51:43.142: INFO: Creating a pod which consumes cpu=521m on Node dah7vaemeeho-1
  Dec 19 11:51:43.162: INFO: Creating a pod which consumes cpu=661m on Node dah7vaemeeho-2
  Dec 19 11:51:43.178: INFO: Creating a pod which consumes cpu=1050m on Node dah7vaemeeho-3
  E1219 11:51:43.752378      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:51:44.753280      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating another pod that requires unavailable amount of CPU. @ 12/19/23 11:51:45.295
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-324c31e8-fce6-4ff4-af17-698085582386.17a239623e15024d], Reason = [Scheduled], Message = [Successfully assigned sched-pred-153/filler-pod-324c31e8-fce6-4ff4-af17-698085582386 to dah7vaemeeho-1] @ 12/19/23 11:51:45.307
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-324c31e8-fce6-4ff4-af17-698085582386.17a239625f19b6c0], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 12/19/23 11:51:45.307
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-324c31e8-fce6-4ff4-af17-698085582386.17a239626e94d7ca], Reason = [Created], Message = [Created container filler-pod-324c31e8-fce6-4ff4-af17-698085582386] @ 12/19/23 11:51:45.307
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-324c31e8-fce6-4ff4-af17-698085582386.17a2396274647a68], Reason = [Started], Message = [Started container filler-pod-324c31e8-fce6-4ff4-af17-698085582386] @ 12/19/23 11:51:45.308
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-66001bc4-2545-402e-9983-7a7f81153512.17a23962420ef339], Reason = [Scheduled], Message = [Successfully assigned sched-pred-153/filler-pod-66001bc4-2545-402e-9983-7a7f81153512 to dah7vaemeeho-3] @ 12/19/23 11:51:45.308
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-66001bc4-2545-402e-9983-7a7f81153512.17a239625f480588], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 12/19/23 11:51:45.308
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-66001bc4-2545-402e-9983-7a7f81153512.17a239626ade510b], Reason = [Created], Message = [Created container filler-pod-66001bc4-2545-402e-9983-7a7f81153512] @ 12/19/23 11:51:45.309
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-66001bc4-2545-402e-9983-7a7f81153512.17a239626ccd2034], Reason = [Started], Message = [Started container filler-pod-66001bc4-2545-402e-9983-7a7f81153512] @ 12/19/23 11:51:45.309
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-db7203f4-ebac-4dea-84eb-6ea98b1e40e5.17a239623f976aed], Reason = [Scheduled], Message = [Successfully assigned sched-pred-153/filler-pod-db7203f4-ebac-4dea-84eb-6ea98b1e40e5 to dah7vaemeeho-2] @ 12/19/23 11:51:45.309
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-db7203f4-ebac-4dea-84eb-6ea98b1e40e5.17a239625aa38df3], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 12/19/23 11:51:45.31
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-db7203f4-ebac-4dea-84eb-6ea98b1e40e5.17a2396264a496e7], Reason = [Created], Message = [Created container filler-pod-db7203f4-ebac-4dea-84eb-6ea98b1e40e5] @ 12/19/23 11:51:45.31
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-db7203f4-ebac-4dea-84eb-6ea98b1e40e5.17a23962673253da], Reason = [Started], Message = [Started container filler-pod-db7203f4-ebac-4dea-84eb-6ea98b1e40e5] @ 12/19/23 11:51:45.31
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.17a23962bc7b9755], Reason = [FailedScheduling], Message = [0/3 nodes are available: 3 Insufficient cpu. preemption: 0/3 nodes are available: 3 No preemption victims found for incoming pod.] @ 12/19/23 11:51:45.397
  E1219 11:51:45.754048      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label node off the node dah7vaemeeho-1 @ 12/19/23 11:51:46.336
  STEP: verifying the node doesn't have the label node @ 12/19/23 11:51:46.371
  STEP: removing the label node off the node dah7vaemeeho-2 @ 12/19/23 11:51:46.379
  STEP: verifying the node doesn't have the label node @ 12/19/23 11:51:46.413
  STEP: removing the label node off the node dah7vaemeeho-3 @ 12/19/23 11:51:46.43
  STEP: verifying the node doesn't have the label node @ 12/19/23 11:51:46.481
  Dec 19 11:51:46.493: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-153" for this suite. @ 12/19/23 11:51:46.505
• [3.694 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
test/e2e/apimachinery/garbage_collector.go:818
  STEP: Creating a kubernetes client @ 12/19/23 11:51:46.522
  Dec 19 11:51:46.522: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename gc @ 12/19/23 11:51:46.527
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:51:46.565
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:51:46.572
  Dec 19 11:51:46.690: INFO: pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"7e287245-d5a1-464a-b95f-0b3012056447", Controller:(*bool)(0xc003936916), BlockOwnerDeletion:(*bool)(0xc003936917)}}
  Dec 19 11:51:46.732: INFO: pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"575bedb2-5770-4c61-a530-e4c0ad56339f", Controller:(*bool)(0xc002c3b646), BlockOwnerDeletion:(*bool)(0xc002c3b647)}}
  E1219 11:51:46.754155      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 19 11:51:46.766: INFO: pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"02078fdf-c811-4f27-855b-0b50c30aed78", Controller:(*bool)(0xc003936bd6), BlockOwnerDeletion:(*bool)(0xc003936bd7)}}
  E1219 11:51:47.754534      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:51:48.762598      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:51:49.759312      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:51:50.759654      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:51:51.759801      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 19 11:51:51.808: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1301" for this suite. @ 12/19/23 11:51:51.826
• [5.358 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
test/e2e/common/node/security_context.go:530
  STEP: Creating a kubernetes client @ 12/19/23 11:51:51.881
  Dec 19 11:51:51.881: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename security-context-test @ 12/19/23 11:51:51.887
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:51:51.943
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:51:51.953
  E1219 11:51:52.759916      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:51:53.760324      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:51:54.760564      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:51:55.760801      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Dec 19 11:51:56.047: INFO: Got logs for pod "busybox-privileged-false-5dfaf24b-2808-47d0-8813-a455bd805932": "ip: RTNETLINK answers: Operation not permitted\n"
  Dec 19 11:51:56.047: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-4871" for this suite. @ 12/19/23 11:51:56.059
• [4.194 seconds]
------------------------------
SSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 12/19/23 11:51:56.077
  Dec 19 11:51:56.077: INFO: >>> kubeConfig: /tmp/kubeconfig-518538418
  STEP: Building a namespace api object, basename cronjob @ 12/19/23 11:51:56.081
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/19/23 11:51:56.111
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/19/23 11:51:56.117
  STEP: Creating a ForbidConcurrent cronjob @ 12/19/23 11:51:56.122
  STEP: Ensuring a job is scheduled @ 12/19/23 11:51:56.134
  E1219 11:51:56.761105      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:51:57.761125      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:51:58.762097      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:51:59.762510      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:52:00.763537      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:52:01.764078      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 12/19/23 11:52:02.15
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 12/19/23 11:52:02.158
  STEP: Ensuring no more jobs are scheduled @ 12/19/23 11:52:02.179
  E1219 11:52:02.766978      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:52:03.765139      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:52:04.765128      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:52:05.765901      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:52:06.766417      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:52:07.767214      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:52:08.767498      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:52:09.767884      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:52:10.768271      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:52:11.768295      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:52:12.769404      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:52:13.770389      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:52:14.770936      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:52:15.771681      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:52:16.771773      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:52:17.772017      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:52:18.773742      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:52:19.773555      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:52:20.773762      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:52:21.774345      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:52:22.774841      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:52:23.775598      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:52:24.776194      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:52:25.776396      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:52:26.776703      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:52:27.776905      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:52:28.777229      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:52:29.777868      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:52:30.778757      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:52:31.779346      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:52:32.779973      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:52:33.780861      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:52:34.781060      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:52:35.781858      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:52:36.781928      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:52:37.782870      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:52:38.783062      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:52:39.783175      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:52:40.784144      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:52:41.785243      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:52:42.785803      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:52:43.785925      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:52:44.786135      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:52:45.787095      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:52:46.787960      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:52:47.788644      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:52:48.789646      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:52:49.789661      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:52:50.789854      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:52:51.790783      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:52:52.791522      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:52:53.791722      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:52:54.792461      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:52:55.793578      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:52:56.793687      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:52:57.793884      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:52:58.793971      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:52:59.794170      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:53:00.794396      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:53:01.794627      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:53:02.794779      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:53:03.794951      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:53:04.795156      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:53:05.795512      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:53:06.796146      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:53:07.804012      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:53:08.800070      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:53:09.800035      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:53:10.800821      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:53:11.801167      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:53:12.810978      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:53:13.808264      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:53:14.809120      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:53:15.809480      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:53:16.810299      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:53:17.810312      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:53:18.811237      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:53:19.811637      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:53:20.812052      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:53:21.813574      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:53:22.814785      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:53:23.815197      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:53:24.815710      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:53:25.816349      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:53:26.816925      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:53:27.817149      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:53:28.817403      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:53:29.817783      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:53:30.817879      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:53:31.818923      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:53:32.818996      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:53:33.819483      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:53:34.820552      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:53:35.820748      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:53:36.823300      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:53:37.822216      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:53:38.822712      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:53:39.823213      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:53:40.823318      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:53:41.823426      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:53:42.824174      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:53:43.824735      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:53:44.825294      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:53:45.825551      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:53:46.825722      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:53:47.826112      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:53:48.826392      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:53:49.826591      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:53:50.826793      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:53:51.827371      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:53:52.828078      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:53:53.828614      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:53:54.829643      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:53:55.829768      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:53:56.830496      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:53:57.831362      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:53:58.831949      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:53:59.832030      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:54:00.832205      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:54:01.832383      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:54:02.833308      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:54:03.833871      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:54:04.833978      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:54:05.834778      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:54:06.834803      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:54:07.835764      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:54:08.835955      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:54:09.836815      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:54:10.837035      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:54:11.838048      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:54:12.838953      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:54:13.839470      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:54:14.840375      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:54:15.840552      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:54:16.840602      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:54:17.841052      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:54:18.841370      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:54:19.841586      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:54:20.843122      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:54:21.843755      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:54:22.844805      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:54:23.845236      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:54:24.845934      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:54:25.846352      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:54:26.846676      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:54:27.847034      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:54:28.847906      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:54:29.848204      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:54:30.848419      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:54:31.848981      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:54:32.849816      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:54:33.851409      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:54:34.851223      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:54:35.851874      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:54:36.852305      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:54:37.853506      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:54:38.853428      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:54:39.853841      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:54:40.853913      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:54:41.854860      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:54:42.855041      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:54:43.855564      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:54:44.855487      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:54:45.855585      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:54:46.856101      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:54:47.856168      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:54:48.856707      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:54:49.856645      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:54:50.857722      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:54:51.865665      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:54:52.858669      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:54:53.858915      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:54:54.860119      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:54:55.860906      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:54:56.861221      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:54:57.861691      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:54:58.861942      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:54:59.862672      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:55:00.863825      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:55:01.864713      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:55:02.865081      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:55:03.865519      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:55:04.865747      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:55:05.866701      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:55:06.867868      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:55:07.868106      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:55:08.868299      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:55:09.868584      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:55:10.868651      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:55:11.868729      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:55:12.868910      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:55:13.869416      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:55:14.869602      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:55:15.869773      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:55:16.870716      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:55:17.870978      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:55:18.871864      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:55:19.872133      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:55:20.872358      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:55:21.872501      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:55:22.872829      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:55:23.873486      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:55:24.874453      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:55:25.875195      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:55:26.876232      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:55:27.876594      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:55:28.876868      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:55:29.877509      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:55:30.878595      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:55:31.879768      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:55:32.880143      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:55:33.880820      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:55:34.881209      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:55:35.881760      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:55:36.882306      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:55:37.882536      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:55:38.883516      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:55:39.883986      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:55:40.884347      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:55:41.885424      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:55:42.885776      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:55:43.886583      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:55:44.886728      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:55:45.887197      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:55:46.888193      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:55:47.888875      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:55:48.888928      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:55:49.889799      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:55:50.889901      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:55:51.890988      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:55:52.891134      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:55:53.891451      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:55:54.892371      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:55:55.892946      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:55:56.893572      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:55:57.894160      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:55:58.894548      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:55:59.895345      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:56:00.895624      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:56:01.895821      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:56:02.895933      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:56:03.896451      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:56:04.896761      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:56:05.896942      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:56:06.898000      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:56:07.898271      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:56:08.899301      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:56:09.899540      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:56:10.899728      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:56:11.899973      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:56:12.900357      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:56:13.900421      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:56:14.901417      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:56:15.901577      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:56:16.902692      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:56:17.903068      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:56:18.903333      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:56:19.904043      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:56:20.904187      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:56:21.904623      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:56:22.904634      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:56:23.904827      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:56:24.905131      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:56:25.905875      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:56:26.905826      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:56:27.906019      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:56:28.907037      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:56:29.907239      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:56:30.908266      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:56:31.908853      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:56:32.909061      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:56:33.909265      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:56:34.909612      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:56:35.910763      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:56:36.910568      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:56:37.911460      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:56:38.911329      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:56:39.911604      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:56:40.912647      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:56:41.912703      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:56:42.913791      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:56:43.913738      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:56:44.914786      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:56:45.915000      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:56:46.915665      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:56:47.916409      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:56:48.916576      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:56:49.916769      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:56:50.917450      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:56:51.917812      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:56:52.918647      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:56:53.919106      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:56:54.919122      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:56:55.919341      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:56:56.919681      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:56:57.919822      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:56:58.920865      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:56:59.921101      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:57:00.921567      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1219 11:57:01.921826      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing cronjob @ 12/19/23 11:57:02.192
  Dec 19 11:57:02.212: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-9656" for this suite. @ 12/19/23 11:57:02.223
• [306.176 seconds]
------------------------------
SSSSSS
------------------------------
[SynchronizedAfterSuite] 
test/e2e/e2e.go:88
  Dec 19 11:57:02.255: INFO: Running AfterSuite actions on node 1
  Dec 19 11:57:02.255: INFO: Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
test/e2e/e2e_test.go:161
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
test/e2e/framework/test_context.go:621
[ReportAfterSuite] PASSED [0.177 seconds]
------------------------------

Ran 388 of 7407 Specs in 6895.584 seconds
SUCCESS! -- 388 Passed | 0 Failed | 0 Pending | 7019 Skipped
PASS

Ginkgo ran 1 suite in 1h54m58.189531509s
Test Suite Passed
