  I0420 14:12:49.577097      13 e2e.go:117] Starting e2e run "52298dc7-4cd7-47ec-bf38-306dda76a0f0" on Ginkgo node 1
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1713622367 - will randomize all specs

Will run 388 of 7407 specs
------------------------------
[ReportBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e_test.go:157
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:77
  Apr 20 14:12:50.063: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  Apr 20 14:12:50.072: INFO: Waiting up to 30m0s for all (but 0) nodes to be schedulable
  Apr 20 14:12:52.198: INFO: Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  Apr 20 14:12:52.210: INFO: 3 / 3 pods ready in namespace 'kube-system' in daemonset 'kube-flannel-ds' (0 seconds elapsed)
  Apr 20 14:12:52.210: INFO: 3 / 3 pods ready in namespace 'kube-system' in daemonset 'kube-proxy' (0 seconds elapsed)
  Apr 20 14:12:52.210: INFO: e2e test version: v1.29.4
  Apr 20 14:12:52.212: INFO: kube-apiserver version: v1.29.4
  Apr 20 14:12:52.212: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  Apr 20 14:12:52.226: INFO: Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [2.163 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:245
  STEP: Creating a kubernetes client @ 04/20/24 14:12:52.706
  Apr 20 14:12:52.706: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename namespaces @ 04/20/24 14:12:52.711
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:12:52.742
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:12:52.746
  STEP: Creating a test namespace @ 04/20/24 14:12:52.752
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:12:52.772
  STEP: Creating a pod in the namespace @ 04/20/24 14:12:52.777
  STEP: Waiting for the pod to have running status @ 04/20/24 14:12:52.802
  STEP: Deleting the namespace @ 04/20/24 14:12:54.818
  STEP: Waiting for the namespace to be removed. @ 04/20/24 14:12:54.833
  STEP: Recreating the namespace @ 04/20/24 14:13:05.843
  STEP: Verifying there are no pods in the namespace @ 04/20/24 14:13:05.879
  Apr 20 14:13:05.887: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-882" for this suite. @ 04/20/24 14:13:05.894
  STEP: Destroying namespace "nsdeletetest-4755" for this suite. @ 04/20/24 14:13:05.906
  Apr 20 14:13:05.911: INFO: Namespace nsdeletetest-4755 was already deleted
  STEP: Destroying namespace "nsdeletetest-7391" for this suite. @ 04/20/24 14:13:05.911
• [13.221 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:134
  STEP: Creating a kubernetes client @ 04/20/24 14:13:05.928
  Apr 20 14:13:05.928: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename container-probe @ 04/20/24 14:13:05.93
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:13:05.961
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:13:05.967
  STEP: Creating pod busybox-9ee4d68a-79dc-425a-964b-345b7525120c in namespace container-probe-6857 @ 04/20/24 14:13:05.972
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/20/24 14:13:10.024
  Apr 20 14:13:10.031: INFO: Initial restart count of pod busybox-9ee4d68a-79dc-425a-964b-345b7525120c is 0
  Apr 20 14:13:10.037: INFO: Get pod busybox-9ee4d68a-79dc-425a-964b-345b7525120c in namespace container-probe-6857
  Apr 20 14:13:12.046: INFO: Get pod busybox-9ee4d68a-79dc-425a-964b-345b7525120c in namespace container-probe-6857
  Apr 20 14:13:14.054: INFO: Get pod busybox-9ee4d68a-79dc-425a-964b-345b7525120c in namespace container-probe-6857
  Apr 20 14:13:16.062: INFO: Get pod busybox-9ee4d68a-79dc-425a-964b-345b7525120c in namespace container-probe-6857
  Apr 20 14:13:18.072: INFO: Get pod busybox-9ee4d68a-79dc-425a-964b-345b7525120c in namespace container-probe-6857
  Apr 20 14:13:20.083: INFO: Get pod busybox-9ee4d68a-79dc-425a-964b-345b7525120c in namespace container-probe-6857
  Apr 20 14:13:22.098: INFO: Get pod busybox-9ee4d68a-79dc-425a-964b-345b7525120c in namespace container-probe-6857
  Apr 20 14:13:24.106: INFO: Get pod busybox-9ee4d68a-79dc-425a-964b-345b7525120c in namespace container-probe-6857
  Apr 20 14:13:26.115: INFO: Get pod busybox-9ee4d68a-79dc-425a-964b-345b7525120c in namespace container-probe-6857
  Apr 20 14:13:28.123: INFO: Get pod busybox-9ee4d68a-79dc-425a-964b-345b7525120c in namespace container-probe-6857
  Apr 20 14:13:30.131: INFO: Get pod busybox-9ee4d68a-79dc-425a-964b-345b7525120c in namespace container-probe-6857
  Apr 20 14:13:32.141: INFO: Get pod busybox-9ee4d68a-79dc-425a-964b-345b7525120c in namespace container-probe-6857
  Apr 20 14:13:34.149: INFO: Get pod busybox-9ee4d68a-79dc-425a-964b-345b7525120c in namespace container-probe-6857
  Apr 20 14:13:36.155: INFO: Get pod busybox-9ee4d68a-79dc-425a-964b-345b7525120c in namespace container-probe-6857
  Apr 20 14:13:38.164: INFO: Get pod busybox-9ee4d68a-79dc-425a-964b-345b7525120c in namespace container-probe-6857
  Apr 20 14:13:40.174: INFO: Get pod busybox-9ee4d68a-79dc-425a-964b-345b7525120c in namespace container-probe-6857
  Apr 20 14:13:42.183: INFO: Get pod busybox-9ee4d68a-79dc-425a-964b-345b7525120c in namespace container-probe-6857
  Apr 20 14:13:44.191: INFO: Get pod busybox-9ee4d68a-79dc-425a-964b-345b7525120c in namespace container-probe-6857
  Apr 20 14:13:46.200: INFO: Get pod busybox-9ee4d68a-79dc-425a-964b-345b7525120c in namespace container-probe-6857
  Apr 20 14:13:48.210: INFO: Get pod busybox-9ee4d68a-79dc-425a-964b-345b7525120c in namespace container-probe-6857
  Apr 20 14:13:50.218: INFO: Get pod busybox-9ee4d68a-79dc-425a-964b-345b7525120c in namespace container-probe-6857
  Apr 20 14:13:52.227: INFO: Get pod busybox-9ee4d68a-79dc-425a-964b-345b7525120c in namespace container-probe-6857
  Apr 20 14:13:54.236: INFO: Get pod busybox-9ee4d68a-79dc-425a-964b-345b7525120c in namespace container-probe-6857
  Apr 20 14:13:56.245: INFO: Get pod busybox-9ee4d68a-79dc-425a-964b-345b7525120c in namespace container-probe-6857
  Apr 20 14:13:58.252: INFO: Get pod busybox-9ee4d68a-79dc-425a-964b-345b7525120c in namespace container-probe-6857
  Apr 20 14:13:58.252: INFO: Restart count of pod container-probe-6857/busybox-9ee4d68a-79dc-425a-964b-345b7525120c is now 1 (48.220754841s elapsed)
  STEP: deleting the pod @ 04/20/24 14:13:58.252
  Apr 20 14:13:58.288: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6857" for this suite. @ 04/20/24 14:13:58.306
• [52.397 seconds]
------------------------------
SSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:155
  STEP: Creating a kubernetes client @ 04/20/24 14:13:58.326
  Apr 20 14:13:58.326: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename replicaset @ 04/20/24 14:13:58.332
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:13:58.375
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:13:58.382
  Apr 20 14:13:58.424: INFO: Pod name sample-pod: Found 0 pods out of 1
  Apr 20 14:14:03.442: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 04/20/24 14:14:03.442
  STEP: Scaling up "test-rs" replicaset @ 04/20/24 14:14:09.52
  Apr 20 14:14:09.543: INFO: Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 04/20/24 14:14:09.543
  Apr 20 14:14:09.572: INFO: observed ReplicaSet test-rs in namespace replicaset-5760 with ReadyReplicas 1, AvailableReplicas 1
  Apr 20 14:14:09.602: INFO: observed ReplicaSet test-rs in namespace replicaset-5760 with ReadyReplicas 1, AvailableReplicas 1
  Apr 20 14:14:09.675: INFO: observed ReplicaSet test-rs in namespace replicaset-5760 with ReadyReplicas 1, AvailableReplicas 1
  Apr 20 14:14:09.709: INFO: observed ReplicaSet test-rs in namespace replicaset-5760 with ReadyReplicas 1, AvailableReplicas 1
  Apr 20 14:14:24.613: INFO: observed ReplicaSet test-rs in namespace replicaset-5760 with ReadyReplicas 2, AvailableReplicas 2
  Apr 20 14:14:29.547: INFO: observed Replicaset test-rs in namespace replicaset-5760 with ReadyReplicas 3 found true
  Apr 20 14:14:29.548: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-5760" for this suite. @ 04/20/24 14:14:29.559
• [31.245 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:627
  STEP: Creating a kubernetes client @ 04/20/24 14:14:29.576
  Apr 20 14:14:29.576: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename job @ 04/20/24 14:14:29.581
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:14:29.604
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:14:29.609
  STEP: Creating a job @ 04/20/24 14:14:29.613
  STEP: Ensuring active pods == parallelism @ 04/20/24 14:14:29.622
  STEP: delete a job @ 04/20/24 14:14:31.629
  STEP: deleting Job.batch foo in namespace job-5182, will wait for the garbage collector to delete the pods @ 04/20/24 14:14:31.629
  Apr 20 14:14:31.697: INFO: Deleting Job.batch foo took: 11.451871ms
  Apr 20 14:14:31.797: INFO: Terminating Job.batch foo pods took: 100.623787ms
  STEP: Ensuring job was deleted @ 04/20/24 14:14:34.298
  Apr 20 14:14:34.306: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5182" for this suite. @ 04/20/24 14:14:34.313
• [4.748 seconds]
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:350
  STEP: Creating a kubernetes client @ 04/20/24 14:14:34.324
  Apr 20 14:14:34.325: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename field-validation @ 04/20/24 14:14:34.328
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:14:34.347
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:14:34.351
  Apr 20 14:14:34.356: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  W0420 14:14:34.359883      13 field_validation.go:423] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc00031a700 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  W0420 14:14:37.158650      13 warnings.go:70] unknown field "alpha"
  W0420 14:14:37.158809      13 warnings.go:70] unknown field "beta"
  W0420 14:14:37.158823      13 warnings.go:70] unknown field "delta"
  W0420 14:14:37.158833      13 warnings.go:70] unknown field "epsilon"
  W0420 14:14:37.158852      13 warnings.go:70] unknown field "gamma"
  Apr 20 14:14:37.753: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-7760" for this suite. @ 04/20/24 14:14:37.761
• [3.448 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 04/20/24 14:14:37.774
  Apr 20 14:14:37.774: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename projected @ 04/20/24 14:14:37.777
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:14:37.796
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:14:37.801
  STEP: Creating secret with name projected-secret-test-ed00c80d-078e-4235-bafb-ec2cf0d397ff @ 04/20/24 14:14:37.806
  STEP: Creating a pod to test consume secrets @ 04/20/24 14:14:37.813
  STEP: Saw pod success @ 04/20/24 14:14:41.85
  Apr 20 14:14:41.858: INFO: Trying to get logs from node nok4chie7ate-3 pod pod-projected-secrets-1a2aa2a6-96c7-41be-a111-2071017558cb container secret-volume-test: <nil>
  STEP: delete the pod @ 04/20/24 14:14:41.903
  Apr 20 14:14:41.932: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6028" for this suite. @ 04/20/24 14:14:41.939
• [4.181 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:285
  STEP: Creating a kubernetes client @ 04/20/24 14:14:41.959
  Apr 20 14:14:41.959: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename webhook @ 04/20/24 14:14:41.965
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:14:41.997
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:14:42.008
  STEP: Setting up server cert @ 04/20/24 14:14:42.08
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/20/24 14:14:42.679
  STEP: Deploying the webhook pod @ 04/20/24 14:14:42.7
  STEP: Wait for the deployment to be ready @ 04/20/24 14:14:42.722
  Apr 20 14:14:42.741: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 04/20/24 14:14:44.765
  STEP: Verifying the service has paired with the endpoint @ 04/20/24 14:14:44.793
  Apr 20 14:14:45.794: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Apr 20 14:14:45.806: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-958-crds.webhook.example.com via the AdmissionRegistration API @ 04/20/24 14:14:46.337
  STEP: Creating a custom resource that should be mutated by the webhook @ 04/20/24 14:14:46.404
  Apr 20 14:14:49.194: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-426" for this suite. @ 04/20/24 14:14:49.206
  STEP: Destroying namespace "webhook-markers-8101" for this suite. @ 04/20/24 14:14:49.221
• [7.276 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1698
  STEP: Creating a kubernetes client @ 04/20/24 14:14:49.235
  Apr 20 14:14:49.235: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename kubectl @ 04/20/24 14:14:49.239
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:14:49.27
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:14:49.278
  STEP: creating Agnhost RC @ 04/20/24 14:14:49.285
  Apr 20 14:14:49.286: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-2330 create -f -'
  Apr 20 14:14:49.827: INFO: stderr: ""
  Apr 20 14:14:49.827: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 04/20/24 14:14:49.827
  Apr 20 14:14:50.836: INFO: Selector matched 1 pods for map[app:agnhost]
  Apr 20 14:14:50.836: INFO: Found 0 / 1
  Apr 20 14:14:51.850: INFO: Selector matched 1 pods for map[app:agnhost]
  Apr 20 14:14:51.850: INFO: Found 1 / 1
  Apr 20 14:14:51.850: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 04/20/24 14:14:51.85
  Apr 20 14:14:51.864: INFO: Selector matched 1 pods for map[app:agnhost]
  Apr 20 14:14:51.864: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Apr 20 14:14:51.865: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-2330 patch pod agnhost-primary-l4tgs -p {"metadata":{"annotations":{"x":"y"}}}'
  Apr 20 14:14:52.029: INFO: stderr: ""
  Apr 20 14:14:52.029: INFO: stdout: "pod/agnhost-primary-l4tgs patched\n"
  STEP: checking annotations @ 04/20/24 14:14:52.029
  Apr 20 14:14:52.036: INFO: Selector matched 1 pods for map[app:agnhost]
  Apr 20 14:14:52.036: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Apr 20 14:14:52.036: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2330" for this suite. @ 04/20/24 14:14:52.042
• [2.825 seconds]
------------------------------
SSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:62
  STEP: Creating a kubernetes client @ 04/20/24 14:14:52.06
  Apr 20 14:14:52.060: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename limitrange @ 04/20/24 14:14:52.062
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:14:52.089
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:14:52.094
  STEP: Creating a LimitRange @ 04/20/24 14:14:52.099
  STEP: Setting up watch @ 04/20/24 14:14:52.099
  STEP: Submitting a LimitRange @ 04/20/24 14:14:52.205
  STEP: Verifying LimitRange creation was observed @ 04/20/24 14:14:52.218
  STEP: Fetching the LimitRange to ensure it has proper values @ 04/20/24 14:14:52.218
  Apr 20 14:14:52.224: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  Apr 20 14:14:52.224: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 04/20/24 14:14:52.224
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 04/20/24 14:14:52.235
  Apr 20 14:14:52.245: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  Apr 20 14:14:52.245: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 04/20/24 14:14:52.245
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 04/20/24 14:14:52.257
  Apr 20 14:14:52.266: INFO: Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  Apr 20 14:14:52.266: INFO: Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 04/20/24 14:14:52.267
  STEP: Failing to create a Pod with more than max resources @ 04/20/24 14:14:52.271
  STEP: Updating a LimitRange @ 04/20/24 14:14:52.275
  STEP: Verifying LimitRange updating is effective @ 04/20/24 14:14:52.289
  STEP: Creating a Pod with less than former min resources @ 04/20/24 14:14:54.3
  STEP: Failing to create a Pod with more than max resources @ 04/20/24 14:14:54.316
  STEP: Deleting a LimitRange @ 04/20/24 14:14:54.329
  STEP: Verifying the LimitRange was deleted @ 04/20/24 14:14:54.366
  Apr 20 14:14:59.379: INFO: limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 04/20/24 14:14:59.379
  Apr 20 14:14:59.405: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-2563" for this suite. @ 04/20/24 14:14:59.417
• [7.376 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:221
  STEP: Creating a kubernetes client @ 04/20/24 14:14:59.441
  Apr 20 14:14:59.442: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename webhook @ 04/20/24 14:14:59.449
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:14:59.477
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:14:59.483
  STEP: Setting up server cert @ 04/20/24 14:14:59.528
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/20/24 14:15:00.327
  STEP: Deploying the webhook pod @ 04/20/24 14:15:00.341
  STEP: Wait for the deployment to be ready @ 04/20/24 14:15:00.375
  Apr 20 14:15:00.392: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/20/24 14:15:02.427
  STEP: Verifying the service has paired with the endpoint @ 04/20/24 14:15:02.455
  Apr 20 14:15:03.455: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Apr 20 14:15:03.475: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 04/20/24 14:15:04.012
  STEP: Creating a custom resource that should be denied by the webhook @ 04/20/24 14:15:04.061
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 04/20/24 14:15:06.218
  STEP: Updating the custom resource with disallowed data should be denied @ 04/20/24 14:15:06.24
  STEP: Deleting the custom resource should be denied @ 04/20/24 14:15:06.265
  STEP: Remove the offending key and value from the custom resource data @ 04/20/24 14:15:06.286
  STEP: Deleting the updated custom resource should be successful @ 04/20/24 14:15:06.316
  Apr 20 14:15:07.025: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4615" for this suite. @ 04/20/24 14:15:07.036
  STEP: Destroying namespace "webhook-markers-2486" for this suite. @ 04/20/24 14:15:07.05
• [7.621 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:58
  STEP: Creating a kubernetes client @ 04/20/24 14:15:07.062
  Apr 20 14:15:07.062: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename events @ 04/20/24 14:15:07.065
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:15:07.096
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:15:07.108
  STEP: creating a test event @ 04/20/24 14:15:07.113
  STEP: listing all events in all namespaces @ 04/20/24 14:15:07.12
  STEP: patching the test event @ 04/20/24 14:15:07.175
  STEP: fetching the test event @ 04/20/24 14:15:07.188
  STEP: updating the test event @ 04/20/24 14:15:07.195
  STEP: getting the test event @ 04/20/24 14:15:07.214
  STEP: deleting the test event @ 04/20/24 14:15:07.222
  STEP: listing all events in all namespaces @ 04/20/24 14:15:07.237
  Apr 20 14:15:07.302: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-152" for this suite. @ 04/20/24 14:15:07.315
• [0.267 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:125
  STEP: Creating a kubernetes client @ 04/20/24 14:15:07.329
  Apr 20 14:15:07.330: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename pod-network-test @ 04/20/24 14:15:07.333
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:15:07.372
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:15:07.378
  STEP: Performing setup for networking test in namespace pod-network-test-3737 @ 04/20/24 14:15:07.382
  STEP: creating a selector @ 04/20/24 14:15:07.382
  STEP: Creating the service pods in kubernetes @ 04/20/24 14:15:07.382
  Apr 20 14:15:07.383: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 04/20/24 14:15:29.676
  Apr 20 14:15:31.769: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Apr 20 14:15:31.769: INFO: Going to poll 10.233.64.41 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Apr 20 14:15:31.777: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.233.64.41 8081 | grep -v '^\s*$'] Namespace:pod-network-test-3737 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 20 14:15:31.777: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  Apr 20 14:15:31.781: INFO: ExecWithOptions: Clientset creation
  Apr 20 14:15:31.781: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-3737/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.233.64.41+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Apr 20 14:15:33.001: INFO: Found all 1 expected endpoints: [netserver-0]
  Apr 20 14:15:33.001: INFO: Going to poll 10.233.65.35 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Apr 20 14:15:33.011: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.233.65.35 8081 | grep -v '^\s*$'] Namespace:pod-network-test-3737 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 20 14:15:33.011: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  Apr 20 14:15:33.014: INFO: ExecWithOptions: Clientset creation
  Apr 20 14:15:33.014: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-3737/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.233.65.35+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Apr 20 14:15:34.168: INFO: Found all 1 expected endpoints: [netserver-1]
  Apr 20 14:15:34.168: INFO: Going to poll 10.233.66.117 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Apr 20 14:15:34.179: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.233.66.117 8081 | grep -v '^\s*$'] Namespace:pod-network-test-3737 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 20 14:15:34.180: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  Apr 20 14:15:34.190: INFO: ExecWithOptions: Clientset creation
  Apr 20 14:15:34.190: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-3737/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.233.66.117+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Apr 20 14:15:35.322: INFO: Found all 1 expected endpoints: [netserver-2]
  Apr 20 14:15:35.323: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-3737" for this suite. @ 04/20/24 14:15:35.336
• [28.018 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:190
  STEP: Creating a kubernetes client @ 04/20/24 14:15:35.348
  Apr 20 14:15:35.348: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename emptydir @ 04/20/24 14:15:35.354
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:15:35.385
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:15:35.39
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 04/20/24 14:15:35.395
  STEP: Saw pod success @ 04/20/24 14:15:39.45
  Apr 20 14:15:39.460: INFO: Trying to get logs from node nok4chie7ate-3 pod pod-bda277ae-a9ab-40fc-a1d9-f69844bc1201 container test-container: <nil>
  STEP: delete the pod @ 04/20/24 14:15:39.483
  Apr 20 14:15:39.526: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9740" for this suite. @ 04/20/24 14:15:39.538
• [4.207 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2177
  STEP: Creating a kubernetes client @ 04/20/24 14:15:39.563
  Apr 20 14:15:39.563: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename services @ 04/20/24 14:15:39.568
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:15:39.61
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:15:39.616
  STEP: creating service in namespace services-5874 @ 04/20/24 14:15:39.622
  STEP: creating service affinity-clusterip in namespace services-5874 @ 04/20/24 14:15:39.623
  STEP: creating replication controller affinity-clusterip in namespace services-5874 @ 04/20/24 14:15:39.65
  I0420 14:15:39.665139      13 runners.go:197] Created replication controller with name: affinity-clusterip, namespace: services-5874, replica count: 3
  I0420 14:15:42.717723      13 runners.go:197] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Apr 20 14:15:42.745: INFO: Creating new exec pod
  Apr 20 14:15:45.803: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=services-5874 exec execpod-affinitykzj74 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  Apr 20 14:15:46.184: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
  Apr 20 14:15:46.184: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 20 14:15:46.185: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=services-5874 exec execpod-affinitykzj74 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.54.38 80'
  Apr 20 14:15:46.471: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.54.38 80\nConnection to 10.233.54.38 80 port [tcp/http] succeeded!\n"
  Apr 20 14:15:46.471: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 20 14:15:46.471: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=services-5874 exec execpod-affinitykzj74 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.233.54.38:80/ ; done'
  Apr 20 14:15:47.181: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.54.38:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.54.38:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.54.38:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.54.38:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.54.38:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.54.38:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.54.38:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.54.38:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.54.38:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.54.38:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.54.38:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.54.38:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.54.38:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.54.38:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.54.38:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.54.38:80/\n"
  Apr 20 14:15:47.181: INFO: stdout: "\naffinity-clusterip-w7xgf\naffinity-clusterip-w7xgf\naffinity-clusterip-w7xgf\naffinity-clusterip-w7xgf\naffinity-clusterip-w7xgf\naffinity-clusterip-w7xgf\naffinity-clusterip-w7xgf\naffinity-clusterip-w7xgf\naffinity-clusterip-w7xgf\naffinity-clusterip-w7xgf\naffinity-clusterip-w7xgf\naffinity-clusterip-w7xgf\naffinity-clusterip-w7xgf\naffinity-clusterip-w7xgf\naffinity-clusterip-w7xgf\naffinity-clusterip-w7xgf"
  Apr 20 14:15:47.181: INFO: Received response from host: affinity-clusterip-w7xgf
  Apr 20 14:15:47.181: INFO: Received response from host: affinity-clusterip-w7xgf
  Apr 20 14:15:47.181: INFO: Received response from host: affinity-clusterip-w7xgf
  Apr 20 14:15:47.181: INFO: Received response from host: affinity-clusterip-w7xgf
  Apr 20 14:15:47.181: INFO: Received response from host: affinity-clusterip-w7xgf
  Apr 20 14:15:47.181: INFO: Received response from host: affinity-clusterip-w7xgf
  Apr 20 14:15:47.181: INFO: Received response from host: affinity-clusterip-w7xgf
  Apr 20 14:15:47.181: INFO: Received response from host: affinity-clusterip-w7xgf
  Apr 20 14:15:47.181: INFO: Received response from host: affinity-clusterip-w7xgf
  Apr 20 14:15:47.181: INFO: Received response from host: affinity-clusterip-w7xgf
  Apr 20 14:15:47.181: INFO: Received response from host: affinity-clusterip-w7xgf
  Apr 20 14:15:47.181: INFO: Received response from host: affinity-clusterip-w7xgf
  Apr 20 14:15:47.181: INFO: Received response from host: affinity-clusterip-w7xgf
  Apr 20 14:15:47.181: INFO: Received response from host: affinity-clusterip-w7xgf
  Apr 20 14:15:47.181: INFO: Received response from host: affinity-clusterip-w7xgf
  Apr 20 14:15:47.181: INFO: Received response from host: affinity-clusterip-w7xgf
  Apr 20 14:15:47.183: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-5874, will wait for the garbage collector to delete the pods @ 04/20/24 14:15:47.204
  Apr 20 14:15:47.285: INFO: Deleting ReplicationController affinity-clusterip took: 13.793027ms
  Apr 20 14:15:47.386: INFO: Terminating ReplicationController affinity-clusterip pods took: 101.254133ms
  Apr 20 14:15:50.240: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5874" for this suite. @ 04/20/24 14:15:50.25
• [10.699 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 04/20/24 14:15:50.268
  Apr 20 14:15:50.268: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename cronjob @ 04/20/24 14:15:50.276
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:15:50.31
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:15:50.317
  STEP: Creating a cronjob @ 04/20/24 14:15:50.324
  STEP: Ensuring more than one job is running at a time @ 04/20/24 14:15:50.337
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 04/20/24 14:17:00.347
  STEP: Removing cronjob @ 04/20/24 14:17:00.357
  Apr 20 14:17:00.380: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-9823" for this suite. @ 04/20/24 14:17:00.397
• [70.177 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:168
  STEP: Creating a kubernetes client @ 04/20/24 14:17:00.446
  Apr 20 14:17:00.446: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename downward-api @ 04/20/24 14:17:00.457
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:17:00.581
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:17:00.591
  STEP: Creating a pod to test downward api env vars @ 04/20/24 14:17:00.598
  STEP: Saw pod success @ 04/20/24 14:17:04.646
  Apr 20 14:17:04.652: INFO: Trying to get logs from node nok4chie7ate-3 pod downward-api-424db1a8-ad00-48ff-9f05-bbbf5fee6540 container dapi-container: <nil>
  STEP: delete the pod @ 04/20/24 14:17:04.668
  Apr 20 14:17:04.697: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5077" for this suite. @ 04/20/24 14:17:04.705
• [4.270 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:430
  STEP: Creating a kubernetes client @ 04/20/24 14:17:04.716
  Apr 20 14:17:04.716: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename pv @ 04/20/24 14:17:04.72
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:17:04.742
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:17:04.746
  STEP: Creating initial PV and PVC @ 04/20/24 14:17:04.75
  Apr 20 14:17:04.750: INFO: Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-2681" @ 04/20/24 14:17:04.783
  STEP: Listing PVCs in namespace "pv-2681" @ 04/20/24 14:17:04.795
  STEP: Patching the PV "pv-2681-ws9j6" @ 04/20/24 14:17:04.807
  STEP: Patching the PVC "pvc-k444g" @ 04/20/24 14:17:04.832
  STEP: Getting PV "pv-2681-ws9j6" @ 04/20/24 14:17:04.85
  STEP: Getting PVC "pvc-k444g" @ 04/20/24 14:17:04.859
  STEP: Deleting PVC "pvc-k444g" @ 04/20/24 14:17:04.87
  STEP: Confirm deletion of PVC "pvc-k444g" @ 04/20/24 14:17:04.885
  STEP: Deleting PV "pv-2681-ws9j6" @ 04/20/24 14:17:06.903
  STEP: Confirm deletion of PV "pv-2681-ws9j6" @ 04/20/24 14:17:06.924
  STEP: Recreating another PV & PVC @ 04/20/24 14:17:08.942
  Apr 20 14:17:08.942: INFO: Creating a PV followed by a PVC
  STEP: Updating the PV "pv-2681-lgxkl" @ 04/20/24 14:17:08.968
  STEP: Updating the PVC "pvc-jjwxx" @ 04/20/24 14:17:08.993
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-jjwxx=updated" @ 04/20/24 14:17:09.01
  STEP: Deleting PVC "pvc-jjwxx" via DeleteCollection @ 04/20/24 14:17:09.017
  STEP: Confirm deletion of PVC "pvc-jjwxx" @ 04/20/24 14:17:09.039
  STEP: Deleting PV "pv-2681-lgxkl" via DeleteCollection @ 04/20/24 14:17:11.055
  STEP: Confirm deletion of PV "pv-2681-lgxkl" @ 04/20/24 14:17:11.08
  Apr 20 14:17:13.102: INFO: AfterEach: deleting 1 PVCs and 1 PVs...
  Apr 20 14:17:13.102: INFO: Deleting PersistentVolumeClaim "pvc-jjwxx"
  Apr 20 14:17:13.106: INFO: Deleting PersistentVolume "pv-2681-lgxkl"
  Apr 20 14:17:13.111: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-2681" for this suite. @ 04/20/24 14:17:13.12
• [8.417 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:230
  STEP: Creating a kubernetes client @ 04/20/24 14:17:13.138
  Apr 20 14:17:13.138: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename emptydir @ 04/20/24 14:17:13.143
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:17:13.169
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:17:13.173
  STEP: Creating Pod @ 04/20/24 14:17:13.177
  STEP: Reading file content from the nginx-container @ 04/20/24 14:17:15.215
  Apr 20 14:17:15.215: INFO: ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-7724 PodName:pod-sharedvolume-141bcabd-d69a-424f-90a8-b27ecd5b9590 ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 20 14:17:15.215: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  Apr 20 14:17:15.217: INFO: ExecWithOptions: Clientset creation
  Apr 20 14:17:15.217: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/emptydir-7724/pods/pod-sharedvolume-141bcabd-d69a-424f-90a8-b27ecd5b9590/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
  Apr 20 14:17:15.310: INFO: Exec stderr: ""
  Apr 20 14:17:15.310: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7724" for this suite. @ 04/20/24 14:17:15.321
• [2.199 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:572
  STEP: Creating a kubernetes client @ 04/20/24 14:17:15.337
  Apr 20 14:17:15.337: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename job @ 04/20/24 14:17:15.339
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:17:15.372
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:17:15.381
  STEP: Creating a job @ 04/20/24 14:17:15.385
  STEP: Ensuring job reaches completions @ 04/20/24 14:17:15.396
  Apr 20 14:17:25.406: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-2932" for this suite. @ 04/20/24 14:17:25.419
• [10.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:108
  STEP: Creating a kubernetes client @ 04/20/24 14:17:25.437
  Apr 20 14:17:25.437: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename pod-network-test @ 04/20/24 14:17:25.441
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:17:25.481
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:17:25.488
  STEP: Performing setup for networking test in namespace pod-network-test-6524 @ 04/20/24 14:17:25.497
  STEP: creating a selector @ 04/20/24 14:17:25.497
  STEP: Creating the service pods in kubernetes @ 04/20/24 14:17:25.497
  Apr 20 14:17:25.497: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 04/20/24 14:17:47.811
  Apr 20 14:17:49.888: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Apr 20 14:17:49.888: INFO: Going to poll 10.233.64.43 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Apr 20 14:17:49.893: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.233.64.43:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-6524 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 20 14:17:49.893: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  Apr 20 14:17:49.895: INFO: ExecWithOptions: Clientset creation
  Apr 20 14:17:49.895: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-6524/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.233.64.43%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Apr 20 14:17:50.072: INFO: Found all 1 expected endpoints: [netserver-0]
  Apr 20 14:17:50.072: INFO: Going to poll 10.233.65.37 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Apr 20 14:17:50.081: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.233.65.37:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-6524 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 20 14:17:50.081: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  Apr 20 14:17:50.083: INFO: ExecWithOptions: Clientset creation
  Apr 20 14:17:50.083: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-6524/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.233.65.37%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Apr 20 14:17:50.204: INFO: Found all 1 expected endpoints: [netserver-1]
  Apr 20 14:17:50.204: INFO: Going to poll 10.233.66.129 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Apr 20 14:17:50.214: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.233.66.129:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-6524 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 20 14:17:50.215: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  Apr 20 14:17:50.217: INFO: ExecWithOptions: Clientset creation
  Apr 20 14:17:50.217: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-6524/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.233.66.129%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Apr 20 14:17:50.341: INFO: Found all 1 expected endpoints: [netserver-2]
  Apr 20 14:17:50.341: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-6524" for this suite. @ 04/20/24 14:17:50.35
• [24.924 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 04/20/24 14:17:50.362
  Apr 20 14:17:50.362: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename prestop @ 04/20/24 14:17:50.365
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:17:50.389
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:17:50.394
  STEP: Creating server pod server in namespace prestop-1015 @ 04/20/24 14:17:50.398
  STEP: Waiting for pods to come up. @ 04/20/24 14:17:50.419
  STEP: Creating tester pod tester in namespace prestop-1015 @ 04/20/24 14:17:52.444
  STEP: Deleting pre-stop pod @ 04/20/24 14:17:54.479
  Apr 20 14:17:59.503: INFO: Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 04/20/24 14:17:59.503
  Apr 20 14:17:59.528: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-1015" for this suite. @ 04/20/24 14:17:59.541
• [9.194 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 04/20/24 14:17:59.557
  Apr 20 14:17:59.557: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename secrets @ 04/20/24 14:17:59.56
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:17:59.599
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:17:59.603
  STEP: Creating secret with name s-test-opt-del-df10507b-b525-42b5-8f2e-988636e2c58b @ 04/20/24 14:17:59.62
  STEP: Creating secret with name s-test-opt-upd-01fcd6d7-f24e-4fbc-a184-57f3b5e01e09 @ 04/20/24 14:17:59.633
  STEP: Creating the pod @ 04/20/24 14:17:59.647
  STEP: Deleting secret s-test-opt-del-df10507b-b525-42b5-8f2e-988636e2c58b @ 04/20/24 14:18:01.755
  STEP: Updating secret s-test-opt-upd-01fcd6d7-f24e-4fbc-a184-57f3b5e01e09 @ 04/20/24 14:18:01.766
  STEP: Creating secret with name s-test-opt-create-a54195f6-46c4-4ee6-93d4-2782884c13d6 @ 04/20/24 14:18:01.774
  STEP: waiting to observe update in volume @ 04/20/24 14:18:01.784
  Apr 20 14:18:05.859: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8239" for this suite. @ 04/20/24 14:18:05.876
• [6.331 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:146
  STEP: Creating a kubernetes client @ 04/20/24 14:18:05.889
  Apr 20 14:18:05.889: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename custom-resource-definition @ 04/20/24 14:18:05.891
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:18:05.92
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:18:05.924
  Apr 20 14:18:05.929: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  Apr 20 14:18:06.530: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-2495" for this suite. @ 04/20/24 14:18:06.55
• [0.685 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:846
  STEP: Creating a kubernetes client @ 04/20/24 14:18:06.575
  Apr 20 14:18:06.575: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename services @ 04/20/24 14:18:06.577
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:18:06.605
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:18:06.612
  STEP: creating service multi-endpoint-test in namespace services-7773 @ 04/20/24 14:18:06.618
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-7773 to expose endpoints map[] @ 04/20/24 14:18:06.654
  Apr 20 14:18:06.673: INFO: Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
  Apr 20 14:18:07.694: INFO: successfully validated that service multi-endpoint-test in namespace services-7773 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-7773 @ 04/20/24 14:18:07.694
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-7773 to expose endpoints map[pod1:[100]] @ 04/20/24 14:18:09.739
  Apr 20 14:18:09.764: INFO: successfully validated that service multi-endpoint-test in namespace services-7773 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-7773 @ 04/20/24 14:18:09.764
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-7773 to expose endpoints map[pod1:[100] pod2:[101]] @ 04/20/24 14:18:11.807
  Apr 20 14:18:11.838: INFO: successfully validated that service multi-endpoint-test in namespace services-7773 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 04/20/24 14:18:11.838
  Apr 20 14:18:11.838: INFO: Creating new exec pod
  Apr 20 14:18:14.901: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=services-7773 exec execpod69nqs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  Apr 20 14:18:15.228: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
  Apr 20 14:18:15.228: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 20 14:18:15.228: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=services-7773 exec execpod69nqs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.32.188 80'
  Apr 20 14:18:15.484: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.32.188 80\nConnection to 10.233.32.188 80 port [tcp/http] succeeded!\n"
  Apr 20 14:18:15.484: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 20 14:18:15.484: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=services-7773 exec execpod69nqs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  Apr 20 14:18:15.766: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
  Apr 20 14:18:15.766: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 20 14:18:15.767: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=services-7773 exec execpod69nqs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.32.188 81'
  Apr 20 14:18:16.029: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.32.188 81\nConnection to 10.233.32.188 81 port [tcp/*] succeeded!\n"
  Apr 20 14:18:16.029: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-7773 @ 04/20/24 14:18:16.03
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-7773 to expose endpoints map[pod2:[101]] @ 04/20/24 14:18:16.063
  Apr 20 14:18:16.134: INFO: successfully validated that service multi-endpoint-test in namespace services-7773 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-7773 @ 04/20/24 14:18:16.134
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-7773 to expose endpoints map[] @ 04/20/24 14:18:16.165
  Apr 20 14:18:16.202: INFO: successfully validated that service multi-endpoint-test in namespace services-7773 exposes endpoints map[]
  Apr 20 14:18:16.263: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7773" for this suite. @ 04/20/24 14:18:16.283
• [9.729 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:110
  STEP: Creating a kubernetes client @ 04/20/24 14:18:16.308
  Apr 20 14:18:16.308: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename emptydir @ 04/20/24 14:18:16.311
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:18:16.357
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:18:16.369
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 04/20/24 14:18:16.376
  STEP: Saw pod success @ 04/20/24 14:18:20.44
  Apr 20 14:18:20.448: INFO: Trying to get logs from node nok4chie7ate-3 pod pod-de18fe3c-9463-44e6-bedf-55527c218ad0 container test-container: <nil>
  STEP: delete the pod @ 04/20/24 14:18:20.465
  Apr 20 14:18:20.529: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7675" for this suite. @ 04/20/24 14:18:20.538
• [4.244 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:78
  STEP: Creating a kubernetes client @ 04/20/24 14:18:20.552
  Apr 20 14:18:20.552: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename resourcequota @ 04/20/24 14:18:20.555
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:18:20.589
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:18:20.597
  STEP: Counting existing ResourceQuota @ 04/20/24 14:18:20.604
  STEP: Creating a ResourceQuota @ 04/20/24 14:18:25.615
  STEP: Ensuring resource quota status is calculated @ 04/20/24 14:18:25.629
  Apr 20 14:18:27.639: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8231" for this suite. @ 04/20/24 14:18:27.651
• [7.117 seconds]
------------------------------
SS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingress.go:558
  STEP: Creating a kubernetes client @ 04/20/24 14:18:27.669
  Apr 20 14:18:27.669: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename ingress @ 04/20/24 14:18:27.672
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:18:27.71
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:18:27.717
  STEP: getting /apis @ 04/20/24 14:18:27.722
  STEP: getting /apis/networking.k8s.io @ 04/20/24 14:18:27.731
  STEP: getting /apis/networking.k8s.iov1 @ 04/20/24 14:18:27.734
  STEP: creating @ 04/20/24 14:18:27.736
  STEP: getting @ 04/20/24 14:18:27.784
  STEP: listing @ 04/20/24 14:18:27.791
  STEP: watching @ 04/20/24 14:18:27.798
  Apr 20 14:18:27.798: INFO: starting watch
  STEP: cluster-wide listing @ 04/20/24 14:18:27.8
  STEP: cluster-wide watching @ 04/20/24 14:18:27.807
  Apr 20 14:18:27.807: INFO: starting watch
  STEP: patching @ 04/20/24 14:18:27.81
  STEP: updating @ 04/20/24 14:18:27.821
  Apr 20 14:18:27.836: INFO: waiting for watch events with expected annotations
  Apr 20 14:18:27.836: INFO: saw patched and updated annotations
  STEP: patching /status @ 04/20/24 14:18:27.837
  STEP: updating /status @ 04/20/24 14:18:27.848
  STEP: get /status @ 04/20/24 14:18:27.868
  STEP: deleting @ 04/20/24 14:18:27.874
  STEP: deleting a collection @ 04/20/24 14:18:27.899
  Apr 20 14:18:27.927: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-9557" for this suite. @ 04/20/24 14:18:27.935
• [0.277 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregator.go:98
  STEP: Creating a kubernetes client @ 04/20/24 14:18:27.947
  Apr 20 14:18:27.947: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename aggregator @ 04/20/24 14:18:27.951
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:18:27.977
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:18:27.982
  Apr 20 14:18:27.988: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Registering the sample API server. @ 04/20/24 14:18:27.99
  Apr 20 14:18:29.193: INFO: Found ClusterRoles; assuming RBAC is enabled.
  Apr 20 14:18:29.245: INFO: new replicaset for deployment "sample-apiserver-deployment" is yet to be created
  Apr 20 14:18:31.362: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 20, 14, 18, 29, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 14, 18, 29, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 14, 18, 29, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 14, 18, 29, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Apr 20 14:18:33.368: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 20, 14, 18, 29, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 14, 18, 29, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 14, 18, 29, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 14, 18, 29, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Apr 20 14:18:35.374: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 20, 14, 18, 29, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 14, 18, 29, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 14, 18, 29, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 14, 18, 29, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Apr 20 14:18:37.376: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 20, 14, 18, 29, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 14, 18, 29, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 14, 18, 29, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 14, 18, 29, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Apr 20 14:18:39.369: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 20, 14, 18, 29, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 14, 18, 29, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 14, 18, 29, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 14, 18, 29, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Apr 20 14:18:41.372: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 20, 14, 18, 29, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 14, 18, 29, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 14, 18, 29, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 14, 18, 29, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Apr 20 14:18:43.372: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 20, 14, 18, 29, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 14, 18, 29, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 14, 18, 29, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 14, 18, 29, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Apr 20 14:18:45.373: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 20, 14, 18, 29, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 14, 18, 29, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 14, 18, 29, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 14, 18, 29, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Apr 20 14:18:47.370: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 20, 14, 18, 29, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 14, 18, 29, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 14, 18, 29, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 14, 18, 29, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Apr 20 14:18:49.371: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 20, 14, 18, 29, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 14, 18, 29, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 14, 18, 29, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 14, 18, 29, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Apr 20 14:18:51.371: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 20, 14, 18, 29, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 14, 18, 29, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 14, 18, 29, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 14, 18, 29, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Apr 20 14:18:53.378: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 20, 14, 18, 29, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 14, 18, 29, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 14, 18, 29, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 14, 18, 29, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Apr 20 14:18:55.370: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 20, 14, 18, 29, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 14, 18, 29, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 14, 18, 29, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 14, 18, 29, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Apr 20 14:18:57.572: INFO: Waited 177.63931ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 04/20/24 14:18:57.675
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 04/20/24 14:18:57.685
  STEP: List APIServices @ 04/20/24 14:18:57.705
  Apr 20 14:18:57.733: INFO: Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 04/20/24 14:18:57.733
  Apr 20 14:18:57.776: INFO: APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 04/20/24 14:18:57.776
  Apr 20 14:18:57.808: INFO: updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2024, time.April, 20, 14, 18, 57, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 04/20/24 14:18:57.809
  Apr 20 14:18:57.819: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2024-04-20 14:18:57 +0000 UTC Passed all checks passed}
  Apr 20 14:18:57.819: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Apr 20 14:18:57.819: INFO: Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 04/20/24 14:18:57.819
  Apr 20 14:18:57.844: INFO: Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-1414161683" @ 04/20/24 14:18:57.844
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 04/20/24 14:18:57.879
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 04/20/24 14:18:57.892
  STEP: Patch APIService Status @ 04/20/24 14:18:57.899
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 04/20/24 14:18:57.912
  Apr 20 14:18:57.925: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2024-04-20 14:18:57 +0000 UTC Passed all checks passed}
  Apr 20 14:18:57.925: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Apr 20 14:18:57.925: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  Apr 20 14:18:57.926: INFO: Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 04/20/24 14:18:57.926
  STEP: Confirm that the generated APIService has been deleted @ 04/20/24 14:18:57.956
  Apr 20 14:18:57.956: INFO: Requesting list of APIServices to confirm quantity
  Apr 20 14:18:57.971: INFO: Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  Apr 20 14:18:57.971: INFO: APIService v1alpha1.wardle.example.com has been deleted.
  Apr 20 14:18:58.314: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-2961" for this suite. @ 04/20/24 14:18:58.324
• [30.396 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 04/20/24 14:18:58.344
  Apr 20 14:18:58.346: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename pods @ 04/20/24 14:18:58.361
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:18:58.479
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:18:58.488
  STEP: Create a pod @ 04/20/24 14:18:58.526
  STEP: patching /status @ 04/20/24 14:19:00.609
  Apr 20 14:19:00.642: INFO: Status Message: "Patched by e2e test" and Reason: "E2E"
  Apr 20 14:19:00.642: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2874" for this suite. @ 04/20/24 14:19:00.667
• [2.341 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:170
  STEP: Creating a kubernetes client @ 04/20/24 14:19:00.686
  Apr 20 14:19:00.686: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename security-context @ 04/20/24 14:19:00.689
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:19:00.826
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:19:00.849
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 04/20/24 14:19:00.874
  STEP: Saw pod success @ 04/20/24 14:19:04.944
  Apr 20 14:19:04.952: INFO: Trying to get logs from node nok4chie7ate-3 pod security-context-644763ed-498d-43d9-8c92-25210b8b9b62 container test-container: <nil>
  STEP: delete the pod @ 04/20/24 14:19:04.969
  Apr 20 14:19:04.998: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-3222" for this suite. @ 04/20/24 14:19:05.009
• [4.336 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:290
  STEP: Creating a kubernetes client @ 04/20/24 14:19:05.024
  Apr 20 14:19:05.024: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename taint-single-pod @ 04/20/24 14:19:05.028
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:19:05.057
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:19:05.063
  Apr 20 14:19:05.068: INFO: Waiting up to 1m0s for all nodes to be ready
  Apr 20 14:20:05.070: INFO: Waiting for terminating namespaces to be deleted...
  Apr 20 14:20:05.079: INFO: Starting informer...
  STEP: Starting pod... @ 04/20/24 14:20:05.079
  Apr 20 14:20:05.318: INFO: Pod is running on nok4chie7ate-3. Tainting Node
  STEP: Trying to apply a taint on the Node @ 04/20/24 14:20:05.318
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 04/20/24 14:20:05.348
  STEP: Waiting short time to make sure Pod is queued for deletion @ 04/20/24 14:20:05.368
  Apr 20 14:20:05.368: INFO: Pod wasn't evicted. Proceeding
  Apr 20 14:20:05.368: INFO: Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 04/20/24 14:20:05.44
  STEP: Waiting some time to make sure that toleration time passed. @ 04/20/24 14:20:05.474
  Apr 20 14:21:20.475: INFO: Pod wasn't evicted. Test successful
  Apr 20 14:21:20.477: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-952" for this suite. @ 04/20/24 14:21:20.496
• [135.487 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:300
  STEP: Creating a kubernetes client @ 04/20/24 14:21:20.512
  Apr 20 14:21:20.512: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename var-expansion @ 04/20/24 14:21:20.521
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:21:20.562
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:21:20.567
  STEP: creating the pod @ 04/20/24 14:21:20.572
  STEP: waiting for pod running @ 04/20/24 14:21:20.59
  STEP: creating a file in subpath @ 04/20/24 14:21:22.616
  Apr 20 14:21:22.624: INFO: ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-2602 PodName:var-expansion-8d78b726-af4d-4d50-9a87-e3021fc6c566 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 20 14:21:22.624: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  Apr 20 14:21:22.626: INFO: ExecWithOptions: Clientset creation
  Apr 20 14:21:22.626: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/var-expansion-2602/pods/var-expansion-8d78b726-af4d-4d50-9a87-e3021fc6c566/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 04/20/24 14:21:22.772
  Apr 20 14:21:22.779: INFO: ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-2602 PodName:var-expansion-8d78b726-af4d-4d50-9a87-e3021fc6c566 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 20 14:21:22.779: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  Apr 20 14:21:22.781: INFO: ExecWithOptions: Clientset creation
  Apr 20 14:21:22.782: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/var-expansion-2602/pods/var-expansion-8d78b726-af4d-4d50-9a87-e3021fc6c566/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 04/20/24 14:21:22.884
  Apr 20 14:21:23.419: INFO: Successfully updated pod "var-expansion-8d78b726-af4d-4d50-9a87-e3021fc6c566"
  STEP: waiting for annotated pod running @ 04/20/24 14:21:23.419
  STEP: deleting the pod gracefully @ 04/20/24 14:21:23.426
  Apr 20 14:21:23.426: INFO: Deleting pod "var-expansion-8d78b726-af4d-4d50-9a87-e3021fc6c566" in namespace "var-expansion-2602"
  Apr 20 14:21:23.443: INFO: Wait up to 5m0s for pod "var-expansion-8d78b726-af4d-4d50-9a87-e3021fc6c566" to be fully deleted
  Apr 20 14:21:55.633: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-2602" for this suite. @ 04/20/24 14:21:55.646
• [35.150 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:96
  STEP: Creating a kubernetes client @ 04/20/24 14:21:55.664
  Apr 20 14:21:55.664: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename pod-network-test @ 04/20/24 14:21:55.668
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:21:55.73
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:21:55.74
  STEP: Performing setup for networking test in namespace pod-network-test-9502 @ 04/20/24 14:21:55.747
  STEP: creating a selector @ 04/20/24 14:21:55.747
  STEP: Creating the service pods in kubernetes @ 04/20/24 14:21:55.747
  Apr 20 14:21:55.747: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 04/20/24 14:22:08.022
  Apr 20 14:22:10.073: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Apr 20 14:22:10.073: INFO: Breadth first check of 10.233.64.44 on host 192.168.121.235...
  Apr 20 14:22:10.079: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.66.143:9080/dial?request=hostname&protocol=udp&host=10.233.64.44&port=8081&tries=1'] Namespace:pod-network-test-9502 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 20 14:22:10.079: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  Apr 20 14:22:10.081: INFO: ExecWithOptions: Clientset creation
  Apr 20 14:22:10.081: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-9502/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.66.143%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.233.64.44%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Apr 20 14:22:10.238: INFO: Waiting for responses: map[]
  Apr 20 14:22:10.238: INFO: reached 10.233.64.44 after 0/1 tries
  Apr 20 14:22:10.238: INFO: Breadth first check of 10.233.65.40 on host 192.168.121.193...
  Apr 20 14:22:10.245: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.66.143:9080/dial?request=hostname&protocol=udp&host=10.233.65.40&port=8081&tries=1'] Namespace:pod-network-test-9502 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 20 14:22:10.245: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  Apr 20 14:22:10.247: INFO: ExecWithOptions: Clientset creation
  Apr 20 14:22:10.247: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-9502/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.66.143%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.233.65.40%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Apr 20 14:22:10.367: INFO: Waiting for responses: map[]
  Apr 20 14:22:10.367: INFO: reached 10.233.65.40 after 0/1 tries
  Apr 20 14:22:10.367: INFO: Breadth first check of 10.233.66.142 on host 192.168.121.8...
  Apr 20 14:22:10.378: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.66.143:9080/dial?request=hostname&protocol=udp&host=10.233.66.142&port=8081&tries=1'] Namespace:pod-network-test-9502 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 20 14:22:10.378: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  Apr 20 14:22:10.380: INFO: ExecWithOptions: Clientset creation
  Apr 20 14:22:10.380: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-9502/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.66.143%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.233.66.142%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Apr 20 14:22:10.490: INFO: Waiting for responses: map[]
  Apr 20 14:22:10.490: INFO: reached 10.233.66.142 after 0/1 tries
  Apr 20 14:22:10.490: INFO: Going to retry 0 out of 3 pods....
  Apr 20 14:22:10.490: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-9502" for this suite. @ 04/20/24 14:22:10.5
• [14.849 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:90
  STEP: Creating a kubernetes client @ 04/20/24 14:22:10.514
  Apr 20 14:22:10.514: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename configmap @ 04/20/24 14:22:10.518
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:22:10.548
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:22:10.556
  STEP: Creating configMap with name configmap-test-volume-map-59daa94e-c274-42cb-9017-e3b42280e98c @ 04/20/24 14:22:10.562
  STEP: Creating a pod to test consume configMaps @ 04/20/24 14:22:10.572
  STEP: Saw pod success @ 04/20/24 14:22:14.62
  Apr 20 14:22:14.627: INFO: Trying to get logs from node nok4chie7ate-3 pod pod-configmaps-d6e2d83d-11ad-4f64-b77e-52f26f1f24b6 container agnhost-container: <nil>
  STEP: delete the pod @ 04/20/24 14:22:14.665
  Apr 20 14:22:14.692: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4260" for this suite. @ 04/20/24 14:22:14.7
• [4.200 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:183
  STEP: Creating a kubernetes client @ 04/20/24 14:22:14.715
  Apr 20 14:22:14.715: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename kubelet-test @ 04/20/24 14:22:14.718
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:22:14.75
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:22:14.757
  Apr 20 14:22:16.839: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-4505" for this suite. @ 04/20/24 14:22:16.855
• [2.158 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:639
  STEP: Creating a kubernetes client @ 04/20/24 14:22:16.874
  Apr 20 14:22:16.874: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename gc @ 04/20/24 14:22:16.879
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:22:16.934
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:22:16.939
  STEP: create the rc @ 04/20/24 14:22:16.958
  W0420 14:22:16.979630      13 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 04/20/24 14:22:23.076
  STEP: wait for the rc to be deleted @ 04/20/24 14:22:23.21
  Apr 20 14:22:24.568: INFO: 82 pods remaining
  Apr 20 14:22:24.568: INFO: 80 pods has nil DeletionTimestamp
  Apr 20 14:22:24.568: INFO: 
  Apr 20 14:22:25.519: INFO: 72 pods remaining
  Apr 20 14:22:25.519: INFO: 69 pods has nil DeletionTimestamp
  Apr 20 14:22:25.519: INFO: 
  Apr 20 14:22:26.480: INFO: 60 pods remaining
  Apr 20 14:22:26.481: INFO: 57 pods has nil DeletionTimestamp
  Apr 20 14:22:26.481: INFO: 
  Apr 20 14:22:27.329: INFO: 45 pods remaining
  Apr 20 14:22:27.329: INFO: 44 pods has nil DeletionTimestamp
  Apr 20 14:22:27.329: INFO: 
  Apr 20 14:22:28.377: INFO: 31 pods remaining
  Apr 20 14:22:28.378: INFO: 29 pods has nil DeletionTimestamp
  Apr 20 14:22:28.379: INFO: 
  Apr 20 14:22:29.539: INFO: 19 pods remaining
  Apr 20 14:22:29.539: INFO: 17 pods has nil DeletionTimestamp
  Apr 20 14:22:29.539: INFO: 
  Apr 20 14:22:30.424: INFO: 3 pods remaining
  Apr 20 14:22:30.424: INFO: 0 pods has nil DeletionTimestamp
  Apr 20 14:22:30.424: INFO: 
  STEP: Gathering metrics @ 04/20/24 14:22:31.252
  Apr 20 14:22:32.711: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Apr 20 14:22:32.712: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1918" for this suite. @ 04/20/24 14:22:32.739
• [15.914 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 04/20/24 14:22:32.792
  Apr 20 14:22:32.792: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename events @ 04/20/24 14:22:32.82
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:22:32.873
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:22:32.886
  STEP: Create set of events @ 04/20/24 14:22:32.894
  STEP: get a list of Events with a label in the current namespace @ 04/20/24 14:22:32.968
  STEP: delete a list of events @ 04/20/24 14:22:32.977
  Apr 20 14:22:32.977: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 04/20/24 14:22:33.058
  Apr 20 14:22:33.070: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-9853" for this suite. @ 04/20/24 14:22:33.088
• [0.320 seconds]
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:80
  STEP: Creating a kubernetes client @ 04/20/24 14:22:33.112
  Apr 20 14:22:33.112: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename svcaccounts @ 04/20/24 14:22:33.117
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:22:33.178
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:22:33.183
  STEP: reading a file in the container @ 04/20/24 14:22:37.276
  Apr 20 14:22:37.278: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-1943 pod-service-account-3c552fcc-b999-496a-b027-809066b31e57 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 04/20/24 14:22:37.978
  Apr 20 14:22:37.979: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-1943 pod-service-account-3c552fcc-b999-496a-b027-809066b31e57 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 04/20/24 14:22:38.929
  Apr 20 14:22:38.932: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-1943 pod-service-account-3c552fcc-b999-496a-b027-809066b31e57 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  Apr 20 14:22:39.786: INFO: Got root ca configmap in namespace "svcaccounts-1943"
  Apr 20 14:22:39.797: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1943" for this suite. @ 04/20/24 14:22:39.816
• [6.791 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:1031
  STEP: Creating a kubernetes client @ 04/20/24 14:22:39.906
  Apr 20 14:22:39.906: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename statefulset @ 04/20/24 14:22:39.915
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:22:39.953
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:22:39.963
  STEP: Creating service test in namespace statefulset-8668 @ 04/20/24 14:22:39.98
  STEP: Creating statefulset ss in namespace statefulset-8668 @ 04/20/24 14:22:40.016
  Apr 20 14:22:40.092: INFO: Found 0 stateful pods, waiting for 1
  Apr 20 14:22:50.093: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 04/20/24 14:22:50.111
  STEP: Getting /status @ 04/20/24 14:22:50.14
  Apr 20 14:22:50.174: INFO: StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 04/20/24 14:22:50.175
  Apr 20 14:22:50.238: INFO: updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 04/20/24 14:22:50.238
  Apr 20 14:22:50.243: INFO: Observed &StatefulSet event: ADDED
  Apr 20 14:22:50.243: INFO: Found Statefulset ss in namespace statefulset-8668 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Apr 20 14:22:50.243: INFO: Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 04/20/24 14:22:50.243
  Apr 20 14:22:50.243: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Apr 20 14:22:50.298: INFO: Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 04/20/24 14:22:50.298
  Apr 20 14:22:50.313: INFO: Observed &StatefulSet event: ADDED
  Apr 20 14:22:50.313: INFO: Observed Statefulset ss in namespace statefulset-8668 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Apr 20 14:22:50.314: INFO: Observed &StatefulSet event: MODIFIED
  Apr 20 14:22:50.314: INFO: Deleting all statefulset in ns statefulset-8668
  Apr 20 14:22:50.326: INFO: Scaling statefulset ss to 0
  Apr 20 14:23:00.391: INFO: Waiting for statefulset status.replicas updated to 0
  Apr 20 14:23:00.404: INFO: Deleting statefulset ss
  Apr 20 14:23:00.464: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-8668" for this suite. @ 04/20/24 14:23:00.483
• [20.611 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 04/20/24 14:23:00.517
  Apr 20 14:23:00.517: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename projected @ 04/20/24 14:23:00.52
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:23:00.575
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:23:00.583
  STEP: Creating projection with secret that has name projected-secret-test-69e4b1be-c2b8-4eac-8856-13c218bd16e5 @ 04/20/24 14:23:00.592
  STEP: Creating a pod to test consume secrets @ 04/20/24 14:23:00.612
  STEP: Saw pod success @ 04/20/24 14:23:04.683
  Apr 20 14:23:04.691: INFO: Trying to get logs from node nok4chie7ate-3 pod pod-projected-secrets-8a1b4fc8-6b35-42a1-adec-349dacbd9734 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 04/20/24 14:23:04.708
  Apr 20 14:23:04.748: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9425" for this suite. @ 04/20/24 14:23:04.759
• [4.254 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 04/20/24 14:23:04.772
  Apr 20 14:23:04.772: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename proxy @ 04/20/24 14:23:04.775
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:23:04.808
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:23:04.812
  STEP: starting an echo server on multiple ports @ 04/20/24 14:23:04.835
  STEP: creating replication controller proxy-service-hg2s8 in namespace proxy-7270 @ 04/20/24 14:23:04.835
  I0420 14:23:04.870930      13 runners.go:197] Created replication controller with name: proxy-service-hg2s8, namespace: proxy-7270, replica count: 1
  I0420 14:23:05.923617      13 runners.go:197] proxy-service-hg2s8 Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0420 14:23:06.924499      13 runners.go:197] proxy-service-hg2s8 Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Apr 20 14:23:06.932: INFO: setup took 2.114922087s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 04/20/24 14:23:06.932
  Apr 20 14:23:06.951: INFO: (0) /api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk:160/proxy/: foo (200; 17.955828ms)
  Apr 20 14:23:06.956: INFO: (0) /api/v1/namespaces/proxy-7270/pods/http:proxy-service-hg2s8-bd4mk:160/proxy/: foo (200; 22.821926ms)
  Apr 20 14:23:06.982: INFO: (0) /api/v1/namespaces/proxy-7270/services/proxy-service-hg2s8:portname1/proxy/: foo (200; 48.054165ms)
  Apr 20 14:23:06.982: INFO: (0) /api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk/proxy/: <a href="/api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk/proxy/rewriteme">test</a> (200; 48.631922ms)
  Apr 20 14:23:06.982: INFO: (0) /api/v1/namespaces/proxy-7270/pods/http:proxy-service-hg2s8-bd4mk:162/proxy/: bar (200; 49.00843ms)
  Apr 20 14:23:07.002: INFO: (0) /api/v1/namespaces/proxy-7270/services/http:proxy-service-hg2s8:portname1/proxy/: foo (200; 67.983771ms)
  Apr 20 14:23:07.002: INFO: (0) /api/v1/namespaces/proxy-7270/services/http:proxy-service-hg2s8:portname2/proxy/: bar (200; 69.771847ms)
  Apr 20 14:23:07.002: INFO: (0) /api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk:1080/proxy/: <a href="/api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk:1080/proxy/rewriteme">test<... (200; 68.799292ms)
  Apr 20 14:23:07.002: INFO: (0) /api/v1/namespaces/proxy-7270/services/proxy-service-hg2s8:portname2/proxy/: bar (200; 68.623699ms)
  Apr 20 14:23:07.003: INFO: (0) /api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk:162/proxy/: bar (200; 69.315969ms)
  Apr 20 14:23:07.003: INFO: (0) /api/v1/namespaces/proxy-7270/pods/http:proxy-service-hg2s8-bd4mk:1080/proxy/: <a href="/api/v1/namespaces/proxy-7270/pods/http:proxy-service-hg2s8-bd4mk:1080/proxy/rewriteme">... (200; 68.730567ms)
  Apr 20 14:23:07.006: INFO: (0) /api/v1/namespaces/proxy-7270/pods/https:proxy-service-hg2s8-bd4mk:460/proxy/: tls baz (200; 74.031069ms)
  Apr 20 14:23:07.008: INFO: (0) /api/v1/namespaces/proxy-7270/pods/https:proxy-service-hg2s8-bd4mk:443/proxy/: <a href="/api/v1/namespaces/proxy-7270/pods/https:proxy-service-hg2s8-bd4mk:443/proxy/tlsrewritem... (200; 74.995203ms)
  Apr 20 14:23:07.008: INFO: (0) /api/v1/namespaces/proxy-7270/pods/https:proxy-service-hg2s8-bd4mk:462/proxy/: tls qux (200; 74.126831ms)
  Apr 20 14:23:07.008: INFO: (0) /api/v1/namespaces/proxy-7270/services/https:proxy-service-hg2s8:tlsportname1/proxy/: tls baz (200; 74.257641ms)
  Apr 20 14:23:07.008: INFO: (0) /api/v1/namespaces/proxy-7270/services/https:proxy-service-hg2s8:tlsportname2/proxy/: tls qux (200; 75.000929ms)
  Apr 20 14:23:07.020: INFO: (1) /api/v1/namespaces/proxy-7270/pods/https:proxy-service-hg2s8-bd4mk:443/proxy/: <a href="/api/v1/namespaces/proxy-7270/pods/https:proxy-service-hg2s8-bd4mk:443/proxy/tlsrewritem... (200; 11.474549ms)
  Apr 20 14:23:07.020: INFO: (1) /api/v1/namespaces/proxy-7270/pods/https:proxy-service-hg2s8-bd4mk:460/proxy/: tls baz (200; 11.646482ms)
  Apr 20 14:23:07.021: INFO: (1) /api/v1/namespaces/proxy-7270/pods/http:proxy-service-hg2s8-bd4mk:160/proxy/: foo (200; 12.73718ms)
  Apr 20 14:23:07.024: INFO: (1) /api/v1/namespaces/proxy-7270/pods/http:proxy-service-hg2s8-bd4mk:1080/proxy/: <a href="/api/v1/namespaces/proxy-7270/pods/http:proxy-service-hg2s8-bd4mk:1080/proxy/rewriteme">... (200; 15.388562ms)
  Apr 20 14:23:07.024: INFO: (1) /api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk:1080/proxy/: <a href="/api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk:1080/proxy/rewriteme">test<... (200; 15.394017ms)
  Apr 20 14:23:07.025: INFO: (1) /api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk/proxy/: <a href="/api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk/proxy/rewriteme">test</a> (200; 15.822352ms)
  Apr 20 14:23:07.027: INFO: (1) /api/v1/namespaces/proxy-7270/services/http:proxy-service-hg2s8:portname2/proxy/: bar (200; 19.006043ms)
  Apr 20 14:23:07.031: INFO: (1) /api/v1/namespaces/proxy-7270/pods/https:proxy-service-hg2s8-bd4mk:462/proxy/: tls qux (200; 21.700217ms)
  Apr 20 14:23:07.031: INFO: (1) /api/v1/namespaces/proxy-7270/services/proxy-service-hg2s8:portname2/proxy/: bar (200; 22.228736ms)
  Apr 20 14:23:07.032: INFO: (1) /api/v1/namespaces/proxy-7270/services/https:proxy-service-hg2s8:tlsportname2/proxy/: tls qux (200; 23.327902ms)
  Apr 20 14:23:07.040: INFO: (1) /api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk:162/proxy/: bar (200; 30.770465ms)
  Apr 20 14:23:07.040: INFO: (1) /api/v1/namespaces/proxy-7270/pods/http:proxy-service-hg2s8-bd4mk:162/proxy/: bar (200; 31.051989ms)
  Apr 20 14:23:07.041: INFO: (1) /api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk:160/proxy/: foo (200; 32.272085ms)
  Apr 20 14:23:07.043: INFO: (1) /api/v1/namespaces/proxy-7270/services/http:proxy-service-hg2s8:portname1/proxy/: foo (200; 33.955034ms)
  Apr 20 14:23:07.045: INFO: (1) /api/v1/namespaces/proxy-7270/services/https:proxy-service-hg2s8:tlsportname1/proxy/: tls baz (200; 36.030276ms)
  Apr 20 14:23:07.046: INFO: (1) /api/v1/namespaces/proxy-7270/services/proxy-service-hg2s8:portname1/proxy/: foo (200; 37.503031ms)
  Apr 20 14:23:07.061: INFO: (2) /api/v1/namespaces/proxy-7270/pods/https:proxy-service-hg2s8-bd4mk:443/proxy/: <a href="/api/v1/namespaces/proxy-7270/pods/https:proxy-service-hg2s8-bd4mk:443/proxy/tlsrewritem... (200; 14.306076ms)
  Apr 20 14:23:07.068: INFO: (2) /api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk/proxy/: <a href="/api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk/proxy/rewriteme">test</a> (200; 21.523737ms)
  Apr 20 14:23:07.069: INFO: (2) /api/v1/namespaces/proxy-7270/pods/https:proxy-service-hg2s8-bd4mk:460/proxy/: tls baz (200; 21.340887ms)
  Apr 20 14:23:07.069: INFO: (2) /api/v1/namespaces/proxy-7270/pods/https:proxy-service-hg2s8-bd4mk:462/proxy/: tls qux (200; 21.119513ms)
  Apr 20 14:23:07.069: INFO: (2) /api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk:162/proxy/: bar (200; 21.58849ms)
  Apr 20 14:23:07.069: INFO: (2) /api/v1/namespaces/proxy-7270/pods/http:proxy-service-hg2s8-bd4mk:162/proxy/: bar (200; 19.48232ms)
  Apr 20 14:23:07.072: INFO: (2) /api/v1/namespaces/proxy-7270/pods/http:proxy-service-hg2s8-bd4mk:1080/proxy/: <a href="/api/v1/namespaces/proxy-7270/pods/http:proxy-service-hg2s8-bd4mk:1080/proxy/rewriteme">... (200; 24.3172ms)
  Apr 20 14:23:07.073: INFO: (2) /api/v1/namespaces/proxy-7270/services/https:proxy-service-hg2s8:tlsportname2/proxy/: tls qux (200; 25.744509ms)
  Apr 20 14:23:07.073: INFO: (2) /api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk:1080/proxy/: <a href="/api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk:1080/proxy/rewriteme">test<... (200; 24.503181ms)
  Apr 20 14:23:07.073: INFO: (2) /api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk:160/proxy/: foo (200; 23.613004ms)
  Apr 20 14:23:07.073: INFO: (2) /api/v1/namespaces/proxy-7270/pods/http:proxy-service-hg2s8-bd4mk:160/proxy/: foo (200; 23.586046ms)
  Apr 20 14:23:07.073: INFO: (2) /api/v1/namespaces/proxy-7270/services/proxy-service-hg2s8:portname1/proxy/: foo (200; 25.852549ms)
  Apr 20 14:23:07.073: INFO: (2) /api/v1/namespaces/proxy-7270/services/http:proxy-service-hg2s8:portname1/proxy/: foo (200; 24.219731ms)
  Apr 20 14:23:07.074: INFO: (2) /api/v1/namespaces/proxy-7270/services/proxy-service-hg2s8:portname2/proxy/: bar (200; 25.994496ms)
  Apr 20 14:23:07.074: INFO: (2) /api/v1/namespaces/proxy-7270/services/https:proxy-service-hg2s8:tlsportname1/proxy/: tls baz (200; 25.994013ms)
  Apr 20 14:23:07.074: INFO: (2) /api/v1/namespaces/proxy-7270/services/http:proxy-service-hg2s8:portname2/proxy/: bar (200; 24.471544ms)
  Apr 20 14:23:07.086: INFO: (3) /api/v1/namespaces/proxy-7270/pods/http:proxy-service-hg2s8-bd4mk:160/proxy/: foo (200; 11.225289ms)
  Apr 20 14:23:07.087: INFO: (3) /api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk/proxy/: <a href="/api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk/proxy/rewriteme">test</a> (200; 12.40245ms)
  Apr 20 14:23:07.087: INFO: (3) /api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk:162/proxy/: bar (200; 12.637466ms)
  Apr 20 14:23:07.087: INFO: (3) /api/v1/namespaces/proxy-7270/pods/https:proxy-service-hg2s8-bd4mk:462/proxy/: tls qux (200; 13.52314ms)
  Apr 20 14:23:07.090: INFO: (3) /api/v1/namespaces/proxy-7270/pods/https:proxy-service-hg2s8-bd4mk:460/proxy/: tls baz (200; 15.831487ms)
  Apr 20 14:23:07.090: INFO: (3) /api/v1/namespaces/proxy-7270/pods/http:proxy-service-hg2s8-bd4mk:162/proxy/: bar (200; 15.80637ms)
  Apr 20 14:23:07.091: INFO: (3) /api/v1/namespaces/proxy-7270/services/proxy-service-hg2s8:portname1/proxy/: foo (200; 16.499999ms)
  Apr 20 14:23:07.091: INFO: (3) /api/v1/namespaces/proxy-7270/pods/http:proxy-service-hg2s8-bd4mk:1080/proxy/: <a href="/api/v1/namespaces/proxy-7270/pods/http:proxy-service-hg2s8-bd4mk:1080/proxy/rewriteme">... (200; 16.854284ms)
  Apr 20 14:23:07.095: INFO: (3) /api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk:160/proxy/: foo (200; 21.044946ms)
  Apr 20 14:23:07.097: INFO: (3) /api/v1/namespaces/proxy-7270/services/http:proxy-service-hg2s8:portname2/proxy/: bar (200; 22.511153ms)
  Apr 20 14:23:07.097: INFO: (3) /api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk:1080/proxy/: <a href="/api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk:1080/proxy/rewriteme">test<... (200; 22.817605ms)
  Apr 20 14:23:07.098: INFO: (3) /api/v1/namespaces/proxy-7270/pods/https:proxy-service-hg2s8-bd4mk:443/proxy/: <a href="/api/v1/namespaces/proxy-7270/pods/https:proxy-service-hg2s8-bd4mk:443/proxy/tlsrewritem... (200; 23.240326ms)
  Apr 20 14:23:07.098: INFO: (3) /api/v1/namespaces/proxy-7270/services/https:proxy-service-hg2s8:tlsportname1/proxy/: tls baz (200; 23.467264ms)
  Apr 20 14:23:07.099: INFO: (3) /api/v1/namespaces/proxy-7270/services/http:proxy-service-hg2s8:portname1/proxy/: foo (200; 24.845487ms)
  Apr 20 14:23:07.101: INFO: (3) /api/v1/namespaces/proxy-7270/services/https:proxy-service-hg2s8:tlsportname2/proxy/: tls qux (200; 26.911565ms)
  Apr 20 14:23:07.102: INFO: (3) /api/v1/namespaces/proxy-7270/services/proxy-service-hg2s8:portname2/proxy/: bar (200; 27.946757ms)
  Apr 20 14:23:07.115: INFO: (4) /api/v1/namespaces/proxy-7270/pods/http:proxy-service-hg2s8-bd4mk:160/proxy/: foo (200; 12.156215ms)
  Apr 20 14:23:07.115: INFO: (4) /api/v1/namespaces/proxy-7270/pods/http:proxy-service-hg2s8-bd4mk:162/proxy/: bar (200; 12.701941ms)
  Apr 20 14:23:07.117: INFO: (4) /api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk:1080/proxy/: <a href="/api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk:1080/proxy/rewriteme">test<... (200; 13.845696ms)
  Apr 20 14:23:07.117: INFO: (4) /api/v1/namespaces/proxy-7270/pods/https:proxy-service-hg2s8-bd4mk:443/proxy/: <a href="/api/v1/namespaces/proxy-7270/pods/https:proxy-service-hg2s8-bd4mk:443/proxy/tlsrewritem... (200; 14.117273ms)
  Apr 20 14:23:07.119: INFO: (4) /api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk:160/proxy/: foo (200; 16.014485ms)
  Apr 20 14:23:07.125: INFO: (4) /api/v1/namespaces/proxy-7270/pods/http:proxy-service-hg2s8-bd4mk:1080/proxy/: <a href="/api/v1/namespaces/proxy-7270/pods/http:proxy-service-hg2s8-bd4mk:1080/proxy/rewriteme">... (200; 21.507747ms)
  Apr 20 14:23:07.125: INFO: (4) /api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk/proxy/: <a href="/api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk/proxy/rewriteme">test</a> (200; 22.076217ms)
  Apr 20 14:23:07.125: INFO: (4) /api/v1/namespaces/proxy-7270/pods/https:proxy-service-hg2s8-bd4mk:462/proxy/: tls qux (200; 21.990323ms)
  Apr 20 14:23:07.127: INFO: (4) /api/v1/namespaces/proxy-7270/pods/https:proxy-service-hg2s8-bd4mk:460/proxy/: tls baz (200; 23.893271ms)
  Apr 20 14:23:07.127: INFO: (4) /api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk:162/proxy/: bar (200; 24.595484ms)
  Apr 20 14:23:07.128: INFO: (4) /api/v1/namespaces/proxy-7270/services/http:proxy-service-hg2s8:portname1/proxy/: foo (200; 25.065922ms)
  Apr 20 14:23:07.128: INFO: (4) /api/v1/namespaces/proxy-7270/services/http:proxy-service-hg2s8:portname2/proxy/: bar (200; 25.424065ms)
  Apr 20 14:23:07.129: INFO: (4) /api/v1/namespaces/proxy-7270/services/https:proxy-service-hg2s8:tlsportname2/proxy/: tls qux (200; 25.703892ms)
  Apr 20 14:23:07.129: INFO: (4) /api/v1/namespaces/proxy-7270/services/proxy-service-hg2s8:portname2/proxy/: bar (200; 25.457645ms)
  Apr 20 14:23:07.129: INFO: (4) /api/v1/namespaces/proxy-7270/services/proxy-service-hg2s8:portname1/proxy/: foo (200; 26.270787ms)
  Apr 20 14:23:07.132: INFO: (4) /api/v1/namespaces/proxy-7270/services/https:proxy-service-hg2s8:tlsportname1/proxy/: tls baz (200; 28.391197ms)
  Apr 20 14:23:07.139: INFO: (5) /api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk:162/proxy/: bar (200; 7.833247ms)
  Apr 20 14:23:07.144: INFO: (5) /api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk/proxy/: <a href="/api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk/proxy/rewriteme">test</a> (200; 11.726955ms)
  Apr 20 14:23:07.144: INFO: (5) /api/v1/namespaces/proxy-7270/pods/http:proxy-service-hg2s8-bd4mk:1080/proxy/: <a href="/api/v1/namespaces/proxy-7270/pods/http:proxy-service-hg2s8-bd4mk:1080/proxy/rewriteme">... (200; 12.564379ms)
  Apr 20 14:23:07.144: INFO: (5) /api/v1/namespaces/proxy-7270/pods/https:proxy-service-hg2s8-bd4mk:460/proxy/: tls baz (200; 12.254515ms)
  Apr 20 14:23:07.144: INFO: (5) /api/v1/namespaces/proxy-7270/pods/http:proxy-service-hg2s8-bd4mk:162/proxy/: bar (200; 12.39656ms)
  Apr 20 14:23:07.149: INFO: (5) /api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk:1080/proxy/: <a href="/api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk:1080/proxy/rewriteme">test<... (200; 17.197038ms)
  Apr 20 14:23:07.150: INFO: (5) /api/v1/namespaces/proxy-7270/pods/https:proxy-service-hg2s8-bd4mk:443/proxy/: <a href="/api/v1/namespaces/proxy-7270/pods/https:proxy-service-hg2s8-bd4mk:443/proxy/tlsrewritem... (200; 17.570839ms)
  Apr 20 14:23:07.152: INFO: (5) /api/v1/namespaces/proxy-7270/pods/http:proxy-service-hg2s8-bd4mk:160/proxy/: foo (200; 19.246394ms)
  Apr 20 14:23:07.154: INFO: (5) /api/v1/namespaces/proxy-7270/services/https:proxy-service-hg2s8:tlsportname1/proxy/: tls baz (200; 22.53897ms)
  Apr 20 14:23:07.155: INFO: (5) /api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk:160/proxy/: foo (200; 22.237861ms)
  Apr 20 14:23:07.155: INFO: (5) /api/v1/namespaces/proxy-7270/services/http:proxy-service-hg2s8:portname1/proxy/: foo (200; 22.952901ms)
  Apr 20 14:23:07.156: INFO: (5) /api/v1/namespaces/proxy-7270/services/proxy-service-hg2s8:portname1/proxy/: foo (200; 24.145354ms)
  Apr 20 14:23:07.156: INFO: (5) /api/v1/namespaces/proxy-7270/pods/https:proxy-service-hg2s8-bd4mk:462/proxy/: tls qux (200; 23.958869ms)
  Apr 20 14:23:07.156: INFO: (5) /api/v1/namespaces/proxy-7270/services/http:proxy-service-hg2s8:portname2/proxy/: bar (200; 24.013584ms)
  Apr 20 14:23:07.157: INFO: (5) /api/v1/namespaces/proxy-7270/services/proxy-service-hg2s8:portname2/proxy/: bar (200; 25.559704ms)
  Apr 20 14:23:07.158: INFO: (5) /api/v1/namespaces/proxy-7270/services/https:proxy-service-hg2s8:tlsportname2/proxy/: tls qux (200; 25.490934ms)
  Apr 20 14:23:07.178: INFO: (6) /api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk:160/proxy/: foo (200; 19.660353ms)
  Apr 20 14:23:07.180: INFO: (6) /api/v1/namespaces/proxy-7270/services/http:proxy-service-hg2s8:portname1/proxy/: foo (200; 21.800866ms)
  Apr 20 14:23:07.181: INFO: (6) /api/v1/namespaces/proxy-7270/pods/http:proxy-service-hg2s8-bd4mk:1080/proxy/: <a href="/api/v1/namespaces/proxy-7270/pods/http:proxy-service-hg2s8-bd4mk:1080/proxy/rewriteme">... (200; 21.496434ms)
  Apr 20 14:23:07.181: INFO: (6) /api/v1/namespaces/proxy-7270/pods/http:proxy-service-hg2s8-bd4mk:160/proxy/: foo (200; 21.723918ms)
  Apr 20 14:23:07.181: INFO: (6) /api/v1/namespaces/proxy-7270/pods/https:proxy-service-hg2s8-bd4mk:460/proxy/: tls baz (200; 22.502962ms)
  Apr 20 14:23:07.181: INFO: (6) /api/v1/namespaces/proxy-7270/pods/http:proxy-service-hg2s8-bd4mk:162/proxy/: bar (200; 21.885069ms)
  Apr 20 14:23:07.181: INFO: (6) /api/v1/namespaces/proxy-7270/services/https:proxy-service-hg2s8:tlsportname2/proxy/: tls qux (200; 22.834516ms)
  Apr 20 14:23:07.182: INFO: (6) /api/v1/namespaces/proxy-7270/services/proxy-service-hg2s8:portname1/proxy/: foo (200; 23.75769ms)
  Apr 20 14:23:07.184: INFO: (6) /api/v1/namespaces/proxy-7270/services/https:proxy-service-hg2s8:tlsportname1/proxy/: tls baz (200; 24.621094ms)
  Apr 20 14:23:07.184: INFO: (6) /api/v1/namespaces/proxy-7270/pods/https:proxy-service-hg2s8-bd4mk:462/proxy/: tls qux (200; 24.488772ms)
  Apr 20 14:23:07.184: INFO: (6) /api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk:1080/proxy/: <a href="/api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk:1080/proxy/rewriteme">test<... (200; 24.706512ms)
  Apr 20 14:23:07.184: INFO: (6) /api/v1/namespaces/proxy-7270/pods/https:proxy-service-hg2s8-bd4mk:443/proxy/: <a href="/api/v1/namespaces/proxy-7270/pods/https:proxy-service-hg2s8-bd4mk:443/proxy/tlsrewritem... (200; 24.555683ms)
  Apr 20 14:23:07.184: INFO: (6) /api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk:162/proxy/: bar (200; 25.508547ms)
  Apr 20 14:23:07.184: INFO: (6) /api/v1/namespaces/proxy-7270/services/http:proxy-service-hg2s8:portname2/proxy/: bar (200; 24.427957ms)
  Apr 20 14:23:07.184: INFO: (6) /api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk/proxy/: <a href="/api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk/proxy/rewriteme">test</a> (200; 24.396928ms)
  Apr 20 14:23:07.186: INFO: (6) /api/v1/namespaces/proxy-7270/services/proxy-service-hg2s8:portname2/proxy/: bar (200; 27.276972ms)
  Apr 20 14:23:07.200: INFO: (7) /api/v1/namespaces/proxy-7270/pods/http:proxy-service-hg2s8-bd4mk:160/proxy/: foo (200; 12.687565ms)
  Apr 20 14:23:07.201: INFO: (7) /api/v1/namespaces/proxy-7270/pods/http:proxy-service-hg2s8-bd4mk:162/proxy/: bar (200; 14.874696ms)
  Apr 20 14:23:07.203: INFO: (7) /api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk/proxy/: <a href="/api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk/proxy/rewriteme">test</a> (200; 16.339207ms)
  Apr 20 14:23:07.209: INFO: (7) /api/v1/namespaces/proxy-7270/pods/http:proxy-service-hg2s8-bd4mk:1080/proxy/: <a href="/api/v1/namespaces/proxy-7270/pods/http:proxy-service-hg2s8-bd4mk:1080/proxy/rewriteme">... (200; 22.322492ms)
  Apr 20 14:23:07.209: INFO: (7) /api/v1/namespaces/proxy-7270/pods/https:proxy-service-hg2s8-bd4mk:443/proxy/: <a href="/api/v1/namespaces/proxy-7270/pods/https:proxy-service-hg2s8-bd4mk:443/proxy/tlsrewritem... (200; 22.406574ms)
  Apr 20 14:23:07.210: INFO: (7) /api/v1/namespaces/proxy-7270/services/https:proxy-service-hg2s8:tlsportname2/proxy/: tls qux (200; 22.909111ms)
  Apr 20 14:23:07.210: INFO: (7) /api/v1/namespaces/proxy-7270/services/http:proxy-service-hg2s8:portname2/proxy/: bar (200; 22.50579ms)
  Apr 20 14:23:07.214: INFO: (7) /api/v1/namespaces/proxy-7270/services/proxy-service-hg2s8:portname1/proxy/: foo (200; 26.61258ms)
  Apr 20 14:23:07.214: INFO: (7) /api/v1/namespaces/proxy-7270/pods/https:proxy-service-hg2s8-bd4mk:462/proxy/: tls qux (200; 26.746824ms)
  Apr 20 14:23:07.214: INFO: (7) /api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk:1080/proxy/: <a href="/api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk:1080/proxy/rewriteme">test<... (200; 26.541485ms)
  Apr 20 14:23:07.214: INFO: (7) /api/v1/namespaces/proxy-7270/services/https:proxy-service-hg2s8:tlsportname1/proxy/: tls baz (200; 26.66626ms)
  Apr 20 14:23:07.214: INFO: (7) /api/v1/namespaces/proxy-7270/pods/https:proxy-service-hg2s8-bd4mk:460/proxy/: tls baz (200; 26.963972ms)
  Apr 20 14:23:07.214: INFO: (7) /api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk:160/proxy/: foo (200; 26.559979ms)
  Apr 20 14:23:07.214: INFO: (7) /api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk:162/proxy/: bar (200; 27.101998ms)
  Apr 20 14:23:07.214: INFO: (7) /api/v1/namespaces/proxy-7270/services/proxy-service-hg2s8:portname2/proxy/: bar (200; 27.59425ms)
  Apr 20 14:23:07.218: INFO: (7) /api/v1/namespaces/proxy-7270/services/http:proxy-service-hg2s8:portname1/proxy/: foo (200; 30.376242ms)
  Apr 20 14:23:07.226: INFO: (8) /api/v1/namespaces/proxy-7270/pods/http:proxy-service-hg2s8-bd4mk:160/proxy/: foo (200; 8.598083ms)
  Apr 20 14:23:07.234: INFO: (8) /api/v1/namespaces/proxy-7270/pods/https:proxy-service-hg2s8-bd4mk:443/proxy/: <a href="/api/v1/namespaces/proxy-7270/pods/https:proxy-service-hg2s8-bd4mk:443/proxy/tlsrewritem... (200; 15.197863ms)
  Apr 20 14:23:07.234: INFO: (8) /api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk:162/proxy/: bar (200; 15.010405ms)
  Apr 20 14:23:07.234: INFO: (8) /api/v1/namespaces/proxy-7270/pods/https:proxy-service-hg2s8-bd4mk:462/proxy/: tls qux (200; 14.466754ms)
  Apr 20 14:23:07.235: INFO: (8) /api/v1/namespaces/proxy-7270/pods/https:proxy-service-hg2s8-bd4mk:460/proxy/: tls baz (200; 16.681075ms)
  Apr 20 14:23:07.237: INFO: (8) /api/v1/namespaces/proxy-7270/services/proxy-service-hg2s8:portname1/proxy/: foo (200; 19.206543ms)
  Apr 20 14:23:07.237: INFO: (8) /api/v1/namespaces/proxy-7270/pods/http:proxy-service-hg2s8-bd4mk:162/proxy/: bar (200; 18.96587ms)
  Apr 20 14:23:07.240: INFO: (8) /api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk/proxy/: <a href="/api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk/proxy/rewriteme">test</a> (200; 20.735446ms)
  Apr 20 14:23:07.240: INFO: (8) /api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk:160/proxy/: foo (200; 21.090551ms)
  Apr 20 14:23:07.240: INFO: (8) /api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk:1080/proxy/: <a href="/api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk:1080/proxy/rewriteme">test<... (200; 20.631636ms)
  Apr 20 14:23:07.240: INFO: (8) /api/v1/namespaces/proxy-7270/services/https:proxy-service-hg2s8:tlsportname1/proxy/: tls baz (200; 21.536357ms)
  Apr 20 14:23:07.240: INFO: (8) /api/v1/namespaces/proxy-7270/pods/http:proxy-service-hg2s8-bd4mk:1080/proxy/: <a href="/api/v1/namespaces/proxy-7270/pods/http:proxy-service-hg2s8-bd4mk:1080/proxy/rewriteme">... (200; 20.790987ms)
  Apr 20 14:23:07.240: INFO: (8) /api/v1/namespaces/proxy-7270/services/http:proxy-service-hg2s8:portname2/proxy/: bar (200; 21.295529ms)
  Apr 20 14:23:07.242: INFO: (8) /api/v1/namespaces/proxy-7270/services/http:proxy-service-hg2s8:portname1/proxy/: foo (200; 23.303751ms)
  Apr 20 14:23:07.243: INFO: (8) /api/v1/namespaces/proxy-7270/services/proxy-service-hg2s8:portname2/proxy/: bar (200; 24.658003ms)
  Apr 20 14:23:07.244: INFO: (8) /api/v1/namespaces/proxy-7270/services/https:proxy-service-hg2s8:tlsportname2/proxy/: tls qux (200; 24.978801ms)
  Apr 20 14:23:07.260: INFO: (9) /api/v1/namespaces/proxy-7270/pods/https:proxy-service-hg2s8-bd4mk:462/proxy/: tls qux (200; 15.691296ms)
  Apr 20 14:23:07.262: INFO: (9) /api/v1/namespaces/proxy-7270/pods/http:proxy-service-hg2s8-bd4mk:160/proxy/: foo (200; 17.479252ms)
  Apr 20 14:23:07.262: INFO: (9) /api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk:160/proxy/: foo (200; 17.762005ms)
  Apr 20 14:23:07.263: INFO: (9) /api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk:162/proxy/: bar (200; 17.349595ms)
  Apr 20 14:23:07.263: INFO: (9) /api/v1/namespaces/proxy-7270/pods/https:proxy-service-hg2s8-bd4mk:460/proxy/: tls baz (200; 17.606975ms)
  Apr 20 14:23:07.263: INFO: (9) /api/v1/namespaces/proxy-7270/pods/http:proxy-service-hg2s8-bd4mk:162/proxy/: bar (200; 18.430012ms)
  Apr 20 14:23:07.263: INFO: (9) /api/v1/namespaces/proxy-7270/pods/https:proxy-service-hg2s8-bd4mk:443/proxy/: <a href="/api/v1/namespaces/proxy-7270/pods/https:proxy-service-hg2s8-bd4mk:443/proxy/tlsrewritem... (200; 18.357343ms)
  Apr 20 14:23:07.267: INFO: (9) /api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk/proxy/: <a href="/api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk/proxy/rewriteme">test</a> (200; 21.518582ms)
  Apr 20 14:23:07.268: INFO: (9) /api/v1/namespaces/proxy-7270/pods/http:proxy-service-hg2s8-bd4mk:1080/proxy/: <a href="/api/v1/namespaces/proxy-7270/pods/http:proxy-service-hg2s8-bd4mk:1080/proxy/rewriteme">... (200; 21.819411ms)
  Apr 20 14:23:07.268: INFO: (9) /api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk:1080/proxy/: <a href="/api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk:1080/proxy/rewriteme">test<... (200; 21.971639ms)
  Apr 20 14:23:07.271: INFO: (9) /api/v1/namespaces/proxy-7270/services/https:proxy-service-hg2s8:tlsportname2/proxy/: tls qux (200; 25.850292ms)
  Apr 20 14:23:07.274: INFO: (9) /api/v1/namespaces/proxy-7270/services/http:proxy-service-hg2s8:portname1/proxy/: foo (200; 29.598832ms)
  Apr 20 14:23:07.274: INFO: (9) /api/v1/namespaces/proxy-7270/services/http:proxy-service-hg2s8:portname2/proxy/: bar (200; 29.57596ms)
  Apr 20 14:23:07.275: INFO: (9) /api/v1/namespaces/proxy-7270/services/https:proxy-service-hg2s8:tlsportname1/proxy/: tls baz (200; 29.279858ms)
  Apr 20 14:23:07.277: INFO: (9) /api/v1/namespaces/proxy-7270/services/proxy-service-hg2s8:portname2/proxy/: bar (200; 30.662716ms)
  Apr 20 14:23:07.279: INFO: (9) /api/v1/namespaces/proxy-7270/services/proxy-service-hg2s8:portname1/proxy/: foo (200; 33.050127ms)
  Apr 20 14:23:07.292: INFO: (10) /api/v1/namespaces/proxy-7270/pods/http:proxy-service-hg2s8-bd4mk:160/proxy/: foo (200; 12.542738ms)
  Apr 20 14:23:07.293: INFO: (10) /api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk:160/proxy/: foo (200; 13.34252ms)
  Apr 20 14:23:07.294: INFO: (10) /api/v1/namespaces/proxy-7270/pods/http:proxy-service-hg2s8-bd4mk:162/proxy/: bar (200; 13.859715ms)
  Apr 20 14:23:07.302: INFO: (10) /api/v1/namespaces/proxy-7270/pods/https:proxy-service-hg2s8-bd4mk:443/proxy/: <a href="/api/v1/namespaces/proxy-7270/pods/https:proxy-service-hg2s8-bd4mk:443/proxy/tlsrewritem... (200; 23.444684ms)
  Apr 20 14:23:07.305: INFO: (10) /api/v1/namespaces/proxy-7270/services/http:proxy-service-hg2s8:portname2/proxy/: bar (200; 25.66213ms)
  Apr 20 14:23:07.305: INFO: (10) /api/v1/namespaces/proxy-7270/pods/http:proxy-service-hg2s8-bd4mk:1080/proxy/: <a href="/api/v1/namespaces/proxy-7270/pods/http:proxy-service-hg2s8-bd4mk:1080/proxy/rewriteme">... (200; 24.195837ms)
  Apr 20 14:23:07.306: INFO: (10) /api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk/proxy/: <a href="/api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk/proxy/rewriteme">test</a> (200; 25.616877ms)
  Apr 20 14:23:07.306: INFO: (10) /api/v1/namespaces/proxy-7270/pods/https:proxy-service-hg2s8-bd4mk:460/proxy/: tls baz (200; 25.127681ms)
  Apr 20 14:23:07.306: INFO: (10) /api/v1/namespaces/proxy-7270/pods/https:proxy-service-hg2s8-bd4mk:462/proxy/: tls qux (200; 24.21964ms)
  Apr 20 14:23:07.306: INFO: (10) /api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk:1080/proxy/: <a href="/api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk:1080/proxy/rewriteme">test<... (200; 24.465161ms)
  Apr 20 14:23:07.306: INFO: (10) /api/v1/namespaces/proxy-7270/services/https:proxy-service-hg2s8:tlsportname2/proxy/: tls qux (200; 25.567219ms)
  Apr 20 14:23:07.306: INFO: (10) /api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk:162/proxy/: bar (200; 25.893955ms)
  Apr 20 14:23:07.307: INFO: (10) /api/v1/namespaces/proxy-7270/services/http:proxy-service-hg2s8:portname1/proxy/: foo (200; 26.394785ms)
  Apr 20 14:23:07.310: INFO: (10) /api/v1/namespaces/proxy-7270/services/proxy-service-hg2s8:portname2/proxy/: bar (200; 28.772039ms)
  Apr 20 14:23:07.310: INFO: (10) /api/v1/namespaces/proxy-7270/services/proxy-service-hg2s8:portname1/proxy/: foo (200; 29.186146ms)
  Apr 20 14:23:07.315: INFO: (10) /api/v1/namespaces/proxy-7270/services/https:proxy-service-hg2s8:tlsportname1/proxy/: tls baz (200; 33.912349ms)
  Apr 20 14:23:07.329: INFO: (11) /api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk:162/proxy/: bar (200; 12.404365ms)
  Apr 20 14:23:07.334: INFO: (11) /api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk:160/proxy/: foo (200; 17.073816ms)
  Apr 20 14:23:07.344: INFO: (11) /api/v1/namespaces/proxy-7270/pods/https:proxy-service-hg2s8-bd4mk:460/proxy/: tls baz (200; 26.56535ms)
  Apr 20 14:23:07.350: INFO: (11) /api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk:1080/proxy/: <a href="/api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk:1080/proxy/rewriteme">test<... (200; 32.323647ms)
  Apr 20 14:23:07.353: INFO: (11) /api/v1/namespaces/proxy-7270/services/proxy-service-hg2s8:portname2/proxy/: bar (200; 35.769434ms)
  Apr 20 14:23:07.353: INFO: (11) /api/v1/namespaces/proxy-7270/pods/http:proxy-service-hg2s8-bd4mk:160/proxy/: foo (200; 36.486655ms)
  Apr 20 14:23:07.353: INFO: (11) /api/v1/namespaces/proxy-7270/pods/https:proxy-service-hg2s8-bd4mk:462/proxy/: tls qux (200; 35.782339ms)
  Apr 20 14:23:07.353: INFO: (11) /api/v1/namespaces/proxy-7270/services/https:proxy-service-hg2s8:tlsportname2/proxy/: tls qux (200; 36.308897ms)
  Apr 20 14:23:07.353: INFO: (11) /api/v1/namespaces/proxy-7270/pods/https:proxy-service-hg2s8-bd4mk:443/proxy/: <a href="/api/v1/namespaces/proxy-7270/pods/https:proxy-service-hg2s8-bd4mk:443/proxy/tlsrewritem... (200; 36.421597ms)
  Apr 20 14:23:07.354: INFO: (11) /api/v1/namespaces/proxy-7270/services/proxy-service-hg2s8:portname1/proxy/: foo (200; 36.058113ms)
  Apr 20 14:23:07.354: INFO: (11) /api/v1/namespaces/proxy-7270/services/https:proxy-service-hg2s8:tlsportname1/proxy/: tls baz (200; 36.254645ms)
  Apr 20 14:23:07.354: INFO: (11) /api/v1/namespaces/proxy-7270/services/http:proxy-service-hg2s8:portname1/proxy/: foo (200; 37.087399ms)
  Apr 20 14:23:07.354: INFO: (11) /api/v1/namespaces/proxy-7270/pods/http:proxy-service-hg2s8-bd4mk:162/proxy/: bar (200; 36.736571ms)
  Apr 20 14:23:07.354: INFO: (11) /api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk/proxy/: <a href="/api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk/proxy/rewriteme">test</a> (200; 36.457776ms)
  Apr 20 14:23:07.354: INFO: (11) /api/v1/namespaces/proxy-7270/pods/http:proxy-service-hg2s8-bd4mk:1080/proxy/: <a href="/api/v1/namespaces/proxy-7270/pods/http:proxy-service-hg2s8-bd4mk:1080/proxy/rewriteme">... (200; 36.172835ms)
  Apr 20 14:23:07.354: INFO: (11) /api/v1/namespaces/proxy-7270/services/http:proxy-service-hg2s8:portname2/proxy/: bar (200; 37.230581ms)
  Apr 20 14:23:07.385: INFO: (12) /api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk:1080/proxy/: <a href="/api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk:1080/proxy/rewriteme">test<... (200; 29.143774ms)
  Apr 20 14:23:07.385: INFO: (12) /api/v1/namespaces/proxy-7270/pods/http:proxy-service-hg2s8-bd4mk:1080/proxy/: <a href="/api/v1/namespaces/proxy-7270/pods/http:proxy-service-hg2s8-bd4mk:1080/proxy/rewriteme">... (200; 29.171412ms)
  Apr 20 14:23:07.385: INFO: (12) /api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk:162/proxy/: bar (200; 30.717364ms)
  Apr 20 14:23:07.385: INFO: (12) /api/v1/namespaces/proxy-7270/pods/https:proxy-service-hg2s8-bd4mk:462/proxy/: tls qux (200; 29.264505ms)
  Apr 20 14:23:07.385: INFO: (12) /api/v1/namespaces/proxy-7270/pods/https:proxy-service-hg2s8-bd4mk:443/proxy/: <a href="/api/v1/namespaces/proxy-7270/pods/https:proxy-service-hg2s8-bd4mk:443/proxy/tlsrewritem... (200; 28.614376ms)
  Apr 20 14:23:07.392: INFO: (12) /api/v1/namespaces/proxy-7270/pods/http:proxy-service-hg2s8-bd4mk:162/proxy/: bar (200; 36.533387ms)
  Apr 20 14:23:07.393: INFO: (12) /api/v1/namespaces/proxy-7270/services/proxy-service-hg2s8:portname1/proxy/: foo (200; 36.950195ms)
  Apr 20 14:23:07.393: INFO: (12) /api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk:160/proxy/: foo (200; 35.571342ms)
  Apr 20 14:23:07.393: INFO: (12) /api/v1/namespaces/proxy-7270/pods/http:proxy-service-hg2s8-bd4mk:160/proxy/: foo (200; 35.331723ms)
  Apr 20 14:23:07.393: INFO: (12) /api/v1/namespaces/proxy-7270/services/http:proxy-service-hg2s8:portname2/proxy/: bar (200; 36.243687ms)
  Apr 20 14:23:07.404: INFO: (12) /api/v1/namespaces/proxy-7270/services/https:proxy-service-hg2s8:tlsportname1/proxy/: tls baz (200; 48.349378ms)
  Apr 20 14:23:07.405: INFO: (12) /api/v1/namespaces/proxy-7270/services/proxy-service-hg2s8:portname2/proxy/: bar (200; 48.810083ms)
  Apr 20 14:23:07.405: INFO: (12) /api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk/proxy/: <a href="/api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk/proxy/rewriteme">test</a> (200; 45.617869ms)
  Apr 20 14:23:07.405: INFO: (12) /api/v1/namespaces/proxy-7270/pods/https:proxy-service-hg2s8-bd4mk:460/proxy/: tls baz (200; 47.179102ms)
  Apr 20 14:23:07.405: INFO: (12) /api/v1/namespaces/proxy-7270/services/http:proxy-service-hg2s8:portname1/proxy/: foo (200; 49.573847ms)
  Apr 20 14:23:07.406: INFO: (12) /api/v1/namespaces/proxy-7270/services/https:proxy-service-hg2s8:tlsportname2/proxy/: tls qux (200; 47.251987ms)
  Apr 20 14:23:07.429: INFO: (13) /api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk:160/proxy/: foo (200; 21.996495ms)
  Apr 20 14:23:07.443: INFO: (13) /api/v1/namespaces/proxy-7270/pods/https:proxy-service-hg2s8-bd4mk:462/proxy/: tls qux (200; 34.435853ms)
  Apr 20 14:23:07.444: INFO: (13) /api/v1/namespaces/proxy-7270/pods/http:proxy-service-hg2s8-bd4mk:160/proxy/: foo (200; 36.016253ms)
  Apr 20 14:23:07.455: INFO: (13) /api/v1/namespaces/proxy-7270/pods/https:proxy-service-hg2s8-bd4mk:460/proxy/: tls baz (200; 46.665001ms)
  Apr 20 14:23:07.459: INFO: (13) /api/v1/namespaces/proxy-7270/services/http:proxy-service-hg2s8:portname1/proxy/: foo (200; 52.62326ms)
  Apr 20 14:23:07.459: INFO: (13) /api/v1/namespaces/proxy-7270/pods/http:proxy-service-hg2s8-bd4mk:1080/proxy/: <a href="/api/v1/namespaces/proxy-7270/pods/http:proxy-service-hg2s8-bd4mk:1080/proxy/rewriteme">... (200; 48.439477ms)
  Apr 20 14:23:07.463: INFO: (13) /api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk:162/proxy/: bar (200; 54.274316ms)
  Apr 20 14:23:07.463: INFO: (13) /api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk:1080/proxy/: <a href="/api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk:1080/proxy/rewriteme">test<... (200; 52.798177ms)
  Apr 20 14:23:07.465: INFO: (13) /api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk/proxy/: <a href="/api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk/proxy/rewriteme">test</a> (200; 56.144701ms)
  Apr 20 14:23:07.465: INFO: (13) /api/v1/namespaces/proxy-7270/services/http:proxy-service-hg2s8:portname2/proxy/: bar (200; 58.067565ms)
  Apr 20 14:23:07.465: INFO: (13) /api/v1/namespaces/proxy-7270/services/proxy-service-hg2s8:portname2/proxy/: bar (200; 55.346464ms)
  Apr 20 14:23:07.465: INFO: (13) /api/v1/namespaces/proxy-7270/pods/https:proxy-service-hg2s8-bd4mk:443/proxy/: <a href="/api/v1/namespaces/proxy-7270/pods/https:proxy-service-hg2s8-bd4mk:443/proxy/tlsrewritem... (200; 56.967367ms)
  Apr 20 14:23:07.467: INFO: (13) /api/v1/namespaces/proxy-7270/pods/http:proxy-service-hg2s8-bd4mk:162/proxy/: bar (200; 59.466167ms)
  Apr 20 14:23:07.467: INFO: (13) /api/v1/namespaces/proxy-7270/services/https:proxy-service-hg2s8:tlsportname1/proxy/: tls baz (200; 57.634047ms)
  Apr 20 14:23:07.468: INFO: (13) /api/v1/namespaces/proxy-7270/services/proxy-service-hg2s8:portname1/proxy/: foo (200; 58.372395ms)
  Apr 20 14:23:07.469: INFO: (13) /api/v1/namespaces/proxy-7270/services/https:proxy-service-hg2s8:tlsportname2/proxy/: tls qux (200; 60.377003ms)
  Apr 20 14:23:07.493: INFO: (14) /api/v1/namespaces/proxy-7270/pods/http:proxy-service-hg2s8-bd4mk:160/proxy/: foo (200; 23.512247ms)
  Apr 20 14:23:07.498: INFO: (14) /api/v1/namespaces/proxy-7270/pods/http:proxy-service-hg2s8-bd4mk:1080/proxy/: <a href="/api/v1/namespaces/proxy-7270/pods/http:proxy-service-hg2s8-bd4mk:1080/proxy/rewriteme">... (200; 29.228353ms)
  Apr 20 14:23:07.505: INFO: (14) /api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk:160/proxy/: foo (200; 35.30272ms)
  Apr 20 14:23:07.505: INFO: (14) /api/v1/namespaces/proxy-7270/pods/http:proxy-service-hg2s8-bd4mk:162/proxy/: bar (200; 35.087992ms)
  Apr 20 14:23:07.506: INFO: (14) /api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk/proxy/: <a href="/api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk/proxy/rewriteme">test</a> (200; 36.240797ms)
  Apr 20 14:23:07.506: INFO: (14) /api/v1/namespaces/proxy-7270/pods/https:proxy-service-hg2s8-bd4mk:460/proxy/: tls baz (200; 36.468598ms)
  Apr 20 14:23:07.506: INFO: (14) /api/v1/namespaces/proxy-7270/services/http:proxy-service-hg2s8:portname1/proxy/: foo (200; 37.109257ms)
  Apr 20 14:23:07.506: INFO: (14) /api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk:1080/proxy/: <a href="/api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk:1080/proxy/rewriteme">test<... (200; 37.146009ms)
  Apr 20 14:23:07.508: INFO: (14) /api/v1/namespaces/proxy-7270/services/http:proxy-service-hg2s8:portname2/proxy/: bar (200; 39.295628ms)
  Apr 20 14:23:07.508: INFO: (14) /api/v1/namespaces/proxy-7270/services/proxy-service-hg2s8:portname1/proxy/: foo (200; 38.613204ms)
  Apr 20 14:23:07.509: INFO: (14) /api/v1/namespaces/proxy-7270/services/https:proxy-service-hg2s8:tlsportname2/proxy/: tls qux (200; 38.951672ms)
  Apr 20 14:23:07.509: INFO: (14) /api/v1/namespaces/proxy-7270/pods/https:proxy-service-hg2s8-bd4mk:462/proxy/: tls qux (200; 39.069852ms)
  Apr 20 14:23:07.509: INFO: (14) /api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk:162/proxy/: bar (200; 39.230571ms)
  Apr 20 14:23:07.511: INFO: (14) /api/v1/namespaces/proxy-7270/pods/https:proxy-service-hg2s8-bd4mk:443/proxy/: <a href="/api/v1/namespaces/proxy-7270/pods/https:proxy-service-hg2s8-bd4mk:443/proxy/tlsrewritem... (200; 42.711815ms)
  Apr 20 14:23:07.512: INFO: (14) /api/v1/namespaces/proxy-7270/services/https:proxy-service-hg2s8:tlsportname1/proxy/: tls baz (200; 43.453486ms)
  Apr 20 14:23:07.515: INFO: (14) /api/v1/namespaces/proxy-7270/services/proxy-service-hg2s8:portname2/proxy/: bar (200; 44.446899ms)
  Apr 20 14:23:07.539: INFO: (15) /api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk:162/proxy/: bar (200; 23.348858ms)
  Apr 20 14:23:07.541: INFO: (15) /api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk/proxy/: <a href="/api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk/proxy/rewriteme">test</a> (200; 25.256402ms)
  Apr 20 14:23:07.544: INFO: (15) /api/v1/namespaces/proxy-7270/services/proxy-service-hg2s8:portname1/proxy/: foo (200; 28.541585ms)
  Apr 20 14:23:07.554: INFO: (15) /api/v1/namespaces/proxy-7270/pods/http:proxy-service-hg2s8-bd4mk:162/proxy/: bar (200; 38.666001ms)
  Apr 20 14:23:07.554: INFO: (15) /api/v1/namespaces/proxy-7270/services/http:proxy-service-hg2s8:portname2/proxy/: bar (200; 38.031921ms)
  Apr 20 14:23:07.554: INFO: (15) /api/v1/namespaces/proxy-7270/pods/http:proxy-service-hg2s8-bd4mk:1080/proxy/: <a href="/api/v1/namespaces/proxy-7270/pods/http:proxy-service-hg2s8-bd4mk:1080/proxy/rewriteme">... (200; 38.16594ms)
  Apr 20 14:23:07.554: INFO: (15) /api/v1/namespaces/proxy-7270/pods/http:proxy-service-hg2s8-bd4mk:160/proxy/: foo (200; 38.909172ms)
  Apr 20 14:23:07.554: INFO: (15) /api/v1/namespaces/proxy-7270/services/proxy-service-hg2s8:portname2/proxy/: bar (200; 39.204245ms)
  Apr 20 14:23:07.554: INFO: (15) /api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk:160/proxy/: foo (200; 38.061975ms)
  Apr 20 14:23:07.554: INFO: (15) /api/v1/namespaces/proxy-7270/pods/https:proxy-service-hg2s8-bd4mk:460/proxy/: tls baz (200; 39.866457ms)
  Apr 20 14:23:07.554: INFO: (15) /api/v1/namespaces/proxy-7270/pods/https:proxy-service-hg2s8-bd4mk:462/proxy/: tls qux (200; 39.567656ms)
  Apr 20 14:23:07.555: INFO: (15) /api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk:1080/proxy/: <a href="/api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk:1080/proxy/rewriteme">test<... (200; 38.46811ms)
  Apr 20 14:23:07.555: INFO: (15) /api/v1/namespaces/proxy-7270/services/https:proxy-service-hg2s8:tlsportname2/proxy/: tls qux (200; 38.760234ms)
  Apr 20 14:23:07.555: INFO: (15) /api/v1/namespaces/proxy-7270/services/https:proxy-service-hg2s8:tlsportname1/proxy/: tls baz (200; 39.144029ms)
  Apr 20 14:23:07.555: INFO: (15) /api/v1/namespaces/proxy-7270/pods/https:proxy-service-hg2s8-bd4mk:443/proxy/: <a href="/api/v1/namespaces/proxy-7270/pods/https:proxy-service-hg2s8-bd4mk:443/proxy/tlsrewritem... (200; 38.868007ms)
  Apr 20 14:23:07.555: INFO: (15) /api/v1/namespaces/proxy-7270/services/http:proxy-service-hg2s8:portname1/proxy/: foo (200; 38.631064ms)
  Apr 20 14:23:07.581: INFO: (16) /api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk:162/proxy/: bar (200; 25.967446ms)
  Apr 20 14:23:07.583: INFO: (16) /api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk:1080/proxy/: <a href="/api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk:1080/proxy/rewriteme">test<... (200; 28.11903ms)
  Apr 20 14:23:07.586: INFO: (16) /api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk/proxy/: <a href="/api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk/proxy/rewriteme">test</a> (200; 31.515104ms)
  Apr 20 14:23:07.588: INFO: (16) /api/v1/namespaces/proxy-7270/pods/http:proxy-service-hg2s8-bd4mk:160/proxy/: foo (200; 32.346154ms)
  Apr 20 14:23:07.591: INFO: (16) /api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk:160/proxy/: foo (200; 35.027539ms)
  Apr 20 14:23:07.592: INFO: (16) /api/v1/namespaces/proxy-7270/pods/https:proxy-service-hg2s8-bd4mk:443/proxy/: <a href="/api/v1/namespaces/proxy-7270/pods/https:proxy-service-hg2s8-bd4mk:443/proxy/tlsrewritem... (200; 37.519211ms)
  Apr 20 14:23:07.594: INFO: (16) /api/v1/namespaces/proxy-7270/pods/http:proxy-service-hg2s8-bd4mk:1080/proxy/: <a href="/api/v1/namespaces/proxy-7270/pods/http:proxy-service-hg2s8-bd4mk:1080/proxy/rewriteme">... (200; 38.254399ms)
  Apr 20 14:23:07.594: INFO: (16) /api/v1/namespaces/proxy-7270/pods/https:proxy-service-hg2s8-bd4mk:460/proxy/: tls baz (200; 39.28553ms)
  Apr 20 14:23:07.594: INFO: (16) /api/v1/namespaces/proxy-7270/pods/http:proxy-service-hg2s8-bd4mk:162/proxy/: bar (200; 38.214183ms)
  Apr 20 14:23:07.596: INFO: (16) /api/v1/namespaces/proxy-7270/pods/https:proxy-service-hg2s8-bd4mk:462/proxy/: tls qux (200; 39.862156ms)
  Apr 20 14:23:07.597: INFO: (16) /api/v1/namespaces/proxy-7270/services/https:proxy-service-hg2s8:tlsportname2/proxy/: tls qux (200; 41.768395ms)
  Apr 20 14:23:07.599: INFO: (16) /api/v1/namespaces/proxy-7270/services/http:proxy-service-hg2s8:portname1/proxy/: foo (200; 43.39198ms)
  Apr 20 14:23:07.600: INFO: (16) /api/v1/namespaces/proxy-7270/services/proxy-service-hg2s8:portname1/proxy/: foo (200; 44.538378ms)
  Apr 20 14:23:07.605: INFO: (16) /api/v1/namespaces/proxy-7270/services/http:proxy-service-hg2s8:portname2/proxy/: bar (200; 49.335393ms)
  Apr 20 14:23:07.605: INFO: (16) /api/v1/namespaces/proxy-7270/services/https:proxy-service-hg2s8:tlsportname1/proxy/: tls baz (200; 49.433916ms)
  Apr 20 14:23:07.606: INFO: (16) /api/v1/namespaces/proxy-7270/services/proxy-service-hg2s8:portname2/proxy/: bar (200; 50.541642ms)
  Apr 20 14:23:07.622: INFO: (17) /api/v1/namespaces/proxy-7270/pods/https:proxy-service-hg2s8-bd4mk:443/proxy/: <a href="/api/v1/namespaces/proxy-7270/pods/https:proxy-service-hg2s8-bd4mk:443/proxy/tlsrewritem... (200; 15.330541ms)
  Apr 20 14:23:07.622: INFO: (17) /api/v1/namespaces/proxy-7270/pods/http:proxy-service-hg2s8-bd4mk:1080/proxy/: <a href="/api/v1/namespaces/proxy-7270/pods/http:proxy-service-hg2s8-bd4mk:1080/proxy/rewriteme">... (200; 15.873946ms)
  Apr 20 14:23:07.623: INFO: (17) /api/v1/namespaces/proxy-7270/pods/https:proxy-service-hg2s8-bd4mk:462/proxy/: tls qux (200; 16.044233ms)
  Apr 20 14:23:07.625: INFO: (17) /api/v1/namespaces/proxy-7270/pods/https:proxy-service-hg2s8-bd4mk:460/proxy/: tls baz (200; 18.753526ms)
  Apr 20 14:23:07.639: INFO: (17) /api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk:1080/proxy/: <a href="/api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk:1080/proxy/rewriteme">test<... (200; 32.716012ms)
  Apr 20 14:23:07.639: INFO: (17) /api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk/proxy/: <a href="/api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk/proxy/rewriteme">test</a> (200; 32.406447ms)
  Apr 20 14:23:07.640: INFO: (17) /api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk:162/proxy/: bar (200; 32.239387ms)
  Apr 20 14:23:07.639: INFO: (17) /api/v1/namespaces/proxy-7270/pods/http:proxy-service-hg2s8-bd4mk:160/proxy/: foo (200; 32.482201ms)
  Apr 20 14:23:07.640: INFO: (17) /api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk:160/proxy/: foo (200; 32.599854ms)
  Apr 20 14:23:07.640: INFO: (17) /api/v1/namespaces/proxy-7270/pods/http:proxy-service-hg2s8-bd4mk:162/proxy/: bar (200; 32.8451ms)
  Apr 20 14:23:07.640: INFO: (17) /api/v1/namespaces/proxy-7270/services/https:proxy-service-hg2s8:tlsportname1/proxy/: tls baz (200; 32.989704ms)
  Apr 20 14:23:07.641: INFO: (17) /api/v1/namespaces/proxy-7270/services/http:proxy-service-hg2s8:portname2/proxy/: bar (200; 33.788779ms)
  Apr 20 14:23:07.641: INFO: (17) /api/v1/namespaces/proxy-7270/services/http:proxy-service-hg2s8:portname1/proxy/: foo (200; 34.263841ms)
  Apr 20 14:23:07.641: INFO: (17) /api/v1/namespaces/proxy-7270/services/https:proxy-service-hg2s8:tlsportname2/proxy/: tls qux (200; 33.887106ms)
  Apr 20 14:23:07.641: INFO: (17) /api/v1/namespaces/proxy-7270/services/proxy-service-hg2s8:portname1/proxy/: foo (200; 34.575426ms)
  Apr 20 14:23:07.642: INFO: (17) /api/v1/namespaces/proxy-7270/services/proxy-service-hg2s8:portname2/proxy/: bar (200; 35.786954ms)
  Apr 20 14:23:07.661: INFO: (18) /api/v1/namespaces/proxy-7270/pods/https:proxy-service-hg2s8-bd4mk:462/proxy/: tls qux (200; 18.698219ms)
  Apr 20 14:23:07.670: INFO: (18) /api/v1/namespaces/proxy-7270/pods/http:proxy-service-hg2s8-bd4mk:160/proxy/: foo (200; 26.743342ms)
  Apr 20 14:23:07.670: INFO: (18) /api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk:1080/proxy/: <a href="/api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk:1080/proxy/rewriteme">test<... (200; 25.818315ms)
  Apr 20 14:23:07.670: INFO: (18) /api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk:160/proxy/: foo (200; 27.076669ms)
  Apr 20 14:23:07.690: INFO: (18) /api/v1/namespaces/proxy-7270/pods/http:proxy-service-hg2s8-bd4mk:162/proxy/: bar (200; 46.993573ms)
  Apr 20 14:23:07.693: INFO: (18) /api/v1/namespaces/proxy-7270/services/https:proxy-service-hg2s8:tlsportname2/proxy/: tls qux (200; 49.391357ms)
  Apr 20 14:23:07.694: INFO: (18) /api/v1/namespaces/proxy-7270/services/http:proxy-service-hg2s8:portname2/proxy/: bar (200; 51.054913ms)
  Apr 20 14:23:07.694: INFO: (18) /api/v1/namespaces/proxy-7270/services/http:proxy-service-hg2s8:portname1/proxy/: foo (200; 51.278074ms)
  Apr 20 14:23:07.694: INFO: (18) /api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk/proxy/: <a href="/api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk/proxy/rewriteme">test</a> (200; 50.576743ms)
  Apr 20 14:23:07.695: INFO: (18) /api/v1/namespaces/proxy-7270/pods/https:proxy-service-hg2s8-bd4mk:460/proxy/: tls baz (200; 51.397851ms)
  Apr 20 14:23:07.695: INFO: (18) /api/v1/namespaces/proxy-7270/pods/https:proxy-service-hg2s8-bd4mk:443/proxy/: <a href="/api/v1/namespaces/proxy-7270/pods/https:proxy-service-hg2s8-bd4mk:443/proxy/tlsrewritem... (200; 51.980276ms)
  Apr 20 14:23:07.697: INFO: (18) /api/v1/namespaces/proxy-7270/pods/http:proxy-service-hg2s8-bd4mk:1080/proxy/: <a href="/api/v1/namespaces/proxy-7270/pods/http:proxy-service-hg2s8-bd4mk:1080/proxy/rewriteme">... (200; 52.353828ms)
  Apr 20 14:23:07.697: INFO: (18) /api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk:162/proxy/: bar (200; 52.988849ms)
  Apr 20 14:23:07.697: INFO: (18) /api/v1/namespaces/proxy-7270/services/proxy-service-hg2s8:portname1/proxy/: foo (200; 52.374224ms)
  Apr 20 14:23:07.701: INFO: (18) /api/v1/namespaces/proxy-7270/services/https:proxy-service-hg2s8:tlsportname1/proxy/: tls baz (200; 56.591934ms)
  Apr 20 14:23:07.704: INFO: (18) /api/v1/namespaces/proxy-7270/services/proxy-service-hg2s8:portname2/proxy/: bar (200; 58.944726ms)
  Apr 20 14:23:07.726: INFO: (19) /api/v1/namespaces/proxy-7270/pods/http:proxy-service-hg2s8-bd4mk:162/proxy/: bar (200; 21.861866ms)
  Apr 20 14:23:07.756: INFO: (19) /api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk:162/proxy/: bar (200; 51.894828ms)
  Apr 20 14:23:07.756: INFO: (19) /api/v1/namespaces/proxy-7270/pods/https:proxy-service-hg2s8-bd4mk:462/proxy/: tls qux (200; 51.139567ms)
  Apr 20 14:23:07.756: INFO: (19) /api/v1/namespaces/proxy-7270/services/https:proxy-service-hg2s8:tlsportname1/proxy/: tls baz (200; 51.13728ms)
  Apr 20 14:23:07.756: INFO: (19) /api/v1/namespaces/proxy-7270/pods/https:proxy-service-hg2s8-bd4mk:443/proxy/: <a href="/api/v1/namespaces/proxy-7270/pods/https:proxy-service-hg2s8-bd4mk:443/proxy/tlsrewritem... (200; 51.8338ms)
  Apr 20 14:23:07.756: INFO: (19) /api/v1/namespaces/proxy-7270/services/http:proxy-service-hg2s8:portname2/proxy/: bar (200; 51.780636ms)
  Apr 20 14:23:07.762: INFO: (19) /api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk/proxy/: <a href="/api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk/proxy/rewriteme">test</a> (200; 57.550452ms)
  Apr 20 14:23:07.762: INFO: (19) /api/v1/namespaces/proxy-7270/pods/http:proxy-service-hg2s8-bd4mk:160/proxy/: foo (200; 57.841859ms)
  Apr 20 14:23:07.762: INFO: (19) /api/v1/namespaces/proxy-7270/services/proxy-service-hg2s8:portname1/proxy/: foo (200; 57.823179ms)
  Apr 20 14:23:07.765: INFO: (19) /api/v1/namespaces/proxy-7270/services/proxy-service-hg2s8:portname2/proxy/: bar (200; 59.872009ms)
  Apr 20 14:23:07.765: INFO: (19) /api/v1/namespaces/proxy-7270/pods/http:proxy-service-hg2s8-bd4mk:1080/proxy/: <a href="/api/v1/namespaces/proxy-7270/pods/http:proxy-service-hg2s8-bd4mk:1080/proxy/rewriteme">... (200; 60.43895ms)
  Apr 20 14:23:07.766: INFO: (19) /api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk:1080/proxy/: <a href="/api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk:1080/proxy/rewriteme">test<... (200; 60.370172ms)
  Apr 20 14:23:07.766: INFO: (19) /api/v1/namespaces/proxy-7270/services/https:proxy-service-hg2s8:tlsportname2/proxy/: tls qux (200; 61.39526ms)
  Apr 20 14:23:07.766: INFO: (19) /api/v1/namespaces/proxy-7270/pods/https:proxy-service-hg2s8-bd4mk:460/proxy/: tls baz (200; 61.903962ms)
  Apr 20 14:23:07.767: INFO: (19) /api/v1/namespaces/proxy-7270/pods/proxy-service-hg2s8-bd4mk:160/proxy/: foo (200; 63.29683ms)
  Apr 20 14:23:07.774: INFO: (19) /api/v1/namespaces/proxy-7270/services/http:proxy-service-hg2s8:portname1/proxy/: foo (200; 69.894234ms)
  STEP: deleting ReplicationController proxy-service-hg2s8 in namespace proxy-7270, will wait for the garbage collector to delete the pods @ 04/20/24 14:23:07.774
  Apr 20 14:23:07.853: INFO: Deleting ReplicationController proxy-service-hg2s8 took: 16.037231ms
  Apr 20 14:23:07.954: INFO: Terminating ReplicationController proxy-service-hg2s8 pods took: 101.282095ms
  Apr 20 14:23:10.355: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-7270" for this suite. @ 04/20/24 14:23:10.367
• [5.606 seconds]
------------------------------
SSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:75
  STEP: Creating a kubernetes client @ 04/20/24 14:23:10.378
  Apr 20 14:23:10.378: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename containers @ 04/20/24 14:23:10.382
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:23:10.41
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:23:10.416
  STEP: Creating a pod to test override command @ 04/20/24 14:23:10.421
  STEP: Saw pod success @ 04/20/24 14:23:14.465
  Apr 20 14:23:14.472: INFO: Trying to get logs from node nok4chie7ate-3 pod client-containers-0fa18151-804e-470f-a2e8-f7a714bbca83 container agnhost-container: <nil>
  STEP: delete the pod @ 04/20/24 14:23:14.482
  Apr 20 14:23:14.506: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-3358" for this suite. @ 04/20/24 14:23:14.516
• [4.153 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1416
  STEP: Creating a kubernetes client @ 04/20/24 14:23:14.532
  Apr 20 14:23:14.532: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename services @ 04/20/24 14:23:14.537
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:23:14.577
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:23:14.591
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-2757 @ 04/20/24 14:23:14.598
  STEP: changing the ExternalName service to type=ClusterIP @ 04/20/24 14:23:14.614
  STEP: creating replication controller externalname-service in namespace services-2757 @ 04/20/24 14:23:14.643
  I0420 14:23:14.676616      13 runners.go:197] Created replication controller with name: externalname-service, namespace: services-2757, replica count: 2
  I0420 14:23:17.730122      13 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Apr 20 14:23:17.730: INFO: Creating new exec pod
  Apr 20 14:23:20.791: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=services-2757 exec execpod7jrmn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Apr 20 14:23:21.068: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Apr 20 14:23:21.068: INFO: stdout: ""
  Apr 20 14:23:21.790: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=services-2757 exec execpod7jrmn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Apr 20 14:23:22.051: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Apr 20 14:23:22.051: INFO: stdout: "externalname-service-cqw5s"
  Apr 20 14:23:22.051: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=services-2757 exec execpod7jrmn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.36.95 80'
  Apr 20 14:23:22.368: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.36.95 80\nConnection to 10.233.36.95 80 port [tcp/http] succeeded!\n"
  Apr 20 14:23:22.368: INFO: stdout: "externalname-service-cqw5s"
  Apr 20 14:23:22.368: INFO: Cleaning up the ExternalName to ClusterIP test service
  Apr 20 14:23:22.422: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2757" for this suite. @ 04/20/24 14:23:22.435
• [7.917 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:315
  STEP: Creating a kubernetes client @ 04/20/24 14:23:22.45
  Apr 20 14:23:22.450: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename webhook @ 04/20/24 14:23:22.455
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:23:22.484
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:23:22.489
  STEP: Setting up server cert @ 04/20/24 14:23:22.523
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/20/24 14:23:23.052
  STEP: Deploying the webhook pod @ 04/20/24 14:23:23.065
  STEP: Wait for the deployment to be ready @ 04/20/24 14:23:23.082
  Apr 20 14:23:23.092: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 04/20/24 14:23:25.111
  STEP: Verifying the service has paired with the endpoint @ 04/20/24 14:23:25.13
  Apr 20 14:23:26.130: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Apr 20 14:23:26.145: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-9412-crds.webhook.example.com via the AdmissionRegistration API @ 04/20/24 14:23:26.665
  STEP: Creating a custom resource while v1 is storage version @ 04/20/24 14:23:26.701
  STEP: Patching Custom Resource Definition to set v2 as storage @ 04/20/24 14:23:28.913
  STEP: Patching the custom resource while v2 is storage version @ 04/20/24 14:23:28.951
  Apr 20 14:23:29.901: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7451" for this suite. @ 04/20/24 14:23:29.912
  STEP: Destroying namespace "webhook-markers-7934" for this suite. @ 04/20/24 14:23:29.939
• [7.508 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:191
  STEP: Creating a kubernetes client @ 04/20/24 14:23:29.962
  Apr 20 14:23:29.962: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename runtimeclass @ 04/20/24 14:23:29.966
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:23:29.997
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:23:30.007
  STEP: getting /apis @ 04/20/24 14:23:30.017
  STEP: getting /apis/node.k8s.io @ 04/20/24 14:23:30.026
  STEP: getting /apis/node.k8s.io/v1 @ 04/20/24 14:23:30.029
  STEP: creating @ 04/20/24 14:23:30.032
  STEP: watching @ 04/20/24 14:23:30.063
  Apr 20 14:23:30.063: INFO: starting watch
  STEP: getting @ 04/20/24 14:23:30.092
  STEP: listing @ 04/20/24 14:23:30.104
  STEP: patching @ 04/20/24 14:23:30.112
  STEP: updating @ 04/20/24 14:23:30.126
  Apr 20 14:23:30.137: INFO: waiting for watch events with expected annotations
  STEP: deleting @ 04/20/24 14:23:30.138
  STEP: deleting a collection @ 04/20/24 14:23:30.178
  Apr 20 14:23:30.208: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-3577" for this suite. @ 04/20/24 14:23:30.212
• [0.266 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:47
  STEP: Creating a kubernetes client @ 04/20/24 14:23:30.234
  Apr 20 14:23:30.234: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename secrets @ 04/20/24 14:23:30.236
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:23:30.258
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:23:30.263
  STEP: Creating secret with name secret-test-3f96c738-7b1e-4cd4-95a8-bba4ad9e05d0 @ 04/20/24 14:23:30.269
  STEP: Creating a pod to test consume secrets @ 04/20/24 14:23:30.277
  STEP: Saw pod success @ 04/20/24 14:23:34.319
  Apr 20 14:23:34.324: INFO: Trying to get logs from node nok4chie7ate-3 pod pod-secrets-cfe31d62-f067-4747-84fb-dcdffc48af86 container secret-env-test: <nil>
  STEP: delete the pod @ 04/20/24 14:23:34.338
  Apr 20 14:23:34.364: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3160" for this suite. @ 04/20/24 14:23:34.372
• [4.149 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1373
  STEP: Creating a kubernetes client @ 04/20/24 14:23:34.384
  Apr 20 14:23:34.384: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename kubectl @ 04/20/24 14:23:34.388
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:23:34.463
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:23:34.468
  STEP: validating cluster-info @ 04/20/24 14:23:34.473
  Apr 20 14:23:34.473: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-9688 cluster-info'
  Apr 20 14:23:34.651: INFO: stderr: ""
  Apr 20 14:23:34.652: INFO: stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.233.0.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  Apr 20 14:23:34.652: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9688" for this suite. @ 04/20/24 14:23:34.661
• [0.292 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 04/20/24 14:23:34.676
  Apr 20 14:23:34.676: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename secrets @ 04/20/24 14:23:34.679
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:23:34.716
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:23:34.728
  STEP: Creating secret with name secret-test-770c1a78-3ec7-4c20-a6b1-dfefc0cf7b52 @ 04/20/24 14:23:34.734
  STEP: Creating a pod to test consume secrets @ 04/20/24 14:23:34.75
  STEP: Saw pod success @ 04/20/24 14:23:38.805
  Apr 20 14:23:38.813: INFO: Trying to get logs from node nok4chie7ate-3 pod pod-secrets-c7cda35a-4b19-4888-8ea8-4f942b82af4c container secret-volume-test: <nil>
  STEP: delete the pod @ 04/20/24 14:23:38.829
  Apr 20 14:23:38.859: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2747" for this suite. @ 04/20/24 14:23:38.868
• [4.205 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 04/20/24 14:23:38.881
  Apr 20 14:23:38.881: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename projected @ 04/20/24 14:23:38.883
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:23:38.907
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:23:38.913
  STEP: Creating secret with name s-test-opt-del-dbd49cea-9df9-4867-8c7a-de55d2427eff @ 04/20/24 14:23:38.928
  STEP: Creating secret with name s-test-opt-upd-d8383a7f-13d4-4441-b3a3-3bbb5b691387 @ 04/20/24 14:23:38.936
  STEP: Creating the pod @ 04/20/24 14:23:38.946
  STEP: Deleting secret s-test-opt-del-dbd49cea-9df9-4867-8c7a-de55d2427eff @ 04/20/24 14:23:41.022
  STEP: Updating secret s-test-opt-upd-d8383a7f-13d4-4441-b3a3-3bbb5b691387 @ 04/20/24 14:23:41.033
  STEP: Creating secret with name s-test-opt-create-f161afb5-af71-41bc-a8a9-2a72b84ec159 @ 04/20/24 14:23:41.042
  STEP: waiting to observe update in volume @ 04/20/24 14:23:41.049
  Apr 20 14:23:43.114: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2159" for this suite. @ 04/20/24 14:23:43.122
• [4.256 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2199
  STEP: Creating a kubernetes client @ 04/20/24 14:23:43.138
  Apr 20 14:23:43.138: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename services @ 04/20/24 14:23:43.141
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:23:43.196
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:23:43.205
  STEP: creating service in namespace services-4848 @ 04/20/24 14:23:43.211
  STEP: creating service affinity-clusterip-transition in namespace services-4848 @ 04/20/24 14:23:43.211
  STEP: creating replication controller affinity-clusterip-transition in namespace services-4848 @ 04/20/24 14:23:43.237
  I0420 14:23:43.269909      13 runners.go:197] Created replication controller with name: affinity-clusterip-transition, namespace: services-4848, replica count: 3
  I0420 14:23:46.322086      13 runners.go:197] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Apr 20 14:23:46.336: INFO: Creating new exec pod
  Apr 20 14:23:49.367: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=services-4848 exec execpod-affinityml9px -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  Apr 20 14:23:49.751: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
  Apr 20 14:23:49.751: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 20 14:23:49.752: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=services-4848 exec execpod-affinityml9px -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.13.159 80'
  Apr 20 14:23:50.059: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.13.159 80\nConnection to 10.233.13.159 80 port [tcp/http] succeeded!\n"
  Apr 20 14:23:50.059: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 20 14:23:50.083: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=services-4848 exec execpod-affinityml9px -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.233.13.159:80/ ; done'
  Apr 20 14:23:50.577: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.13.159:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.13.159:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.13.159:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.13.159:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.13.159:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.13.159:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.13.159:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.13.159:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.13.159:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.13.159:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.13.159:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.13.159:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.13.159:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.13.159:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.13.159:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.13.159:80/\n"
  Apr 20 14:23:50.577: INFO: stdout: "\naffinity-clusterip-transition-dhp7s\naffinity-clusterip-transition-9664z\naffinity-clusterip-transition-dhp7s\naffinity-clusterip-transition-74zvt\naffinity-clusterip-transition-74zvt\naffinity-clusterip-transition-dhp7s\naffinity-clusterip-transition-74zvt\naffinity-clusterip-transition-dhp7s\naffinity-clusterip-transition-74zvt\naffinity-clusterip-transition-74zvt\naffinity-clusterip-transition-dhp7s\naffinity-clusterip-transition-9664z\naffinity-clusterip-transition-9664z\naffinity-clusterip-transition-9664z\naffinity-clusterip-transition-dhp7s\naffinity-clusterip-transition-9664z"
  Apr 20 14:23:50.577: INFO: Received response from host: affinity-clusterip-transition-dhp7s
  Apr 20 14:23:50.577: INFO: Received response from host: affinity-clusterip-transition-9664z
  Apr 20 14:23:50.577: INFO: Received response from host: affinity-clusterip-transition-dhp7s
  Apr 20 14:23:50.577: INFO: Received response from host: affinity-clusterip-transition-74zvt
  Apr 20 14:23:50.577: INFO: Received response from host: affinity-clusterip-transition-74zvt
  Apr 20 14:23:50.577: INFO: Received response from host: affinity-clusterip-transition-dhp7s
  Apr 20 14:23:50.577: INFO: Received response from host: affinity-clusterip-transition-74zvt
  Apr 20 14:23:50.577: INFO: Received response from host: affinity-clusterip-transition-dhp7s
  Apr 20 14:23:50.577: INFO: Received response from host: affinity-clusterip-transition-74zvt
  Apr 20 14:23:50.577: INFO: Received response from host: affinity-clusterip-transition-74zvt
  Apr 20 14:23:50.577: INFO: Received response from host: affinity-clusterip-transition-dhp7s
  Apr 20 14:23:50.577: INFO: Received response from host: affinity-clusterip-transition-9664z
  Apr 20 14:23:50.577: INFO: Received response from host: affinity-clusterip-transition-9664z
  Apr 20 14:23:50.577: INFO: Received response from host: affinity-clusterip-transition-9664z
  Apr 20 14:23:50.577: INFO: Received response from host: affinity-clusterip-transition-dhp7s
  Apr 20 14:23:50.578: INFO: Received response from host: affinity-clusterip-transition-9664z
  Apr 20 14:23:50.598: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=services-4848 exec execpod-affinityml9px -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.233.13.159:80/ ; done'
  Apr 20 14:23:51.064: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.13.159:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.13.159:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.13.159:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.13.159:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.13.159:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.13.159:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.13.159:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.13.159:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.13.159:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.13.159:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.13.159:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.13.159:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.13.159:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.13.159:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.13.159:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.13.159:80/\n"
  Apr 20 14:23:51.065: INFO: stdout: "\naffinity-clusterip-transition-74zvt\naffinity-clusterip-transition-74zvt\naffinity-clusterip-transition-74zvt\naffinity-clusterip-transition-74zvt\naffinity-clusterip-transition-74zvt\naffinity-clusterip-transition-74zvt\naffinity-clusterip-transition-74zvt\naffinity-clusterip-transition-74zvt\naffinity-clusterip-transition-74zvt\naffinity-clusterip-transition-74zvt\naffinity-clusterip-transition-74zvt\naffinity-clusterip-transition-74zvt\naffinity-clusterip-transition-74zvt\naffinity-clusterip-transition-74zvt\naffinity-clusterip-transition-74zvt\naffinity-clusterip-transition-74zvt"
  Apr 20 14:23:51.065: INFO: Received response from host: affinity-clusterip-transition-74zvt
  Apr 20 14:23:51.065: INFO: Received response from host: affinity-clusterip-transition-74zvt
  Apr 20 14:23:51.065: INFO: Received response from host: affinity-clusterip-transition-74zvt
  Apr 20 14:23:51.065: INFO: Received response from host: affinity-clusterip-transition-74zvt
  Apr 20 14:23:51.065: INFO: Received response from host: affinity-clusterip-transition-74zvt
  Apr 20 14:23:51.065: INFO: Received response from host: affinity-clusterip-transition-74zvt
  Apr 20 14:23:51.065: INFO: Received response from host: affinity-clusterip-transition-74zvt
  Apr 20 14:23:51.065: INFO: Received response from host: affinity-clusterip-transition-74zvt
  Apr 20 14:23:51.065: INFO: Received response from host: affinity-clusterip-transition-74zvt
  Apr 20 14:23:51.065: INFO: Received response from host: affinity-clusterip-transition-74zvt
  Apr 20 14:23:51.065: INFO: Received response from host: affinity-clusterip-transition-74zvt
  Apr 20 14:23:51.065: INFO: Received response from host: affinity-clusterip-transition-74zvt
  Apr 20 14:23:51.065: INFO: Received response from host: affinity-clusterip-transition-74zvt
  Apr 20 14:23:51.065: INFO: Received response from host: affinity-clusterip-transition-74zvt
  Apr 20 14:23:51.065: INFO: Received response from host: affinity-clusterip-transition-74zvt
  Apr 20 14:23:51.065: INFO: Received response from host: affinity-clusterip-transition-74zvt
  Apr 20 14:23:51.065: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-4848, will wait for the garbage collector to delete the pods @ 04/20/24 14:23:51.083
  Apr 20 14:23:51.156: INFO: Deleting ReplicationController affinity-clusterip-transition took: 15.176891ms
  Apr 20 14:23:51.257: INFO: Terminating ReplicationController affinity-clusterip-transition pods took: 100.740465ms
  Apr 20 14:23:54.518: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4848" for this suite. @ 04/20/24 14:23:54.53
• [11.408 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2236
  STEP: Creating a kubernetes client @ 04/20/24 14:23:54.546
  Apr 20 14:23:54.546: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename services @ 04/20/24 14:23:54.548
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:23:54.581
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:23:54.587
  STEP: creating service in namespace services-1391 @ 04/20/24 14:23:54.591
  STEP: creating service affinity-nodeport-transition in namespace services-1391 @ 04/20/24 14:23:54.591
  STEP: creating replication controller affinity-nodeport-transition in namespace services-1391 @ 04/20/24 14:23:54.631
  I0420 14:23:54.657944      13 runners.go:197] Created replication controller with name: affinity-nodeport-transition, namespace: services-1391, replica count: 3
  I0420 14:23:57.711739      13 runners.go:197] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Apr 20 14:23:57.736: INFO: Creating new exec pod
  Apr 20 14:24:00.791: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=services-1391 exec execpod-affinitylff9t -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  Apr 20 14:24:01.077: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
  Apr 20 14:24:01.077: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 20 14:24:01.077: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=services-1391 exec execpod-affinitylff9t -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.1.72 80'
  Apr 20 14:24:01.333: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.1.72 80\nConnection to 10.233.1.72 80 port [tcp/http] succeeded!\n"
  Apr 20 14:24:01.333: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 20 14:24:01.335: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=services-1391 exec execpod-affinitylff9t -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.193 32092'
  Apr 20 14:24:01.625: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.193 32092\nConnection to 192.168.121.193 32092 port [tcp/*] succeeded!\n"
  Apr 20 14:24:01.625: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 20 14:24:01.626: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=services-1391 exec execpod-affinitylff9t -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.235 32092'
  Apr 20 14:24:01.889: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.235 32092\nConnection to 192.168.121.235 32092 port [tcp/*] succeeded!\n"
  Apr 20 14:24:01.889: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 20 14:24:01.907: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=services-1391 exec execpod-affinitylff9t -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.121.235:32092/ ; done'
  Apr 20 14:24:02.386: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.235:32092/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.235:32092/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.235:32092/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.235:32092/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.235:32092/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.235:32092/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.235:32092/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.235:32092/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.235:32092/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.235:32092/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.235:32092/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.235:32092/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.235:32092/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.235:32092/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.235:32092/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.235:32092/\n"
  Apr 20 14:24:02.386: INFO: stdout: "\naffinity-nodeport-transition-n5zc9\naffinity-nodeport-transition-97vxw\naffinity-nodeport-transition-n5zc9\naffinity-nodeport-transition-n5zc9\naffinity-nodeport-transition-n5zc9\naffinity-nodeport-transition-97vxw\naffinity-nodeport-transition-9lr6r\naffinity-nodeport-transition-n5zc9\naffinity-nodeport-transition-n5zc9\naffinity-nodeport-transition-9lr6r\naffinity-nodeport-transition-97vxw\naffinity-nodeport-transition-9lr6r\naffinity-nodeport-transition-97vxw\naffinity-nodeport-transition-n5zc9\naffinity-nodeport-transition-n5zc9\naffinity-nodeport-transition-97vxw"
  Apr 20 14:24:02.386: INFO: Received response from host: affinity-nodeport-transition-n5zc9
  Apr 20 14:24:02.386: INFO: Received response from host: affinity-nodeport-transition-97vxw
  Apr 20 14:24:02.386: INFO: Received response from host: affinity-nodeport-transition-n5zc9
  Apr 20 14:24:02.386: INFO: Received response from host: affinity-nodeport-transition-n5zc9
  Apr 20 14:24:02.386: INFO: Received response from host: affinity-nodeport-transition-n5zc9
  Apr 20 14:24:02.386: INFO: Received response from host: affinity-nodeport-transition-97vxw
  Apr 20 14:24:02.386: INFO: Received response from host: affinity-nodeport-transition-9lr6r
  Apr 20 14:24:02.386: INFO: Received response from host: affinity-nodeport-transition-n5zc9
  Apr 20 14:24:02.386: INFO: Received response from host: affinity-nodeport-transition-n5zc9
  Apr 20 14:24:02.386: INFO: Received response from host: affinity-nodeport-transition-9lr6r
  Apr 20 14:24:02.386: INFO: Received response from host: affinity-nodeport-transition-97vxw
  Apr 20 14:24:02.386: INFO: Received response from host: affinity-nodeport-transition-9lr6r
  Apr 20 14:24:02.386: INFO: Received response from host: affinity-nodeport-transition-97vxw
  Apr 20 14:24:02.386: INFO: Received response from host: affinity-nodeport-transition-n5zc9
  Apr 20 14:24:02.386: INFO: Received response from host: affinity-nodeport-transition-n5zc9
  Apr 20 14:24:02.386: INFO: Received response from host: affinity-nodeport-transition-97vxw
  Apr 20 14:24:02.401: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=services-1391 exec execpod-affinitylff9t -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.121.235:32092/ ; done'
  Apr 20 14:24:02.966: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.235:32092/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.235:32092/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.235:32092/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.235:32092/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.235:32092/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.235:32092/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.235:32092/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.235:32092/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.235:32092/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.235:32092/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.235:32092/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.235:32092/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.235:32092/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.235:32092/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.235:32092/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.235:32092/\n"
  Apr 20 14:24:02.967: INFO: stdout: "\naffinity-nodeport-transition-9lr6r\naffinity-nodeport-transition-9lr6r\naffinity-nodeport-transition-9lr6r\naffinity-nodeport-transition-9lr6r\naffinity-nodeport-transition-9lr6r\naffinity-nodeport-transition-9lr6r\naffinity-nodeport-transition-9lr6r\naffinity-nodeport-transition-9lr6r\naffinity-nodeport-transition-9lr6r\naffinity-nodeport-transition-9lr6r\naffinity-nodeport-transition-9lr6r\naffinity-nodeport-transition-9lr6r\naffinity-nodeport-transition-9lr6r\naffinity-nodeport-transition-9lr6r\naffinity-nodeport-transition-9lr6r\naffinity-nodeport-transition-9lr6r"
  Apr 20 14:24:02.967: INFO: Received response from host: affinity-nodeport-transition-9lr6r
  Apr 20 14:24:02.967: INFO: Received response from host: affinity-nodeport-transition-9lr6r
  Apr 20 14:24:02.967: INFO: Received response from host: affinity-nodeport-transition-9lr6r
  Apr 20 14:24:02.967: INFO: Received response from host: affinity-nodeport-transition-9lr6r
  Apr 20 14:24:02.967: INFO: Received response from host: affinity-nodeport-transition-9lr6r
  Apr 20 14:24:02.967: INFO: Received response from host: affinity-nodeport-transition-9lr6r
  Apr 20 14:24:02.967: INFO: Received response from host: affinity-nodeport-transition-9lr6r
  Apr 20 14:24:02.967: INFO: Received response from host: affinity-nodeport-transition-9lr6r
  Apr 20 14:24:02.967: INFO: Received response from host: affinity-nodeport-transition-9lr6r
  Apr 20 14:24:02.967: INFO: Received response from host: affinity-nodeport-transition-9lr6r
  Apr 20 14:24:02.967: INFO: Received response from host: affinity-nodeport-transition-9lr6r
  Apr 20 14:24:02.967: INFO: Received response from host: affinity-nodeport-transition-9lr6r
  Apr 20 14:24:02.967: INFO: Received response from host: affinity-nodeport-transition-9lr6r
  Apr 20 14:24:02.967: INFO: Received response from host: affinity-nodeport-transition-9lr6r
  Apr 20 14:24:02.967: INFO: Received response from host: affinity-nodeport-transition-9lr6r
  Apr 20 14:24:02.967: INFO: Received response from host: affinity-nodeport-transition-9lr6r
  Apr 20 14:24:02.968: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-1391, will wait for the garbage collector to delete the pods @ 04/20/24 14:24:03.029
  Apr 20 14:24:03.115: INFO: Deleting ReplicationController affinity-nodeport-transition took: 29.277486ms
  Apr 20 14:24:03.217: INFO: Terminating ReplicationController affinity-nodeport-transition pods took: 101.384282ms
  Apr 20 14:24:06.573: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1391" for this suite. @ 04/20/24 14:24:06.584
• [12.053 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:253
  STEP: Creating a kubernetes client @ 04/20/24 14:24:06.601
  Apr 20 14:24:06.601: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename limitrange @ 04/20/24 14:24:06.606
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:24:06.637
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:24:06.646
  STEP: Creating LimitRange "e2e-limitrange-zd76c" in namespace "limitrange-8972" @ 04/20/24 14:24:06.653
  STEP: Creating another limitRange in another namespace @ 04/20/24 14:24:06.666
  Apr 20 14:24:06.697: INFO: Namespace "e2e-limitrange-zd76c-2519" created
  Apr 20 14:24:06.697: INFO: Creating LimitRange "e2e-limitrange-zd76c" in namespace "e2e-limitrange-zd76c-2519"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-zd76c" @ 04/20/24 14:24:06.708
  Apr 20 14:24:06.714: INFO: Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-zd76c" in "limitrange-8972" namespace @ 04/20/24 14:24:06.714
  Apr 20 14:24:06.730: INFO: LimitRange "e2e-limitrange-zd76c" has been patched
  STEP: Delete LimitRange "e2e-limitrange-zd76c" by Collection with labelSelector: "e2e-limitrange-zd76c=patched" @ 04/20/24 14:24:06.731
  STEP: Confirm that the limitRange "e2e-limitrange-zd76c" has been deleted @ 04/20/24 14:24:06.747
  Apr 20 14:24:06.748: INFO: Requesting list of LimitRange to confirm quantity
  Apr 20 14:24:06.754: INFO: Found 0 LimitRange with label "e2e-limitrange-zd76c=patched"
  Apr 20 14:24:06.754: INFO: LimitRange "e2e-limitrange-zd76c" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-zd76c" @ 04/20/24 14:24:06.754
  Apr 20 14:24:06.759: INFO: Found 1 limitRange
  Apr 20 14:24:06.759: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-8972" for this suite. @ 04/20/24 14:24:06.765
  STEP: Destroying namespace "e2e-limitrange-zd76c-2519" for this suite. @ 04/20/24 14:24:06.775
• [0.188 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:219
  STEP: Creating a kubernetes client @ 04/20/24 14:24:06.788
  Apr 20 14:24:06.788: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename downward-api @ 04/20/24 14:24:06.79
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:24:06.818
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:24:06.825
  STEP: Creating a pod to test downward api env vars @ 04/20/24 14:24:06.829
  STEP: Saw pod success @ 04/20/24 14:24:08.863
  Apr 20 14:24:08.869: INFO: Trying to get logs from node nok4chie7ate-3 pod downward-api-80b15c25-4ef4-4386-9e55-55d7c7325c97 container dapi-container: <nil>
  STEP: delete the pod @ 04/20/24 14:24:08.885
  Apr 20 14:24:08.908: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9188" for this suite. @ 04/20/24 14:24:08.917
• [2.139 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:139
  STEP: Creating a kubernetes client @ 04/20/24 14:24:08.929
  Apr 20 14:24:08.929: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename configmap @ 04/20/24 14:24:08.932
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:24:08.959
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:24:08.964
  STEP: Creating configMap that has name configmap-test-emptyKey-faf5279c-a0df-417f-82d8-8d348e000ed8 @ 04/20/24 14:24:08.969
  Apr 20 14:24:08.973: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9664" for this suite. @ 04/20/24 14:24:08.982
• [0.064 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:125
  STEP: Creating a kubernetes client @ 04/20/24 14:24:08.994
  Apr 20 14:24:08.994: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename configmap @ 04/20/24 14:24:08.998
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:24:09.028
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:24:09.032
  STEP: Creating configMap with name configmap-test-upd-c3d86881-db77-40e1-b81d-5359209e8d3d @ 04/20/24 14:24:09.047
  STEP: Creating the pod @ 04/20/24 14:24:09.056
  STEP: Updating configmap configmap-test-upd-c3d86881-db77-40e1-b81d-5359209e8d3d @ 04/20/24 14:24:11.119
  STEP: waiting to observe update in volume @ 04/20/24 14:24:11.127
  Apr 20 14:25:25.856: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8071" for this suite. @ 04/20/24 14:25:25.868
• [76.892 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:92
  STEP: Creating a kubernetes client @ 04/20/24 14:25:25.892
  Apr 20 14:25:25.893: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename downward-api @ 04/20/24 14:25:25.897
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:25:25.924
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:25:25.932
  STEP: Creating a pod to test downward api env vars @ 04/20/24 14:25:25.937
  STEP: Saw pod success @ 04/20/24 14:25:29.98
  Apr 20 14:25:29.985: INFO: Trying to get logs from node nok4chie7ate-3 pod downward-api-6899f364-d8d0-47a0-9fff-675c2a4daeb7 container dapi-container: <nil>
  STEP: delete the pod @ 04/20/24 14:25:30.002
  Apr 20 14:25:30.027: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8028" for this suite. @ 04/20/24 14:25:30.035
• [4.152 seconds]
------------------------------
SS
------------------------------
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:155
  STEP: Creating a kubernetes client @ 04/20/24 14:25:30.047
  Apr 20 14:25:30.047: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename secrets @ 04/20/24 14:25:30.051
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:25:30.078
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:25:30.082
  STEP: creating a secret @ 04/20/24 14:25:30.086
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 04/20/24 14:25:30.093
  STEP: patching the secret @ 04/20/24 14:25:30.099
  STEP: deleting the secret using a LabelSelector @ 04/20/24 14:25:30.12
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 04/20/24 14:25:30.135
  Apr 20 14:25:30.141: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6238" for this suite. @ 04/20/24 14:25:30.151
• [0.126 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:887
  STEP: Creating a kubernetes client @ 04/20/24 14:25:30.174
  Apr 20 14:25:30.174: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename kubectl @ 04/20/24 14:25:30.178
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:25:30.202
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:25:30.208
  STEP: validating api versions @ 04/20/24 14:25:30.213
  Apr 20 14:25:30.214: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-7021 api-versions'
  Apr 20 14:25:30.419: INFO: stderr: ""
  Apr 20 14:25:30.419: INFO: stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta3\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nv1\n"
  Apr 20 14:25:30.419: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7021" for this suite. @ 04/20/24 14:25:30.428
• [0.264 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:76
  STEP: Creating a kubernetes client @ 04/20/24 14:25:30.443
  Apr 20 14:25:30.443: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename var-expansion @ 04/20/24 14:25:30.446
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:25:30.468
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:25:30.474
  STEP: Creating a pod to test substitution in container's command @ 04/20/24 14:25:30.479
  STEP: Saw pod success @ 04/20/24 14:25:34.52
  Apr 20 14:25:34.527: INFO: Trying to get logs from node nok4chie7ate-3 pod var-expansion-ce4ea863-bb29-41e6-a067-d417864fc313 container dapi-container: <nil>
  STEP: delete the pod @ 04/20/24 14:25:34.539
  Apr 20 14:25:34.562: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-3014" for this suite. @ 04/20/24 14:25:34.57
• [4.141 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 04/20/24 14:25:34.585
  Apr 20 14:25:34.585: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename projected @ 04/20/24 14:25:34.587
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:25:34.618
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:25:34.625
  STEP: Creating projection with secret that has name projected-secret-test-map-b66dbf99-fc70-4314-842a-e2b912c2b9ba @ 04/20/24 14:25:34.631
  STEP: Creating a pod to test consume secrets @ 04/20/24 14:25:34.641
  STEP: Saw pod success @ 04/20/24 14:25:38.688
  Apr 20 14:25:38.694: INFO: Trying to get logs from node nok4chie7ate-3 pod pod-projected-secrets-fcca7b34-32dc-4afa-ac32-6eeea3241e82 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 04/20/24 14:25:38.706
  Apr 20 14:25:38.735: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2820" for this suite. @ 04/20/24 14:25:38.744
• [4.170 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:180
  STEP: Creating a kubernetes client @ 04/20/24 14:25:38.756
  Apr 20 14:25:38.756: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename emptydir @ 04/20/24 14:25:38.758
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:25:38.786
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:25:38.791
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 04/20/24 14:25:38.796
  STEP: Saw pod success @ 04/20/24 14:25:42.836
  Apr 20 14:25:42.842: INFO: Trying to get logs from node nok4chie7ate-3 pod pod-1b7128cc-7107-4f28-9f6e-6018f29af28c container test-container: <nil>
  STEP: delete the pod @ 04/20/24 14:25:42.857
  Apr 20 14:25:42.889: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6612" for this suite. @ 04/20/24 14:25:42.896
• [4.152 seconds]
------------------------------
SSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:356
  STEP: Creating a kubernetes client @ 04/20/24 14:25:42.908
  Apr 20 14:25:42.908: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename endpointslice @ 04/20/24 14:25:42.913
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:25:42.946
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:25:42.953
  STEP: getting /apis @ 04/20/24 14:25:42.961
  STEP: getting /apis/discovery.k8s.io @ 04/20/24 14:25:42.97
  STEP: getting /apis/discovery.k8s.iov1 @ 04/20/24 14:25:42.974
  STEP: creating @ 04/20/24 14:25:42.977
  STEP: getting @ 04/20/24 14:25:43.034
  STEP: listing @ 04/20/24 14:25:43.044
  STEP: watching @ 04/20/24 14:25:43.054
  Apr 20 14:25:43.054: INFO: starting watch
  STEP: cluster-wide listing @ 04/20/24 14:25:43.056
  STEP: cluster-wide watching @ 04/20/24 14:25:43.063
  Apr 20 14:25:43.063: INFO: starting watch
  STEP: patching @ 04/20/24 14:25:43.066
  STEP: updating @ 04/20/24 14:25:43.082
  Apr 20 14:25:43.096: INFO: waiting for watch events with expected annotations
  Apr 20 14:25:43.096: INFO: saw patched and updated annotations
  STEP: deleting @ 04/20/24 14:25:43.096
  STEP: deleting a collection @ 04/20/24 14:25:43.122
  Apr 20 14:25:43.151: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-1097" for this suite. @ 04/20/24 14:25:43.158
• [0.262 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 04/20/24 14:25:43.172
  Apr 20 14:25:43.172: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename projected @ 04/20/24 14:25:43.174
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:25:43.204
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:25:43.208
  STEP: Creating projection with secret that has name projected-secret-test-59b7bc3b-f8ca-4f50-9fe0-f5b4aaae13ef @ 04/20/24 14:25:43.214
  STEP: Creating a pod to test consume secrets @ 04/20/24 14:25:43.223
  STEP: Saw pod success @ 04/20/24 14:25:45.259
  Apr 20 14:25:45.266: INFO: Trying to get logs from node nok4chie7ate-3 pod pod-projected-secrets-7cf5a5d1-cfc3-4871-8f57-a28fc9b7d54e container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 04/20/24 14:25:45.277
  Apr 20 14:25:45.303: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3180" for this suite. @ 04/20/24 14:25:45.311
• [2.153 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:86
  STEP: Creating a kubernetes client @ 04/20/24 14:25:45.325
  Apr 20 14:25:45.325: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename projected @ 04/20/24 14:25:45.328
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:25:45.352
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:25:45.356
  STEP: Creating a pod to test downward API volume plugin @ 04/20/24 14:25:45.361
  STEP: Saw pod success @ 04/20/24 14:25:49.401
  Apr 20 14:25:49.407: INFO: Trying to get logs from node nok4chie7ate-3 pod downwardapi-volume-c2d92fb9-6c8b-45d7-8f89-ae1099be25a4 container client-container: <nil>
  STEP: delete the pod @ 04/20/24 14:25:49.419
  Apr 20 14:25:49.444: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-780" for this suite. @ 04/20/24 14:25:49.457
• [4.145 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingressclass.go:268
  STEP: Creating a kubernetes client @ 04/20/24 14:25:49.475
  Apr 20 14:25:49.476: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename ingressclass @ 04/20/24 14:25:49.49
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:25:49.54
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:25:49.544
  STEP: getting /apis @ 04/20/24 14:25:49.549
  STEP: getting /apis/networking.k8s.io @ 04/20/24 14:25:49.557
  STEP: getting /apis/networking.k8s.iov1 @ 04/20/24 14:25:49.559
  STEP: creating @ 04/20/24 14:25:49.562
  STEP: getting @ 04/20/24 14:25:49.583
  STEP: listing @ 04/20/24 14:25:49.589
  STEP: watching @ 04/20/24 14:25:49.594
  Apr 20 14:25:49.594: INFO: starting watch
  STEP: patching @ 04/20/24 14:25:49.596
  STEP: updating @ 04/20/24 14:25:49.605
  Apr 20 14:25:49.613: INFO: waiting for watch events with expected annotations
  Apr 20 14:25:49.613: INFO: saw patched and updated annotations
  STEP: deleting @ 04/20/24 14:25:49.613
  STEP: deleting a collection @ 04/20/24 14:25:49.632
  Apr 20 14:25:49.660: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-3787" for this suite. @ 04/20/24 14:25:49.674
• [0.211 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:498
  STEP: Creating a kubernetes client @ 04/20/24 14:25:49.687
  Apr 20 14:25:49.687: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename webhook @ 04/20/24 14:25:49.689
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:25:49.712
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:25:49.717
  STEP: Setting up server cert @ 04/20/24 14:25:49.771
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/20/24 14:25:50.636
  STEP: Deploying the webhook pod @ 04/20/24 14:25:50.652
  STEP: Wait for the deployment to be ready @ 04/20/24 14:25:50.677
  Apr 20 14:25:50.694: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 04/20/24 14:25:52.715
  STEP: Verifying the service has paired with the endpoint @ 04/20/24 14:25:52.731
  Apr 20 14:25:53.731: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 04/20/24 14:25:53.747
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 04/20/24 14:25:53.794
  STEP: Creating a configMap that should not be mutated @ 04/20/24 14:25:53.809
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 04/20/24 14:25:53.837
  STEP: Creating a configMap that should be mutated @ 04/20/24 14:25:53.861
  Apr 20 14:25:54.052: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2304" for this suite. @ 04/20/24 14:25:54.07
  STEP: Destroying namespace "webhook-markers-8432" for this suite. @ 04/20/24 14:25:54.089
• [4.416 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 04/20/24 14:25:54.103
  Apr 20 14:25:54.103: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename csiinlinevolumes @ 04/20/24 14:25:54.108
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:25:54.134
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:25:54.139
  STEP: creating @ 04/20/24 14:25:54.145
  STEP: getting @ 04/20/24 14:25:54.17
  STEP: listing in namespace @ 04/20/24 14:25:54.176
  STEP: patching @ 04/20/24 14:25:54.183
  STEP: deleting @ 04/20/24 14:25:54.193
  Apr 20 14:25:54.256: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-786" for this suite. @ 04/20/24 14:25:54.266
• [0.174 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:810
  STEP: Creating a kubernetes client @ 04/20/24 14:25:54.285
  Apr 20 14:25:54.285: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename svcaccounts @ 04/20/24 14:25:54.29
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:25:54.314
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:25:54.319
  STEP: Creating ServiceAccount "e2e-sa-28tvq"  @ 04/20/24 14:25:54.323
  Apr 20 14:25:54.330: INFO: AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-28tvq"  @ 04/20/24 14:25:54.33
  Apr 20 14:25:54.343: INFO: AutomountServiceAccountToken: true
  Apr 20 14:25:54.343: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-361" for this suite. @ 04/20/24 14:25:54.351
• [0.078 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:489
  STEP: Creating a kubernetes client @ 04/20/24 14:25:54.363
  Apr 20 14:25:54.363: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename deployment @ 04/20/24 14:25:54.365
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:25:54.392
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:25:54.396
  STEP: creating a Deployment @ 04/20/24 14:25:54.406
  Apr 20 14:25:54.406: INFO: Creating simple deployment test-deployment-kqkbk
  Apr 20 14:25:54.435: INFO: deployment "test-deployment-kqkbk" doesn't have the required revision set
  STEP: Getting /status @ 04/20/24 14:25:56.46
  Apr 20 14:25:56.494: INFO: Deployment test-deployment-kqkbk has Conditions: [{Available True 2024-04-20 14:25:56 +0000 UTC 2024-04-20 14:25:56 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2024-04-20 14:25:56 +0000 UTC 2024-04-20 14:25:54 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-kqkbk-5d576bd769" has successfully progressed.}]
  STEP: updating Deployment Status @ 04/20/24 14:25:56.495
  Apr 20 14:25:56.515: INFO: updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 14, 25, 56, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 14, 25, 56, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 14, 25, 56, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 14, 25, 54, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-kqkbk-5d576bd769\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 04/20/24 14:25:56.515
  Apr 20 14:25:56.521: INFO: Observed &Deployment event: ADDED
  Apr 20 14:25:56.521: INFO: Observed Deployment test-deployment-kqkbk in namespace deployment-7564 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-04-20 14:25:54 +0000 UTC 2024-04-20 14:25:54 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-kqkbk-5d576bd769"}
  Apr 20 14:25:56.521: INFO: Observed &Deployment event: MODIFIED
  Apr 20 14:25:56.521: INFO: Observed Deployment test-deployment-kqkbk in namespace deployment-7564 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-04-20 14:25:54 +0000 UTC 2024-04-20 14:25:54 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-kqkbk-5d576bd769"}
  Apr 20 14:25:56.521: INFO: Observed Deployment test-deployment-kqkbk in namespace deployment-7564 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-04-20 14:25:54 +0000 UTC 2024-04-20 14:25:54 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Apr 20 14:25:56.521: INFO: Observed &Deployment event: MODIFIED
  Apr 20 14:25:56.522: INFO: Observed Deployment test-deployment-kqkbk in namespace deployment-7564 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-04-20 14:25:54 +0000 UTC 2024-04-20 14:25:54 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Apr 20 14:25:56.522: INFO: Observed Deployment test-deployment-kqkbk in namespace deployment-7564 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-04-20 14:25:54 +0000 UTC 2024-04-20 14:25:54 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-kqkbk-5d576bd769" is progressing.}
  Apr 20 14:25:56.522: INFO: Observed &Deployment event: MODIFIED
  Apr 20 14:25:56.522: INFO: Observed Deployment test-deployment-kqkbk in namespace deployment-7564 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-04-20 14:25:56 +0000 UTC 2024-04-20 14:25:56 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Apr 20 14:25:56.522: INFO: Observed Deployment test-deployment-kqkbk in namespace deployment-7564 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-04-20 14:25:56 +0000 UTC 2024-04-20 14:25:54 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-kqkbk-5d576bd769" has successfully progressed.}
  Apr 20 14:25:56.522: INFO: Observed &Deployment event: MODIFIED
  Apr 20 14:25:56.523: INFO: Observed Deployment test-deployment-kqkbk in namespace deployment-7564 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-04-20 14:25:56 +0000 UTC 2024-04-20 14:25:56 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Apr 20 14:25:56.523: INFO: Observed Deployment test-deployment-kqkbk in namespace deployment-7564 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-04-20 14:25:56 +0000 UTC 2024-04-20 14:25:54 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-kqkbk-5d576bd769" has successfully progressed.}
  Apr 20 14:25:56.523: INFO: Found Deployment test-deployment-kqkbk in namespace deployment-7564 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Apr 20 14:25:56.523: INFO: Deployment test-deployment-kqkbk has an updated status
  STEP: patching the Statefulset Status @ 04/20/24 14:25:56.523
  Apr 20 14:25:56.523: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Apr 20 14:25:56.536: INFO: Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 04/20/24 14:25:56.537
  Apr 20 14:25:56.540: INFO: Observed &Deployment event: ADDED
  Apr 20 14:25:56.540: INFO: Observed deployment test-deployment-kqkbk in namespace deployment-7564 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-04-20 14:25:54 +0000 UTC 2024-04-20 14:25:54 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-kqkbk-5d576bd769"}
  Apr 20 14:25:56.540: INFO: Observed &Deployment event: MODIFIED
  Apr 20 14:25:56.540: INFO: Observed deployment test-deployment-kqkbk in namespace deployment-7564 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-04-20 14:25:54 +0000 UTC 2024-04-20 14:25:54 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-kqkbk-5d576bd769"}
  Apr 20 14:25:56.540: INFO: Observed deployment test-deployment-kqkbk in namespace deployment-7564 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-04-20 14:25:54 +0000 UTC 2024-04-20 14:25:54 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Apr 20 14:25:56.540: INFO: Observed &Deployment event: MODIFIED
  Apr 20 14:25:56.540: INFO: Observed deployment test-deployment-kqkbk in namespace deployment-7564 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-04-20 14:25:54 +0000 UTC 2024-04-20 14:25:54 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Apr 20 14:25:56.540: INFO: Observed deployment test-deployment-kqkbk in namespace deployment-7564 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-04-20 14:25:54 +0000 UTC 2024-04-20 14:25:54 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-kqkbk-5d576bd769" is progressing.}
  Apr 20 14:25:56.541: INFO: Observed &Deployment event: MODIFIED
  Apr 20 14:25:56.541: INFO: Observed deployment test-deployment-kqkbk in namespace deployment-7564 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-04-20 14:25:56 +0000 UTC 2024-04-20 14:25:56 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Apr 20 14:25:56.541: INFO: Observed deployment test-deployment-kqkbk in namespace deployment-7564 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-04-20 14:25:56 +0000 UTC 2024-04-20 14:25:54 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-kqkbk-5d576bd769" has successfully progressed.}
  Apr 20 14:25:56.541: INFO: Observed &Deployment event: MODIFIED
  Apr 20 14:25:56.541: INFO: Observed deployment test-deployment-kqkbk in namespace deployment-7564 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-04-20 14:25:56 +0000 UTC 2024-04-20 14:25:56 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Apr 20 14:25:56.541: INFO: Observed deployment test-deployment-kqkbk in namespace deployment-7564 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-04-20 14:25:56 +0000 UTC 2024-04-20 14:25:54 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-kqkbk-5d576bd769" has successfully progressed.}
  Apr 20 14:25:56.541: INFO: Observed deployment test-deployment-kqkbk in namespace deployment-7564 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Apr 20 14:25:56.542: INFO: Observed &Deployment event: MODIFIED
  Apr 20 14:25:56.542: INFO: Found deployment test-deployment-kqkbk in namespace deployment-7564 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  Apr 20 14:25:56.542: INFO: Deployment test-deployment-kqkbk has a patched status
  Apr 20 14:25:56.551: INFO: Deployment "test-deployment-kqkbk":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-kqkbk",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7564",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "dd276c1a-7246-4d3c-a153-5d1665d6bfaa",
      ResourceVersion: (string) (len=5) "48187",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849219954,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849219954,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849219956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849219956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849219956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849219956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=56) "Found new replica set \"test-deployment-kqkbk-5d576bd769\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Apr 20 14:25:56.562: INFO: New ReplicaSet "test-deployment-kqkbk-5d576bd769" of Deployment "test-deployment-kqkbk":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-kqkbk-5d576bd769",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7564",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7addb3bc-6416-414c-ac01-26a3ed7d22db",
      ResourceVersion: (string) (len=5) "48179",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849219954,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-kqkbk",
          UID: (types.UID) (len=36) "dd276c1a-7246-4d3c-a153-5d1665d6bfaa",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849219954,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 64 64 32  |k:{\"uid\":\"dd2|
              00000120  37 36 63 31 61 2d 37 32  34 36 2d 34 64 33 63 2d  |76c1a-7246-4d3c-|
              00000130  61 31 35 33 2d 35 64 31  36 36 35 64 36 62 66 61  |a153-5d1665d6bfa|
              00000140  61 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |a\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849219956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 20 14:25:56.572: INFO: Pod "test-deployment-kqkbk-5d576bd769-428t7" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=38) "test-deployment-kqkbk-5d576bd769-428t7",
      GenerateName: (string) (len=33) "test-deployment-kqkbk-5d576bd769-",
      Namespace: (string) (len=15) "deployment-7564",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "42d28ea1-5be5-41f5-afc9-98f297f1cb6c",
      ResourceVersion: (string) (len=5) "48178",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849219954,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769",
        (string) (len=3) "e2e": (string) (len=7) "testing"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=32) "test-deployment-kqkbk-5d576bd769",
          UID: (types.UID) (len=36) "7addb3bc-6416-414c-ac01-26a3ed7d22db",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849219954,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 37 61 64 64 62 33 62  63 2d 36 34 31 36 2d 34  |"7addb3bc-6416-4|
              000000a0  31 34 63 2d 61 63 30 31  2d 32 36 61 33 65 64 37  |14c-ac01-26a3ed7|
              000000b0  64 32 32 64 62 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |d22db\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849219956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 36 2e  32 30 36 5c 22 7d 22 3a  |.233.66.206\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bz6v6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bz6v6",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "nok4chie7ate-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849219956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849219954,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849219956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849219956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849219954,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "192.168.121.8",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "192.168.121.8"
        }
      },
      PodIP: (string) (len=13) "10.233.66.206",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.66.206"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849219954,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849219955,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://4c55fe9a1defce4a50baa3976600ee26f5d4ea1bce8ed8075774b8eb35cf609f",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 14:25:56.579: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7564" for this suite. @ 04/20/24 14:25:56.592
• [2.243 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:147
  STEP: Creating a kubernetes client @ 04/20/24 14:25:56.608
  Apr 20 14:25:56.608: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename kubelet-test @ 04/20/24 14:25:56.612
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:25:56.646
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:25:56.654
  STEP: Waiting for pod completion @ 04/20/24 14:25:56.691
  Apr 20 14:26:00.739: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-3059" for this suite. @ 04/20/24 14:26:00.749
• [4.156 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:372
  STEP: Creating a kubernetes client @ 04/20/24 14:26:00.764
  Apr 20 14:26:00.764: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename namespaces @ 04/20/24 14:26:00.766
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:26:00.802
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:26:00.811
  STEP: Updating Namespace "namespaces-790" @ 04/20/24 14:26:00.816
  Apr 20 14:26:00.838: INFO: Namespace "namespaces-790" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"52298dc7-4cd7-47ec-bf38-306dda76a0f0", "kubernetes.io/metadata.name":"namespaces-790", "namespaces-790":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  Apr 20 14:26:00.839: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-790" for this suite. @ 04/20/24 14:26:00.849
• [0.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:130
  STEP: Creating a kubernetes client @ 04/20/24 14:26:00.864
  Apr 20 14:26:00.864: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename emptydir @ 04/20/24 14:26:00.869
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:26:00.915
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:26:00.92
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 04/20/24 14:26:00.925
  STEP: Saw pod success @ 04/20/24 14:26:04.982
  Apr 20 14:26:04.987: INFO: Trying to get logs from node nok4chie7ate-3 pod pod-b2246448-d551-40c0-a124-8199b8026096 container test-container: <nil>
  STEP: delete the pod @ 04/20/24 14:26:05
  Apr 20 14:26:05.026: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9244" for this suite. @ 04/20/24 14:26:05.038
• [4.184 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:170
  STEP: Creating a kubernetes client @ 04/20/24 14:26:05.052
  Apr 20 14:26:05.052: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename configmap @ 04/20/24 14:26:05.057
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:26:05.084
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:26:05.09
  STEP: creating a ConfigMap @ 04/20/24 14:26:05.099
  STEP: fetching the ConfigMap @ 04/20/24 14:26:05.12
  STEP: patching the ConfigMap @ 04/20/24 14:26:05.132
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 04/20/24 14:26:05.149
  STEP: deleting the ConfigMap by collection with a label selector @ 04/20/24 14:26:05.16
  STEP: listing all ConfigMaps in test namespace @ 04/20/24 14:26:05.183
  Apr 20 14:26:05.189: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-305" for this suite. @ 04/20/24 14:26:05.197
• [0.161 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 04/20/24 14:26:05.214
  Apr 20 14:26:05.214: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename init-container @ 04/20/24 14:26:05.219
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:26:05.246
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:26:05.257
  STEP: creating the pod @ 04/20/24 14:26:05.263
  Apr 20 14:26:05.263: INFO: PodSpec: initContainers in spec.initContainers
  Apr 20 14:26:08.333: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-6716" for this suite. @ 04/20/24 14:26:08.343
• [3.141 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:263
  STEP: Creating a kubernetes client @ 04/20/24 14:26:08.356
  Apr 20 14:26:08.356: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename projected @ 04/20/24 14:26:08.359
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:26:08.392
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:26:08.399
  STEP: Creating a pod to test downward API volume plugin @ 04/20/24 14:26:08.405
  STEP: Saw pod success @ 04/20/24 14:26:12.452
  Apr 20 14:26:12.482: INFO: Trying to get logs from node nok4chie7ate-3 pod downwardapi-volume-cedcf0eb-3856-42dc-a639-95e0598bdb76 container client-container: <nil>
  STEP: delete the pod @ 04/20/24 14:26:12.496
  Apr 20 14:26:12.521: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6451" for this suite. @ 04/20/24 14:26:12.53
• [4.188 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:301
  STEP: Creating a kubernetes client @ 04/20/24 14:26:12.549
  Apr 20 14:26:12.549: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename webhook @ 04/20/24 14:26:12.553
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:26:12.58
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:26:12.585
  STEP: Setting up server cert @ 04/20/24 14:26:12.619
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/20/24 14:26:13.122
  STEP: Deploying the webhook pod @ 04/20/24 14:26:13.133
  STEP: Wait for the deployment to be ready @ 04/20/24 14:26:13.17
  Apr 20 14:26:13.196: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/20/24 14:26:15.218
  STEP: Verifying the service has paired with the endpoint @ 04/20/24 14:26:15.241
  Apr 20 14:26:16.242: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 04/20/24 14:26:16.257
  STEP: Creating a custom resource definition that should be denied by the webhook @ 04/20/24 14:26:16.295
  Apr 20 14:26:16.295: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  Apr 20 14:26:16.479: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2490" for this suite. @ 04/20/24 14:26:16.489
  STEP: Destroying namespace "webhook-markers-1802" for this suite. @ 04/20/24 14:26:16.507
• [3.975 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:87
  STEP: Creating a kubernetes client @ 04/20/24 14:26:16.525
  Apr 20 14:26:16.525: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename disruption @ 04/20/24 14:26:16.528
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:26:16.551
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:26:16.559
  STEP: Creating a kubernetes client @ 04/20/24 14:26:16.564
  Apr 20 14:26:16.565: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename disruption-2 @ 04/20/24 14:26:16.568
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:26:16.599
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:26:16.605
  STEP: Waiting for the pdb to be processed @ 04/20/24 14:26:16.633
  STEP: Waiting for the pdb to be processed @ 04/20/24 14:26:18.65
  STEP: Waiting for the pdb to be processed @ 04/20/24 14:26:18.682
  STEP: listing a collection of PDBs across all namespaces @ 04/20/24 14:26:20.693
  STEP: listing a collection of PDBs in namespace disruption-9432 @ 04/20/24 14:26:20.7
  STEP: deleting a collection of PDBs @ 04/20/24 14:26:20.707
  STEP: Waiting for the PDB collection to be deleted @ 04/20/24 14:26:20.729
  Apr 20 14:26:20.735: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-1759" for this suite. @ 04/20/24 14:26:20.745
  Apr 20 14:26:20.758: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-9432" for this suite. @ 04/20/24 14:26:20.767
• [4.255 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:223
  STEP: Creating a kubernetes client @ 04/20/24 14:26:20.781
  Apr 20 14:26:20.782: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename downward-api @ 04/20/24 14:26:20.787
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:26:20.814
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:26:20.821
  STEP: Creating a pod to test downward API volume plugin @ 04/20/24 14:26:20.827
  STEP: Saw pod success @ 04/20/24 14:26:24.874
  Apr 20 14:26:24.885: INFO: Trying to get logs from node nok4chie7ate-3 pod downwardapi-volume-01bd7e79-ff0e-4b48-8715-c53691a5f222 container client-container: <nil>
  STEP: delete the pod @ 04/20/24 14:26:24.905
  Apr 20 14:26:24.935: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8185" for this suite. @ 04/20/24 14:26:24.946
• [4.178 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:261
  STEP: Creating a kubernetes client @ 04/20/24 14:26:24.963
  Apr 20 14:26:24.963: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename webhook @ 04/20/24 14:26:24.967
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:26:24.998
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:26:25.003
  STEP: Setting up server cert @ 04/20/24 14:26:25.04
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/20/24 14:26:25.416
  STEP: Deploying the webhook pod @ 04/20/24 14:26:25.431
  STEP: Wait for the deployment to be ready @ 04/20/24 14:26:25.455
  Apr 20 14:26:25.525: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/20/24 14:26:27.546
  STEP: Verifying the service has paired with the endpoint @ 04/20/24 14:26:27.571
  Apr 20 14:26:28.572: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 04/20/24 14:26:28.585
  STEP: create a pod that should be updated by the webhook @ 04/20/24 14:26:28.617
  Apr 20 14:26:28.812: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3598" for this suite. @ 04/20/24 14:26:28.823
  STEP: Destroying namespace "webhook-markers-740" for this suite. @ 04/20/24 14:26:28.84
• [3.891 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:707
  STEP: Creating a kubernetes client @ 04/20/24 14:26:28.856
  Apr 20 14:26:28.856: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename sched-pred @ 04/20/24 14:26:28.875
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:26:28.916
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:26:28.928
  Apr 20 14:26:28.934: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Apr 20 14:26:28.950: INFO: Waiting for terminating namespaces to be deleted...
  Apr 20 14:26:28.958: INFO: 
  Logging pods the apiserver thinks is on node nok4chie7ate-1 before test
  Apr 20 14:26:28.980: INFO: coredns-76f75df574-jghzz from kube-system started at 2024-04-20 14:11:31 +0000 UTC (1 container statuses recorded)
  Apr 20 14:26:28.980: INFO: 	Container coredns ready: true, restart count 0
  Apr 20 14:26:28.980: INFO: kube-addon-manager-nok4chie7ate-1 from kube-system started at 2024-04-20 14:05:07 +0000 UTC (1 container statuses recorded)
  Apr 20 14:26:28.980: INFO: 	Container kube-addon-manager ready: true, restart count 8
  Apr 20 14:26:28.980: INFO: kube-apiserver-nok4chie7ate-1 from kube-system started at 2024-04-20 14:05:07 +0000 UTC (1 container statuses recorded)
  Apr 20 14:26:28.980: INFO: 	Container kube-apiserver ready: true, restart count 12
  Apr 20 14:26:28.980: INFO: kube-controller-manager-nok4chie7ate-1 from kube-system started at 2024-04-20 14:05:07 +0000 UTC (1 container statuses recorded)
  Apr 20 14:26:28.980: INFO: 	Container kube-controller-manager ready: true, restart count 10
  Apr 20 14:26:28.980: INFO: kube-flannel-ds-t9926 from kube-system started at 2024-04-20 14:11:32 +0000 UTC (1 container statuses recorded)
  Apr 20 14:26:28.980: INFO: 	Container kube-flannel ready: true, restart count 0
  Apr 20 14:26:28.980: INFO: kube-proxy-fwrhv from kube-system started at 2024-04-20 14:11:32 +0000 UTC (1 container statuses recorded)
  Apr 20 14:26:28.980: INFO: 	Container kube-proxy ready: true, restart count 0
  Apr 20 14:26:28.980: INFO: kube-scheduler-nok4chie7ate-1 from kube-system started at 2024-04-20 14:05:07 +0000 UTC (1 container statuses recorded)
  Apr 20 14:26:28.980: INFO: 	Container kube-scheduler ready: true, restart count 10
  Apr 20 14:26:28.980: INFO: sonobuoy-systemd-logs-daemon-set-a8ae23328e1d4fd2-khgbq from sonobuoy started at 2024-04-20 14:11:56 +0000 UTC (2 container statuses recorded)
  Apr 20 14:26:28.980: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 20 14:26:28.980: INFO: 	Container systemd-logs ready: true, restart count 0
  Apr 20 14:26:28.981: INFO: 
  Logging pods the apiserver thinks is on node nok4chie7ate-2 before test
  Apr 20 14:26:28.994: INFO: coredns-76f75df574-txvk2 from kube-system started at 2024-04-20 14:20:05 +0000 UTC (1 container statuses recorded)
  Apr 20 14:26:28.994: INFO: 	Container coredns ready: true, restart count 0
  Apr 20 14:26:28.994: INFO: kube-addon-manager-nok4chie7ate-2 from kube-system started at 2024-04-20 14:05:32 +0000 UTC (1 container statuses recorded)
  Apr 20 14:26:28.994: INFO: 	Container kube-addon-manager ready: true, restart count 9
  Apr 20 14:26:28.994: INFO: kube-apiserver-nok4chie7ate-2 from kube-system started at 2024-04-20 14:05:32 +0000 UTC (1 container statuses recorded)
  Apr 20 14:26:28.994: INFO: 	Container kube-apiserver ready: true, restart count 10
  Apr 20 14:26:28.994: INFO: kube-controller-manager-nok4chie7ate-2 from kube-system started at 2024-04-20 14:05:32 +0000 UTC (1 container statuses recorded)
  Apr 20 14:26:28.994: INFO: 	Container kube-controller-manager ready: true, restart count 10
  Apr 20 14:26:28.994: INFO: kube-flannel-ds-486q8 from kube-system started at 2024-04-20 14:11:32 +0000 UTC (1 container statuses recorded)
  Apr 20 14:26:28.994: INFO: 	Container kube-flannel ready: true, restart count 0
  Apr 20 14:26:28.994: INFO: kube-proxy-72cbd from kube-system started at 2024-04-20 14:11:32 +0000 UTC (1 container statuses recorded)
  Apr 20 14:26:28.994: INFO: 	Container kube-proxy ready: true, restart count 0
  Apr 20 14:26:28.994: INFO: kube-scheduler-nok4chie7ate-2 from kube-system started at 2024-04-20 14:05:32 +0000 UTC (1 container statuses recorded)
  Apr 20 14:26:28.994: INFO: 	Container kube-scheduler ready: true, restart count 10
  Apr 20 14:26:28.994: INFO: sonobuoy from sonobuoy started at 2024-04-20 14:11:50 +0000 UTC (1 container statuses recorded)
  Apr 20 14:26:28.994: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Apr 20 14:26:28.994: INFO: sonobuoy-systemd-logs-daemon-set-a8ae23328e1d4fd2-6mbwv from sonobuoy started at 2024-04-20 14:11:56 +0000 UTC (2 container statuses recorded)
  Apr 20 14:26:28.994: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 20 14:26:28.995: INFO: 	Container systemd-logs ready: true, restart count 0
  Apr 20 14:26:28.995: INFO: 
  Logging pods the apiserver thinks is on node nok4chie7ate-3 before test
  Apr 20 14:26:29.008: INFO: kube-flannel-ds-cs6vz from kube-system started at 2024-04-20 14:20:06 +0000 UTC (1 container statuses recorded)
  Apr 20 14:26:29.008: INFO: 	Container kube-flannel ready: true, restart count 0
  Apr 20 14:26:29.008: INFO: kube-proxy-92wnd from kube-system started at 2024-04-20 14:11:32 +0000 UTC (1 container statuses recorded)
  Apr 20 14:26:29.008: INFO: 	Container kube-proxy ready: true, restart count 0
  Apr 20 14:26:29.008: INFO: sonobuoy-e2e-job-bf54fcf72a4946a0 from sonobuoy started at 2024-04-20 14:11:56 +0000 UTC (2 container statuses recorded)
  Apr 20 14:26:29.008: INFO: 	Container e2e ready: true, restart count 0
  Apr 20 14:26:29.008: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 20 14:26:29.008: INFO: sonobuoy-systemd-logs-daemon-set-a8ae23328e1d4fd2-k6hk2 from sonobuoy started at 2024-04-20 14:11:56 +0000 UTC (2 container statuses recorded)
  Apr 20 14:26:29.008: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 20 14:26:29.008: INFO: 	Container systemd-logs ready: true, restart count 0
  Apr 20 14:26:29.008: INFO: webhook-to-be-mutated from webhook-3598 started at 2024-04-20 14:26:28 +0000 UTC (1 container statuses recorded)
  Apr 20 14:26:29.008: INFO: 	Container example ready: false, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 04/20/24 14:26:29.009
  STEP: Explicitly delete pod here to free the resource it takes. @ 04/20/24 14:26:31.048
  STEP: Trying to apply a random label on the found node. @ 04/20/24 14:26:31.073
  STEP: verifying the node has the label kubernetes.io/e2e-3de0a3c2-cf59-4ae8-ab30-332a70212e46 95 @ 04/20/24 14:26:31.094
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 04/20/24 14:26:31.101
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 192.168.121.8 on the node which pod4 resides and expect not scheduled @ 04/20/24 14:26:33.136
  STEP: removing the label kubernetes.io/e2e-3de0a3c2-cf59-4ae8-ab30-332a70212e46 off the node nok4chie7ate-3 @ 04/20/24 14:31:33.156
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-3de0a3c2-cf59-4ae8-ab30-332a70212e46 @ 04/20/24 14:31:33.187
  Apr 20 14:31:33.204: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-570" for this suite. @ 04/20/24 14:31:33.224
• [304.389 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:58
  STEP: Creating a kubernetes client @ 04/20/24 14:31:33.248
  Apr 20 14:31:33.250: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename projected @ 04/20/24 14:31:33.266
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:31:33.307
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:31:33.319
  STEP: Creating configMap with name projected-configmap-test-volume-a3d45ecb-bfe9-4432-8999-435d8beccbb4 @ 04/20/24 14:31:33.326
  STEP: Creating a pod to test consume configMaps @ 04/20/24 14:31:33.339
  STEP: Saw pod success @ 04/20/24 14:31:37.396
  Apr 20 14:31:37.401: INFO: Trying to get logs from node nok4chie7ate-3 pod pod-projected-configmaps-3844d4a0-de13-4b6a-aca4-e9e37f84a9d4 container agnhost-container: <nil>
  STEP: delete the pod @ 04/20/24 14:31:37.435
  Apr 20 14:31:37.463: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-572" for this suite. @ 04/20/24 14:31:37.474
• [4.238 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:539
  STEP: Creating a kubernetes client @ 04/20/24 14:31:37.49
  Apr 20 14:31:37.490: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename gc @ 04/20/24 14:31:37.495
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:31:37.561
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:31:37.566
  STEP: create the deployment @ 04/20/24 14:31:37.57
  W0420 14:31:37.583246      13 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 04/20/24 14:31:37.583
  STEP: delete the deployment @ 04/20/24 14:31:38.098
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 04/20/24 14:31:38.109
  STEP: Gathering metrics @ 04/20/24 14:31:38.668
  Apr 20 14:31:38.983: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Apr 20 14:31:38.983: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-4745" for this suite. @ 04/20/24 14:31:38.994
• [1.548 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 04/20/24 14:31:39.042
  Apr 20 14:31:39.044: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename secrets @ 04/20/24 14:31:39.056
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:31:39.099
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:31:39.107
  STEP: Creating secret with name secret-test-map-29e07296-eb23-408d-9e32-7efe22be486e @ 04/20/24 14:31:39.114
  STEP: Creating a pod to test consume secrets @ 04/20/24 14:31:39.129
  STEP: Saw pod success @ 04/20/24 14:31:43.174
  Apr 20 14:31:43.180: INFO: Trying to get logs from node nok4chie7ate-3 pod pod-secrets-fae00d70-95a0-4d23-92bf-d7af370ae95b container secret-volume-test: <nil>
  STEP: delete the pod @ 04/20/24 14:31:43.193
  Apr 20 14:31:43.219: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8044" for this suite. @ 04/20/24 14:31:43.229
• [4.200 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 04/20/24 14:31:43.244
  Apr 20 14:31:43.244: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename subpath @ 04/20/24 14:31:43.247
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:31:43.27
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:31:43.279
  STEP: Setting up data @ 04/20/24 14:31:43.283
  STEP: Creating pod pod-subpath-test-downwardapi-m75f @ 04/20/24 14:31:43.299
  STEP: Creating a pod to test atomic-volume-subpath @ 04/20/24 14:31:43.299
  STEP: Saw pod success @ 04/20/24 14:32:07.443
  Apr 20 14:32:07.452: INFO: Trying to get logs from node nok4chie7ate-3 pod pod-subpath-test-downwardapi-m75f container test-container-subpath-downwardapi-m75f: <nil>
  STEP: delete the pod @ 04/20/24 14:32:07.469
  STEP: Deleting pod pod-subpath-test-downwardapi-m75f @ 04/20/24 14:32:07.497
  Apr 20 14:32:07.497: INFO: Deleting pod "pod-subpath-test-downwardapi-m75f" in namespace "subpath-9840"
  Apr 20 14:32:07.504: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-9840" for this suite. @ 04/20/24 14:32:07.512
• [24.279 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:163
  STEP: Creating a kubernetes client @ 04/20/24 14:32:07.524
  Apr 20 14:32:07.524: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename svcaccounts @ 04/20/24 14:32:07.527
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:32:07.555
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:32:07.562
  Apr 20 14:32:07.607: INFO: created pod pod-service-account-defaultsa
  Apr 20 14:32:07.607: INFO: pod pod-service-account-defaultsa service account token volume mount: true
  Apr 20 14:32:07.630: INFO: created pod pod-service-account-mountsa
  Apr 20 14:32:07.630: INFO: pod pod-service-account-mountsa service account token volume mount: true
  Apr 20 14:32:07.656: INFO: created pod pod-service-account-nomountsa
  Apr 20 14:32:07.656: INFO: pod pod-service-account-nomountsa service account token volume mount: false
  Apr 20 14:32:07.685: INFO: created pod pod-service-account-defaultsa-mountspec
  Apr 20 14:32:07.685: INFO: pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  Apr 20 14:32:07.720: INFO: created pod pod-service-account-mountsa-mountspec
  Apr 20 14:32:07.720: INFO: pod pod-service-account-mountsa-mountspec service account token volume mount: true
  Apr 20 14:32:07.748: INFO: created pod pod-service-account-nomountsa-mountspec
  Apr 20 14:32:07.748: INFO: pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  Apr 20 14:32:07.777: INFO: created pod pod-service-account-defaultsa-nomountspec
  Apr 20 14:32:07.777: INFO: pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  Apr 20 14:32:07.813: INFO: created pod pod-service-account-mountsa-nomountspec
  Apr 20 14:32:07.813: INFO: pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  Apr 20 14:32:07.838: INFO: created pod pod-service-account-nomountsa-nomountspec
  Apr 20 14:32:07.838: INFO: pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  Apr 20 14:32:07.838: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6276" for this suite. @ 04/20/24 14:32:07.888
• [0.394 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 04/20/24 14:32:07.921
  Apr 20 14:32:07.921: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename secrets @ 04/20/24 14:32:07.936
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:32:07.979
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:32:07.988
  Apr 20 14:32:08.140: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6080" for this suite. @ 04/20/24 14:32:08.15
• [0.250 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:69
  STEP: Creating a kubernetes client @ 04/20/24 14:32:08.17
  Apr 20 14:32:08.171: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename endpointslice @ 04/20/24 14:32:08.193
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:32:08.245
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:32:08.252
  Apr 20 14:32:08.300: INFO: Endpoints addresses: [192.168.121.193 192.168.121.235] , ports: [6443]
  Apr 20 14:32:08.300: INFO: EndpointSlices addresses: [192.168.121.193 192.168.121.235] , ports: [6443]
  Apr 20 14:32:08.300: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-5808" for this suite. @ 04/20/24 14:32:08.319
• [0.176 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:391
  STEP: Creating a kubernetes client @ 04/20/24 14:32:08.348
  Apr 20 14:32:08.348: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/20/24 14:32:08.357
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:32:08.403
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:32:08.409
  STEP: set up a multi version CRD @ 04/20/24 14:32:08.419
  Apr 20 14:32:08.422: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: rename a version @ 04/20/24 14:32:18.063
  STEP: check the new version name is served @ 04/20/24 14:32:18.108
  STEP: check the old version name is removed @ 04/20/24 14:32:21.053
  STEP: check the other version is not changed @ 04/20/24 14:32:22.741
  Apr 20 14:32:29.763: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-1102" for this suite. @ 04/20/24 14:32:29.786
• [21.455 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:51
  STEP: Creating a kubernetes client @ 04/20/24 14:32:29.808
  Apr 20 14:32:29.809: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename kubelet-test @ 04/20/24 14:32:29.816
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:32:29.861
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:32:29.867
  Apr 20 14:32:31.938: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-6018" for this suite. @ 04/20/24 14:32:31.947
• [2.151 seconds]
------------------------------
SSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:649
  STEP: Creating a kubernetes client @ 04/20/24 14:32:31.959
  Apr 20 14:32:31.959: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename svcaccounts @ 04/20/24 14:32:31.962
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:32:31.996
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:32:32.003
  STEP: creating a ServiceAccount @ 04/20/24 14:32:32.007
  STEP: watching for the ServiceAccount to be added @ 04/20/24 14:32:32.024
  STEP: patching the ServiceAccount @ 04/20/24 14:32:32.026
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 04/20/24 14:32:32.038
  STEP: deleting the ServiceAccount @ 04/20/24 14:32:32.046
  Apr 20 14:32:32.069: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-7688" for this suite. @ 04/20/24 14:32:32.079
• [0.134 seconds]
------------------------------
S
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 04/20/24 14:32:32.093
  Apr 20 14:32:32.093: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename deployment @ 04/20/24 14:32:32.095
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:32:32.123
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:32:32.129
  Apr 20 14:32:32.151: INFO: Pod name rollover-pod: Found 0 pods out of 1
  Apr 20 14:32:37.158: INFO: Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 04/20/24 14:32:37.159
  Apr 20 14:32:37.159: INFO: Waiting for pods owned by replica set "test-rollover-controller" to become ready
  Apr 20 14:32:39.172: INFO: Creating deployment "test-rollover-deployment"
  Apr 20 14:32:39.191: INFO: Make sure deployment "test-rollover-deployment" performs scaling operations
  Apr 20 14:32:41.206: INFO: Check revision of new replica set for deployment "test-rollover-deployment"
  Apr 20 14:32:41.218: INFO: Ensure that both replica sets have 1 created replica
  Apr 20 14:32:41.229: INFO: Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  Apr 20 14:32:41.245: INFO: Updating deployment test-rollover-deployment
  Apr 20 14:32:41.245: INFO: Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  Apr 20 14:32:43.263: INFO: Wait for revision update of deployment "test-rollover-deployment" to 2
  Apr 20 14:32:43.276: INFO: Make sure deployment "test-rollover-deployment" is complete
  Apr 20 14:32:43.296: INFO: all replica sets need to contain the pod-template-hash label
  Apr 20 14:32:43.296: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 14, 32, 39, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 14, 32, 39, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 14, 32, 42, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 14, 32, 39, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Apr 20 14:32:45.316: INFO: all replica sets need to contain the pod-template-hash label
  Apr 20 14:32:45.316: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 14, 32, 39, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 14, 32, 39, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 14, 32, 42, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 14, 32, 39, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Apr 20 14:32:47.313: INFO: all replica sets need to contain the pod-template-hash label
  Apr 20 14:32:47.313: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 14, 32, 39, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 14, 32, 39, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 14, 32, 42, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 14, 32, 39, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Apr 20 14:32:49.312: INFO: all replica sets need to contain the pod-template-hash label
  Apr 20 14:32:49.312: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 14, 32, 39, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 14, 32, 39, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 14, 32, 42, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 14, 32, 39, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Apr 20 14:32:51.314: INFO: all replica sets need to contain the pod-template-hash label
  Apr 20 14:32:51.314: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 14, 32, 39, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 14, 32, 39, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 14, 32, 42, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 14, 32, 39, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Apr 20 14:32:53.312: INFO: 
  Apr 20 14:32:53.312: INFO: Ensure that both old replica sets have no replicas
  Apr 20 14:32:53.340: INFO: Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4661",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "97d6b2b4-c83a-4387-83b8-abfcd0e9096f",
      ResourceVersion: (string) (len=5) "49703",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849220359,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220361,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220372,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220359,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220359,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220372,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220359,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-68774655d5\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Apr 20 14:32:53.358: INFO: New ReplicaSet "test-rollover-deployment-68774655d5" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-68774655d5",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4661",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4566a484-38a6-4e44-bf67-e6fa0d7cff0e",
      ResourceVersion: (string) (len=5) "49693",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849220361,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5",
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "97d6b2b4-c83a-4387-83b8-abfcd0e9096f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220361,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 39 37 64 36 62 32  62 34 2d 63 38 33 61 2d  |\"97d6b2b4-c83a-|
              00000120  34 33 38 37 2d 38 33 62  38 2d 61 62 66 63 64 30  |4387-83b8-abfcd0|
              00000130  65 39 30 39 36 66 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |e9096f\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220372,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 20 14:32:53.363: INFO: All old ReplicaSets of Deployment "test-rollover-deployment":
  Apr 20 14:32:53.366: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4661",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "68fc5725-c676-450b-a3e4-fa473cb617c7",
      ResourceVersion: (string) (len=5) "49702",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849220352,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "97d6b2b4-c83a-4387-83b8-abfcd0e9096f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220352,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220372,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  39 37 64 36 62 32 62 34  2d 63 38 33 61 2d 34 33  |97d6b2b4-c83a-43|
              000000c0  38 37 2d 38 33 62 38 2d  61 62 66 63 64 30 65 39  |87-83b8-abfcd0e9|
              000000d0  30 39 36 66 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |096f\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220372,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "pod": (string) (len=5) "httpd",
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 20 14:32:53.372: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-664fc6c874",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4661",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "41486b1f-9390-401c-b11c-3023756d2e16",
      ResourceVersion: (string) (len=5) "49656",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849220359,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "97d6b2b4-c83a-4387-83b8-abfcd0e9096f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220361,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 39 37 64 36 62 32  62 34 2d 63 38 33 61 2d  |\"97d6b2b4-c83a-|
              00000120  34 33 38 37 2d 38 33 62  38 2d 61 62 66 63 64 30  |4387-83b8-abfcd0|
              00000130  65 39 30 39 36 66 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |e9096f\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220361,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 20 14:32:53.385: INFO: Pod "test-rollover-deployment-68774655d5-vk4z5" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-68774655d5-vk4z5",
      GenerateName: (string) (len=36) "test-rollover-deployment-68774655d5-",
      Namespace: (string) (len=15) "deployment-4661",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ad14e48b-4a99-42b4-8a63-6136dba12e95",
      ResourceVersion: (string) (len=5) "49671",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849220361,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5",
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-68774655d5",
          UID: (types.UID) (len=36) "4566a484-38a6-4e44-bf67-e6fa0d7cff0e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220361,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 35  36 36 61 34 38 34 2d 33  |d\":\"4566a484-3|
              00000090  38 61 36 2d 34 65 34 34  2d 62 66 36 37 2d 65 36  |8a6-4e44-bf67-e6|
              000000a0  66 61 30 64 37 63 66 66  30 65 5c 22 7d 22 3a 7b  |fa0d7cff0e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220362,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 36 2e  32 32 37 5c 22 7d 22 3a  |.233.66.227\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8bcjp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8bcjp",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "nok4chie7ate-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220362,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220361,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220362,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220362,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220361,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "192.168.121.8",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "192.168.121.8"
        }
      },
      PodIP: (string) (len=13) "10.233.66.227",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.66.227"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849220361,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849220361,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:c9997bf8d2e223d7d2a0078dcfb11a653e9b16cf09418829ec03e1d57ca9628a",
          ContainerID: (string) (len=72) "cri-o://60559ea8bf7e960e5349d4f928420eb330ba773fa1ed7f93250f012eccc63f50",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 14:32:53.394: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-4661" for this suite. @ 04/20/24 14:32:53.403
• [21.322 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:474
  STEP: Creating a kubernetes client @ 04/20/24 14:32:53.417
  Apr 20 14:32:53.417: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename field-validation @ 04/20/24 14:32:53.42
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:32:53.466
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:32:53.474
  Apr 20 14:32:53.479: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  W0420 14:32:56.213173      13 warnings.go:70] unknown field "alpha"
  W0420 14:32:56.213241      13 warnings.go:70] unknown field "beta"
  W0420 14:32:56.213253      13 warnings.go:70] unknown field "delta"
  W0420 14:32:56.213263      13 warnings.go:70] unknown field "epsilon"
  W0420 14:32:56.213273      13 warnings.go:70] unknown field "gamma"
  Apr 20 14:32:56.813: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-281" for this suite. @ 04/20/24 14:32:56.829
• [3.429 seconds]
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:70
  STEP: Creating a kubernetes client @ 04/20/24 14:32:56.848
  Apr 20 14:32:56.849: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename replication-controller @ 04/20/24 14:32:56.859
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:32:56.887
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:32:56.893
  STEP: Creating replication controller my-hostname-basic-eca19a1f-0c17-4f9a-afe7-ac83bd4823f8 @ 04/20/24 14:32:56.898
  Apr 20 14:32:56.914: INFO: Pod name my-hostname-basic-eca19a1f-0c17-4f9a-afe7-ac83bd4823f8: Found 0 pods out of 1
  Apr 20 14:33:01.920: INFO: Pod name my-hostname-basic-eca19a1f-0c17-4f9a-afe7-ac83bd4823f8: Found 1 pods out of 1
  Apr 20 14:33:01.920: INFO: Ensuring all pods for ReplicationController "my-hostname-basic-eca19a1f-0c17-4f9a-afe7-ac83bd4823f8" are running
  Apr 20 14:33:01.927: INFO: Pod "my-hostname-basic-eca19a1f-0c17-4f9a-afe7-ac83bd4823f8-487qb" is running and ready(conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-04-20 14:32:58 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-04-20 14:32:56 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-04-20 14:32:58 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-04-20 14:32:58 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-04-20 14:32:56 +0000 UTC Reason: Message:}])
  Apr 20 14:33:01.927: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 04/20/24 14:33:01.927
  Apr 20 14:33:01.957: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-1239" for this suite. @ 04/20/24 14:33:01.967
• [5.133 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:407
  STEP: Creating a kubernetes client @ 04/20/24 14:33:01.98
  Apr 20 14:33:01.981: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename dns @ 04/20/24 14:33:01.985
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:33:02.035
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:33:02.04
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 04/20/24 14:33:02.046
  Apr 20 14:33:02.071: INFO: Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-2110  15fc989e-4158-43fb-ae40-e17a1729677d 49797 0 2024-04-20 14:33:01 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2024-04-20 14:33:01 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-7p7tz,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.47,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-7p7tz,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  STEP: Verifying customized DNS suffix list is configured on pod... @ 04/20/24 14:33:04.094
  Apr 20 14:33:04.094: INFO: ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-2110 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 20 14:33:04.094: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  Apr 20 14:33:04.096: INFO: ExecWithOptions: Clientset creation
  Apr 20 14:33:04.096: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/dns-2110/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 04/20/24 14:33:04.291
  Apr 20 14:33:04.291: INFO: ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-2110 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 20 14:33:04.291: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  Apr 20 14:33:04.294: INFO: ExecWithOptions: Clientset creation
  Apr 20 14:33:04.294: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/dns-2110/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Apr 20 14:33:04.434: INFO: Deleting pod test-dns-nameservers...
  Apr 20 14:33:04.522: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-2110" for this suite. @ 04/20/24 14:33:04.531
• [2.566 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:309
  STEP: Creating a kubernetes client @ 04/20/24 14:33:04.549
  Apr 20 14:33:04.549: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/20/24 14:33:04.557
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:33:04.586
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:33:04.593
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 04/20/24 14:33:04.598
  Apr 20 14:33:04.600: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 04/20/24 14:33:17.625
  Apr 20 14:33:17.626: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  Apr 20 14:33:20.907: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  Apr 20 14:33:34.475: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2511" for this suite. @ 04/20/24 14:33:34.496
• [29.960 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:89
  STEP: Creating a kubernetes client @ 04/20/24 14:33:34.509
  Apr 20 14:33:34.509: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename containers @ 04/20/24 14:33:34.512
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:33:34.545
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:33:34.549
  STEP: Creating a pod to test override all @ 04/20/24 14:33:34.555
  STEP: Saw pod success @ 04/20/24 14:33:38.604
  Apr 20 14:33:38.609: INFO: Trying to get logs from node nok4chie7ate-3 pod client-containers-745b70f6-ee8c-4cf8-be2c-fc8163b9eaa6 container agnhost-container: <nil>
  STEP: delete the pod @ 04/20/24 14:33:38.638
  Apr 20 14:33:38.671: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-8776" for this suite. @ 04/20/24 14:33:38.677
• [4.179 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:611
  STEP: Creating a kubernetes client @ 04/20/24 14:33:38.689
  Apr 20 14:33:38.689: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename security-context-test @ 04/20/24 14:33:38.693
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:33:38.725
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:33:38.729
  Apr 20 14:33:44.795: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-3041" for this suite. @ 04/20/24 14:33:44.806
• [6.146 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:110
  STEP: Creating a kubernetes client @ 04/20/24 14:33:44.838
  Apr 20 14:33:44.838: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename projected @ 04/20/24 14:33:44.843
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:33:44.87
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:33:44.875
  STEP: Creating configMap with name projected-configmap-test-volume-map-a1213964-4a2c-4d28-8d6e-9fc85185ccc4 @ 04/20/24 14:33:44.88
  STEP: Creating a pod to test consume configMaps @ 04/20/24 14:33:44.889
  STEP: Saw pod success @ 04/20/24 14:33:48.943
  Apr 20 14:33:48.951: INFO: Trying to get logs from node nok4chie7ate-3 pod pod-projected-configmaps-9bf1e415-406a-4c5f-b7fd-3ac697c0aca3 container agnhost-container: <nil>
  STEP: delete the pod @ 04/20/24 14:33:48.966
  Apr 20 14:33:48.999: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4650" for this suite. @ 04/20/24 14:33:49.008
• [4.185 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 04/20/24 14:33:49.023
  Apr 20 14:33:49.023: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename container-runtime @ 04/20/24 14:33:49.026
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:33:49.063
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:33:49.069
  STEP: create the container @ 04/20/24 14:33:49.074
  W0420 14:33:49.095715      13 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 04/20/24 14:33:49.096
  STEP: get the container status @ 04/20/24 14:33:52.129
  STEP: the container should be terminated @ 04/20/24 14:33:52.134
  STEP: the termination message should be set @ 04/20/24 14:33:52.134
  Apr 20 14:33:52.134: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 04/20/24 14:33:52.134
  Apr 20 14:33:52.157: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-3949" for this suite. @ 04/20/24 14:33:52.167
• [3.160 seconds]
------------------------------
SSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:902
  STEP: Creating a kubernetes client @ 04/20/24 14:33:52.184
  Apr 20 14:33:52.184: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename statefulset @ 04/20/24 14:33:52.188
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:33:52.221
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:33:52.23
  STEP: Creating service test in namespace statefulset-7107 @ 04/20/24 14:33:52.235
  STEP: Creating statefulset ss in namespace statefulset-7107 @ 04/20/24 14:33:52.248
  Apr 20 14:33:52.282: INFO: Found 0 stateful pods, waiting for 1
  Apr 20 14:34:02.294: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 04/20/24 14:34:02.306
  STEP: updating a scale subresource @ 04/20/24 14:34:02.311
  STEP: verifying the statefulset Spec.Replicas was modified @ 04/20/24 14:34:02.325
  STEP: Patch a scale subresource @ 04/20/24 14:34:02.33
  STEP: verifying the statefulset Spec.Replicas was modified @ 04/20/24 14:34:02.344
  Apr 20 14:34:02.352: INFO: Deleting all statefulset in ns statefulset-7107
  Apr 20 14:34:02.360: INFO: Scaling statefulset ss to 0
  Apr 20 14:34:12.389: INFO: Waiting for statefulset status.replicas updated to 0
  Apr 20 14:34:12.397: INFO: Deleting statefulset ss
  Apr 20 14:34:12.423: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7107" for this suite. @ 04/20/24 14:34:12.437
• [20.266 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:64
  STEP: Creating a kubernetes client @ 04/20/24 14:34:12.46
  Apr 20 14:34:12.460: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename field-validation @ 04/20/24 14:34:12.466
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:34:12.495
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:34:12.509
  STEP: apply creating a deployment @ 04/20/24 14:34:12.526
  Apr 20 14:34:12.558: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-9868" for this suite. @ 04/20/24 14:34:12.566
• [0.116 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 04/20/24 14:34:12.577
  Apr 20 14:34:12.577: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename watch @ 04/20/24 14:34:12.58
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:34:12.608
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:34:12.613
  STEP: creating a new configmap @ 04/20/24 14:34:12.618
  STEP: modifying the configmap once @ 04/20/24 14:34:12.627
  STEP: modifying the configmap a second time @ 04/20/24 14:34:12.64
  STEP: deleting the configmap @ 04/20/24 14:34:12.655
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 04/20/24 14:34:12.671
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 04/20/24 14:34:12.673
  Apr 20 14:34:12.673: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-6025  4642961b-134b-4502-a897-12a2dd42a714 50162 0 2024-04-20 14:34:12 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-04-20 14:34:12 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 20 14:34:12.674: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-6025  4642961b-134b-4502-a897-12a2dd42a714 50163 0 2024-04-20 14:34:12 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-04-20 14:34:12 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 20 14:34:12.674: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-6025" for this suite. @ 04/20/24 14:34:12.683
• [0.117 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:446
  STEP: Creating a kubernetes client @ 04/20/24 14:34:12.695
  Apr 20 14:34:12.695: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename sched-pred @ 04/20/24 14:34:12.698
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:34:12.731
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:34:12.739
  Apr 20 14:34:12.744: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Apr 20 14:34:12.762: INFO: Waiting for terminating namespaces to be deleted...
  Apr 20 14:34:12.768: INFO: 
  Logging pods the apiserver thinks is on node nok4chie7ate-1 before test
  Apr 20 14:34:12.786: INFO: coredns-76f75df574-jghzz from kube-system started at 2024-04-20 14:11:31 +0000 UTC (1 container statuses recorded)
  Apr 20 14:34:12.786: INFO: 	Container coredns ready: true, restart count 0
  Apr 20 14:34:12.786: INFO: kube-addon-manager-nok4chie7ate-1 from kube-system started at 2024-04-20 14:05:07 +0000 UTC (1 container statuses recorded)
  Apr 20 14:34:12.786: INFO: 	Container kube-addon-manager ready: true, restart count 8
  Apr 20 14:34:12.786: INFO: kube-apiserver-nok4chie7ate-1 from kube-system started at 2024-04-20 14:05:07 +0000 UTC (1 container statuses recorded)
  Apr 20 14:34:12.786: INFO: 	Container kube-apiserver ready: true, restart count 12
  Apr 20 14:34:12.786: INFO: kube-controller-manager-nok4chie7ate-1 from kube-system started at 2024-04-20 14:05:07 +0000 UTC (1 container statuses recorded)
  Apr 20 14:34:12.786: INFO: 	Container kube-controller-manager ready: true, restart count 10
  Apr 20 14:34:12.786: INFO: kube-flannel-ds-t9926 from kube-system started at 2024-04-20 14:11:32 +0000 UTC (1 container statuses recorded)
  Apr 20 14:34:12.786: INFO: 	Container kube-flannel ready: true, restart count 0
  Apr 20 14:34:12.786: INFO: kube-proxy-fwrhv from kube-system started at 2024-04-20 14:11:32 +0000 UTC (1 container statuses recorded)
  Apr 20 14:34:12.786: INFO: 	Container kube-proxy ready: true, restart count 0
  Apr 20 14:34:12.786: INFO: kube-scheduler-nok4chie7ate-1 from kube-system started at 2024-04-20 14:05:07 +0000 UTC (1 container statuses recorded)
  Apr 20 14:34:12.786: INFO: 	Container kube-scheduler ready: true, restart count 10
  Apr 20 14:34:12.786: INFO: sonobuoy-systemd-logs-daemon-set-a8ae23328e1d4fd2-khgbq from sonobuoy started at 2024-04-20 14:11:56 +0000 UTC (2 container statuses recorded)
  Apr 20 14:34:12.786: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 20 14:34:12.786: INFO: 	Container systemd-logs ready: true, restart count 0
  Apr 20 14:34:12.786: INFO: 
  Logging pods the apiserver thinks is on node nok4chie7ate-2 before test
  Apr 20 14:34:12.801: INFO: coredns-76f75df574-txvk2 from kube-system started at 2024-04-20 14:20:05 +0000 UTC (1 container statuses recorded)
  Apr 20 14:34:12.801: INFO: 	Container coredns ready: true, restart count 0
  Apr 20 14:34:12.801: INFO: kube-addon-manager-nok4chie7ate-2 from kube-system started at 2024-04-20 14:05:32 +0000 UTC (1 container statuses recorded)
  Apr 20 14:34:12.801: INFO: 	Container kube-addon-manager ready: true, restart count 9
  Apr 20 14:34:12.801: INFO: kube-apiserver-nok4chie7ate-2 from kube-system started at 2024-04-20 14:05:32 +0000 UTC (1 container statuses recorded)
  Apr 20 14:34:12.801: INFO: 	Container kube-apiserver ready: true, restart count 10
  Apr 20 14:34:12.801: INFO: kube-controller-manager-nok4chie7ate-2 from kube-system started at 2024-04-20 14:05:32 +0000 UTC (1 container statuses recorded)
  Apr 20 14:34:12.801: INFO: 	Container kube-controller-manager ready: true, restart count 10
  Apr 20 14:34:12.801: INFO: kube-flannel-ds-486q8 from kube-system started at 2024-04-20 14:11:32 +0000 UTC (1 container statuses recorded)
  Apr 20 14:34:12.801: INFO: 	Container kube-flannel ready: true, restart count 0
  Apr 20 14:34:12.801: INFO: kube-proxy-72cbd from kube-system started at 2024-04-20 14:11:32 +0000 UTC (1 container statuses recorded)
  Apr 20 14:34:12.801: INFO: 	Container kube-proxy ready: true, restart count 0
  Apr 20 14:34:12.801: INFO: kube-scheduler-nok4chie7ate-2 from kube-system started at 2024-04-20 14:05:32 +0000 UTC (1 container statuses recorded)
  Apr 20 14:34:12.801: INFO: 	Container kube-scheduler ready: true, restart count 10
  Apr 20 14:34:12.801: INFO: sonobuoy from sonobuoy started at 2024-04-20 14:11:50 +0000 UTC (1 container statuses recorded)
  Apr 20 14:34:12.801: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Apr 20 14:34:12.801: INFO: sonobuoy-systemd-logs-daemon-set-a8ae23328e1d4fd2-6mbwv from sonobuoy started at 2024-04-20 14:11:56 +0000 UTC (2 container statuses recorded)
  Apr 20 14:34:12.801: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 20 14:34:12.801: INFO: 	Container systemd-logs ready: true, restart count 0
  Apr 20 14:34:12.801: INFO: 
  Logging pods the apiserver thinks is on node nok4chie7ate-3 before test
  Apr 20 14:34:12.817: INFO: kube-flannel-ds-cs6vz from kube-system started at 2024-04-20 14:20:06 +0000 UTC (1 container statuses recorded)
  Apr 20 14:34:12.817: INFO: 	Container kube-flannel ready: true, restart count 0
  Apr 20 14:34:12.817: INFO: kube-proxy-92wnd from kube-system started at 2024-04-20 14:11:32 +0000 UTC (1 container statuses recorded)
  Apr 20 14:34:12.817: INFO: 	Container kube-proxy ready: true, restart count 0
  Apr 20 14:34:12.817: INFO: sonobuoy-e2e-job-bf54fcf72a4946a0 from sonobuoy started at 2024-04-20 14:11:56 +0000 UTC (2 container statuses recorded)
  Apr 20 14:34:12.817: INFO: 	Container e2e ready: true, restart count 0
  Apr 20 14:34:12.817: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 20 14:34:12.817: INFO: sonobuoy-systemd-logs-daemon-set-a8ae23328e1d4fd2-k6hk2 from sonobuoy started at 2024-04-20 14:11:56 +0000 UTC (2 container statuses recorded)
  Apr 20 14:34:12.817: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 20 14:34:12.817: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 04/20/24 14:34:12.817
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.17c803a20fc2686f], Reason = [FailedScheduling], Message = [0/3 nodes are available: 3 node(s) didn't match Pod's node affinity/selector. preemption: 0/3 nodes are available: 3 Preemption is not helpful for scheduling.] @ 04/20/24 14:34:12.88
  Apr 20 14:34:13.875: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-5348" for this suite. @ 04/20/24 14:34:13.887
• [1.208 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 04/20/24 14:34:13.905
  Apr 20 14:34:13.905: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename pods @ 04/20/24 14:34:13.91
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:34:13.944
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:34:13.949
  STEP: creating a Pod with a static label @ 04/20/24 14:34:13.972
  STEP: watching for Pod to be ready @ 04/20/24 14:34:13.992
  Apr 20 14:34:13.995: INFO: observed Pod pod-test in namespace pods-9008 in phase Pending with labels: map[test-pod-static:true] & conditions []
  Apr 20 14:34:14.005: INFO: observed Pod pod-test in namespace pods-9008 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-04-20 14:34:13 +0000 UTC  }]
  Apr 20 14:34:14.044: INFO: observed Pod pod-test in namespace pods-9008 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-04-20 14:34:14 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-04-20 14:34:14 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-04-20 14:34:14 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-04-20 14:34:14 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-04-20 14:34:13 +0000 UTC  }]
  Apr 20 14:34:14.828: INFO: Found Pod pod-test in namespace pods-9008 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-04-20 14:34:14 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-04-20 14:34:14 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2024-04-20 14:34:14 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2024-04-20 14:34:14 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-04-20 14:34:13 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 04/20/24 14:34:14.833
  STEP: getting the Pod and ensuring that it's patched @ 04/20/24 14:34:14.869
  STEP: replacing the Pod's status Ready condition to False @ 04/20/24 14:34:14.88
  STEP: check the Pod again to ensure its Ready conditions are False @ 04/20/24 14:34:14.907
  STEP: deleting the Pod via a Collection with a LabelSelector @ 04/20/24 14:34:14.907
  STEP: watching for the Pod to be deleted @ 04/20/24 14:34:14.925
  Apr 20 14:34:14.928: INFO: observed event type MODIFIED
  Apr 20 14:34:16.852: INFO: observed event type MODIFIED
  Apr 20 14:34:16.973: INFO: observed event type MODIFIED
  Apr 20 14:34:17.861: INFO: observed event type MODIFIED
  Apr 20 14:34:17.903: INFO: observed event type MODIFIED
  Apr 20 14:34:17.918: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9008" for this suite. @ 04/20/24 14:34:17.929
• [4.039 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 04/20/24 14:34:17.946
  Apr 20 14:34:17.946: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename secrets @ 04/20/24 14:34:17.949
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:34:17.985
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:34:17.99
  STEP: Creating secret with name secret-test-127ca3fc-64f4-400a-8af2-502b018c4d03 @ 04/20/24 14:34:17.996
  STEP: Creating a pod to test consume secrets @ 04/20/24 14:34:18.006
  STEP: Saw pod success @ 04/20/24 14:34:20.051
  Apr 20 14:34:20.058: INFO: Trying to get logs from node nok4chie7ate-3 pod pod-secrets-f3ee9e3c-57fe-4687-b47d-665d22d9ab62 container secret-volume-test: <nil>
  STEP: delete the pod @ 04/20/24 14:34:20.074
  Apr 20 14:34:20.101: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7277" for this suite. @ 04/20/24 14:34:20.113
• [2.182 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:90
  STEP: Creating a kubernetes client @ 04/20/24 14:34:20.129
  Apr 20 14:34:20.129: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename projected @ 04/20/24 14:34:20.132
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:34:20.159
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:34:20.164
  STEP: Creating configMap with name projected-configmap-test-volume-map-cc080cb2-61ad-44c9-82c3-1beb6b704976 @ 04/20/24 14:34:20.169
  STEP: Creating a pod to test consume configMaps @ 04/20/24 14:34:20.177
  STEP: Saw pod success @ 04/20/24 14:34:24.215
  Apr 20 14:34:24.222: INFO: Trying to get logs from node nok4chie7ate-3 pod pod-projected-configmaps-a77e36fa-4f22-4c31-bb73-363c4a16d81a container agnhost-container: <nil>
  STEP: delete the pod @ 04/20/24 14:34:24.239
  Apr 20 14:34:24.264: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5772" for this suite. @ 04/20/24 14:34:24.274
• [4.159 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:119
  STEP: Creating a kubernetes client @ 04/20/24 14:34:24.289
  Apr 20 14:34:24.289: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename webhook @ 04/20/24 14:34:24.292
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:34:24.323
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:34:24.327
  STEP: Setting up server cert @ 04/20/24 14:34:24.373
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/20/24 14:34:25.625
  STEP: Deploying the webhook pod @ 04/20/24 14:34:25.644
  STEP: Wait for the deployment to be ready @ 04/20/24 14:34:25.669
  Apr 20 14:34:25.689: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/20/24 14:34:27.71
  STEP: Verifying the service has paired with the endpoint @ 04/20/24 14:34:27.743
  Apr 20 14:34:28.744: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 04/20/24 14:34:28.759
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 04/20/24 14:34:28.762
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 04/20/24 14:34:28.762
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 04/20/24 14:34:28.762
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 04/20/24 14:34:28.765
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 04/20/24 14:34:28.765
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 04/20/24 14:34:28.768
  Apr 20 14:34:28.881: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9084" for this suite. @ 04/20/24 14:34:28.899
  STEP: Destroying namespace "webhook-markers-901" for this suite. @ 04/20/24 14:34:28.919
• [4.647 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:399
  STEP: Creating a kubernetes client @ 04/20/24 14:34:28.937
  Apr 20 14:34:28.937: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename kubectl @ 04/20/24 14:34:28.94
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:34:28.983
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:34:28.989
  STEP: creating all guestbook components @ 04/20/24 14:34:28.997
  Apr 20 14:34:28.997: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  Apr 20 14:34:28.998: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-6577 create -f -'
  Apr 20 14:34:29.339: INFO: stderr: ""
  Apr 20 14:34:29.339: INFO: stdout: "service/agnhost-replica created\n"
  Apr 20 14:34:29.339: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  Apr 20 14:34:29.340: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-6577 create -f -'
  Apr 20 14:34:29.725: INFO: stderr: ""
  Apr 20 14:34:29.725: INFO: stdout: "service/agnhost-primary created\n"
  Apr 20 14:34:29.725: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  Apr 20 14:34:29.726: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-6577 create -f -'
  Apr 20 14:34:30.091: INFO: stderr: ""
  Apr 20 14:34:30.091: INFO: stdout: "service/frontend created\n"
  Apr 20 14:34:30.092: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  Apr 20 14:34:30.093: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-6577 create -f -'
  Apr 20 14:34:30.354: INFO: stderr: ""
  Apr 20 14:34:30.354: INFO: stdout: "deployment.apps/frontend created\n"
  Apr 20 14:34:30.354: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  Apr 20 14:34:30.355: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-6577 create -f -'
  Apr 20 14:34:30.630: INFO: stderr: ""
  Apr 20 14:34:30.630: INFO: stdout: "deployment.apps/agnhost-primary created\n"
  Apr 20 14:34:30.631: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  Apr 20 14:34:30.631: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-6577 create -f -'
  Apr 20 14:34:31.018: INFO: stderr: ""
  Apr 20 14:34:31.018: INFO: stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 04/20/24 14:34:31.018
  Apr 20 14:34:31.018: INFO: Waiting for all frontend pods to be Running.
  Apr 20 14:34:36.071: INFO: Waiting for frontend to serve content.
  Apr 20 14:34:36.099: INFO: Trying to add a new entry to the guestbook.
  Apr 20 14:34:36.123: INFO: Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 04/20/24 14:34:36.137
  Apr 20 14:34:36.137: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-6577 delete --grace-period=0 --force -f -'
  Apr 20 14:34:36.374: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Apr 20 14:34:36.374: INFO: stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 04/20/24 14:34:36.374
  Apr 20 14:34:36.375: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-6577 delete --grace-period=0 --force -f -'
  Apr 20 14:34:36.585: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Apr 20 14:34:36.585: INFO: stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 04/20/24 14:34:36.586
  Apr 20 14:34:36.586: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-6577 delete --grace-period=0 --force -f -'
  Apr 20 14:34:36.760: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Apr 20 14:34:36.760: INFO: stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 04/20/24 14:34:36.76
  Apr 20 14:34:36.760: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-6577 delete --grace-period=0 --force -f -'
  Apr 20 14:34:36.922: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Apr 20 14:34:36.922: INFO: stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 04/20/24 14:34:36.923
  Apr 20 14:34:36.923: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-6577 delete --grace-period=0 --force -f -'
  Apr 20 14:34:37.190: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Apr 20 14:34:37.190: INFO: stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 04/20/24 14:34:37.191
  Apr 20 14:34:37.191: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-6577 delete --grace-period=0 --force -f -'
  Apr 20 14:34:37.385: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Apr 20 14:34:37.385: INFO: stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  Apr 20 14:34:37.385: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6577" for this suite. @ 04/20/24 14:34:37.399
• [8.485 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:75
  STEP: Creating a kubernetes client @ 04/20/24 14:34:37.427
  Apr 20 14:34:37.427: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename configmap @ 04/20/24 14:34:37.438
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:34:37.505
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:34:37.515
  STEP: Creating configMap with name configmap-test-volume-0a337590-fb83-4297-9041-e3607c41b12f @ 04/20/24 14:34:37.524
  STEP: Creating a pod to test consume configMaps @ 04/20/24 14:34:37.541
  STEP: Saw pod success @ 04/20/24 14:34:41.593
  Apr 20 14:34:41.599: INFO: Trying to get logs from node nok4chie7ate-3 pod pod-configmaps-910e4e27-26ad-413a-9e90-744249f6a774 container agnhost-container: <nil>
  STEP: delete the pod @ 04/20/24 14:34:41.613
  Apr 20 14:34:41.639: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-333" for this suite. @ 04/20/24 14:34:41.656
• [4.242 seconds]
------------------------------
SSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:286
  STEP: Creating a kubernetes client @ 04/20/24 14:34:41.668
  Apr 20 14:34:41.668: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename dns @ 04/20/24 14:34:41.674
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:34:41.7
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:34:41.705
  STEP: Creating a test headless service @ 04/20/24 14:34:41.709
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-8850.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-8850.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-8850.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-8850.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-8850.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-8850.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-8850.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-8850.svc.cluster.local;sleep 1; done
   @ 04/20/24 14:34:41.719
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-8850.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-8850.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-8850.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-8850.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-8850.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-8850.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-8850.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-8850.svc.cluster.local;sleep 1; done
   @ 04/20/24 14:34:41.719
  STEP: creating a pod to probe DNS @ 04/20/24 14:34:41.719
  STEP: submitting the pod to kubernetes @ 04/20/24 14:34:41.719
  STEP: retrieving the pod @ 04/20/24 14:35:01.863
  STEP: looking for the results for each expected name from probers @ 04/20/24 14:35:01.872
  Apr 20 14:35:01.887: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-8850.svc.cluster.local from pod dns-8850/dns-test-5b277b37-6e9d-4328-b518-2a14acd3623d: the server could not find the requested resource (get pods dns-test-5b277b37-6e9d-4328-b518-2a14acd3623d)
  Apr 20 14:35:01.896: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-8850.svc.cluster.local from pod dns-8850/dns-test-5b277b37-6e9d-4328-b518-2a14acd3623d: the server could not find the requested resource (get pods dns-test-5b277b37-6e9d-4328-b518-2a14acd3623d)
  Apr 20 14:35:01.904: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-8850.svc.cluster.local from pod dns-8850/dns-test-5b277b37-6e9d-4328-b518-2a14acd3623d: the server could not find the requested resource (get pods dns-test-5b277b37-6e9d-4328-b518-2a14acd3623d)
  Apr 20 14:35:01.911: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-8850.svc.cluster.local from pod dns-8850/dns-test-5b277b37-6e9d-4328-b518-2a14acd3623d: the server could not find the requested resource (get pods dns-test-5b277b37-6e9d-4328-b518-2a14acd3623d)
  Apr 20 14:35:01.920: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-8850.svc.cluster.local from pod dns-8850/dns-test-5b277b37-6e9d-4328-b518-2a14acd3623d: the server could not find the requested resource (get pods dns-test-5b277b37-6e9d-4328-b518-2a14acd3623d)
  Apr 20 14:35:01.928: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-8850.svc.cluster.local from pod dns-8850/dns-test-5b277b37-6e9d-4328-b518-2a14acd3623d: the server could not find the requested resource (get pods dns-test-5b277b37-6e9d-4328-b518-2a14acd3623d)
  Apr 20 14:35:01.934: INFO: Unable to read jessie_udp@dns-test-service-2.dns-8850.svc.cluster.local from pod dns-8850/dns-test-5b277b37-6e9d-4328-b518-2a14acd3623d: the server could not find the requested resource (get pods dns-test-5b277b37-6e9d-4328-b518-2a14acd3623d)
  Apr 20 14:35:01.942: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-8850.svc.cluster.local from pod dns-8850/dns-test-5b277b37-6e9d-4328-b518-2a14acd3623d: the server could not find the requested resource (get pods dns-test-5b277b37-6e9d-4328-b518-2a14acd3623d)
  Apr 20 14:35:01.943: INFO: Lookups using dns-8850/dns-test-5b277b37-6e9d-4328-b518-2a14acd3623d failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-8850.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-8850.svc.cluster.local wheezy_udp@dns-test-service-2.dns-8850.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-8850.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-8850.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-8850.svc.cluster.local jessie_udp@dns-test-service-2.dns-8850.svc.cluster.local jessie_tcp@dns-test-service-2.dns-8850.svc.cluster.local]

  Apr 20 14:35:01.959: INFO: Pod client logs for webserver: 
  Apr 20 14:35:01.971: INFO: Pod client logs for querier: 
  Apr 20 14:35:01.988: INFO: Pod client logs for jessie-querier: 
  Apr 20 14:35:06.887: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-8850.svc.cluster.local from pod dns-8850/dns-test-5b277b37-6e9d-4328-b518-2a14acd3623d: the server could not find the requested resource (get pods dns-test-5b277b37-6e9d-4328-b518-2a14acd3623d)
  Apr 20 14:35:06.897: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-8850.svc.cluster.local from pod dns-8850/dns-test-5b277b37-6e9d-4328-b518-2a14acd3623d: the server could not find the requested resource (get pods dns-test-5b277b37-6e9d-4328-b518-2a14acd3623d)
  Apr 20 14:35:06.907: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-8850.svc.cluster.local from pod dns-8850/dns-test-5b277b37-6e9d-4328-b518-2a14acd3623d: the server could not find the requested resource (get pods dns-test-5b277b37-6e9d-4328-b518-2a14acd3623d)
  Apr 20 14:35:06.917: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-8850.svc.cluster.local from pod dns-8850/dns-test-5b277b37-6e9d-4328-b518-2a14acd3623d: the server could not find the requested resource (get pods dns-test-5b277b37-6e9d-4328-b518-2a14acd3623d)
  Apr 20 14:35:06.924: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-8850.svc.cluster.local from pod dns-8850/dns-test-5b277b37-6e9d-4328-b518-2a14acd3623d: the server could not find the requested resource (get pods dns-test-5b277b37-6e9d-4328-b518-2a14acd3623d)
  Apr 20 14:35:06.933: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-8850.svc.cluster.local from pod dns-8850/dns-test-5b277b37-6e9d-4328-b518-2a14acd3623d: the server could not find the requested resource (get pods dns-test-5b277b37-6e9d-4328-b518-2a14acd3623d)
  Apr 20 14:35:06.944: INFO: Unable to read jessie_udp@dns-test-service-2.dns-8850.svc.cluster.local from pod dns-8850/dns-test-5b277b37-6e9d-4328-b518-2a14acd3623d: the server could not find the requested resource (get pods dns-test-5b277b37-6e9d-4328-b518-2a14acd3623d)
  Apr 20 14:35:06.955: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-8850.svc.cluster.local from pod dns-8850/dns-test-5b277b37-6e9d-4328-b518-2a14acd3623d: the server could not find the requested resource (get pods dns-test-5b277b37-6e9d-4328-b518-2a14acd3623d)
  Apr 20 14:35:06.955: INFO: Lookups using dns-8850/dns-test-5b277b37-6e9d-4328-b518-2a14acd3623d failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-8850.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-8850.svc.cluster.local wheezy_udp@dns-test-service-2.dns-8850.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-8850.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-8850.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-8850.svc.cluster.local jessie_udp@dns-test-service-2.dns-8850.svc.cluster.local jessie_tcp@dns-test-service-2.dns-8850.svc.cluster.local]

  Apr 20 14:35:06.986: INFO: Pod client logs for webserver: 
  Apr 20 14:35:07.000: INFO: Pod client logs for querier: 
  Apr 20 14:35:07.027: INFO: Pod client logs for jessie-querier: 
  Apr 20 14:35:11.886: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-8850.svc.cluster.local from pod dns-8850/dns-test-5b277b37-6e9d-4328-b518-2a14acd3623d: the server could not find the requested resource (get pods dns-test-5b277b37-6e9d-4328-b518-2a14acd3623d)
  Apr 20 14:35:11.900: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-8850.svc.cluster.local from pod dns-8850/dns-test-5b277b37-6e9d-4328-b518-2a14acd3623d: the server could not find the requested resource (get pods dns-test-5b277b37-6e9d-4328-b518-2a14acd3623d)
  Apr 20 14:35:11.913: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-8850.svc.cluster.local from pod dns-8850/dns-test-5b277b37-6e9d-4328-b518-2a14acd3623d: the server could not find the requested resource (get pods dns-test-5b277b37-6e9d-4328-b518-2a14acd3623d)
  Apr 20 14:35:11.923: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-8850.svc.cluster.local from pod dns-8850/dns-test-5b277b37-6e9d-4328-b518-2a14acd3623d: the server could not find the requested resource (get pods dns-test-5b277b37-6e9d-4328-b518-2a14acd3623d)
  Apr 20 14:35:11.932: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-8850.svc.cluster.local from pod dns-8850/dns-test-5b277b37-6e9d-4328-b518-2a14acd3623d: the server could not find the requested resource (get pods dns-test-5b277b37-6e9d-4328-b518-2a14acd3623d)
  Apr 20 14:35:11.941: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-8850.svc.cluster.local from pod dns-8850/dns-test-5b277b37-6e9d-4328-b518-2a14acd3623d: the server could not find the requested resource (get pods dns-test-5b277b37-6e9d-4328-b518-2a14acd3623d)
  Apr 20 14:35:11.950: INFO: Unable to read jessie_udp@dns-test-service-2.dns-8850.svc.cluster.local from pod dns-8850/dns-test-5b277b37-6e9d-4328-b518-2a14acd3623d: the server could not find the requested resource (get pods dns-test-5b277b37-6e9d-4328-b518-2a14acd3623d)
  Apr 20 14:35:11.959: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-8850.svc.cluster.local from pod dns-8850/dns-test-5b277b37-6e9d-4328-b518-2a14acd3623d: the server could not find the requested resource (get pods dns-test-5b277b37-6e9d-4328-b518-2a14acd3623d)
  Apr 20 14:35:11.959: INFO: Lookups using dns-8850/dns-test-5b277b37-6e9d-4328-b518-2a14acd3623d failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-8850.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-8850.svc.cluster.local wheezy_udp@dns-test-service-2.dns-8850.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-8850.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-8850.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-8850.svc.cluster.local jessie_udp@dns-test-service-2.dns-8850.svc.cluster.local jessie_tcp@dns-test-service-2.dns-8850.svc.cluster.local]

  Apr 20 14:35:11.991: INFO: Pod client logs for webserver: 
  Apr 20 14:35:12.010: INFO: Pod client logs for querier: 
  Apr 20 14:35:12.025: INFO: Pod client logs for jessie-querier: 
  Apr 20 14:35:16.942: INFO: DNS probes using dns-8850/dns-test-5b277b37-6e9d-4328-b518-2a14acd3623d succeeded

  STEP: deleting the pod @ 04/20/24 14:35:16.943
  STEP: deleting the test headless service @ 04/20/24 14:35:16.97
  Apr 20 14:35:17.014: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-8850" for this suite. @ 04/20/24 14:35:17.024
• [35.373 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:655
  STEP: Creating a kubernetes client @ 04/20/24 14:35:17.044
  Apr 20 14:35:17.044: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename job @ 04/20/24 14:35:17.054
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:35:17.087
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:35:17.093
  STEP: Creating a job @ 04/20/24 14:35:17.101
  STEP: Ensuring active pods == parallelism @ 04/20/24 14:35:17.113
  STEP: Orphaning one of the Job's Pods @ 04/20/24 14:35:19.122
  Apr 20 14:35:19.654: INFO: Successfully updated pod "adopt-release-m8c5z"
  STEP: Checking that the Job readopts the Pod @ 04/20/24 14:35:19.654
  STEP: Removing the labels from the Job's Pod @ 04/20/24 14:35:21.672
  Apr 20 14:35:22.202: INFO: Successfully updated pod "adopt-release-m8c5z"
  STEP: Checking that the Job releases the Pod @ 04/20/24 14:35:22.203
  Apr 20 14:35:24.216: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3103" for this suite. @ 04/20/24 14:35:24.228
• [7.198 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:164
  STEP: Creating a kubernetes client @ 04/20/24 14:35:24.243
  Apr 20 14:35:24.243: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename projected @ 04/20/24 14:35:24.246
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:35:24.275
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:35:24.28
  STEP: Creating the pod @ 04/20/24 14:35:24.285
  Apr 20 14:35:26.869: INFO: Successfully updated pod "annotationupdatee881808e-0d57-4f0b-baa2-f8ef5e3cdca4"
  Apr 20 14:35:28.893: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2285" for this suite. @ 04/20/24 14:35:28.901
• [4.672 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:50
  STEP: Creating a kubernetes client @ 04/20/24 14:35:28.915
  Apr 20 14:35:28.915: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename dns @ 04/20/24 14:35:28.918
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:35:28.943
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:35:28.947
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 04/20/24 14:35:28.951
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 04/20/24 14:35:28.951
  STEP: creating a pod to probe DNS @ 04/20/24 14:35:28.951
  STEP: submitting the pod to kubernetes @ 04/20/24 14:35:28.951
  STEP: retrieving the pod @ 04/20/24 14:35:30.986
  STEP: looking for the results for each expected name from probers @ 04/20/24 14:35:30.991
  Apr 20 14:35:31.023: INFO: DNS probes using dns-6598/dns-test-1ecca91d-9786-4961-9a4e-be09f9f9c358 succeeded

  STEP: deleting the pod @ 04/20/24 14:35:31.023
  Apr 20 14:35:31.042: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-6598" for this suite. @ 04/20/24 14:35:31.049
• [2.148 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:622
  STEP: Creating a kubernetes client @ 04/20/24 14:35:31.068
  Apr 20 14:35:31.068: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename field-validation @ 04/20/24 14:35:31.072
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:35:31.096
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:35:31.1
  Apr 20 14:35:31.104: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  W0420 14:35:33.909563      13 warnings.go:70] unknown field "alpha"
  W0420 14:35:33.909696      13 warnings.go:70] unknown field "beta"
  W0420 14:35:33.909713      13 warnings.go:70] unknown field "delta"
  W0420 14:35:33.909723      13 warnings.go:70] unknown field "epsilon"
  W0420 14:35:33.909733      13 warnings.go:70] unknown field "gamma"
  Apr 20 14:35:34.492: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-1823" for this suite. @ 04/20/24 14:35:34.502
• [3.449 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:889
  STEP: Creating a kubernetes client @ 04/20/24 14:35:34.517
  Apr 20 14:35:34.517: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename resourcequota @ 04/20/24 14:35:34.525
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:35:34.555
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:35:34.561
  STEP: Creating a ResourceQuota @ 04/20/24 14:35:34.565
  STEP: Getting a ResourceQuota @ 04/20/24 14:35:34.574
  STEP: Updating a ResourceQuota @ 04/20/24 14:35:34.581
  STEP: Verifying a ResourceQuota was modified @ 04/20/24 14:35:34.594
  STEP: Deleting a ResourceQuota @ 04/20/24 14:35:34.6
  STEP: Verifying the deleted ResourceQuota @ 04/20/24 14:35:34.611
  Apr 20 14:35:34.617: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3628" for this suite. @ 04/20/24 14:35:34.625
• [0.121 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:164
  STEP: Creating a kubernetes client @ 04/20/24 14:35:34.639
  Apr 20 14:35:34.639: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename downward-api @ 04/20/24 14:35:34.642
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:35:34.67
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:35:34.677
  STEP: Creating the pod @ 04/20/24 14:35:34.682
  Apr 20 14:35:37.283: INFO: Successfully updated pod "annotationupdate9be71506-b23e-4188-add2-a16b5992e85f"
  Apr 20 14:35:39.320: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4752" for this suite. @ 04/20/24 14:35:39.331
• [4.707 seconds]
------------------------------
SSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1533
  STEP: Creating a kubernetes client @ 04/20/24 14:35:39.347
  Apr 20 14:35:39.347: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename services @ 04/20/24 14:35:39.351
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:35:39.391
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:35:39.398
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-1505 @ 04/20/24 14:35:39.404
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 04/20/24 14:35:39.437
  STEP: creating service externalsvc in namespace services-1505 @ 04/20/24 14:35:39.437
  STEP: creating replication controller externalsvc in namespace services-1505 @ 04/20/24 14:35:39.462
  I0420 14:35:39.479532      13 runners.go:197] Created replication controller with name: externalsvc, namespace: services-1505, replica count: 2
  I0420 14:35:42.530896      13 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 04/20/24 14:35:42.538
  Apr 20 14:35:42.570: INFO: Creating new exec pod
  Apr 20 14:35:44.621: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=services-1505 exec execpodp7kfn -- /bin/sh -x -c nslookup nodeport-service.services-1505.svc.cluster.local'
  Apr 20 14:35:45.120: INFO: stderr: "+ nslookup nodeport-service.services-1505.svc.cluster.local\n"
  Apr 20 14:35:45.121: INFO: stdout: "Server:\t\t10.233.0.10\nAddress:\t10.233.0.10#53\n\nnodeport-service.services-1505.svc.cluster.local\tcanonical name = externalsvc.services-1505.svc.cluster.local.\nName:\texternalsvc.services-1505.svc.cluster.local\nAddress: 10.233.29.202\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-1505, will wait for the garbage collector to delete the pods @ 04/20/24 14:35:45.121
  Apr 20 14:35:45.195: INFO: Deleting ReplicationController externalsvc took: 14.567571ms
  Apr 20 14:35:45.296: INFO: Terminating ReplicationController externalsvc pods took: 101.253749ms
  Apr 20 14:35:48.149: INFO: Cleaning up the NodePort to ExternalName test service
  Apr 20 14:35:48.179: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1505" for this suite. @ 04/20/24 14:35:48.196
• [8.863 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/server_version.go:41
  STEP: Creating a kubernetes client @ 04/20/24 14:35:48.211
  Apr 20 14:35:48.211: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename server-version @ 04/20/24 14:35:48.216
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:35:48.247
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:35:48.253
  STEP: Request ServerVersion @ 04/20/24 14:35:48.259
  STEP: Confirm major version @ 04/20/24 14:35:48.262
  Apr 20 14:35:48.262: INFO: Major version: 1
  STEP: Confirm minor version @ 04/20/24 14:35:48.262
  Apr 20 14:35:48.262: INFO: cleanMinorVersion: 29
  Apr 20 14:35:48.262: INFO: Minor version: 29
  Apr 20 14:35:48.262: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-4504" for this suite. @ 04/20/24 14:35:48.272
• [0.073 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lease.go:73
  STEP: Creating a kubernetes client @ 04/20/24 14:35:48.283
  Apr 20 14:35:48.283: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename lease-test @ 04/20/24 14:35:48.287
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:35:48.359
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:35:48.366
  Apr 20 14:35:48.545: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-7030" for this suite. @ 04/20/24 14:35:48.559
• [0.286 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:176
  STEP: Creating a kubernetes client @ 04/20/24 14:35:48.571
  Apr 20 14:35:48.571: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename events @ 04/20/24 14:35:48.574
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:35:48.605
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:35:48.609
  STEP: Create set of events @ 04/20/24 14:35:48.614
  Apr 20 14:35:48.623: INFO: created test-event-1
  Apr 20 14:35:48.631: INFO: created test-event-2
  Apr 20 14:35:48.641: INFO: created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 04/20/24 14:35:48.641
  STEP: delete collection of events @ 04/20/24 14:35:48.646
  Apr 20 14:35:48.646: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 04/20/24 14:35:48.688
  Apr 20 14:35:48.689: INFO: requesting list of events to confirm quantity
  Apr 20 14:35:48.694: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-9311" for this suite. @ 04/20/24 14:35:48.703
• [0.146 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:151
  STEP: Creating a kubernetes client @ 04/20/24 14:35:48.719
  Apr 20 14:35:48.719: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename container-probe @ 04/20/24 14:35:48.722
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:35:48.753
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:35:48.757
  STEP: Creating pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286 @ 04/20/24 14:35:48.762
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/20/24 14:35:50.794
  Apr 20 14:35:50.801: INFO: Initial restart count of pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c is 0
  Apr 20 14:35:50.811: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:35:52.826: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:35:54.840: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:35:56.849: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:35:58.865: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:36:00.873: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:36:02.882: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:36:04.890: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:36:06.899: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:36:08.907: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:36:10.929: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:36:12.945: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:36:14.990: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:36:16.998: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:36:19.008: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:36:21.017: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:36:23.025: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:36:25.041: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:36:27.051: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:36:29.066: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:36:31.079: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:36:33.096: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:36:35.105: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:36:37.114: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:36:39.123: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:36:41.129: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:36:43.137: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:36:45.145: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:36:47.155: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:36:49.163: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:36:51.170: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:36:53.179: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:36:55.188: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:36:57.198: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:36:59.208: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:37:01.217: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:37:03.227: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:37:05.236: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:37:07.246: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:37:09.256: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:37:11.264: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:37:13.273: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:37:15.282: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:37:17.291: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:37:19.299: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:37:21.306: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:37:23.315: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:37:25.325: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:37:27.336: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:37:29.344: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:37:31.353: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:37:33.364: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:37:35.374: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:37:37.381: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:37:39.392: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:37:41.409: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:37:43.417: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:37:45.426: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:37:47.432: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:37:49.505: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:37:51.513: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:37:53.520: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:37:55.528: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:37:57.536: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:37:59.551: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:38:01.560: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:38:03.569: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:38:05.580: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:38:07.587: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:38:09.596: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:38:11.603: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:38:13.610: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:38:15.617: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:38:17.623: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:38:19.634: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:38:21.640: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:38:23.646: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:38:25.655: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:38:27.663: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:38:29.671: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:38:31.677: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:38:33.685: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:38:35.693: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:38:37.698: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:38:39.708: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:38:41.714: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:38:43.720: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:38:45.727: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:38:47.735: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:38:49.741: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:38:51.749: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:38:53.757: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:38:55.771: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:38:57.778: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:38:59.784: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:39:01.791: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:39:03.798: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:39:05.807: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:39:07.816: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:39:09.823: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:39:11.830: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:39:13.837: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:39:15.843: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:39:17.849: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:39:19.854: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:39:21.860: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:39:23.866: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:39:25.872: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:39:27.882: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:39:29.889: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:39:31.896: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:39:33.903: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:39:35.912: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:39:37.921: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:39:39.927: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:39:41.935: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:39:43.947: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:39:45.956: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:39:47.965: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  Apr 20 14:39:49.973: INFO: Get pod busybox-f9777647-e3cd-4597-bdbe-41a6ae16992c in namespace container-probe-9286
  STEP: deleting the pod @ 04/20/24 14:39:51.974
  Apr 20 14:39:52.000: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9286" for this suite. @ 04/20/24 14:39:52.018
• [243.313 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:442
  STEP: Creating a kubernetes client @ 04/20/24 14:39:52.032
  Apr 20 14:39:52.032: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/20/24 14:39:52.037
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:39:52.069
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:39:52.073
  STEP: set up a multi version CRD @ 04/20/24 14:39:52.079
  Apr 20 14:39:52.080: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: mark a version not serverd @ 04/20/24 14:40:00.86
  STEP: check the unserved version gets removed @ 04/20/24 14:40:00.907
  STEP: check the other version is not changed @ 04/20/24 14:40:03.45
  Apr 20 14:40:09.994: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7281" for this suite. @ 04/20/24 14:40:10.013
• [17.994 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:236
  STEP: Creating a kubernetes client @ 04/20/24 14:40:10.027
  Apr 20 14:40:10.027: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/20/24 14:40:10.031
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:40:10.061
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:40:10.067
  Apr 20 14:40:10.073: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 04/20/24 14:40:13.278
  Apr 20 14:40:13.279: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=crd-publish-openapi-1666 --namespace=crd-publish-openapi-1666 create -f -'
  Apr 20 14:40:13.552: INFO: stderr: ""
  Apr 20 14:40:13.552: INFO: stdout: "e2e-test-crd-publish-openapi-2830-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  Apr 20 14:40:13.552: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=crd-publish-openapi-1666 --namespace=crd-publish-openapi-1666 delete e2e-test-crd-publish-openapi-2830-crds test-cr'
  Apr 20 14:40:13.826: INFO: stderr: ""
  Apr 20 14:40:13.826: INFO: stdout: "e2e-test-crd-publish-openapi-2830-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  Apr 20 14:40:13.827: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=crd-publish-openapi-1666 --namespace=crd-publish-openapi-1666 apply -f -'
  Apr 20 14:40:14.018: INFO: stderr: ""
  Apr 20 14:40:14.018: INFO: stdout: "e2e-test-crd-publish-openapi-2830-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  Apr 20 14:40:14.019: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=crd-publish-openapi-1666 --namespace=crd-publish-openapi-1666 delete e2e-test-crd-publish-openapi-2830-crds test-cr'
  Apr 20 14:40:14.178: INFO: stderr: ""
  Apr 20 14:40:14.178: INFO: stdout: "e2e-test-crd-publish-openapi-2830-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 04/20/24 14:40:14.178
  Apr 20 14:40:14.178: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=crd-publish-openapi-1666 explain e2e-test-crd-publish-openapi-2830-crds'
  Apr 20 14:40:14.329: INFO: stderr: ""
  Apr 20 14:40:14.329: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-2830-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  Apr 20 14:40:16.802: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-1666" for this suite. @ 04/20/24 14:40:16.82
• [6.806 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:86
  STEP: Creating a kubernetes client @ 04/20/24 14:40:16.833
  Apr 20 14:40:16.833: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename custom-resource-definition @ 04/20/24 14:40:16.836
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:40:16.864
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:40:16.866
  Apr 20 14:40:16.871: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  Apr 20 14:40:23.211: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-8347" for this suite. @ 04/20/24 14:40:23.22
• [6.397 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3649
  STEP: Creating a kubernetes client @ 04/20/24 14:40:23.232
  Apr 20 14:40:23.232: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename services @ 04/20/24 14:40:23.235
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:40:23.264
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:40:23.269
  STEP: creating service multiprotocol-test in namespace services-4641 @ 04/20/24 14:40:23.273
  STEP: creating pod pod1 in namespace services-4641 @ 04/20/24 14:40:23.288
  STEP: Creating pod pod1 in namespace services-4641 @ 04/20/24 14:40:23.288
  STEP: waiting up to 3m0s for service multiprotocol-test in namespace services-4641 to expose endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]] @ 04/20/24 14:40:25.328
  Apr 20 14:40:25.347: INFO: successfully validated that service multiprotocol-test in namespace services-4641 exposes endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 04/20/24 14:40:25.347
  Apr 20 14:40:25.347: INFO: Creating new exec pod
  Apr 20 14:40:27.376: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=services-4641 exec execpodmvz5l -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.16.49 80'
  Apr 20 14:40:27.663: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.16.49 80\nConnection to 10.233.16.49 80 port [tcp/http] succeeded!\n"
  Apr 20 14:40:27.663: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 20 14:40:27.663: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=services-4641 exec execpodmvz5l -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.16.49 80'
  Apr 20 14:40:31.937: INFO: stderr: "+ echo hostName\n+ nc -v -u -w 2 10.233.16.49 80\nConnection to 10.233.16.49 80 port [udp/*] succeeded!\n"
  Apr 20 14:40:31.937: INFO: stdout: "pod1"
  STEP: Checking if the Service forwards traffic to TCP only @ 04/20/24 14:40:31.937
  Apr 20 14:40:31.956: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=services-4641 exec execpodmvz5l -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.16.49 80'
  Apr 20 14:40:32.235: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.16.49 80\nConnection to 10.233.16.49 80 port [tcp/http] succeeded!\n"
  Apr 20 14:40:32.235: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 20 14:40:32.235: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=services-4641 exec execpodmvz5l -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.16.49 80'
  Apr 20 14:40:36.487: INFO: stderr: "+ echo hostName\n+ nc -v -u -w 2 10.233.16.49 80\nConnection to 10.233.16.49 80 port [udp/*] succeeded!\n"
  Apr 20 14:40:36.488: INFO: stdout: ""
  Apr 20 14:40:36.488: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=services-4641 exec execpodmvz5l -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.16.49 80'
  Apr 20 14:40:40.735: INFO: stderr: "+ echo hostName\n+ nc -v -u -w 2 10.233.16.49 80\nConnection to 10.233.16.49 80 port [udp/*] succeeded!\n"
  Apr 20 14:40:40.736: INFO: stdout: ""
  STEP: Checking if the Service forwards traffic to UDP only @ 04/20/24 14:40:40.736
  Apr 20 14:40:40.763: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=services-4641 exec execpodmvz5l -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.16.49 80'
  Apr 20 14:40:45.065: INFO: stderr: "+ echo hostName\n+ nc -v -u -w 2 10.233.16.49 80\nConnection to 10.233.16.49 80 port [udp/*] succeeded!\n"
  Apr 20 14:40:45.065: INFO: stdout: "pod1"
  Apr 20 14:40:45.066: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=services-4641 exec execpodmvz5l -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.16.49 80'
  Apr 20 14:40:47.322: INFO: rc: 1
  Apr 20 14:40:47.322: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=services-4641 exec execpodmvz5l -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.16.49 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.233.16.49 80
  nc: connect to 10.233.16.49 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  Apr 20 14:40:47.323: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=services-4641 exec execpodmvz5l -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.16.49 80'
  Apr 20 14:40:49.557: INFO: rc: 1
  Apr 20 14:40:49.557: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=services-4641 exec execpodmvz5l -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.16.49 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.233.16.49 80
  nc: connect to 10.233.16.49 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  Apr 20 14:40:49.558: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=services-4641 exec execpodmvz5l -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.16.49 80'
  Apr 20 14:40:51.884: INFO: rc: 1
  Apr 20 14:40:51.884: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=services-4641 exec execpodmvz5l -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.16.49 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.233.16.49 80
  nc: connect to 10.233.16.49 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  Apr 20 14:40:51.885: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4641" for this suite. @ 04/20/24 14:40:51.896
• [28.677 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:177
  STEP: Creating a kubernetes client @ 04/20/24 14:40:51.91
  Apr 20 14:40:51.910: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename podtemplate @ 04/20/24 14:40:51.913
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:40:51.942
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:40:51.946
  STEP: Create a pod template @ 04/20/24 14:40:51.95
  STEP: Replace a pod template @ 04/20/24 14:40:51.961
  Apr 20 14:40:51.974: INFO: Found updated podtemplate annotation: "true"

  Apr 20 14:40:51.974: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-8903" for this suite. @ 04/20/24 14:40:51.981
• [0.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:59
  STEP: Creating a kubernetes client @ 04/20/24 14:40:51.991
  Apr 20 14:40:51.991: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename custom-resource-definition @ 04/20/24 14:40:51.994
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:40:52.018
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:40:52.022
  Apr 20 14:40:52.026: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  Apr 20 14:40:53.058: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-7893" for this suite. @ 04/20/24 14:40:53.065
• [1.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1798
  STEP: Creating a kubernetes client @ 04/20/24 14:40:53.077
  Apr 20 14:40:53.077: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename kubectl @ 04/20/24 14:40:53.08
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:40:53.101
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:40:53.106
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 04/20/24 14:40:53.11
  Apr 20 14:40:53.110: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-9924 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  Apr 20 14:40:53.285: INFO: stderr: ""
  Apr 20 14:40:53.285: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 04/20/24 14:40:53.285
  STEP: verifying the pod e2e-test-httpd-pod was created @ 04/20/24 14:40:58.336
  Apr 20 14:40:58.337: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-9924 get pod e2e-test-httpd-pod -o json'
  Apr 20 14:40:58.522: INFO: stderr: ""
  Apr 20 14:40:58.522: INFO: stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2024-04-20T14:40:53Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-9924\",\n        \"resourceVersion\": \"51831\",\n        \"uid\": \"9214c8e2-3726-4e20-8350-a381f77d9e1a\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-vbjqm\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"nok4chie7ate-3\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-vbjqm\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-04-20T14:40:54Z\",\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-04-20T14:40:53Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-04-20T14:40:54Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-04-20T14:40:54Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-04-20T14:40:53Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"cri-o://35ef4043b1d551abd653ed4a9ef6ef8c8eab94225e1f989056f996823c6e9d7b\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2024-04-20T14:40:53Z\"\n                    }\n                }\n            }\n        ],\n        \"hostIP\": \"192.168.121.8\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"192.168.121.8\"\n            }\n        ],\n        \"phase\": \"Running\",\n        \"podIP\": \"10.233.66.2\",\n        \"podIPs\": [\n            {\n                \"ip\": \"10.233.66.2\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2024-04-20T14:40:53Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 04/20/24 14:40:58.523
  Apr 20 14:40:58.523: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-9924 replace -f -'
  Apr 20 14:40:58.843: INFO: stderr: ""
  Apr 20 14:40:58.843: INFO: stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.36.1-1 @ 04/20/24 14:40:58.843
  Apr 20 14:40:58.852: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-9924 delete pods e2e-test-httpd-pod'
  Apr 20 14:41:01.219: INFO: stderr: ""
  Apr 20 14:41:01.219: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Apr 20 14:41:01.219: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9924" for this suite. @ 04/20/24 14:41:01.227
• [8.163 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:273
  STEP: Creating a kubernetes client @ 04/20/24 14:41:01.241
  Apr 20 14:41:01.241: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename webhook @ 04/20/24 14:41:01.244
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:41:01.27
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:41:01.275
  STEP: Setting up server cert @ 04/20/24 14:41:01.308
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/20/24 14:41:01.842
  STEP: Deploying the webhook pod @ 04/20/24 14:41:01.858
  STEP: Wait for the deployment to be ready @ 04/20/24 14:41:01.89
  Apr 20 14:41:01.911: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 04/20/24 14:41:03.935
  STEP: Verifying the service has paired with the endpoint @ 04/20/24 14:41:03.951
  Apr 20 14:41:04.951: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 04/20/24 14:41:04.968
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 04/20/24 14:41:05.02
  STEP: Creating a dummy validating-webhook-configuration object @ 04/20/24 14:41:05.049
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 04/20/24 14:41:05.067
  STEP: Creating a dummy mutating-webhook-configuration object @ 04/20/24 14:41:05.08
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 04/20/24 14:41:05.094
  Apr 20 14:41:05.220: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5616" for this suite. @ 04/20/24 14:41:05.23
  STEP: Destroying namespace "webhook-markers-5831" for this suite. @ 04/20/24 14:41:05.24
• [4.009 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 04/20/24 14:41:05.252
  Apr 20 14:41:05.253: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename subpath @ 04/20/24 14:41:05.263
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:41:05.288
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:41:05.293
  STEP: Setting up data @ 04/20/24 14:41:05.297
  STEP: Creating pod pod-subpath-test-configmap-47lf @ 04/20/24 14:41:05.313
  STEP: Creating a pod to test atomic-volume-subpath @ 04/20/24 14:41:05.314
  STEP: Saw pod success @ 04/20/24 14:41:27.488
  Apr 20 14:41:27.495: INFO: Trying to get logs from node nok4chie7ate-3 pod pod-subpath-test-configmap-47lf container test-container-subpath-configmap-47lf: <nil>
  STEP: delete the pod @ 04/20/24 14:41:27.53
  STEP: Deleting pod pod-subpath-test-configmap-47lf @ 04/20/24 14:41:27.559
  Apr 20 14:41:27.559: INFO: Deleting pod "pod-subpath-test-configmap-47lf" in namespace "subpath-9787"
  Apr 20 14:41:27.565: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-9787" for this suite. @ 04/20/24 14:41:27.577
• [22.338 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:332
  STEP: Creating a kubernetes client @ 04/20/24 14:41:27.591
  Apr 20 14:41:27.591: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename statefulset @ 04/20/24 14:41:27.595
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:41:27.624
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:41:27.631
  STEP: Creating service test in namespace statefulset-6893 @ 04/20/24 14:41:27.636
  STEP: Creating a new StatefulSet @ 04/20/24 14:41:27.648
  Apr 20 14:41:27.672: INFO: Found 0 stateful pods, waiting for 3
  Apr 20 14:41:37.681: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Apr 20 14:41:37.681: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Apr 20 14:41:37.681: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 04/20/24 14:41:37.702
  Apr 20 14:41:37.734: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 04/20/24 14:41:37.735
  STEP: Not applying an update when the partition is greater than the number of replicas @ 04/20/24 14:41:47.749
  STEP: Performing a canary update @ 04/20/24 14:41:47.75
  Apr 20 14:41:47.775: INFO: Updating stateful set ss2
  Apr 20 14:41:47.796: INFO: Waiting for Pod statefulset-6893/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  STEP: Restoring Pods to the correct revision when they are deleted @ 04/20/24 14:41:57.793
  Apr 20 14:41:57.883: INFO: Found 1 stateful pods, waiting for 3
  Apr 20 14:42:07.886: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Apr 20 14:42:07.886: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Apr 20 14:42:07.886: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Pending - Ready=false
  Apr 20 14:42:17.885: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Apr 20 14:42:17.885: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Apr 20 14:42:17.885: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Pending - Ready=false
  Apr 20 14:42:27.885: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Apr 20 14:42:27.885: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Apr 20 14:42:27.885: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Pending - Ready=false
  Apr 20 14:42:37.890: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Apr 20 14:42:37.891: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Apr 20 14:42:37.891: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Pending - Ready=false
  Apr 20 14:42:47.887: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Apr 20 14:42:47.887: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Apr 20 14:42:47.887: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 04/20/24 14:42:47.915
  Apr 20 14:42:47.948: INFO: Updating stateful set ss2
  Apr 20 14:42:47.962: INFO: Waiting for Pod statefulset-6893/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  Apr 20 14:42:58.010: INFO: Updating stateful set ss2
  Apr 20 14:42:58.033: INFO: Waiting for StatefulSet statefulset-6893/ss2 to complete update
  Apr 20 14:42:58.033: INFO: Waiting for Pod statefulset-6893/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  Apr 20 14:43:08.027: INFO: Waiting for StatefulSet statefulset-6893/ss2 to complete update
  Apr 20 14:43:08.027: INFO: Waiting for Pod statefulset-6893/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  Apr 20 14:43:18.026: INFO: Waiting for StatefulSet statefulset-6893/ss2 to complete update
  Apr 20 14:43:18.026: INFO: Waiting for Pod statefulset-6893/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  Apr 20 14:43:28.023: INFO: Waiting for StatefulSet statefulset-6893/ss2 to complete update
  Apr 20 14:43:28.023: INFO: Waiting for Pod statefulset-6893/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  Apr 20 14:43:38.026: INFO: Waiting for StatefulSet statefulset-6893/ss2 to complete update
  Apr 20 14:43:38.026: INFO: Waiting for Pod statefulset-6893/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  Apr 20 14:43:48.028: INFO: Waiting for StatefulSet statefulset-6893/ss2 to complete update
  Apr 20 14:43:48.028: INFO: Waiting for Pod statefulset-6893/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  Apr 20 14:43:58.030: INFO: Waiting for StatefulSet statefulset-6893/ss2 to complete update
  Apr 20 14:43:58.030: INFO: Waiting for Pod statefulset-6893/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  Apr 20 14:44:08.030: INFO: Waiting for StatefulSet statefulset-6893/ss2 to complete update
  Apr 20 14:44:08.030: INFO: Waiting for Pod statefulset-6893/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  Apr 20 14:44:18.039: INFO: Waiting for StatefulSet statefulset-6893/ss2 to complete update
  Apr 20 14:44:28.068: INFO: Waiting for StatefulSet statefulset-6893/ss2 to complete update
  Apr 20 14:44:38.025: INFO: Waiting for StatefulSet statefulset-6893/ss2 to complete update
  Apr 20 14:44:48.027: INFO: Deleting all statefulset in ns statefulset-6893
  Apr 20 14:44:48.033: INFO: Scaling statefulset ss2 to 0
  Apr 20 14:44:58.061: INFO: Waiting for statefulset status.replicas updated to 0
  Apr 20 14:44:58.068: INFO: Deleting statefulset ss2
  Apr 20 14:44:58.093: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6893" for this suite. @ 04/20/24 14:44:58.105
• [210.534 seconds]
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:200
  STEP: Creating a kubernetes client @ 04/20/24 14:44:58.126
  Apr 20 14:44:58.126: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename emptydir @ 04/20/24 14:44:58.13
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:44:58.164
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:44:58.168
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 04/20/24 14:44:58.173
  STEP: Saw pod success @ 04/20/24 14:45:02.209
  Apr 20 14:45:02.216: INFO: Trying to get logs from node nok4chie7ate-3 pod pod-5a0cbfdf-1fc3-4a3d-9f7c-3ed9a12f19fd container test-container: <nil>
  STEP: delete the pod @ 04/20/24 14:45:02.263
  Apr 20 14:45:02.297: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3527" for this suite. @ 04/20/24 14:45:02.31
• [4.196 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 04/20/24 14:45:02.323
  Apr 20 14:45:02.323: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename pods @ 04/20/24 14:45:02.328
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:45:02.367
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:45:02.373
  Apr 20 14:45:02.379: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: creating the pod @ 04/20/24 14:45:02.383
  STEP: submitting the pod to kubernetes @ 04/20/24 14:45:02.384
  Apr 20 14:45:04.517: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5905" for this suite. @ 04/20/24 14:45:04.529
• [2.218 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:234
  STEP: Creating a kubernetes client @ 04/20/24 14:45:04.541
  Apr 20 14:45:04.541: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename resourcequota @ 04/20/24 14:45:04.544
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:45:04.574
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:45:04.579
  STEP: Counting existing ResourceQuota @ 04/20/24 14:45:04.586
  STEP: Creating a ResourceQuota @ 04/20/24 14:45:09.595
  STEP: Ensuring resource quota status is calculated @ 04/20/24 14:45:09.606
  STEP: Creating a Pod that fits quota @ 04/20/24 14:45:11.615
  STEP: Ensuring ResourceQuota status captures the pod usage @ 04/20/24 14:45:11.64
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 04/20/24 14:45:13.648
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 04/20/24 14:45:13.652
  STEP: Ensuring a pod cannot update its resource requirements @ 04/20/24 14:45:13.656
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 04/20/24 14:45:13.663
  STEP: Deleting the pod @ 04/20/24 14:45:15.672
  STEP: Ensuring resource quota status released the pod usage @ 04/20/24 14:45:15.692
  Apr 20 14:45:17.703: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4176" for this suite. @ 04/20/24 14:45:17.714
• [13.186 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:349
  STEP: Creating a kubernetes client @ 04/20/24 14:45:17.729
  Apr 20 14:45:17.729: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename disruption @ 04/20/24 14:45:17.737
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:45:17.77
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:45:17.779
  STEP: Creating a pdb that targets all three pods in a test replica set @ 04/20/24 14:45:17.791
  STEP: Waiting for the pdb to be processed @ 04/20/24 14:45:17.802
  STEP: First trying to evict a pod which shouldn't be evictable @ 04/20/24 14:45:19.826
  STEP: Waiting for all pods to be running @ 04/20/24 14:45:19.827
  Apr 20 14:45:19.835: INFO: pods: 0 < 3
  STEP: locating a running pod @ 04/20/24 14:45:21.837
  STEP: Updating the pdb to allow a pod to be evicted @ 04/20/24 14:45:21.86
  STEP: Waiting for the pdb to be processed @ 04/20/24 14:45:21.891
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 04/20/24 14:45:23.906
  STEP: Waiting for all pods to be running @ 04/20/24 14:45:23.907
  STEP: Waiting for the pdb to observed all healthy pods @ 04/20/24 14:45:23.921
  STEP: Patching the pdb to disallow a pod to be evicted @ 04/20/24 14:45:23.976
  STEP: Waiting for the pdb to be processed @ 04/20/24 14:45:24.057
  STEP: Waiting for all pods to be running @ 04/20/24 14:45:26.065
  STEP: locating a running pod @ 04/20/24 14:45:26.073
  STEP: Deleting the pdb to allow a pod to be evicted @ 04/20/24 14:45:26.094
  STEP: Waiting for the pdb to be deleted @ 04/20/24 14:45:26.105
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 04/20/24 14:45:26.112
  STEP: Waiting for all pods to be running @ 04/20/24 14:45:26.112
  Apr 20 14:45:26.149: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-3281" for this suite. @ 04/20/24 14:45:26.171
• [8.475 seconds]
------------------------------
SSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:85
  STEP: Creating a kubernetes client @ 04/20/24 14:45:26.204
  Apr 20 14:45:26.204: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename pod-network-test @ 04/20/24 14:45:26.208
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:45:26.25
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:45:26.257
  STEP: Performing setup for networking test in namespace pod-network-test-1900 @ 04/20/24 14:45:26.262
  STEP: creating a selector @ 04/20/24 14:45:26.262
  STEP: Creating the service pods in kubernetes @ 04/20/24 14:45:26.263
  Apr 20 14:45:26.263: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 04/20/24 14:45:48.514
  Apr 20 14:45:50.551: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Apr 20 14:45:50.551: INFO: Breadth first check of 10.233.64.88 on host 192.168.121.235...
  Apr 20 14:45:50.558: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.66.12:9080/dial?request=hostname&protocol=http&host=10.233.64.88&port=8083&tries=1'] Namespace:pod-network-test-1900 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 20 14:45:50.558: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  Apr 20 14:45:50.560: INFO: ExecWithOptions: Clientset creation
  Apr 20 14:45:50.561: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-1900/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.66.12%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.233.64.88%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Apr 20 14:45:50.711: INFO: Waiting for responses: map[]
  Apr 20 14:45:50.711: INFO: reached 10.233.64.88 after 0/1 tries
  Apr 20 14:45:50.711: INFO: Breadth first check of 10.233.65.81 on host 192.168.121.193...
  Apr 20 14:45:50.718: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.66.12:9080/dial?request=hostname&protocol=http&host=10.233.65.81&port=8083&tries=1'] Namespace:pod-network-test-1900 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 20 14:45:50.718: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  Apr 20 14:45:50.720: INFO: ExecWithOptions: Clientset creation
  Apr 20 14:45:50.720: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-1900/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.66.12%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.233.65.81%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Apr 20 14:45:50.838: INFO: Waiting for responses: map[]
  Apr 20 14:45:50.838: INFO: reached 10.233.65.81 after 0/1 tries
  Apr 20 14:45:50.838: INFO: Breadth first check of 10.233.66.11 on host 192.168.121.8...
  Apr 20 14:45:50.847: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.66.12:9080/dial?request=hostname&protocol=http&host=10.233.66.11&port=8083&tries=1'] Namespace:pod-network-test-1900 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 20 14:45:50.847: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  Apr 20 14:45:50.849: INFO: ExecWithOptions: Clientset creation
  Apr 20 14:45:50.849: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-1900/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.66.12%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.233.66.11%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Apr 20 14:45:50.969: INFO: Waiting for responses: map[]
  Apr 20 14:45:50.969: INFO: reached 10.233.66.11 after 0/1 tries
  Apr 20 14:45:50.969: INFO: Going to retry 0 out of 3 pods....
  Apr 20 14:45:50.971: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-1900" for this suite. @ 04/20/24 14:45:50.981
• [24.793 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 04/20/24 14:45:51.004
  Apr 20 14:45:51.004: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename subjectreview @ 04/20/24 14:45:51.01
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:45:51.046
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:45:51.051
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-9253" @ 04/20/24 14:45:51.058
  Apr 20 14:45:51.065: INFO: saUsername: "system:serviceaccount:subjectreview-9253:e2e"
  Apr 20 14:45:51.065: INFO: saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-9253"}
  Apr 20 14:45:51.065: INFO: saUID: "98458fd5-02b8-488d-8218-d68e4d67cebe"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-9253:e2e" @ 04/20/24 14:45:51.065
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-9253:e2e" @ 04/20/24 14:45:51.066
  Apr 20 14:45:51.070: INFO: sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-9253:e2e" api 'list' configmaps in "subjectreview-9253" namespace @ 04/20/24 14:45:51.07
  Apr 20 14:45:51.072: INFO: SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-9253:e2e" @ 04/20/24 14:45:51.072
  Apr 20 14:45:51.076: INFO: lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  Apr 20 14:45:51.076: INFO: LocalSubjectAccessReview has been verified
  Apr 20 14:45:51.076: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-9253" for this suite. @ 04/20/24 14:45:51.086
• [0.095 seconds]
------------------------------
SS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:61
  STEP: Creating a kubernetes client @ 04/20/24 14:45:51.1
  Apr 20 14:45:51.100: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename containers @ 04/20/24 14:45:51.103
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:45:51.192
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:45:51.199
  STEP: Creating a pod to test override arguments @ 04/20/24 14:45:51.203
  STEP: Saw pod success @ 04/20/24 14:45:55.245
  Apr 20 14:45:55.252: INFO: Trying to get logs from node nok4chie7ate-3 pod client-containers-44bbaa2d-0848-4d2f-9218-9ff703071fc0 container agnhost-container: <nil>
  STEP: delete the pod @ 04/20/24 14:45:55.268
  Apr 20 14:45:55.297: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-7937" for this suite. @ 04/20/24 14:45:55.305
• [4.218 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:344
  STEP: Creating a kubernetes client @ 04/20/24 14:45:55.32
  Apr 20 14:45:55.320: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename kubectl @ 04/20/24 14:45:55.323
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:45:55.355
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:45:55.36
  STEP: creating a replication controller @ 04/20/24 14:45:55.365
  Apr 20 14:45:55.365: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-3088 create -f -'
  Apr 20 14:45:55.679: INFO: stderr: ""
  Apr 20 14:45:55.679: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 04/20/24 14:45:55.679
  Apr 20 14:45:55.680: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-3088 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Apr 20 14:45:55.908: INFO: stderr: ""
  Apr 20 14:45:55.909: INFO: stdout: "update-demo-nautilus-46qbv update-demo-nautilus-zqgsb "
  Apr 20 14:45:55.909: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-3088 get pods update-demo-nautilus-46qbv -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Apr 20 14:45:56.102: INFO: stderr: ""
  Apr 20 14:45:56.102: INFO: stdout: ""
  Apr 20 14:45:56.102: INFO: update-demo-nautilus-46qbv is created but not running
  Apr 20 14:46:01.104: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-3088 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Apr 20 14:46:01.296: INFO: stderr: ""
  Apr 20 14:46:01.296: INFO: stdout: "update-demo-nautilus-46qbv update-demo-nautilus-zqgsb "
  Apr 20 14:46:01.296: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-3088 get pods update-demo-nautilus-46qbv -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Apr 20 14:46:01.522: INFO: stderr: ""
  Apr 20 14:46:01.522: INFO: stdout: ""
  Apr 20 14:46:01.522: INFO: update-demo-nautilus-46qbv is created but not running
  Apr 20 14:46:06.524: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-3088 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Apr 20 14:46:06.715: INFO: stderr: ""
  Apr 20 14:46:06.715: INFO: stdout: "update-demo-nautilus-46qbv update-demo-nautilus-zqgsb "
  Apr 20 14:46:06.715: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-3088 get pods update-demo-nautilus-46qbv -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Apr 20 14:46:06.935: INFO: stderr: ""
  Apr 20 14:46:06.935: INFO: stdout: ""
  Apr 20 14:46:06.935: INFO: update-demo-nautilus-46qbv is created but not running
  Apr 20 14:46:11.937: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-3088 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Apr 20 14:46:12.097: INFO: stderr: ""
  Apr 20 14:46:12.098: INFO: stdout: "update-demo-nautilus-46qbv update-demo-nautilus-zqgsb "
  Apr 20 14:46:12.098: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-3088 get pods update-demo-nautilus-46qbv -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Apr 20 14:46:12.260: INFO: stderr: ""
  Apr 20 14:46:12.260: INFO: stdout: ""
  Apr 20 14:46:12.260: INFO: update-demo-nautilus-46qbv is created but not running
  Apr 20 14:46:17.263: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-3088 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Apr 20 14:46:17.451: INFO: stderr: ""
  Apr 20 14:46:17.451: INFO: stdout: "update-demo-nautilus-46qbv update-demo-nautilus-zqgsb "
  Apr 20 14:46:17.451: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-3088 get pods update-demo-nautilus-46qbv -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Apr 20 14:46:17.627: INFO: stderr: ""
  Apr 20 14:46:17.627: INFO: stdout: ""
  Apr 20 14:46:17.627: INFO: update-demo-nautilus-46qbv is created but not running
  Apr 20 14:46:22.629: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-3088 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Apr 20 14:46:22.798: INFO: stderr: ""
  Apr 20 14:46:22.798: INFO: stdout: "update-demo-nautilus-46qbv update-demo-nautilus-zqgsb "
  Apr 20 14:46:22.799: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-3088 get pods update-demo-nautilus-46qbv -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Apr 20 14:46:22.950: INFO: stderr: ""
  Apr 20 14:46:22.950: INFO: stdout: ""
  Apr 20 14:46:22.950: INFO: update-demo-nautilus-46qbv is created but not running
  Apr 20 14:46:27.952: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-3088 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Apr 20 14:46:28.131: INFO: stderr: ""
  Apr 20 14:46:28.131: INFO: stdout: "update-demo-nautilus-46qbv update-demo-nautilus-zqgsb "
  Apr 20 14:46:28.131: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-3088 get pods update-demo-nautilus-46qbv -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Apr 20 14:46:28.292: INFO: stderr: ""
  Apr 20 14:46:28.293: INFO: stdout: ""
  Apr 20 14:46:28.293: INFO: update-demo-nautilus-46qbv is created but not running
  Apr 20 14:46:33.294: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-3088 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Apr 20 14:46:33.533: INFO: stderr: ""
  Apr 20 14:46:33.533: INFO: stdout: "update-demo-nautilus-46qbv update-demo-nautilus-zqgsb "
  Apr 20 14:46:33.533: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-3088 get pods update-demo-nautilus-46qbv -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Apr 20 14:46:33.708: INFO: stderr: ""
  Apr 20 14:46:33.708: INFO: stdout: ""
  Apr 20 14:46:33.708: INFO: update-demo-nautilus-46qbv is created but not running
  Apr 20 14:46:38.709: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-3088 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Apr 20 14:46:38.947: INFO: stderr: ""
  Apr 20 14:46:38.947: INFO: stdout: "update-demo-nautilus-46qbv update-demo-nautilus-zqgsb "
  Apr 20 14:46:38.948: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-3088 get pods update-demo-nautilus-46qbv -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Apr 20 14:46:39.102: INFO: stderr: ""
  Apr 20 14:46:39.102: INFO: stdout: ""
  Apr 20 14:46:39.102: INFO: update-demo-nautilus-46qbv is created but not running
  Apr 20 14:46:44.106: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-3088 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Apr 20 14:46:44.286: INFO: stderr: ""
  Apr 20 14:46:44.286: INFO: stdout: "update-demo-nautilus-46qbv update-demo-nautilus-zqgsb "
  Apr 20 14:46:44.286: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-3088 get pods update-demo-nautilus-46qbv -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Apr 20 14:46:44.483: INFO: stderr: ""
  Apr 20 14:46:44.483: INFO: stdout: ""
  Apr 20 14:46:44.483: INFO: update-demo-nautilus-46qbv is created but not running
  Apr 20 14:46:49.485: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-3088 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Apr 20 14:46:49.721: INFO: stderr: ""
  Apr 20 14:46:49.721: INFO: stdout: "update-demo-nautilus-46qbv update-demo-nautilus-zqgsb "
  Apr 20 14:46:49.722: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-3088 get pods update-demo-nautilus-46qbv -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Apr 20 14:46:49.907: INFO: stderr: ""
  Apr 20 14:46:49.907: INFO: stdout: ""
  Apr 20 14:46:49.907: INFO: update-demo-nautilus-46qbv is created but not running
  Apr 20 14:46:54.909: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-3088 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Apr 20 14:46:55.142: INFO: stderr: ""
  Apr 20 14:46:55.142: INFO: stdout: "update-demo-nautilus-46qbv update-demo-nautilus-zqgsb "
  Apr 20 14:46:55.143: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-3088 get pods update-demo-nautilus-46qbv -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Apr 20 14:46:55.315: INFO: stderr: ""
  Apr 20 14:46:55.315: INFO: stdout: "true"
  Apr 20 14:46:55.315: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-3088 get pods update-demo-nautilus-46qbv -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Apr 20 14:46:55.477: INFO: stderr: ""
  Apr 20 14:46:55.477: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Apr 20 14:46:55.478: INFO: validating pod update-demo-nautilus-46qbv
  Apr 20 14:46:55.500: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Apr 20 14:46:55.502: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Apr 20 14:46:55.502: INFO: update-demo-nautilus-46qbv is verified up and running
  Apr 20 14:46:55.502: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-3088 get pods update-demo-nautilus-zqgsb -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Apr 20 14:46:55.690: INFO: stderr: ""
  Apr 20 14:46:55.690: INFO: stdout: ""
  Apr 20 14:46:55.690: INFO: update-demo-nautilus-zqgsb is created but not running
  Apr 20 14:47:00.691: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-3088 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Apr 20 14:47:00.887: INFO: stderr: ""
  Apr 20 14:47:00.887: INFO: stdout: "update-demo-nautilus-46qbv update-demo-nautilus-zqgsb "
  Apr 20 14:47:00.888: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-3088 get pods update-demo-nautilus-46qbv -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Apr 20 14:47:01.037: INFO: stderr: ""
  Apr 20 14:47:01.037: INFO: stdout: "true"
  Apr 20 14:47:01.037: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-3088 get pods update-demo-nautilus-46qbv -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Apr 20 14:47:01.191: INFO: stderr: ""
  Apr 20 14:47:01.191: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Apr 20 14:47:01.191: INFO: validating pod update-demo-nautilus-46qbv
  Apr 20 14:47:01.200: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Apr 20 14:47:01.200: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Apr 20 14:47:01.200: INFO: update-demo-nautilus-46qbv is verified up and running
  Apr 20 14:47:01.200: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-3088 get pods update-demo-nautilus-zqgsb -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Apr 20 14:47:01.359: INFO: stderr: ""
  Apr 20 14:47:01.359: INFO: stdout: "true"
  Apr 20 14:47:01.360: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-3088 get pods update-demo-nautilus-zqgsb -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Apr 20 14:47:01.546: INFO: stderr: ""
  Apr 20 14:47:01.547: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Apr 20 14:47:01.547: INFO: validating pod update-demo-nautilus-zqgsb
  Apr 20 14:47:01.573: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Apr 20 14:47:01.573: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Apr 20 14:47:01.573: INFO: update-demo-nautilus-zqgsb is verified up and running
  STEP: using delete to clean up resources @ 04/20/24 14:47:01.573
  Apr 20 14:47:01.573: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-3088 delete --grace-period=0 --force -f -'
  Apr 20 14:47:01.730: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Apr 20 14:47:01.730: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  Apr 20 14:47:01.731: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-3088 get rc,svc -l name=update-demo --no-headers'
  Apr 20 14:47:01.976: INFO: stderr: "No resources found in kubectl-3088 namespace.\n"
  Apr 20 14:47:01.976: INFO: stdout: ""
  Apr 20 14:47:01.977: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-3088 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Apr 20 14:47:02.172: INFO: stderr: ""
  Apr 20 14:47:02.172: INFO: stdout: ""
  Apr 20 14:47:02.172: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3088" for this suite. @ 04/20/24 14:47:02.184
• [66.879 seconds]
------------------------------
S
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:57
  STEP: Creating a kubernetes client @ 04/20/24 14:47:02.201
  Apr 20 14:47:02.201: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename runtimeclass @ 04/20/24 14:47:02.207
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:47:02.243
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:47:02.249
  Apr 20 14:47:02.283: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-2141" for this suite. @ 04/20/24 14:47:02.296
• [0.112 seconds]
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:100
  STEP: Creating a kubernetes client @ 04/20/24 14:47:02.313
  Apr 20 14:47:02.313: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename configmap @ 04/20/24 14:47:02.315
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:47:02.347
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:47:02.352
  STEP: Creating configMap with name configmap-test-volume-map-7cfa7561-8327-4c11-bbe4-40ace095884a @ 04/20/24 14:47:02.357
  STEP: Creating a pod to test consume configMaps @ 04/20/24 14:47:02.366
  STEP: Saw pod success @ 04/20/24 14:47:06.41
  Apr 20 14:47:06.419: INFO: Trying to get logs from node nok4chie7ate-3 pod pod-configmaps-062a9289-9f76-4cff-a3fb-c9986ddb3b05 container agnhost-container: <nil>
  STEP: delete the pod @ 04/20/24 14:47:06.442
  Apr 20 14:47:06.471: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2480" for this suite. @ 04/20/24 14:47:06.481
• [4.184 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:332
  STEP: Creating a kubernetes client @ 04/20/24 14:47:06.498
  Apr 20 14:47:06.498: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename webhook @ 04/20/24 14:47:06.503
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:47:06.538
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:47:06.543
  STEP: Setting up server cert @ 04/20/24 14:47:06.589
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/20/24 14:47:07.173
  STEP: Deploying the webhook pod @ 04/20/24 14:47:07.189
  STEP: Wait for the deployment to be ready @ 04/20/24 14:47:07.215
  Apr 20 14:47:07.234: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 04/20/24 14:47:09.262
  STEP: Verifying the service has paired with the endpoint @ 04/20/24 14:47:09.287
  Apr 20 14:47:10.287: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Apr 20 14:47:10.304: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-9787-crds.webhook.example.com via the AdmissionRegistration API @ 04/20/24 14:47:10.833
  STEP: Creating a custom resource that should be mutated by the webhook @ 04/20/24 14:47:10.879
  Apr 20 14:47:13.810: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-631" for this suite. @ 04/20/24 14:47:13.82
  STEP: Destroying namespace "webhook-markers-198" for this suite. @ 04/20/24 14:47:13.832
• [7.348 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/storageclass.go:53
  STEP: Creating a kubernetes client @ 04/20/24 14:47:13.847
  Apr 20 14:47:13.847: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename csi-storageclass @ 04/20/24 14:47:13.85
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:47:13.89
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:47:13.895
  STEP: Creating a StorageClass @ 04/20/24 14:47:13.899
  STEP: Get StorageClass "e2e-5gdbq" @ 04/20/24 14:47:13.909
  STEP: Patching the StorageClass "e2e-5gdbq" @ 04/20/24 14:47:13.916
  STEP: Delete StorageClass "e2e-5gdbq" @ 04/20/24 14:47:13.929
  STEP: Confirm deletion of StorageClass "e2e-5gdbq" @ 04/20/24 14:47:13.938
  STEP: Create a replacement StorageClass @ 04/20/24 14:47:13.944
  STEP: Updating StorageClass "e2e-v2-rr8nw" @ 04/20/24 14:47:13.952
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-rr8nw=updated" @ 04/20/24 14:47:13.97
  STEP: Deleting StorageClass "e2e-v2-rr8nw" via DeleteCollection @ 04/20/24 14:47:13.976
  STEP: Confirm deletion of StorageClass "e2e-v2-rr8nw" @ 04/20/24 14:47:13.991
  Apr 20 14:47:13.997: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-4562" for this suite. @ 04/20/24 14:47:14.006
• [0.170 seconds]
------------------------------
SSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1053
  STEP: Creating a kubernetes client @ 04/20/24 14:47:14.017
  Apr 20 14:47:14.017: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename kubectl @ 04/20/24 14:47:14.02
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:47:14.051
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:47:14.055
  STEP: create deployment with httpd image @ 04/20/24 14:47:14.06
  Apr 20 14:47:14.060: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-1886 create -f -'
  Apr 20 14:47:14.304: INFO: stderr: ""
  Apr 20 14:47:14.304: INFO: stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 04/20/24 14:47:14.305
  Apr 20 14:47:14.305: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-1886 diff -f -'
  Apr 20 14:47:14.670: INFO: rc: 1
  Apr 20 14:47:14.671: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-1886 delete -f -'
  Apr 20 14:47:14.886: INFO: stderr: ""
  Apr 20 14:47:14.887: INFO: stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  Apr 20 14:47:14.887: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1886" for this suite. @ 04/20/24 14:47:14.896
• [0.891 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 04/20/24 14:47:14.909
  Apr 20 14:47:14.909: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename projected @ 04/20/24 14:47:14.917
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:47:14.953
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:47:14.957
  STEP: Creating projection with secret that has name projected-secret-test-map-ef5b0275-d3e1-46cb-9edc-0210b03356ed @ 04/20/24 14:47:14.964
  STEP: Creating a pod to test consume secrets @ 04/20/24 14:47:14.973
  STEP: Saw pod success @ 04/20/24 14:47:19.027
  Apr 20 14:47:19.035: INFO: Trying to get logs from node nok4chie7ate-3 pod pod-projected-secrets-4f7e5468-1f03-4a92-90cc-f279dd9083d4 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 04/20/24 14:47:19.052
  Apr 20 14:47:19.081: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2621" for this suite. @ 04/20/24 14:47:19.094
• [4.204 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 04/20/24 14:47:19.115
  Apr 20 14:47:19.115: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename secrets @ 04/20/24 14:47:19.121
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:47:19.19
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:47:19.196
  STEP: Creating secret with name secret-test-map-486bf232-5833-4e62-be4b-cb9da68fa9a5 @ 04/20/24 14:47:19.201
  STEP: Creating a pod to test consume secrets @ 04/20/24 14:47:19.209
  STEP: Saw pod success @ 04/20/24 14:47:23.26
  Apr 20 14:47:23.268: INFO: Trying to get logs from node nok4chie7ate-3 pod pod-secrets-d3820aa3-b50b-4513-b3bd-74e9e8408e98 container secret-volume-test: <nil>
  STEP: delete the pod @ 04/20/24 14:47:23.281
  Apr 20 14:47:23.317: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-150" for this suite. @ 04/20/24 14:47:23.331
• [4.228 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:194
  STEP: Creating a kubernetes client @ 04/20/24 14:47:23.346
  Apr 20 14:47:23.346: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/20/24 14:47:23.353
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:47:23.384
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:47:23.391
  Apr 20 14:47:23.396: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 04/20/24 14:47:26.485
  Apr 20 14:47:26.487: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=crd-publish-openapi-4687 --namespace=crd-publish-openapi-4687 create -f -'
  Apr 20 14:47:26.789: INFO: stderr: ""
  Apr 20 14:47:26.790: INFO: stdout: "e2e-test-crd-publish-openapi-7428-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  Apr 20 14:47:26.791: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=crd-publish-openapi-4687 --namespace=crd-publish-openapi-4687 delete e2e-test-crd-publish-openapi-7428-crds test-cr'
  Apr 20 14:47:27.084: INFO: stderr: ""
  Apr 20 14:47:27.085: INFO: stdout: "e2e-test-crd-publish-openapi-7428-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  Apr 20 14:47:27.086: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=crd-publish-openapi-4687 --namespace=crd-publish-openapi-4687 apply -f -'
  Apr 20 14:47:27.265: INFO: stderr: ""
  Apr 20 14:47:27.266: INFO: stdout: "e2e-test-crd-publish-openapi-7428-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  Apr 20 14:47:27.266: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=crd-publish-openapi-4687 --namespace=crd-publish-openapi-4687 delete e2e-test-crd-publish-openapi-7428-crds test-cr'
  Apr 20 14:47:27.420: INFO: stderr: ""
  Apr 20 14:47:27.421: INFO: stdout: "e2e-test-crd-publish-openapi-7428-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 04/20/24 14:47:27.421
  Apr 20 14:47:27.422: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=crd-publish-openapi-4687 explain e2e-test-crd-publish-openapi-7428-crds'
  Apr 20 14:47:27.568: INFO: stderr: ""
  Apr 20 14:47:27.568: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-7428-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  Apr 20 14:47:30.844: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4687" for this suite. @ 04/20/24 14:47:30.88
• [7.546 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:90
  STEP: Creating a kubernetes client @ 04/20/24 14:47:30.892
  Apr 20 14:47:30.892: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename emptydir @ 04/20/24 14:47:30.895
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:47:30.937
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:47:30.942
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 04/20/24 14:47:30.946
  STEP: Saw pod success @ 04/20/24 14:47:34.986
  Apr 20 14:47:34.993: INFO: Trying to get logs from node nok4chie7ate-3 pod pod-e4040824-b9ce-4584-9b34-93a120595a3d container test-container: <nil>
  STEP: delete the pod @ 04/20/24 14:47:35.01
  Apr 20 14:47:35.033: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7888" for this suite. @ 04/20/24 14:47:35.042
• [4.164 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:572
  STEP: Creating a kubernetes client @ 04/20/24 14:47:35.056
  Apr 20 14:47:35.056: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename webhook @ 04/20/24 14:47:35.06
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:47:35.09
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:47:35.096
  STEP: Setting up server cert @ 04/20/24 14:47:35.139
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/20/24 14:47:35.775
  STEP: Deploying the webhook pod @ 04/20/24 14:47:35.785
  STEP: Wait for the deployment to be ready @ 04/20/24 14:47:35.803
  Apr 20 14:47:35.819: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/20/24 14:47:37.841
  STEP: Verifying the service has paired with the endpoint @ 04/20/24 14:47:37.856
  Apr 20 14:47:38.856: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 04/20/24 14:47:39.006
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 04/20/24 14:47:39.077
  STEP: Deleting the collection of validation webhooks @ 04/20/24 14:47:39.123
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 04/20/24 14:47:39.228
  Apr 20 14:47:39.349: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3836" for this suite. @ 04/20/24 14:47:39.356
  STEP: Destroying namespace "webhook-markers-1804" for this suite. @ 04/20/24 14:47:39.372
• [4.335 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:199
  STEP: Creating a kubernetes client @ 04/20/24 14:47:39.392
  Apr 20 14:47:39.392: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename webhook @ 04/20/24 14:47:39.395
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:47:39.427
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:47:39.43
  STEP: Setting up server cert @ 04/20/24 14:47:39.466
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/20/24 14:47:40.639
  STEP: Deploying the webhook pod @ 04/20/24 14:47:40.657
  STEP: Wait for the deployment to be ready @ 04/20/24 14:47:40.679
  Apr 20 14:47:40.699: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/20/24 14:47:42.727
  STEP: Verifying the service has paired with the endpoint @ 04/20/24 14:47:42.756
  Apr 20 14:47:43.756: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 04/20/24 14:47:43.779
  STEP: create a pod that should be denied by the webhook @ 04/20/24 14:47:43.83
  STEP: create a pod that causes the webhook to hang @ 04/20/24 14:47:43.865
  STEP: create a configmap that should be denied by the webhook @ 04/20/24 14:47:53.879
  STEP: create a configmap that should be admitted by the webhook @ 04/20/24 14:47:53.942
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 04/20/24 14:47:53.963
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 04/20/24 14:47:53.982
  STEP: create a namespace that bypass the webhook @ 04/20/24 14:47:53.993
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 04/20/24 14:47:54.026
  Apr 20 14:47:54.141: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8033" for this suite. @ 04/20/24 14:47:54.166
  STEP: Destroying namespace "webhook-markers-6058" for this suite. @ 04/20/24 14:47:54.215
  STEP: Destroying namespace "exempted-namespace-783" for this suite. @ 04/20/24 14:47:54.234
• [14.854 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1455
  STEP: Creating a kubernetes client @ 04/20/24 14:47:54.246
  Apr 20 14:47:54.246: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename services @ 04/20/24 14:47:54.257
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:47:54.29
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:47:54.294
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-1468 @ 04/20/24 14:47:54.299
  STEP: changing the ExternalName service to type=NodePort @ 04/20/24 14:47:54.308
  STEP: creating replication controller externalname-service in namespace services-1468 @ 04/20/24 14:47:54.341
  I0420 14:47:54.358354      13 runners.go:197] Created replication controller with name: externalname-service, namespace: services-1468, replica count: 2
  I0420 14:47:57.411298      13 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Apr 20 14:47:57.411: INFO: Creating new exec pod
  Apr 20 14:48:00.501: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=services-1468 exec execpodslmdd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Apr 20 14:48:00.877: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Apr 20 14:48:00.877: INFO: stdout: "externalname-service-x9qf5"
  Apr 20 14:48:00.878: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=services-1468 exec execpodslmdd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.56.236 80'
  Apr 20 14:48:01.156: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.56.236 80\nConnection to 10.233.56.236 80 port [tcp/http] succeeded!\n"
  Apr 20 14:48:01.156: INFO: stdout: ""
  Apr 20 14:48:01.879: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=services-1468 exec execpodslmdd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.56.236 80'
  Apr 20 14:48:02.150: INFO: stderr: "+ + nc -v -t -w 2 10.233.56.236 80\necho hostName\nConnection to 10.233.56.236 80 port [tcp/http] succeeded!\n"
  Apr 20 14:48:02.150: INFO: stdout: "externalname-service-x9qf5"
  Apr 20 14:48:02.151: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=services-1468 exec execpodslmdd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.235 30101'
  Apr 20 14:48:02.413: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.235 30101\nConnection to 192.168.121.235 30101 port [tcp/*] succeeded!\n"
  Apr 20 14:48:02.413: INFO: stdout: "externalname-service-qxtmt"
  Apr 20 14:48:02.413: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=services-1468 exec execpodslmdd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.193 30101'
  Apr 20 14:48:02.645: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.193 30101\nConnection to 192.168.121.193 30101 port [tcp/*] succeeded!\n"
  Apr 20 14:48:02.645: INFO: stdout: ""
  Apr 20 14:48:03.414: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=services-1468 exec execpodslmdd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.193 30101'
  Apr 20 14:48:03.720: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.193 30101\nConnection to 192.168.121.193 30101 port [tcp/*] succeeded!\n"
  Apr 20 14:48:03.720: INFO: stdout: "externalname-service-x9qf5"
  Apr 20 14:48:03.720: INFO: Cleaning up the ExternalName to NodePort test service
  Apr 20 14:48:03.782: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1468" for this suite. @ 04/20/24 14:48:03.794
• [9.566 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 04/20/24 14:48:03.813
  Apr 20 14:48:03.813: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename container-runtime @ 04/20/24 14:48:03.816
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:48:03.852
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:48:03.856
  STEP: create the container @ 04/20/24 14:48:03.861
  W0420 14:48:03.878042      13 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 04/20/24 14:48:03.878
  STEP: get the container status @ 04/20/24 14:48:06.941
  STEP: the container should be terminated @ 04/20/24 14:48:06.948
  STEP: the termination message should be set @ 04/20/24 14:48:06.949
  Apr 20 14:48:06.949: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 04/20/24 14:48:06.949
  Apr 20 14:48:06.981: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-2641" for this suite. @ 04/20/24 14:48:06.99
• [3.194 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1493
  STEP: Creating a kubernetes client @ 04/20/24 14:48:07.007
  Apr 20 14:48:07.007: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename services @ 04/20/24 14:48:07.011
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:48:07.047
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:48:07.053
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-65 @ 04/20/24 14:48:07.059
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 04/20/24 14:48:07.083
  STEP: creating service externalsvc in namespace services-65 @ 04/20/24 14:48:07.083
  STEP: creating replication controller externalsvc in namespace services-65 @ 04/20/24 14:48:07.11
  I0420 14:48:07.125493      13 runners.go:197] Created replication controller with name: externalsvc, namespace: services-65, replica count: 2
  I0420 14:48:10.176342      13 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 04/20/24 14:48:10.187
  Apr 20 14:48:10.214: INFO: Creating new exec pod
  Apr 20 14:48:12.256: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=services-65 exec execpodc8ksz -- /bin/sh -x -c nslookup clusterip-service.services-65.svc.cluster.local'
  Apr 20 14:48:12.649: INFO: stderr: "+ nslookup clusterip-service.services-65.svc.cluster.local\n"
  Apr 20 14:48:12.649: INFO: stdout: "Server:\t\t10.233.0.10\nAddress:\t10.233.0.10#53\n\nclusterip-service.services-65.svc.cluster.local\tcanonical name = externalsvc.services-65.svc.cluster.local.\nName:\texternalsvc.services-65.svc.cluster.local\nAddress: 10.233.4.132\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-65, will wait for the garbage collector to delete the pods @ 04/20/24 14:48:12.65
  Apr 20 14:48:12.721: INFO: Deleting ReplicationController externalsvc took: 11.659222ms
  Apr 20 14:48:12.823: INFO: Terminating ReplicationController externalsvc pods took: 101.651332ms
  Apr 20 14:48:15.585: INFO: Cleaning up the ClusterIP to ExternalName test service
  Apr 20 14:48:15.613: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-65" for this suite. @ 04/20/24 14:48:15.624
• [8.630 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:263
  STEP: Creating a kubernetes client @ 04/20/24 14:48:15.643
  Apr 20 14:48:15.643: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename downward-api @ 04/20/24 14:48:15.649
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:48:15.683
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:48:15.688
  STEP: Creating a pod to test downward API volume plugin @ 04/20/24 14:48:15.693
  STEP: Saw pod success @ 04/20/24 14:48:19.736
  Apr 20 14:48:19.749: INFO: Trying to get logs from node nok4chie7ate-3 pod downwardapi-volume-1584c0cf-658a-4dad-a696-b0c7d47edc9c container client-container: <nil>
  STEP: delete the pod @ 04/20/24 14:48:19.771
  Apr 20 14:48:19.803: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7507" for this suite. @ 04/20/24 14:48:19.814
• [4.187 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:224
  STEP: Creating a kubernetes client @ 04/20/24 14:48:19.829
  Apr 20 14:48:19.829: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename sched-preemption @ 04/20/24 14:48:19.833
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:48:19.876
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:48:19.882
  Apr 20 14:48:19.922: INFO: Waiting up to 1m0s for all nodes to be ready
  Apr 20 14:49:19.953: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 04/20/24 14:49:19.964
  Apr 20 14:49:20.030: INFO: Created pod: pod0-0-sched-preemption-low-priority
  Apr 20 14:49:20.042: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  Apr 20 14:49:20.104: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  Apr 20 14:49:20.138: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  Apr 20 14:49:20.221: INFO: Created pod: pod2-0-sched-preemption-medium-priority
  Apr 20 14:49:20.248: INFO: Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 04/20/24 14:49:20.249
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 04/20/24 14:49:22.329
  Apr 20 14:49:28.671: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-8550" for this suite. @ 04/20/24 14:49:28.68
• [68.876 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:94
  STEP: Creating a kubernetes client @ 04/20/24 14:49:28.707
  Apr 20 14:49:28.707: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename configmap @ 04/20/24 14:49:28.711
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:49:28.763
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:49:28.771
  STEP: Creating configMap configmap-7361/configmap-test-5a5b1741-fe86-4022-88e2-286def7f1221 @ 04/20/24 14:49:28.777
  STEP: Creating a pod to test consume configMaps @ 04/20/24 14:49:28.787
  STEP: Saw pod success @ 04/20/24 14:49:32.848
  Apr 20 14:49:32.862: INFO: Trying to get logs from node nok4chie7ate-3 pod pod-configmaps-3e37b27e-f560-4a4a-8e0d-9548bf1d359e container env-test: <nil>
  STEP: delete the pod @ 04/20/24 14:49:32.881
  Apr 20 14:49:32.915: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7361" for this suite. @ 04/20/24 14:49:32.925
• [4.234 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1863
  STEP: Creating a kubernetes client @ 04/20/24 14:49:32.941
  Apr 20 14:49:32.941: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename kubectl @ 04/20/24 14:49:32.945
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:49:32.983
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:49:32.987
  STEP: Starting the proxy @ 04/20/24 14:49:32.993
  Apr 20 14:49:32.997: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-3030 proxy --unix-socket=/tmp/kubectl-proxy-unix1387255113/test'
  STEP: retrieving proxy /api/ output @ 04/20/24 14:49:33.164
  Apr 20 14:49:33.170: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3030" for this suite. @ 04/20/24 14:49:33.182
• [0.253 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:254
  STEP: Creating a kubernetes client @ 04/20/24 14:49:33.195
  Apr 20 14:49:33.195: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename namespaces @ 04/20/24 14:49:33.198
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:49:33.23
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:49:33.238
  STEP: Creating a test namespace @ 04/20/24 14:49:33.244
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:49:33.273
  STEP: Creating a service in the namespace @ 04/20/24 14:49:33.279
  STEP: Deleting the namespace @ 04/20/24 14:49:33.301
  STEP: Waiting for the namespace to be removed. @ 04/20/24 14:49:33.327
  STEP: Recreating the namespace @ 04/20/24 14:49:39.343
  STEP: Verifying there is no service in the namespace @ 04/20/24 14:49:39.39
  Apr 20 14:49:39.399: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-4440" for this suite. @ 04/20/24 14:49:39.414
  STEP: Destroying namespace "nsdeletetest-563" for this suite. @ 04/20/24 14:49:39.437
  Apr 20 14:49:39.446: INFO: Namespace nsdeletetest-563 was already deleted
  STEP: Destroying namespace "nsdeletetest-3297" for this suite. @ 04/20/24 14:49:39.446
• [6.267 seconds]
------------------------------
SSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:140
  STEP: Creating a kubernetes client @ 04/20/24 14:49:39.463
  Apr 20 14:49:39.463: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename emptydir @ 04/20/24 14:49:39.468
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:49:39.511
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:49:39.519
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 04/20/24 14:49:39.526
  STEP: Saw pod success @ 04/20/24 14:49:43.586
  Apr 20 14:49:43.595: INFO: Trying to get logs from node nok4chie7ate-3 pod pod-240d60b3-f945-413a-8e01-58e8f649ec40 container test-container: <nil>
  STEP: delete the pod @ 04/20/24 14:49:43.617
  Apr 20 14:49:43.660: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4515" for this suite. @ 04/20/24 14:49:43.678
• [4.232 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:126
  STEP: Creating a kubernetes client @ 04/20/24 14:49:43.696
  Apr 20 14:49:43.696: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename discovery @ 04/20/24 14:49:43.701
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:49:43.747
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:49:43.757
  STEP: Setting up server cert @ 04/20/24 14:49:43.768
  Apr 20 14:49:44.251: INFO: Checking APIGroup: apiregistration.k8s.io
  Apr 20 14:49:44.255: INFO: PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  Apr 20 14:49:44.255: INFO: Versions found [{apiregistration.k8s.io/v1 v1}]
  Apr 20 14:49:44.255: INFO: apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  Apr 20 14:49:44.255: INFO: Checking APIGroup: apps
  Apr 20 14:49:44.257: INFO: PreferredVersion.GroupVersion: apps/v1
  Apr 20 14:49:44.257: INFO: Versions found [{apps/v1 v1}]
  Apr 20 14:49:44.257: INFO: apps/v1 matches apps/v1
  Apr 20 14:49:44.257: INFO: Checking APIGroup: events.k8s.io
  Apr 20 14:49:44.260: INFO: PreferredVersion.GroupVersion: events.k8s.io/v1
  Apr 20 14:49:44.260: INFO: Versions found [{events.k8s.io/v1 v1}]
  Apr 20 14:49:44.260: INFO: events.k8s.io/v1 matches events.k8s.io/v1
  Apr 20 14:49:44.260: INFO: Checking APIGroup: authentication.k8s.io
  Apr 20 14:49:44.262: INFO: PreferredVersion.GroupVersion: authentication.k8s.io/v1
  Apr 20 14:49:44.262: INFO: Versions found [{authentication.k8s.io/v1 v1}]
  Apr 20 14:49:44.262: INFO: authentication.k8s.io/v1 matches authentication.k8s.io/v1
  Apr 20 14:49:44.262: INFO: Checking APIGroup: authorization.k8s.io
  Apr 20 14:49:44.264: INFO: PreferredVersion.GroupVersion: authorization.k8s.io/v1
  Apr 20 14:49:44.264: INFO: Versions found [{authorization.k8s.io/v1 v1}]
  Apr 20 14:49:44.264: INFO: authorization.k8s.io/v1 matches authorization.k8s.io/v1
  Apr 20 14:49:44.264: INFO: Checking APIGroup: autoscaling
  Apr 20 14:49:44.266: INFO: PreferredVersion.GroupVersion: autoscaling/v2
  Apr 20 14:49:44.267: INFO: Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  Apr 20 14:49:44.267: INFO: autoscaling/v2 matches autoscaling/v2
  Apr 20 14:49:44.267: INFO: Checking APIGroup: batch
  Apr 20 14:49:44.270: INFO: PreferredVersion.GroupVersion: batch/v1
  Apr 20 14:49:44.270: INFO: Versions found [{batch/v1 v1}]
  Apr 20 14:49:44.270: INFO: batch/v1 matches batch/v1
  Apr 20 14:49:44.270: INFO: Checking APIGroup: certificates.k8s.io
  Apr 20 14:49:44.272: INFO: PreferredVersion.GroupVersion: certificates.k8s.io/v1
  Apr 20 14:49:44.272: INFO: Versions found [{certificates.k8s.io/v1 v1}]
  Apr 20 14:49:44.272: INFO: certificates.k8s.io/v1 matches certificates.k8s.io/v1
  Apr 20 14:49:44.272: INFO: Checking APIGroup: networking.k8s.io
  Apr 20 14:49:44.274: INFO: PreferredVersion.GroupVersion: networking.k8s.io/v1
  Apr 20 14:49:44.275: INFO: Versions found [{networking.k8s.io/v1 v1}]
  Apr 20 14:49:44.275: INFO: networking.k8s.io/v1 matches networking.k8s.io/v1
  Apr 20 14:49:44.275: INFO: Checking APIGroup: policy
  Apr 20 14:49:44.277: INFO: PreferredVersion.GroupVersion: policy/v1
  Apr 20 14:49:44.278: INFO: Versions found [{policy/v1 v1}]
  Apr 20 14:49:44.278: INFO: policy/v1 matches policy/v1
  Apr 20 14:49:44.278: INFO: Checking APIGroup: rbac.authorization.k8s.io
  Apr 20 14:49:44.280: INFO: PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  Apr 20 14:49:44.280: INFO: Versions found [{rbac.authorization.k8s.io/v1 v1}]
  Apr 20 14:49:44.280: INFO: rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  Apr 20 14:49:44.280: INFO: Checking APIGroup: storage.k8s.io
  Apr 20 14:49:44.283: INFO: PreferredVersion.GroupVersion: storage.k8s.io/v1
  Apr 20 14:49:44.283: INFO: Versions found [{storage.k8s.io/v1 v1}]
  Apr 20 14:49:44.283: INFO: storage.k8s.io/v1 matches storage.k8s.io/v1
  Apr 20 14:49:44.283: INFO: Checking APIGroup: admissionregistration.k8s.io
  Apr 20 14:49:44.285: INFO: PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  Apr 20 14:49:44.285: INFO: Versions found [{admissionregistration.k8s.io/v1 v1}]
  Apr 20 14:49:44.285: INFO: admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  Apr 20 14:49:44.285: INFO: Checking APIGroup: apiextensions.k8s.io
  Apr 20 14:49:44.287: INFO: PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  Apr 20 14:49:44.287: INFO: Versions found [{apiextensions.k8s.io/v1 v1}]
  Apr 20 14:49:44.287: INFO: apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  Apr 20 14:49:44.287: INFO: Checking APIGroup: scheduling.k8s.io
  Apr 20 14:49:44.291: INFO: PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  Apr 20 14:49:44.291: INFO: Versions found [{scheduling.k8s.io/v1 v1}]
  Apr 20 14:49:44.291: INFO: scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  Apr 20 14:49:44.291: INFO: Checking APIGroup: coordination.k8s.io
  Apr 20 14:49:44.293: INFO: PreferredVersion.GroupVersion: coordination.k8s.io/v1
  Apr 20 14:49:44.293: INFO: Versions found [{coordination.k8s.io/v1 v1}]
  Apr 20 14:49:44.293: INFO: coordination.k8s.io/v1 matches coordination.k8s.io/v1
  Apr 20 14:49:44.293: INFO: Checking APIGroup: node.k8s.io
  Apr 20 14:49:44.296: INFO: PreferredVersion.GroupVersion: node.k8s.io/v1
  Apr 20 14:49:44.296: INFO: Versions found [{node.k8s.io/v1 v1}]
  Apr 20 14:49:44.296: INFO: node.k8s.io/v1 matches node.k8s.io/v1
  Apr 20 14:49:44.296: INFO: Checking APIGroup: discovery.k8s.io
  Apr 20 14:49:44.299: INFO: PreferredVersion.GroupVersion: discovery.k8s.io/v1
  Apr 20 14:49:44.299: INFO: Versions found [{discovery.k8s.io/v1 v1}]
  Apr 20 14:49:44.299: INFO: discovery.k8s.io/v1 matches discovery.k8s.io/v1
  Apr 20 14:49:44.299: INFO: Checking APIGroup: flowcontrol.apiserver.k8s.io
  Apr 20 14:49:44.301: INFO: PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  Apr 20 14:49:44.301: INFO: Versions found [{flowcontrol.apiserver.k8s.io/v1 v1} {flowcontrol.apiserver.k8s.io/v1beta3 v1beta3}]
  Apr 20 14:49:44.301: INFO: flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  Apr 20 14:49:44.301: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-9580" for this suite. @ 04/20/24 14:49:44.311
• [0.630 seconds]
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:784
  STEP: Creating a kubernetes client @ 04/20/24 14:49:44.326
  Apr 20 14:49:44.326: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename job @ 04/20/24 14:49:44.329
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:49:44.367
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:49:44.372
  STEP: Creating a job @ 04/20/24 14:49:44.378
  STEP: Ensure pods equal to parallelism count is attached to the job @ 04/20/24 14:49:44.391
  STEP: patching /status @ 04/20/24 14:49:46.407
  STEP: updating /status @ 04/20/24 14:49:46.436
  STEP: get /status @ 04/20/24 14:49:46.465
  Apr 20 14:49:46.478: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-1202" for this suite. @ 04/20/24 14:49:46.492
• [2.189 seconds]
------------------------------
SS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:95
  STEP: Creating a kubernetes client @ 04/20/24 14:49:46.516
  Apr 20 14:49:46.516: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename var-expansion @ 04/20/24 14:49:46.527
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:49:46.571
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:49:46.578
  STEP: Creating a pod to test substitution in container's args @ 04/20/24 14:49:46.585
  STEP: Saw pod success @ 04/20/24 14:49:50.651
  Apr 20 14:49:50.666: INFO: Trying to get logs from node nok4chie7ate-3 pod var-expansion-6316deaf-3d00-41eb-8420-3be9e96f985d container dapi-container: <nil>
  STEP: delete the pod @ 04/20/24 14:49:50.688
  Apr 20 14:49:50.720: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-7567" for this suite. @ 04/20/24 14:49:50.731
• [4.231 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:480
  STEP: Creating a kubernetes client @ 04/20/24 14:49:50.748
  Apr 20 14:49:50.748: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename gc @ 04/20/24 14:49:50.751
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:49:50.798
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:49:50.804
  STEP: create the deployment @ 04/20/24 14:49:50.811
  W0420 14:49:50.820751      13 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 04/20/24 14:49:50.82
  STEP: delete the deployment @ 04/20/24 14:49:51.329
  STEP: wait for all rs to be garbage collected @ 04/20/24 14:49:51.368
  STEP: expected 0 rs, got 1 rs @ 04/20/24 14:49:51.39
  STEP: expected 0 pods, got 2 pods @ 04/20/24 14:49:51.399
  STEP: Gathering metrics @ 04/20/24 14:49:51.889
  Apr 20 14:49:52.190: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Apr 20 14:49:52.190: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-2285" for this suite. @ 04/20/24 14:49:52.201
• [1.465 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:136
  STEP: Creating a kubernetes client @ 04/20/24 14:49:52.216
  Apr 20 14:49:52.216: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 04/20/24 14:49:52.226
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:49:52.266
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:49:52.27
  STEP: create the container to handle the HTTPGet hook request. @ 04/20/24 14:49:52.287
  STEP: create the pod with lifecycle hook @ 04/20/24 14:49:54.327
  STEP: check poststart hook @ 04/20/24 14:49:56.364
  STEP: delete the pod with lifecycle hook @ 04/20/24 14:49:56.38
  Apr 20 14:49:58.410: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-6153" for this suite. @ 04/20/24 14:49:58.419
• [6.216 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 04/20/24 14:49:58.433
  Apr 20 14:49:58.433: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename proxy @ 04/20/24 14:49:58.436
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:49:58.466
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:49:58.471
  Apr 20 14:49:58.476: INFO: Creating pod...
  Apr 20 14:50:00.504: INFO: Creating service...
  Apr 20 14:50:00.529: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-8486/pods/agnhost/proxy/some/path/with/DELETE
  Apr 20 14:50:00.552: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Apr 20 14:50:00.553: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-8486/pods/agnhost/proxy/some/path/with/GET
  Apr 20 14:50:00.563: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  Apr 20 14:50:00.564: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-8486/pods/agnhost/proxy/some/path/with/HEAD
  Apr 20 14:50:00.575: INFO: http.Client request:HEAD | StatusCode:200
  Apr 20 14:50:00.577: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-8486/pods/agnhost/proxy/some/path/with/OPTIONS
  Apr 20 14:50:00.591: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Apr 20 14:50:00.592: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-8486/pods/agnhost/proxy/some/path/with/PATCH
  Apr 20 14:50:00.601: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Apr 20 14:50:00.601: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-8486/pods/agnhost/proxy/some/path/with/POST
  Apr 20 14:50:00.611: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Apr 20 14:50:00.611: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-8486/pods/agnhost/proxy/some/path/with/PUT
  Apr 20 14:50:00.618: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Apr 20 14:50:00.619: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-8486/services/test-service/proxy/some/path/with/DELETE
  Apr 20 14:50:00.634: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Apr 20 14:50:00.634: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-8486/services/test-service/proxy/some/path/with/GET
  Apr 20 14:50:00.646: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  Apr 20 14:50:00.646: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-8486/services/test-service/proxy/some/path/with/HEAD
  Apr 20 14:50:00.657: INFO: http.Client request:HEAD | StatusCode:200
  Apr 20 14:50:00.657: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-8486/services/test-service/proxy/some/path/with/OPTIONS
  Apr 20 14:50:00.664: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Apr 20 14:50:00.665: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-8486/services/test-service/proxy/some/path/with/PATCH
  Apr 20 14:50:00.675: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Apr 20 14:50:00.676: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-8486/services/test-service/proxy/some/path/with/POST
  Apr 20 14:50:00.685: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Apr 20 14:50:00.685: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-8486/services/test-service/proxy/some/path/with/PUT
  Apr 20 14:50:00.695: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Apr 20 14:50:00.695: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-8486" for this suite. @ 04/20/24 14:50:00.705
• [2.281 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:46
  STEP: Creating a kubernetes client @ 04/20/24 14:50:00.715
  Apr 20 14:50:00.715: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename configmap @ 04/20/24 14:50:00.718
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:50:00.752
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:50:00.756
  STEP: Creating configMap configmap-8881/configmap-test-cf8cb35d-e846-4f58-81fe-83bccd7dbc6d @ 04/20/24 14:50:00.761
  STEP: Creating a pod to test consume configMaps @ 04/20/24 14:50:00.773
  STEP: Saw pod success @ 04/20/24 14:50:04.818
  Apr 20 14:50:04.824: INFO: Trying to get logs from node nok4chie7ate-3 pod pod-configmaps-bee2e404-5b43-47d1-8198-cfd47a401cd0 container env-test: <nil>
  STEP: delete the pod @ 04/20/24 14:50:04.84
  Apr 20 14:50:04.871: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8881" for this suite. @ 04/20/24 14:50:04.887
• [4.187 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:214
  STEP: Creating a kubernetes client @ 04/20/24 14:50:04.903
  Apr 20 14:50:04.903: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 04/20/24 14:50:04.906
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:50:04.945
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:50:04.949
  STEP: create the container to handle the HTTPGet hook request. @ 04/20/24 14:50:04.964
  STEP: create the pod with lifecycle hook @ 04/20/24 14:50:07.008
  STEP: delete the pod with lifecycle hook @ 04/20/24 14:50:09.049
  STEP: check prestop hook @ 04/20/24 14:50:11.095
  Apr 20 14:50:11.122: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-1392" for this suite. @ 04/20/24 14:50:11.137
• [6.250 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:150
  STEP: Creating a kubernetes client @ 04/20/24 14:50:11.154
  Apr 20 14:50:11.154: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename emptydir @ 04/20/24 14:50:11.157
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:50:11.205
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:50:11.213
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 04/20/24 14:50:11.22
  STEP: Saw pod success @ 04/20/24 14:50:15.289
  Apr 20 14:50:15.299: INFO: Trying to get logs from node nok4chie7ate-3 pod pod-b11dc429-cdc3-4ad0-9de7-dd45efc36757 container test-container: <nil>
  STEP: delete the pod @ 04/20/24 14:50:15.322
  Apr 20 14:50:15.357: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2398" for this suite. @ 04/20/24 14:50:15.37
• [4.231 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:155
  STEP: Creating a kubernetes client @ 04/20/24 14:50:15.388
  Apr 20 14:50:15.389: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename var-expansion @ 04/20/24 14:50:15.393
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:50:15.435
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:50:15.442
  Apr 20 14:50:17.496: INFO: Deleting pod "var-expansion-06948458-913a-4933-bb28-da6b2c8e9f6e" in namespace "var-expansion-788"
  Apr 20 14:50:17.513: INFO: Wait up to 5m0s for pod "var-expansion-06948458-913a-4933-bb28-da6b2c8e9f6e" to be fully deleted
  Apr 20 14:50:19.536: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-788" for this suite. @ 04/20/24 14:50:19.552
• [4.185 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:132
  STEP: Creating a kubernetes client @ 04/20/24 14:50:19.574
  Apr 20 14:50:19.574: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename projected @ 04/20/24 14:50:19.58
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:50:19.621
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:50:19.628
  STEP: Creating the pod @ 04/20/24 14:50:19.635
  Apr 20 14:50:22.262: INFO: Successfully updated pod "labelsupdate76f9055c-1757-42d1-82f6-260ba92084e7"
  Apr 20 14:50:24.305: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1603" for this suite. @ 04/20/24 14:50:24.321
• [4.766 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:775
  STEP: Creating a kubernetes client @ 04/20/24 14:50:24.341
  Apr 20 14:50:24.341: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename services @ 04/20/24 14:50:24.345
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:50:24.394
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:50:24.399
  Apr 20 14:50:24.415: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1097" for this suite. @ 04/20/24 14:50:24.429
• [0.101 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:170
  STEP: Creating a kubernetes client @ 04/20/24 14:50:24.458
  Apr 20 14:50:24.458: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename emptydir @ 04/20/24 14:50:24.465
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:50:24.504
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:50:24.507
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 04/20/24 14:50:24.514
  STEP: Saw pod success @ 04/20/24 14:50:26.557
  Apr 20 14:50:26.564: INFO: Trying to get logs from node nok4chie7ate-3 pod pod-163a61ba-4a21-44a4-9d86-c0182061f5ef container test-container: <nil>
  STEP: delete the pod @ 04/20/24 14:50:26.58
  Apr 20 14:50:26.627: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4989" for this suite. @ 04/20/24 14:50:26.639
• [2.194 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:112
  STEP: Creating a kubernetes client @ 04/20/24 14:50:26.652
  Apr 20 14:50:26.653: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename replicaset @ 04/20/24 14:50:26.659
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:50:26.692
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:50:26.699
  Apr 20 14:50:26.705: INFO: Creating ReplicaSet my-hostname-basic-c2018f49-f0b7-4568-a337-52003cb80ee9
  Apr 20 14:50:26.724: INFO: Pod name my-hostname-basic-c2018f49-f0b7-4568-a337-52003cb80ee9: Found 0 pods out of 1
  Apr 20 14:50:31.739: INFO: Pod name my-hostname-basic-c2018f49-f0b7-4568-a337-52003cb80ee9: Found 1 pods out of 1
  Apr 20 14:50:31.740: INFO: Ensuring a pod for ReplicaSet "my-hostname-basic-c2018f49-f0b7-4568-a337-52003cb80ee9" is running
  Apr 20 14:50:31.749: INFO: Pod "my-hostname-basic-c2018f49-f0b7-4568-a337-52003cb80ee9-znbdq" is running (conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-04-20 14:50:27 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-04-20 14:50:26 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-04-20 14:50:27 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-04-20 14:50:27 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-04-20 14:50:26 +0000 UTC Reason: Message:}])
  Apr 20 14:50:31.749: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 04/20/24 14:50:31.749
  Apr 20 14:50:31.790: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-2816" for this suite. @ 04/20/24 14:50:31.801
• [5.166 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:141
  STEP: Creating a kubernetes client @ 04/20/24 14:50:31.819
  Apr 20 14:50:31.819: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename disruption @ 04/20/24 14:50:31.822
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:50:31.863
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:50:31.873
  STEP: Waiting for the pdb to be processed @ 04/20/24 14:50:31.891
  STEP: Waiting for all pods to be running @ 04/20/24 14:50:33.982
  Apr 20 14:50:33.993: INFO: running pods: 0 < 3
  Apr 20 14:50:35.997: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2774" for this suite. @ 04/20/24 14:50:36.006
• [4.199 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 04/20/24 14:50:36.018
  Apr 20 14:50:36.018: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename secrets @ 04/20/24 14:50:36.022
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:50:36.058
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:50:36.065
  STEP: Creating secret with name secret-test-512a1abd-4e9d-4407-93a2-2485260a6d23 @ 04/20/24 14:50:36.072
  STEP: Creating a pod to test consume secrets @ 04/20/24 14:50:36.084
  STEP: Saw pod success @ 04/20/24 14:50:40.134
  Apr 20 14:50:40.140: INFO: Trying to get logs from node nok4chie7ate-3 pod pod-secrets-0da5c60b-963c-47c8-afde-8505735e4e63 container secret-volume-test: <nil>
  STEP: delete the pod @ 04/20/24 14:50:40.153
  Apr 20 14:50:40.187: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4512" for this suite. @ 04/20/24 14:50:40.199
• [4.194 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 04/20/24 14:50:40.213
  Apr 20 14:50:40.213: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename deployment @ 04/20/24 14:50:40.216
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:50:40.266
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:50:40.272
  Apr 20 14:50:40.276: INFO: Creating replica set "test-rolling-update-controller" (going to be adopted)
  Apr 20 14:50:40.296: INFO: Pod name sample-pod: Found 0 pods out of 1
  Apr 20 14:50:45.309: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 04/20/24 14:50:45.309
  Apr 20 14:50:45.309: INFO: Creating deployment "test-rolling-update-deployment"
  Apr 20 14:50:45.323: INFO: Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  Apr 20 14:50:45.343: INFO: new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  Apr 20 14:50:47.360: INFO: Ensuring status for deployment "test-rolling-update-deployment" is the expected
  Apr 20 14:50:47.366: INFO: Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  Apr 20 14:50:47.384: INFO: Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9848",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "58d3579e-c407-4b56-b1bd-0faf1ecf0a6a",
      ResourceVersion: (string) (len=5) "55120",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849221445,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221445,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221446,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221445,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221445,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221446,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221445,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-7ddb77f68b\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Apr 20 14:50:47.396: INFO: New ReplicaSet "test-rolling-update-deployment-7ddb77f68b" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-7ddb77f68b",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9848",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4d46d01a-5951-4d24-8e7c-d1bd96575f83",
      ResourceVersion: (string) (len=5) "55110",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849221445,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b",
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "58d3579e-c407-4b56-b1bd-0faf1ecf0a6a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221445,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 35 38 64 33 35 37  39 65 2d 63 34 30 37 2d  |\"58d3579e-c407-|
              00000120  34 62 35 36 2d 62 31 62  64 2d 30 66 61 66 31 65  |4b56-b1bd-0faf1e|
              00000130  63 66 30 61 36 61 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |cf0a6a\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221446,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 20 14:50:47.398: INFO: All old ReplicaSets of Deployment "test-rolling-update-deployment":
  Apr 20 14:50:47.399: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9848",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e73890c8-a207-4753-9c0f-c135aa31c0bd",
      ResourceVersion: (string) (len=5) "55119",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849221440,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "pod": (string) (len=5) "httpd",
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "58d3579e-c407-4b56-b1bd-0faf1ecf0a6a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221440,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221446,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 35 38 64 33 35 37 39  |"uid\":\"58d3579|
              000000b0  65 2d 63 34 30 37 2d 34  62 35 36 2d 62 31 62 64  |e-c407-4b56-b1bd|
              000000c0  2d 30 66 61 66 31 65 63  66 30 61 36 61 5c 22 7d  |-0faf1ecf0a6a\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221446,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "pod": (string) (len=5) "httpd",
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "pod": (string) (len=5) "httpd",
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 20 14:50:47.411: INFO: Pod "test-rolling-update-deployment-7ddb77f68b-8lp5d" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-7ddb77f68b-8lp5d",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-7ddb77f68b-",
      Namespace: (string) (len=15) "deployment-9848",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "41f5b3b0-1595-4d6f-981c-6e5d59d592b3",
      ResourceVersion: (string) (len=5) "55109",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849221445,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b",
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-7ddb77f68b",
          UID: (types.UID) (len=36) "4d46d01a-5951-4d24-8e7c-d1bd96575f83",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221445,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 64  34 36 64 30 31 61 2d 35  |d\":\"4d46d01a-5|
              00000090  39 35 31 2d 34 64 32 34  2d 38 65 37 63 2d 64 31  |951-4d24-8e7c-d1|
              000000a0  62 64 39 36 35 37 35 66  38 33 5c 22 7d 22 3a 7b  |bd96575f83\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221446,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 36 2e  35 37 5c 22 7d 22 3a 7b  |.233.66.57\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6mrbp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6mrbp",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "nok4chie7ate-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221446,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221445,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221446,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221446,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221445,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "192.168.121.8",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "192.168.121.8"
        }
      },
      PodIP: (string) (len=12) "10.233.66.57",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.66.57"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849221445,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849221446,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:c9997bf8d2e223d7d2a0078dcfb11a653e9b16cf09418829ec03e1d57ca9628a",
          ContainerID: (string) (len=72) "cri-o://34b520fbbe23584d28cc91bbd8169340ed38fcfc5772b8bee888eccf5b36d868",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 14:50:47.421: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9848" for this suite. @ 04/20/24 14:50:47.433
• [7.233 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:169
  STEP: Creating a kubernetes client @ 04/20/24 14:50:47.448
  Apr 20 14:50:47.448: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 04/20/24 14:50:47.451
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:50:47.474
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:50:47.478
  STEP: create the container to handle the HTTPGet hook request. @ 04/20/24 14:50:47.492
  STEP: create the pod with lifecycle hook @ 04/20/24 14:50:49.531
  STEP: check poststart hook @ 04/20/24 14:50:51.56
  STEP: delete the pod with lifecycle hook @ 04/20/24 14:50:51.595
  Apr 20 14:50:53.633: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-6202" for this suite. @ 04/20/24 14:50:53.647
• [6.215 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 04/20/24 14:50:53.665
  Apr 20 14:50:53.666: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename secrets @ 04/20/24 14:50:53.677
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:50:53.717
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:50:53.724
  STEP: Creating secret with name secret-test-fedbc51f-7b6f-4606-a7e0-7bb59f89e9a4 @ 04/20/24 14:50:53.73
  STEP: Creating a pod to test consume secrets @ 04/20/24 14:50:53.741
  STEP: Saw pod success @ 04/20/24 14:50:57.787
  Apr 20 14:50:57.795: INFO: Trying to get logs from node nok4chie7ate-3 pod pod-secrets-55971a4d-eda4-4bda-83c3-0668c74f985c container secret-volume-test: <nil>
  STEP: delete the pod @ 04/20/24 14:50:57.816
  Apr 20 14:50:57.853: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1853" for this suite. @ 04/20/24 14:50:57.864
• [4.211 seconds]
------------------------------
S
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:244
  STEP: Creating a kubernetes client @ 04/20/24 14:50:57.876
  Apr 20 14:50:57.876: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename dns @ 04/20/24 14:50:57.879
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:50:57.906
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:50:57.913
  STEP: Creating a test headless service @ 04/20/24 14:50:57.918
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-813.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-813.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
   @ 04/20/24 14:50:57.927
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-813.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-813.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 04/20/24 14:50:57.928
  STEP: creating a pod to probe DNS @ 04/20/24 14:50:57.929
  STEP: submitting the pod to kubernetes @ 04/20/24 14:50:57.929
  STEP: retrieving the pod @ 04/20/24 14:50:59.962
  STEP: looking for the results for each expected name from probers @ 04/20/24 14:50:59.968
  Apr 20 14:51:00.001: INFO: Unable to read jessie_hosts@dns-querier-2 from pod dns-813/dns-test-0b16954b-b907-429d-8ac6-5cc915801b95: the server could not find the requested resource (get pods dns-test-0b16954b-b907-429d-8ac6-5cc915801b95)
  Apr 20 14:51:00.002: INFO: Lookups using dns-813/dns-test-0b16954b-b907-429d-8ac6-5cc915801b95 failed for: [jessie_hosts@dns-querier-2]

  Apr 20 14:51:00.017: INFO: Pod client logs for webserver: 
  Apr 20 14:51:00.027: INFO: Pod client logs for querier: 
  Apr 20 14:51:00.044: INFO: Pod client logs for jessie-querier: 
  Apr 20 14:51:05.012: INFO: DNS probes using dns-813/dns-test-0b16954b-b907-429d-8ac6-5cc915801b95 succeeded

  STEP: deleting the pod @ 04/20/24 14:51:05.014
  STEP: deleting the test headless service @ 04/20/24 14:51:05.037
  Apr 20 14:51:05.074: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-813" for this suite. @ 04/20/24 14:51:05.1
• [7.239 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2214
  STEP: Creating a kubernetes client @ 04/20/24 14:51:05.116
  Apr 20 14:51:05.116: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename services @ 04/20/24 14:51:05.125
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:51:05.15
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:51:05.154
  STEP: creating service in namespace services-4382 @ 04/20/24 14:51:05.159
  STEP: creating service affinity-nodeport in namespace services-4382 @ 04/20/24 14:51:05.159
  STEP: creating replication controller affinity-nodeport in namespace services-4382 @ 04/20/24 14:51:05.183
  I0420 14:51:05.197940      13 runners.go:197] Created replication controller with name: affinity-nodeport, namespace: services-4382, replica count: 3
  I0420 14:51:08.249269      13 runners.go:197] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Apr 20 14:51:08.270: INFO: Creating new exec pod
  Apr 20 14:51:11.315: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=services-4382 exec execpod-affinitystnsc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  Apr 20 14:51:11.667: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
  Apr 20 14:51:11.667: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 20 14:51:11.668: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=services-4382 exec execpod-affinitystnsc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.41.250 80'
  Apr 20 14:51:11.938: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.41.250 80\nConnection to 10.233.41.250 80 port [tcp/http] succeeded!\n"
  Apr 20 14:51:11.938: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 20 14:51:11.939: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=services-4382 exec execpod-affinitystnsc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.235 30993'
  Apr 20 14:51:12.180: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.235 30993\nConnection to 192.168.121.235 30993 port [tcp/*] succeeded!\n"
  Apr 20 14:51:12.180: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 20 14:51:12.181: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=services-4382 exec execpod-affinitystnsc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.8 30993'
  Apr 20 14:51:12.470: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.8 30993\nConnection to 192.168.121.8 30993 port [tcp/*] succeeded!\n"
  Apr 20 14:51:12.470: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 20 14:51:12.473: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=services-4382 exec execpod-affinitystnsc -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.121.235:30993/ ; done'
  Apr 20 14:51:12.961: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.235:30993/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.235:30993/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.235:30993/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.235:30993/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.235:30993/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.235:30993/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.235:30993/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.235:30993/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.235:30993/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.235:30993/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.235:30993/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.235:30993/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.235:30993/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.235:30993/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.235:30993/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.235:30993/\n"
  Apr 20 14:51:12.961: INFO: stdout: "\naffinity-nodeport-t4mdv\naffinity-nodeport-t4mdv\naffinity-nodeport-t4mdv\naffinity-nodeport-t4mdv\naffinity-nodeport-t4mdv\naffinity-nodeport-t4mdv\naffinity-nodeport-t4mdv\naffinity-nodeport-t4mdv\naffinity-nodeport-t4mdv\naffinity-nodeport-t4mdv\naffinity-nodeport-t4mdv\naffinity-nodeport-t4mdv\naffinity-nodeport-t4mdv\naffinity-nodeport-t4mdv\naffinity-nodeport-t4mdv\naffinity-nodeport-t4mdv"
  Apr 20 14:51:12.961: INFO: Received response from host: affinity-nodeport-t4mdv
  Apr 20 14:51:12.962: INFO: Received response from host: affinity-nodeport-t4mdv
  Apr 20 14:51:12.962: INFO: Received response from host: affinity-nodeport-t4mdv
  Apr 20 14:51:12.962: INFO: Received response from host: affinity-nodeport-t4mdv
  Apr 20 14:51:12.962: INFO: Received response from host: affinity-nodeport-t4mdv
  Apr 20 14:51:12.962: INFO: Received response from host: affinity-nodeport-t4mdv
  Apr 20 14:51:12.962: INFO: Received response from host: affinity-nodeport-t4mdv
  Apr 20 14:51:12.962: INFO: Received response from host: affinity-nodeport-t4mdv
  Apr 20 14:51:12.962: INFO: Received response from host: affinity-nodeport-t4mdv
  Apr 20 14:51:12.962: INFO: Received response from host: affinity-nodeport-t4mdv
  Apr 20 14:51:12.962: INFO: Received response from host: affinity-nodeport-t4mdv
  Apr 20 14:51:12.962: INFO: Received response from host: affinity-nodeport-t4mdv
  Apr 20 14:51:12.962: INFO: Received response from host: affinity-nodeport-t4mdv
  Apr 20 14:51:12.962: INFO: Received response from host: affinity-nodeport-t4mdv
  Apr 20 14:51:12.962: INFO: Received response from host: affinity-nodeport-t4mdv
  Apr 20 14:51:12.962: INFO: Received response from host: affinity-nodeport-t4mdv
  Apr 20 14:51:12.963: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-4382, will wait for the garbage collector to delete the pods @ 04/20/24 14:51:12.994
  Apr 20 14:51:13.063: INFO: Deleting ReplicationController affinity-nodeport took: 9.99374ms
  Apr 20 14:51:13.165: INFO: Terminating ReplicationController affinity-nodeport pods took: 101.172626ms
  Apr 20 14:51:16.809: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4382" for this suite. @ 04/20/24 14:51:16.822
• [11.718 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 04/20/24 14:51:16.835
  Apr 20 14:51:16.835: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename emptydir-wrapper @ 04/20/24 14:51:16.838
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:51:16.87
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:51:16.877
  STEP: Cleaning up the secret @ 04/20/24 14:51:18.98
  STEP: Cleaning up the configmap @ 04/20/24 14:51:18.996
  STEP: Cleaning up the pod @ 04/20/24 14:51:19.008
  Apr 20 14:51:19.032: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-5408" for this suite. @ 04/20/24 14:51:19.042
• [2.221 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:105
  STEP: Creating a kubernetes client @ 04/20/24 14:51:19.057
  Apr 20 14:51:19.057: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename endpointslice @ 04/20/24 14:51:19.066
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:51:19.097
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:51:19.101
  Apr 20 14:51:19.206: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-5030" for this suite. @ 04/20/24 14:51:19.216
• [0.176 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:270
  STEP: Creating a kubernetes client @ 04/20/24 14:51:19.236
  Apr 20 14:51:19.236: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename apf @ 04/20/24 14:51:19.243
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:51:19.272
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:51:19.276
  STEP: getting /apis @ 04/20/24 14:51:19.281
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 04/20/24 14:51:19.291
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 04/20/24 14:51:19.293
  STEP: creating @ 04/20/24 14:51:19.295
  STEP: getting @ 04/20/24 14:51:19.332
  STEP: listing @ 04/20/24 14:51:19.342
  STEP: watching @ 04/20/24 14:51:19.349
  Apr 20 14:51:19.349: INFO: starting watch
  STEP: patching @ 04/20/24 14:51:19.352
  STEP: updating @ 04/20/24 14:51:19.362
  Apr 20 14:51:19.376: INFO: waiting for watch events with expected annotations
  Apr 20 14:51:19.376: INFO: missing expected annotations, waiting: map[string]string(nil)
  STEP: getting /status @ 04/20/24 14:51:19.376
  STEP: patching /status @ 04/20/24 14:51:19.382
  STEP: updating /status @ 04/20/24 14:51:19.394
  STEP: deleting @ 04/20/24 14:51:19.438
  STEP: deleting a collection @ 04/20/24 14:51:19.462
  Apr 20 14:51:19.497: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-7605" for this suite. @ 04/20/24 14:51:19.506
• [0.282 seconds]
------------------------------
SS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:210
  STEP: Creating a kubernetes client @ 04/20/24 14:51:19.518
  Apr 20 14:51:19.519: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename emptydir @ 04/20/24 14:51:19.523
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:51:19.547
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:51:19.551
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 04/20/24 14:51:19.556
  STEP: Saw pod success @ 04/20/24 14:51:23.592
  Apr 20 14:51:23.602: INFO: Trying to get logs from node nok4chie7ate-3 pod pod-7e9ad872-2215-477f-918b-8c13d595b411 container test-container: <nil>
  STEP: delete the pod @ 04/20/24 14:51:23.618
  Apr 20 14:51:23.646: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2010" for this suite. @ 04/20/24 14:51:23.657
• [4.153 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:469
  STEP: Creating a kubernetes client @ 04/20/24 14:51:23.673
  Apr 20 14:51:23.673: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename sched-pred @ 04/20/24 14:51:23.677
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:51:23.714
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:51:23.719
  Apr 20 14:51:23.724: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Apr 20 14:51:23.739: INFO: Waiting for terminating namespaces to be deleted...
  Apr 20 14:51:23.745: INFO: 
  Logging pods the apiserver thinks is on node nok4chie7ate-1 before test
  Apr 20 14:51:23.757: INFO: coredns-76f75df574-jghzz from kube-system started at 2024-04-20 14:11:31 +0000 UTC (1 container statuses recorded)
  Apr 20 14:51:23.757: INFO: 	Container coredns ready: true, restart count 0
  Apr 20 14:51:23.758: INFO: kube-addon-manager-nok4chie7ate-1 from kube-system started at 2024-04-20 14:05:07 +0000 UTC (1 container statuses recorded)
  Apr 20 14:51:23.758: INFO: 	Container kube-addon-manager ready: true, restart count 8
  Apr 20 14:51:23.758: INFO: kube-apiserver-nok4chie7ate-1 from kube-system started at 2024-04-20 14:05:07 +0000 UTC (1 container statuses recorded)
  Apr 20 14:51:23.758: INFO: 	Container kube-apiserver ready: true, restart count 12
  Apr 20 14:51:23.758: INFO: kube-controller-manager-nok4chie7ate-1 from kube-system started at 2024-04-20 14:05:07 +0000 UTC (1 container statuses recorded)
  Apr 20 14:51:23.758: INFO: 	Container kube-controller-manager ready: true, restart count 10
  Apr 20 14:51:23.758: INFO: kube-flannel-ds-t9926 from kube-system started at 2024-04-20 14:11:32 +0000 UTC (1 container statuses recorded)
  Apr 20 14:51:23.758: INFO: 	Container kube-flannel ready: true, restart count 0
  Apr 20 14:51:23.758: INFO: kube-proxy-fwrhv from kube-system started at 2024-04-20 14:11:32 +0000 UTC (1 container statuses recorded)
  Apr 20 14:51:23.758: INFO: 	Container kube-proxy ready: true, restart count 0
  Apr 20 14:51:23.758: INFO: kube-scheduler-nok4chie7ate-1 from kube-system started at 2024-04-20 14:05:07 +0000 UTC (1 container statuses recorded)
  Apr 20 14:51:23.758: INFO: 	Container kube-scheduler ready: true, restart count 10
  Apr 20 14:51:23.758: INFO: sonobuoy-systemd-logs-daemon-set-a8ae23328e1d4fd2-khgbq from sonobuoy started at 2024-04-20 14:11:56 +0000 UTC (2 container statuses recorded)
  Apr 20 14:51:23.758: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 20 14:51:23.758: INFO: 	Container systemd-logs ready: true, restart count 0
  Apr 20 14:51:23.758: INFO: 
  Logging pods the apiserver thinks is on node nok4chie7ate-2 before test
  Apr 20 14:51:23.774: INFO: coredns-76f75df574-txvk2 from kube-system started at 2024-04-20 14:20:05 +0000 UTC (1 container statuses recorded)
  Apr 20 14:51:23.774: INFO: 	Container coredns ready: true, restart count 0
  Apr 20 14:51:23.774: INFO: kube-addon-manager-nok4chie7ate-2 from kube-system started at 2024-04-20 14:05:32 +0000 UTC (1 container statuses recorded)
  Apr 20 14:51:23.774: INFO: 	Container kube-addon-manager ready: true, restart count 9
  Apr 20 14:51:23.774: INFO: kube-apiserver-nok4chie7ate-2 from kube-system started at 2024-04-20 14:05:32 +0000 UTC (1 container statuses recorded)
  Apr 20 14:51:23.774: INFO: 	Container kube-apiserver ready: true, restart count 10
  Apr 20 14:51:23.774: INFO: kube-controller-manager-nok4chie7ate-2 from kube-system started at 2024-04-20 14:05:32 +0000 UTC (1 container statuses recorded)
  Apr 20 14:51:23.774: INFO: 	Container kube-controller-manager ready: true, restart count 10
  Apr 20 14:51:23.774: INFO: kube-flannel-ds-486q8 from kube-system started at 2024-04-20 14:11:32 +0000 UTC (1 container statuses recorded)
  Apr 20 14:51:23.774: INFO: 	Container kube-flannel ready: true, restart count 0
  Apr 20 14:51:23.774: INFO: kube-proxy-72cbd from kube-system started at 2024-04-20 14:11:32 +0000 UTC (1 container statuses recorded)
  Apr 20 14:51:23.774: INFO: 	Container kube-proxy ready: true, restart count 0
  Apr 20 14:51:23.774: INFO: kube-scheduler-nok4chie7ate-2 from kube-system started at 2024-04-20 14:05:32 +0000 UTC (1 container statuses recorded)
  Apr 20 14:51:23.774: INFO: 	Container kube-scheduler ready: true, restart count 10
  Apr 20 14:51:23.774: INFO: sonobuoy from sonobuoy started at 2024-04-20 14:11:50 +0000 UTC (1 container statuses recorded)
  Apr 20 14:51:23.774: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Apr 20 14:51:23.774: INFO: sonobuoy-systemd-logs-daemon-set-a8ae23328e1d4fd2-6mbwv from sonobuoy started at 2024-04-20 14:11:56 +0000 UTC (2 container statuses recorded)
  Apr 20 14:51:23.774: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 20 14:51:23.774: INFO: 	Container systemd-logs ready: true, restart count 0
  Apr 20 14:51:23.774: INFO: 
  Logging pods the apiserver thinks is on node nok4chie7ate-3 before test
  Apr 20 14:51:23.792: INFO: kube-flannel-ds-cs6vz from kube-system started at 2024-04-20 14:20:06 +0000 UTC (1 container statuses recorded)
  Apr 20 14:51:23.792: INFO: 	Container kube-flannel ready: true, restart count 0
  Apr 20 14:51:23.792: INFO: kube-proxy-92wnd from kube-system started at 2024-04-20 14:11:32 +0000 UTC (1 container statuses recorded)
  Apr 20 14:51:23.792: INFO: 	Container kube-proxy ready: true, restart count 0
  Apr 20 14:51:23.792: INFO: sonobuoy-e2e-job-bf54fcf72a4946a0 from sonobuoy started at 2024-04-20 14:11:56 +0000 UTC (2 container statuses recorded)
  Apr 20 14:51:23.792: INFO: 	Container e2e ready: true, restart count 0
  Apr 20 14:51:23.792: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 20 14:51:23.792: INFO: sonobuoy-systemd-logs-daemon-set-a8ae23328e1d4fd2-k6hk2 from sonobuoy started at 2024-04-20 14:11:56 +0000 UTC (2 container statuses recorded)
  Apr 20 14:51:23.792: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 20 14:51:23.793: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 04/20/24 14:51:23.794
  STEP: Explicitly delete pod here to free the resource it takes. @ 04/20/24 14:51:25.832
  STEP: Trying to apply a random label on the found node. @ 04/20/24 14:51:25.853
  STEP: verifying the node has the label kubernetes.io/e2e-756de24b-f484-4e0f-a99b-64c42425f379 42 @ 04/20/24 14:51:25.874
  STEP: Trying to relaunch the pod, now with labels. @ 04/20/24 14:51:25.89
  STEP: removing the label kubernetes.io/e2e-756de24b-f484-4e0f-a99b-64c42425f379 off the node nok4chie7ate-3 @ 04/20/24 14:51:27.928
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-756de24b-f484-4e0f-a99b-64c42425f379 @ 04/20/24 14:51:27.967
  Apr 20 14:51:27.986: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-2665" for this suite. @ 04/20/24 14:51:28.008
• [4.349 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:100
  STEP: Creating a kubernetes client @ 04/20/24 14:51:28.023
  Apr 20 14:51:28.023: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename projected @ 04/20/24 14:51:28.029
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:51:28.057
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:51:28.063
  STEP: Creating configMap with name projected-configmap-test-volume-map-ed0c63a5-3be0-4b6d-9aae-62409e036571 @ 04/20/24 14:51:28.07
  STEP: Creating a pod to test consume configMaps @ 04/20/24 14:51:28.08
  STEP: Saw pod success @ 04/20/24 14:51:32.116
  Apr 20 14:51:32.124: INFO: Trying to get logs from node nok4chie7ate-3 pod pod-projected-configmaps-d52b48ab-4bfb-4780-a308-72a7f19eb899 container agnhost-container: <nil>
  STEP: delete the pod @ 04/20/24 14:51:32.14
  Apr 20 14:51:32.166: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6229" for this suite. @ 04/20/24 14:51:32.18
• [4.170 seconds]
------------------------------
SS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:624
  STEP: Creating a kubernetes client @ 04/20/24 14:51:32.193
  Apr 20 14:51:32.193: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename sched-preemption @ 04/20/24 14:51:32.196
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:51:32.226
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:51:32.233
  Apr 20 14:51:32.262: INFO: Waiting up to 1m0s for all nodes to be ready
  Apr 20 14:52:32.280: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 04/20/24 14:52:32.291
  Apr 20 14:52:32.291: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename sched-preemption-path @ 04/20/24 14:52:32.297
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:52:32.353
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:52:32.361
  STEP: Finding an available node @ 04/20/24 14:52:32.368
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 04/20/24 14:52:32.368
  STEP: Explicitly delete pod here to free the resource it takes. @ 04/20/24 14:52:34.42
  Apr 20 14:52:34.456: INFO: found a healthy node: nok4chie7ate-3
  Apr 20 14:52:40.603: INFO: pods created so far: [1 1 1]
  Apr 20 14:52:40.603: INFO: length of pods created so far: 3
  Apr 20 14:52:42.627: INFO: pods created so far: [2 2 1]
  Apr 20 14:52:49.803: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-1557" for this suite. @ 04/20/24 14:52:49.811
  Apr 20 14:52:49.822: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-2514" for this suite. @ 04/20/24 14:52:49.832
• [77.658 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:855
  STEP: Creating a kubernetes client @ 04/20/24 14:52:49.852
  Apr 20 14:52:49.852: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename job @ 04/20/24 14:52:49.856
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:52:49.888
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:52:49.894
  STEP: Creating a suspended job @ 04/20/24 14:52:49.91
  STEP: Patching the Job @ 04/20/24 14:52:49.919
  STEP: Watching for Job to be patched @ 04/20/24 14:52:49.955
  Apr 20 14:52:49.960: INFO: Event ADDED observed for Job e2e-7l8vw in namespace job-585 with labels: map[e2e-job-label:e2e-7l8vw] and annotations: map[]
  Apr 20 14:52:49.960: INFO: Event MODIFIED observed for Job e2e-7l8vw in namespace job-585 with labels: map[e2e-job-label:e2e-7l8vw] and annotations: map[]
  Apr 20 14:52:49.960: INFO: Event MODIFIED found for Job e2e-7l8vw in namespace job-585 with labels: map[e2e-7l8vw:patched e2e-job-label:e2e-7l8vw] and annotations: map[]
  STEP: Updating the job @ 04/20/24 14:52:49.96
  STEP: Watching for Job to be updated @ 04/20/24 14:52:49.977
  Apr 20 14:52:49.979: INFO: Event MODIFIED found for Job e2e-7l8vw in namespace job-585 with labels: map[e2e-7l8vw:patched e2e-job-label:e2e-7l8vw] and annotations: map[updated:true]
  Apr 20 14:52:49.979: INFO: Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 04/20/24 14:52:49.979
  Apr 20 14:52:49.985: INFO: Job: e2e-7l8vw as labels: map[e2e-7l8vw:patched e2e-job-label:e2e-7l8vw]
  STEP: Waiting for job to complete @ 04/20/24 14:52:49.985
  STEP: Delete a job collection with a labelselector @ 04/20/24 14:52:57.993
  STEP: Watching for Job to be deleted @ 04/20/24 14:52:58.008
  Apr 20 14:52:58.012: INFO: Event MODIFIED observed for Job e2e-7l8vw in namespace job-585 with labels: map[e2e-7l8vw:patched e2e-job-label:e2e-7l8vw] and annotations: map[updated:true]
  Apr 20 14:52:58.012: INFO: Event MODIFIED observed for Job e2e-7l8vw in namespace job-585 with labels: map[e2e-7l8vw:patched e2e-job-label:e2e-7l8vw] and annotations: map[updated:true]
  Apr 20 14:52:58.012: INFO: Event MODIFIED observed for Job e2e-7l8vw in namespace job-585 with labels: map[e2e-7l8vw:patched e2e-job-label:e2e-7l8vw] and annotations: map[updated:true]
  Apr 20 14:52:58.012: INFO: Event MODIFIED observed for Job e2e-7l8vw in namespace job-585 with labels: map[e2e-7l8vw:patched e2e-job-label:e2e-7l8vw] and annotations: map[updated:true]
  Apr 20 14:52:58.013: INFO: Event MODIFIED observed for Job e2e-7l8vw in namespace job-585 with labels: map[e2e-7l8vw:patched e2e-job-label:e2e-7l8vw] and annotations: map[updated:true]
  Apr 20 14:52:58.013: INFO: Event MODIFIED observed for Job e2e-7l8vw in namespace job-585 with labels: map[e2e-7l8vw:patched e2e-job-label:e2e-7l8vw] and annotations: map[updated:true]
  Apr 20 14:52:58.013: INFO: Event MODIFIED observed for Job e2e-7l8vw in namespace job-585 with labels: map[e2e-7l8vw:patched e2e-job-label:e2e-7l8vw] and annotations: map[updated:true]
  Apr 20 14:52:58.013: INFO: Event DELETED found for Job e2e-7l8vw in namespace job-585 with labels: map[e2e-7l8vw:patched e2e-job-label:e2e-7l8vw] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 04/20/24 14:52:58.013
  Apr 20 14:52:58.020: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-585" for this suite. @ 04/20/24 14:52:58.03
• [8.216 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:322
  STEP: Creating a kubernetes client @ 04/20/24 14:52:58.072
  Apr 20 14:52:58.073: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename gc @ 04/20/24 14:52:58.077
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:52:58.132
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:52:58.137
  STEP: create the rc @ 04/20/24 14:52:58.149
  W0420 14:52:58.163812      13 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 04/20/24 14:53:03.187
  STEP: wait for all pods to be garbage collected @ 04/20/24 14:53:03.202
  STEP: Gathering metrics @ 04/20/24 14:53:08.221
  Apr 20 14:53:08.417: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Apr 20 14:53:08.418: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-2347" for this suite. @ 04/20/24 14:53:08.43
• [10.370 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:172
  STEP: Creating a kubernetes client @ 04/20/24 14:53:08.443
  Apr 20 14:53:08.443: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename discovery @ 04/20/24 14:53:08.452
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:53:08.485
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:53:08.488
  STEP: Setting up server cert @ 04/20/24 14:53:08.495
  STEP: Requesting APIResourceList from "/api/v1" @ 04/20/24 14:53:10.105
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 04/20/24 14:53:10.109
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 04/20/24 14:53:10.111
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 04/20/24 14:53:10.114
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 04/20/24 14:53:10.116
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 04/20/24 14:53:10.118
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 04/20/24 14:53:10.121
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 04/20/24 14:53:10.123
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 04/20/24 14:53:10.126
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 04/20/24 14:53:10.128
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 04/20/24 14:53:10.129
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 04/20/24 14:53:10.132
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 04/20/24 14:53:10.135
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 04/20/24 14:53:10.137
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 04/20/24 14:53:10.139
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 04/20/24 14:53:10.141
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 04/20/24 14:53:10.143
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 04/20/24 14:53:10.145
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 04/20/24 14:53:10.147
  Apr 20 14:53:10.150: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-1608" for this suite. @ 04/20/24 14:53:10.158
• [1.730 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:47
  STEP: Creating a kubernetes client @ 04/20/24 14:53:10.175
  Apr 20 14:53:10.175: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename var-expansion @ 04/20/24 14:53:10.181
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:53:10.229
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:53:10.235
  STEP: Creating a pod to test env composition @ 04/20/24 14:53:10.242
  STEP: Saw pod success @ 04/20/24 14:53:14.296
  Apr 20 14:53:14.304: INFO: Trying to get logs from node nok4chie7ate-3 pod var-expansion-36703496-b182-4105-ba43-7eea2df173bf container dapi-container: <nil>
  STEP: delete the pod @ 04/20/24 14:53:14.336
  Apr 20 14:53:14.366: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-8789" for this suite. @ 04/20/24 14:53:14.374
• [4.212 seconds]
------------------------------
S
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 04/20/24 14:53:14.386
  Apr 20 14:53:14.386: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename pods @ 04/20/24 14:53:14.391
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:53:14.429
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:53:14.434
  STEP: Saw pod success @ 04/20/24 14:53:20.537
  Apr 20 14:53:20.544: INFO: Trying to get logs from node nok4chie7ate-3 pod client-envvars-c5b408ad-4fb5-465f-88cf-f9724897cb14 container env3cont: <nil>
  STEP: delete the pod @ 04/20/24 14:53:20.563
  Apr 20 14:53:20.597: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1479" for this suite. @ 04/20/24 14:53:20.609
• [6.240 seconds]
------------------------------
SS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:108
  STEP: Creating a kubernetes client @ 04/20/24 14:53:20.627
  Apr 20 14:53:20.627: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename disruption @ 04/20/24 14:53:20.631
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:53:20.67
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:53:20.675
  STEP: creating the pdb @ 04/20/24 14:53:20.682
  STEP: Waiting for the pdb to be processed @ 04/20/24 14:53:20.692
  STEP: updating the pdb @ 04/20/24 14:53:22.701
  STEP: Waiting for the pdb to be processed @ 04/20/24 14:53:22.718
  STEP: patching the pdb @ 04/20/24 14:53:24.728
  STEP: Waiting for the pdb to be processed @ 04/20/24 14:53:24.751
  STEP: Waiting for the pdb to be deleted @ 04/20/24 14:53:26.773
  Apr 20 14:53:26.782: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-5097" for this suite. @ 04/20/24 14:53:26.789
• [6.175 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:195
  STEP: Creating a kubernetes client @ 04/20/24 14:53:26.803
  Apr 20 14:53:26.803: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename downward-api @ 04/20/24 14:53:26.813
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:53:26.846
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:53:26.857
  STEP: Creating a pod to test downward API volume plugin @ 04/20/24 14:53:26.865
  STEP: Saw pod success @ 04/20/24 14:53:30.967
  Apr 20 14:53:30.973: INFO: Trying to get logs from node nok4chie7ate-3 pod downwardapi-volume-0cdca702-c3fd-4636-a7d5-b72b93a256ea container client-container: <nil>
  STEP: delete the pod @ 04/20/24 14:53:30.986
  Apr 20 14:53:31.015: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5794" for this suite. @ 04/20/24 14:53:31.024
• [4.233 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:135
  STEP: Creating a kubernetes client @ 04/20/24 14:53:31.039
  Apr 20 14:53:31.039: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename security-context @ 04/20/24 14:53:31.042
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:53:31.077
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:53:31.082
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 04/20/24 14:53:31.087
  STEP: Saw pod success @ 04/20/24 14:53:33.123
  Apr 20 14:53:33.133: INFO: Trying to get logs from node nok4chie7ate-3 pod security-context-743e8d4b-d5b5-4be7-8426-66c77fe689e0 container test-container: <nil>
  STEP: delete the pod @ 04/20/24 14:53:33.148
  Apr 20 14:53:33.176: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-6136" for this suite. @ 04/20/24 14:53:33.188
• [2.164 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:55
  STEP: Creating a kubernetes client @ 04/20/24 14:53:33.205
  Apr 20 14:53:33.205: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename downward-api @ 04/20/24 14:53:33.208
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:53:33.29
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:53:33.296
  STEP: Creating a pod to test downward API volume plugin @ 04/20/24 14:53:33.3
  STEP: Saw pod success @ 04/20/24 14:53:37.356
  Apr 20 14:53:37.373: INFO: Trying to get logs from node nok4chie7ate-3 pod downwardapi-volume-704ce02f-9881-4815-94fd-3e5fc0f915a1 container client-container: <nil>
  STEP: delete the pod @ 04/20/24 14:53:37.393
  Apr 20 14:53:37.462: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4675" for this suite. @ 04/20/24 14:53:37.472
• [4.280 seconds]
------------------------------
SSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:177
  STEP: Creating a kubernetes client @ 04/20/24 14:53:37.485
  Apr 20 14:53:37.485: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename replicaset @ 04/20/24 14:53:37.488
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:53:37.527
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:53:37.532
  STEP: Create a Replicaset @ 04/20/24 14:53:37.546
  STEP: Verify that the required pods have come up. @ 04/20/24 14:53:37.56
  Apr 20 14:53:37.567: INFO: Pod name sample-pod: Found 0 pods out of 1
  Apr 20 14:53:42.581: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 04/20/24 14:53:42.581
  STEP: Getting /status @ 04/20/24 14:53:42.581
  Apr 20 14:53:42.599: INFO: Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 04/20/24 14:53:42.6
  Apr 20 14:53:42.624: INFO: updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 04/20/24 14:53:42.624
  Apr 20 14:53:42.631: INFO: Observed &ReplicaSet event: ADDED
  Apr 20 14:53:42.632: INFO: Observed &ReplicaSet event: MODIFIED
  Apr 20 14:53:42.632: INFO: Observed &ReplicaSet event: MODIFIED
  Apr 20 14:53:42.633: INFO: Observed &ReplicaSet event: MODIFIED
  Apr 20 14:53:42.633: INFO: Found replicaset test-rs in namespace replicaset-280 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Apr 20 14:53:42.633: INFO: Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 04/20/24 14:53:42.633
  Apr 20 14:53:42.633: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Apr 20 14:53:42.649: INFO: Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 04/20/24 14:53:42.653
  Apr 20 14:53:42.669: INFO: Observed &ReplicaSet event: ADDED
  Apr 20 14:53:42.672: INFO: Observed &ReplicaSet event: MODIFIED
  Apr 20 14:53:42.672: INFO: Observed &ReplicaSet event: MODIFIED
  Apr 20 14:53:42.672: INFO: Observed &ReplicaSet event: MODIFIED
  Apr 20 14:53:42.672: INFO: Observed replicaset test-rs in namespace replicaset-280 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Apr 20 14:53:42.673: INFO: Observed &ReplicaSet event: MODIFIED
  Apr 20 14:53:42.673: INFO: Found replicaset test-rs in namespace replicaset-280 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  Apr 20 14:53:42.673: INFO: Replicaset test-rs has a patched status
  Apr 20 14:53:42.673: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-280" for this suite. @ 04/20/24 14:53:42.687
• [5.222 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:104
  STEP: Creating a kubernetes client @ 04/20/24 14:53:42.721
  Apr 20 14:53:42.721: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename replication-controller @ 04/20/24 14:53:42.724
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:53:42.781
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:53:42.787
  STEP: Given a ReplicationController is created @ 04/20/24 14:53:42.793
  STEP: When the matched label of one of its pods change @ 04/20/24 14:53:42.808
  Apr 20 14:53:42.814: INFO: Pod name pod-release: Found 0 pods out of 1
  Apr 20 14:53:47.825: INFO: Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 04/20/24 14:53:47.852
  Apr 20 14:53:48.867: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-3165" for this suite. @ 04/20/24 14:53:48.876
• [6.168 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:251
  STEP: Creating a kubernetes client @ 04/20/24 14:53:48.891
  Apr 20 14:53:48.891: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename downward-api @ 04/20/24 14:53:48.894
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:53:48.927
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:53:48.934
  STEP: Creating a pod to test downward API volume plugin @ 04/20/24 14:53:48.94
  STEP: Saw pod success @ 04/20/24 14:53:52.99
  Apr 20 14:53:52.998: INFO: Trying to get logs from node nok4chie7ate-3 pod downwardapi-volume-b27db0f2-b37b-461a-9dee-27fdb205ec8d container client-container: <nil>
  STEP: delete the pod @ 04/20/24 14:53:53.016
  Apr 20 14:53:53.044: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2" for this suite. @ 04/20/24 14:53:53.057
• [4.181 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:808
  STEP: Creating a kubernetes client @ 04/20/24 14:53:53.075
  Apr 20 14:53:53.075: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename resourcequota @ 04/20/24 14:53:53.08
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:53:53.115
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:53:53.12
  STEP: Creating a ResourceQuota with best effort scope @ 04/20/24 14:53:53.126
  STEP: Ensuring ResourceQuota status is calculated @ 04/20/24 14:53:53.134
  STEP: Creating a ResourceQuota with not best effort scope @ 04/20/24 14:53:55.141
  STEP: Ensuring ResourceQuota status is calculated @ 04/20/24 14:53:55.15
  STEP: Creating a best-effort pod @ 04/20/24 14:53:57.16
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 04/20/24 14:53:57.193
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 04/20/24 14:53:59.209
  STEP: Deleting the pod @ 04/20/24 14:54:01.219
  STEP: Ensuring resource quota status released the pod usage @ 04/20/24 14:54:01.257
  STEP: Creating a not best-effort pod @ 04/20/24 14:54:03.267
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 04/20/24 14:54:03.291
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 04/20/24 14:54:05.303
  STEP: Deleting the pod @ 04/20/24 14:54:07.321
  STEP: Ensuring resource quota status released the pod usage @ 04/20/24 14:54:07.352
  Apr 20 14:54:09.367: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6572" for this suite. @ 04/20/24 14:54:09.387
• [16.390 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:836
  STEP: Creating a kubernetes client @ 04/20/24 14:54:09.465
  Apr 20 14:54:09.465: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename daemonsets @ 04/20/24 14:54:09.471
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:54:09.504
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:54:09.509
  STEP: Creating simple DaemonSet "daemon-set" @ 04/20/24 14:54:09.559
  STEP: Check that daemon pods launch on every node of the cluster. @ 04/20/24 14:54:09.573
  Apr 20 14:54:09.588: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 20 14:54:09.588: INFO: Node nok4chie7ate-1 is running 0 daemon pod, expected 1
  Apr 20 14:54:10.594: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Apr 20 14:54:10.594: INFO: Node nok4chie7ate-2 is running 0 daemon pod, expected 1
  Apr 20 14:54:11.602: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Apr 20 14:54:11.602: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: listing all DaemonSets @ 04/20/24 14:54:11.612
  STEP: DeleteCollection of the DaemonSets @ 04/20/24 14:54:11.623
  STEP: Verify that ReplicaSets have been deleted @ 04/20/24 14:54:11.643
  Apr 20 14:54:11.677: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"56576"},"items":null}

  Apr 20 14:54:11.693: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"56576"},"items":[{"metadata":{"name":"daemon-set-cfsf4","generateName":"daemon-set-","namespace":"daemonsets-9520","uid":"f936f59d-4b2e-43c8-bd08-ef52b97bfa35","resourceVersion":"56572","creationTimestamp":"2024-04-20T14:54:09Z","labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"3e0a1656-b480-4e4b-a0a2-b52c25a5a21b","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-04-20T14:54:09Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"3e0a1656-b480-4e4b-a0a2-b52c25a5a21b\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-04-20T14:54:11Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.233.66.91\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-2277n","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-2277n","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"nok4chie7ate-3","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["nok4chie7ate-3"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-20T14:54:11Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-20T14:54:09Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-20T14:54:11Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-20T14:54:11Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-20T14:54:09Z"}],"hostIP":"192.168.121.8","hostIPs":[{"ip":"192.168.121.8"}],"podIP":"10.233.66.91","podIPs":[{"ip":"10.233.66.91"}],"startTime":"2024-04-20T14:54:09Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-04-20T14:54:10Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"cri-o://34dc116fa99418b5f79bd8aa6e098a1a41dd1c10f81e8ff0c479e63a048ac4c6","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-k5z2d","generateName":"daemon-set-","namespace":"daemonsets-9520","uid":"835c595b-0d8a-4373-9093-5d694cea5928","resourceVersion":"56570","creationTimestamp":"2024-04-20T14:54:09Z","labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"3e0a1656-b480-4e4b-a0a2-b52c25a5a21b","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-04-20T14:54:09Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"3e0a1656-b480-4e4b-a0a2-b52c25a5a21b\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-04-20T14:54:10Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.233.65.86\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-lmbqr","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-lmbqr","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"nok4chie7ate-2","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["nok4chie7ate-2"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-20T14:54:10Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-20T14:54:09Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-20T14:54:10Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-20T14:54:10Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-20T14:54:09Z"}],"hostIP":"192.168.121.193","hostIPs":[{"ip":"192.168.121.193"}],"podIP":"10.233.65.86","podIPs":[{"ip":"10.233.65.86"}],"startTime":"2024-04-20T14:54:09Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-04-20T14:54:10Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"cri-o://79a98d5a70ecdbc943627fe93abd92b27798acdfc116c6791c5a9e48e0b28e7a","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-p2bfv","generateName":"daemon-set-","namespace":"daemonsets-9520","uid":"f735a684-a71a-46b7-8f27-b4fa7d38a78a","resourceVersion":"56568","creationTimestamp":"2024-04-20T14:54:09Z","labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"3e0a1656-b480-4e4b-a0a2-b52c25a5a21b","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-04-20T14:54:09Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"3e0a1656-b480-4e4b-a0a2-b52c25a5a21b\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-04-20T14:54:10Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.233.64.99\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-fjhhk","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-fjhhk","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"nok4chie7ate-1","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["nok4chie7ate-1"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-20T14:54:10Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-20T14:54:09Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-20T14:54:10Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-20T14:54:10Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-20T14:54:09Z"}],"hostIP":"192.168.121.235","hostIPs":[{"ip":"192.168.121.235"}],"podIP":"10.233.64.99","podIPs":[{"ip":"10.233.64.99"}],"startTime":"2024-04-20T14:54:09Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-04-20T14:54:10Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"cri-o://2256ac4a9a8b7a52bcd8f6083337abbb2c5aea76a348d2214ff68fe3a199e5ff","started":true}],"qosClass":"BestEffort"}}]}

  Apr 20 14:54:11.746: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-9520" for this suite. @ 04/20/24 14:54:11.756
• [2.312 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1280
  STEP: Creating a kubernetes client @ 04/20/24 14:54:11.779
  Apr 20 14:54:11.779: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename services @ 04/20/24 14:54:11.783
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:54:11.82
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:54:11.826
  STEP: creating service nodeport-test with type=NodePort in namespace services-6407 @ 04/20/24 14:54:11.832
  STEP: creating replication controller nodeport-test in namespace services-6407 @ 04/20/24 14:54:11.88
  I0420 14:54:11.906724      13 runners.go:197] Created replication controller with name: nodeport-test, namespace: services-6407, replica count: 2
  I0420 14:54:14.959448      13 runners.go:197] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Apr 20 14:54:14.961: INFO: Creating new exec pod
  Apr 20 14:54:18.020: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=services-6407 exec execpodpn8qk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  Apr 20 14:54:18.343: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  Apr 20 14:54:18.343: INFO: stdout: ""
  Apr 20 14:54:19.020: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=services-6407 exec execpodpn8qk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  Apr 20 14:54:19.351: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  Apr 20 14:54:19.351: INFO: stdout: "nodeport-test-hshmt"
  Apr 20 14:54:19.351: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=services-6407 exec execpodpn8qk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.61.97 80'
  Apr 20 14:54:19.620: INFO: stderr: "+ + nc -v -t -w 2 10.233.61.97 80\necho hostName\nConnection to 10.233.61.97 80 port [tcp/http] succeeded!\n"
  Apr 20 14:54:19.620: INFO: stdout: "nodeport-test-clwq2"
  Apr 20 14:54:19.620: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=services-6407 exec execpodpn8qk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.193 31125'
  Apr 20 14:54:19.885: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.193 31125\nConnection to 192.168.121.193 31125 port [tcp/*] succeeded!\n"
  Apr 20 14:54:19.885: INFO: stdout: ""
  Apr 20 14:54:20.621: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=services-6407 exec execpodpn8qk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.193 31125'
  Apr 20 14:54:20.959: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.193 31125\nConnection to 192.168.121.193 31125 port [tcp/*] succeeded!\n"
  Apr 20 14:54:20.959: INFO: stdout: "nodeport-test-hshmt"
  Apr 20 14:54:20.960: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=services-6407 exec execpodpn8qk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.8 31125'
  Apr 20 14:54:21.228: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.8 31125\nConnection to 192.168.121.8 31125 port [tcp/*] succeeded!\n"
  Apr 20 14:54:21.228: INFO: stdout: "nodeport-test-clwq2"
  Apr 20 14:54:21.229: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6407" for this suite. @ 04/20/24 14:54:21.241
• [9.477 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:357
  STEP: Creating a kubernetes client @ 04/20/24 14:54:21.257
  Apr 20 14:54:21.257: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename kubectl @ 04/20/24 14:54:21.261
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:54:21.298
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:54:21.302
  STEP: creating a replication controller @ 04/20/24 14:54:21.308
  Apr 20 14:54:21.308: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-3176 create -f -'
  Apr 20 14:54:21.669: INFO: stderr: ""
  Apr 20 14:54:21.669: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 04/20/24 14:54:21.669
  Apr 20 14:54:21.670: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-3176 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Apr 20 14:54:21.877: INFO: stderr: ""
  Apr 20 14:54:21.877: INFO: stdout: "update-demo-nautilus-pgl4h update-demo-nautilus-r7xxw "
  Apr 20 14:54:21.877: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-3176 get pods update-demo-nautilus-pgl4h -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Apr 20 14:54:22.027: INFO: stderr: ""
  Apr 20 14:54:22.027: INFO: stdout: ""
  Apr 20 14:54:22.027: INFO: update-demo-nautilus-pgl4h is created but not running
  Apr 20 14:54:27.030: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-3176 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Apr 20 14:54:27.203: INFO: stderr: ""
  Apr 20 14:54:27.203: INFO: stdout: "update-demo-nautilus-pgl4h update-demo-nautilus-r7xxw "
  Apr 20 14:54:27.204: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-3176 get pods update-demo-nautilus-pgl4h -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Apr 20 14:54:27.437: INFO: stderr: ""
  Apr 20 14:54:27.437: INFO: stdout: "true"
  Apr 20 14:54:27.437: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-3176 get pods update-demo-nautilus-pgl4h -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Apr 20 14:54:27.619: INFO: stderr: ""
  Apr 20 14:54:27.620: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Apr 20 14:54:27.620: INFO: validating pod update-demo-nautilus-pgl4h
  Apr 20 14:54:27.636: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Apr 20 14:54:27.636: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Apr 20 14:54:27.637: INFO: update-demo-nautilus-pgl4h is verified up and running
  Apr 20 14:54:27.637: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-3176 get pods update-demo-nautilus-r7xxw -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Apr 20 14:54:27.806: INFO: stderr: ""
  Apr 20 14:54:27.806: INFO: stdout: "true"
  Apr 20 14:54:27.806: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-3176 get pods update-demo-nautilus-r7xxw -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Apr 20 14:54:27.975: INFO: stderr: ""
  Apr 20 14:54:27.975: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Apr 20 14:54:27.975: INFO: validating pod update-demo-nautilus-r7xxw
  Apr 20 14:54:28.044: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Apr 20 14:54:28.044: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Apr 20 14:54:28.044: INFO: update-demo-nautilus-r7xxw is verified up and running
  STEP: scaling down the replication controller @ 04/20/24 14:54:28.044
  Apr 20 14:54:28.082: INFO: scanned /root for discovery docs: <nil>
  Apr 20 14:54:28.082: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-3176 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  Apr 20 14:54:29.325: INFO: stderr: ""
  Apr 20 14:54:29.326: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 04/20/24 14:54:29.326
  Apr 20 14:54:29.327: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-3176 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Apr 20 14:54:29.550: INFO: stderr: ""
  Apr 20 14:54:29.550: INFO: stdout: "update-demo-nautilus-pgl4h update-demo-nautilus-r7xxw "
  STEP: Replicas for name=update-demo: expected=1 actual=2 @ 04/20/24 14:54:29.55
  Apr 20 14:54:34.552: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-3176 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Apr 20 14:54:34.769: INFO: stderr: ""
  Apr 20 14:54:34.769: INFO: stdout: "update-demo-nautilus-pgl4h "
  Apr 20 14:54:34.770: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-3176 get pods update-demo-nautilus-pgl4h -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Apr 20 14:54:34.967: INFO: stderr: ""
  Apr 20 14:54:34.967: INFO: stdout: "true"
  Apr 20 14:54:34.968: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-3176 get pods update-demo-nautilus-pgl4h -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Apr 20 14:54:35.122: INFO: stderr: ""
  Apr 20 14:54:35.122: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Apr 20 14:54:35.122: INFO: validating pod update-demo-nautilus-pgl4h
  Apr 20 14:54:35.131: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Apr 20 14:54:35.131: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Apr 20 14:54:35.131: INFO: update-demo-nautilus-pgl4h is verified up and running
  STEP: scaling up the replication controller @ 04/20/24 14:54:35.131
  Apr 20 14:54:35.143: INFO: scanned /root for discovery docs: <nil>
  Apr 20 14:54:35.144: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-3176 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  Apr 20 14:54:36.361: INFO: stderr: ""
  Apr 20 14:54:36.361: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 04/20/24 14:54:36.361
  Apr 20 14:54:36.362: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-3176 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Apr 20 14:54:36.587: INFO: stderr: ""
  Apr 20 14:54:36.587: INFO: stdout: "update-demo-nautilus-7j4cm update-demo-nautilus-pgl4h "
  Apr 20 14:54:36.587: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-3176 get pods update-demo-nautilus-7j4cm -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Apr 20 14:54:36.792: INFO: stderr: ""
  Apr 20 14:54:36.792: INFO: stdout: "true"
  Apr 20 14:54:36.792: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-3176 get pods update-demo-nautilus-7j4cm -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Apr 20 14:54:36.966: INFO: stderr: ""
  Apr 20 14:54:36.966: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Apr 20 14:54:36.966: INFO: validating pod update-demo-nautilus-7j4cm
  Apr 20 14:54:36.993: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Apr 20 14:54:36.993: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Apr 20 14:54:36.993: INFO: update-demo-nautilus-7j4cm is verified up and running
  Apr 20 14:54:36.994: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-3176 get pods update-demo-nautilus-pgl4h -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Apr 20 14:54:37.171: INFO: stderr: ""
  Apr 20 14:54:37.171: INFO: stdout: "true"
  Apr 20 14:54:37.172: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-3176 get pods update-demo-nautilus-pgl4h -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Apr 20 14:54:37.340: INFO: stderr: ""
  Apr 20 14:54:37.340: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Apr 20 14:54:37.340: INFO: validating pod update-demo-nautilus-pgl4h
  Apr 20 14:54:37.356: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Apr 20 14:54:37.356: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Apr 20 14:54:37.356: INFO: update-demo-nautilus-pgl4h is verified up and running
  STEP: using delete to clean up resources @ 04/20/24 14:54:37.356
  Apr 20 14:54:37.356: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-3176 delete --grace-period=0 --force -f -'
  Apr 20 14:54:37.526: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Apr 20 14:54:37.526: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  Apr 20 14:54:37.526: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-3176 get rc,svc -l name=update-demo --no-headers'
  Apr 20 14:54:37.780: INFO: stderr: "No resources found in kubectl-3176 namespace.\n"
  Apr 20 14:54:37.780: INFO: stdout: ""
  Apr 20 14:54:37.781: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-3176 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Apr 20 14:54:37.950: INFO: stderr: ""
  Apr 20 14:54:37.950: INFO: stdout: ""
  Apr 20 14:54:37.951: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3176" for this suite. @ 04/20/24 14:54:37.963
• [16.734 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:113
  STEP: Creating a kubernetes client @ 04/20/24 14:54:37.992
  Apr 20 14:54:37.992: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename replication-controller @ 04/20/24 14:54:37.995
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:54:38.039
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:54:38.045
  STEP: creating a ReplicationController @ 04/20/24 14:54:38.058
  STEP: waiting for RC to be added @ 04/20/24 14:54:38.07
  STEP: waiting for available Replicas @ 04/20/24 14:54:38.071
  STEP: patching ReplicationController @ 04/20/24 14:54:39.408
  STEP: waiting for RC to be modified @ 04/20/24 14:54:39.438
  STEP: patching ReplicationController status @ 04/20/24 14:54:39.438
  STEP: waiting for RC to be modified @ 04/20/24 14:54:39.459
  STEP: waiting for available Replicas @ 04/20/24 14:54:39.461
  STEP: fetching ReplicationController status @ 04/20/24 14:54:39.473
  STEP: patching ReplicationController scale @ 04/20/24 14:54:39.48
  STEP: waiting for RC to be modified @ 04/20/24 14:54:39.494
  STEP: waiting for ReplicationController's scale to be the max amount @ 04/20/24 14:54:39.494
  STEP: fetching ReplicationController; ensuring that it's patched @ 04/20/24 14:54:40.829
  STEP: updating ReplicationController status @ 04/20/24 14:54:40.841
  STEP: waiting for RC to be modified @ 04/20/24 14:54:40.858
  STEP: listing all ReplicationControllers @ 04/20/24 14:54:40.859
  STEP: checking that ReplicationController has expected values @ 04/20/24 14:54:40.869
  STEP: deleting ReplicationControllers by collection @ 04/20/24 14:54:40.869
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 04/20/24 14:54:40.891
  Apr 20 14:54:40.985: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0420 14:54:40.987242      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-1022" for this suite. @ 04/20/24 14:54:40.999
• [3.019 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:250
  STEP: Creating a kubernetes client @ 04/20/24 14:54:41.012
  Apr 20 14:54:41.012: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename webhook @ 04/20/24 14:54:41.016
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:54:41.045
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:54:41.05
  STEP: Setting up server cert @ 04/20/24 14:54:41.092
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/20/24 14:54:41.763
  STEP: Deploying the webhook pod @ 04/20/24 14:54:41.787
  STEP: Wait for the deployment to be ready @ 04/20/24 14:54:41.821
  Apr 20 14:54:41.852: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0420 14:54:41.988099      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:54:42.988823      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/20/24 14:54:43.875
  STEP: Verifying the service has paired with the endpoint @ 04/20/24 14:54:43.897
  E0420 14:54:43.989594      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 14:54:44.898: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 04/20/24 14:54:44.919
  STEP: create a configmap that should be updated by the webhook @ 04/20/24 14:54:44.983
  E0420 14:54:44.990451      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 14:54:45.112: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6359" for this suite. @ 04/20/24 14:54:45.12
  STEP: Destroying namespace "webhook-markers-4503" for this suite. @ 04/20/24 14:54:45.135
• [4.132 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 04/20/24 14:54:45.144
  Apr 20 14:54:45.144: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename pods @ 04/20/24 14:54:45.147
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:54:45.174
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:54:45.179
  STEP: creating the pod @ 04/20/24 14:54:45.184
  STEP: submitting the pod to kubernetes @ 04/20/24 14:54:45.184
  W0420 14:54:45.200128      13 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  E0420 14:54:45.990779      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:54:46.991753      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 04/20/24 14:54:47.227
  STEP: updating the pod @ 04/20/24 14:54:47.237
  Apr 20 14:54:47.759: INFO: Successfully updated pod "pod-update-activedeadlineseconds-62a48740-749c-4351-b52e-abb4eb67fe24"
  E0420 14:54:47.992577      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:54:48.993042      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:54:49.993845      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:54:50.995065      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 14:54:51.791: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2527" for this suite. @ 04/20/24 14:54:51.799
• [6.670 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:158
  STEP: Creating a kubernetes client @ 04/20/24 14:54:51.819
  Apr 20 14:54:51.819: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename runtimeclass @ 04/20/24 14:54:51.824
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:54:51.862
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:54:51.866
  STEP: Deleting RuntimeClass runtimeclass-3361-delete-me @ 04/20/24 14:54:51.881
  STEP: Waiting for the RuntimeClass to disappear @ 04/20/24 14:54:51.892
  Apr 20 14:54:51.914: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-3361" for this suite. @ 04/20/24 14:54:51.923
• [0.115 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:83
  STEP: Creating a kubernetes client @ 04/20/24 14:54:51.934
  Apr 20 14:54:51.934: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename chunking @ 04/20/24 14:54:51.937
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:54:51.969
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:54:51.973
  STEP: creating a large number of resources @ 04/20/24 14:54:51.978
  E0420 14:54:51.995374      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:54:52.996317      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:54:53.996733      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:54:54.996865      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:54:55.997362      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:54:56.998354      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:54:57.998986      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:54:58.999737      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:55:00.000431      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:55:01.000730      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:55:02.001443      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:55:03.001768      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:55:04.002735      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:55:05.003571      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:55:06.004750      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:55:07.005618      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:55:08.006522      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:55:09.007077      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving those results in paged fashion several times @ 04/20/24 14:55:09.644
  Apr 20 14:55:09.695: INFO: Retrieved 17/17 results with rv 57468 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc0NjgsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  Apr 20 14:55:09.745: INFO: Retrieved 17/17 results with rv 57468 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc0NjgsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  Apr 20 14:55:09.793: INFO: Retrieved 17/17 results with rv 57468 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc0NjgsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  Apr 20 14:55:09.845: INFO: Retrieved 17/17 results with rv 57468 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc0NjgsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  Apr 20 14:55:09.898: INFO: Retrieved 17/17 results with rv 57468 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc0NjgsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  Apr 20 14:55:09.945: INFO: Retrieved 17/17 results with rv 57468 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc0NjgsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  Apr 20 14:55:09.995: INFO: Retrieved 17/17 results with rv 57468 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc0NjgsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  E0420 14:55:10.007455      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 14:55:10.045: INFO: Retrieved 17/17 results with rv 57468 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc0NjgsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  Apr 20 14:55:10.093: INFO: Retrieved 17/17 results with rv 57468 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc0NjgsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  Apr 20 14:55:10.145: INFO: Retrieved 17/17 results with rv 57468 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc0NjgsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  Apr 20 14:55:10.195: INFO: Retrieved 17/17 results with rv 57468 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc0NjgsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  Apr 20 14:55:10.247: INFO: Retrieved 17/17 results with rv 57468 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc0NjgsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  Apr 20 14:55:10.297: INFO: Retrieved 17/17 results with rv 57468 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc0NjgsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  Apr 20 14:55:10.348: INFO: Retrieved 17/17 results with rv 57468 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc0NjgsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  Apr 20 14:55:10.398: INFO: Retrieved 17/17 results with rv 57468 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc0NjgsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  Apr 20 14:55:10.446: INFO: Retrieved 17/17 results with rv 57468 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc0NjgsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  Apr 20 14:55:10.498: INFO: Retrieved 17/17 results with rv 57468 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc0NjgsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  Apr 20 14:55:10.548: INFO: Retrieved 17/17 results with rv 57468 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc0NjgsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  Apr 20 14:55:10.596: INFO: Retrieved 17/17 results with rv 57468 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc0NjgsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  Apr 20 14:55:10.648: INFO: Retrieved 17/17 results with rv 57468 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc0NjgsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  Apr 20 14:55:10.695: INFO: Retrieved 17/17 results with rv 57468 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc0NjgsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  Apr 20 14:55:10.746: INFO: Retrieved 17/17 results with rv 57468 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc0NjgsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  Apr 20 14:55:10.795: INFO: Retrieved 17/17 results with rv 57468 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc0NjgsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  Apr 20 14:55:10.844: INFO: Retrieved 9/17 results with rv 57468 and continue 
  Apr 20 14:55:10.900: INFO: Retrieved 17/17 results with rv 57470 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc0NzAsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  Apr 20 14:55:10.955: INFO: Retrieved 17/17 results with rv 57470 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc0NzAsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  Apr 20 14:55:10.997: INFO: Retrieved 17/17 results with rv 57470 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc0NzAsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  E0420 14:55:11.008055      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 14:55:11.047: INFO: Retrieved 17/17 results with rv 57470 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc0NzAsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  Apr 20 14:55:11.096: INFO: Retrieved 17/17 results with rv 57470 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc0NzAsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  Apr 20 14:55:11.145: INFO: Retrieved 17/17 results with rv 57470 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc0NzAsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  Apr 20 14:55:11.195: INFO: Retrieved 17/17 results with rv 57470 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc0NzAsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  Apr 20 14:55:11.244: INFO: Retrieved 17/17 results with rv 57470 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc0NzAsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  Apr 20 14:55:11.294: INFO: Retrieved 17/17 results with rv 57470 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc0NzAsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  Apr 20 14:55:11.345: INFO: Retrieved 17/17 results with rv 57470 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc0NzAsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  Apr 20 14:55:11.399: INFO: Retrieved 17/17 results with rv 57470 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc0NzAsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  Apr 20 14:55:11.445: INFO: Retrieved 17/17 results with rv 57470 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc0NzAsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  Apr 20 14:55:11.499: INFO: Retrieved 17/17 results with rv 57470 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc0NzAsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  Apr 20 14:55:11.548: INFO: Retrieved 17/17 results with rv 57470 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc0NzAsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  Apr 20 14:55:11.597: INFO: Retrieved 17/17 results with rv 57470 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc0NzAsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  Apr 20 14:55:11.646: INFO: Retrieved 17/17 results with rv 57470 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc0NzAsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  Apr 20 14:55:11.697: INFO: Retrieved 17/17 results with rv 57470 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc0NzAsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  Apr 20 14:55:11.745: INFO: Retrieved 17/17 results with rv 57470 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc0NzAsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  Apr 20 14:55:11.795: INFO: Retrieved 17/17 results with rv 57470 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc0NzAsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  Apr 20 14:55:11.846: INFO: Retrieved 17/17 results with rv 57470 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc0NzAsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  Apr 20 14:55:11.894: INFO: Retrieved 17/17 results with rv 57470 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc0NzAsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  Apr 20 14:55:11.945: INFO: Retrieved 17/17 results with rv 57470 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc0NzAsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  Apr 20 14:55:11.996: INFO: Retrieved 17/17 results with rv 57470 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc0NzAsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  E0420 14:55:12.009092      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 14:55:12.044: INFO: Retrieved 9/17 results with rv 57470 and continue 
  Apr 20 14:55:12.095: INFO: Retrieved 17/17 results with rv 57471 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc0NzEsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  Apr 20 14:55:12.149: INFO: Retrieved 17/17 results with rv 57471 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc0NzEsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  Apr 20 14:55:12.196: INFO: Retrieved 17/17 results with rv 57471 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc0NzEsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  Apr 20 14:55:12.248: INFO: Retrieved 17/17 results with rv 57471 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc0NzEsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  Apr 20 14:55:12.296: INFO: Retrieved 17/17 results with rv 57471 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc0NzEsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  Apr 20 14:55:12.345: INFO: Retrieved 17/17 results with rv 57471 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc0NzEsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  Apr 20 14:55:12.396: INFO: Retrieved 17/17 results with rv 57471 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc0NzEsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  Apr 20 14:55:12.472: INFO: Retrieved 17/17 results with rv 57471 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc0NzEsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  Apr 20 14:55:12.495: INFO: Retrieved 17/17 results with rv 57471 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc0NzEsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  Apr 20 14:55:12.548: INFO: Retrieved 17/17 results with rv 57471 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc0NzEsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  Apr 20 14:55:12.598: INFO: Retrieved 17/17 results with rv 57471 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc0NzEsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  Apr 20 14:55:12.645: INFO: Retrieved 17/17 results with rv 57471 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc0NzEsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  Apr 20 14:55:12.696: INFO: Retrieved 17/17 results with rv 57471 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc0NzEsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  Apr 20 14:55:12.747: INFO: Retrieved 17/17 results with rv 57471 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc0NzEsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  Apr 20 14:55:12.795: INFO: Retrieved 17/17 results with rv 57471 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc0NzEsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  Apr 20 14:55:12.847: INFO: Retrieved 17/17 results with rv 57471 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc0NzEsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  Apr 20 14:55:12.895: INFO: Retrieved 17/17 results with rv 57471 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc0NzEsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  Apr 20 14:55:12.945: INFO: Retrieved 17/17 results with rv 57471 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc0NzEsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  Apr 20 14:55:12.997: INFO: Retrieved 17/17 results with rv 57471 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc0NzEsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  E0420 14:55:13.009345      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 14:55:13.045: INFO: Retrieved 17/17 results with rv 57471 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc0NzEsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  Apr 20 14:55:13.094: INFO: Retrieved 17/17 results with rv 57471 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc0NzEsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  Apr 20 14:55:13.144: INFO: Retrieved 17/17 results with rv 57471 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc0NzEsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  Apr 20 14:55:13.196: INFO: Retrieved 17/17 results with rv 57471 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTc0NzEsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  Apr 20 14:55:13.244: INFO: Retrieved 9/17 results with rv 57471 and continue 
  STEP: retrieving those results all at once @ 04/20/24 14:55:13.244
  Apr 20 14:55:13.319: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-3369" for this suite. @ 04/20/24 14:55:13.346
• [21.502 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:144
  STEP: Creating a kubernetes client @ 04/20/24 14:55:13.437
  Apr 20 14:55:13.437: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename replicaset @ 04/20/24 14:55:13.44
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:55:13.473
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:55:13.477
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 04/20/24 14:55:13.481
  Apr 20 14:55:13.498: INFO: Pod name sample-pod: Found 0 pods out of 1
  E0420 14:55:14.010098      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:55:15.011012      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:55:16.011233      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:55:17.011811      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:55:18.012312      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 14:55:18.506: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 04/20/24 14:55:18.506
  STEP: getting scale subresource @ 04/20/24 14:55:18.507
  STEP: updating a scale subresource @ 04/20/24 14:55:18.513
  STEP: verifying the replicaset Spec.Replicas was modified @ 04/20/24 14:55:18.522
  STEP: Patch a scale subresource @ 04/20/24 14:55:18.528
  Apr 20 14:55:18.546: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-9802" for this suite. @ 04/20/24 14:55:18.556
• [5.138 seconds]
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:48
  STEP: Creating a kubernetes client @ 04/20/24 14:55:18.577
  Apr 20 14:55:18.577: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename configmap @ 04/20/24 14:55:18.582
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:55:18.629
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:55:18.636
  STEP: Creating configMap with name configmap-test-volume-960cc799-123e-4cf4-9fbe-c60fd9374eaa @ 04/20/24 14:55:18.64
  STEP: Creating a pod to test consume configMaps @ 04/20/24 14:55:18.651
  E0420 14:55:19.013120      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:55:20.013340      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:55:21.018830      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:55:22.015021      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 14:55:22.711
  Apr 20 14:55:22.718: INFO: Trying to get logs from node nok4chie7ate-3 pod pod-configmaps-4b5fa7c8-7113-4952-a829-e3e3dff978e0 container agnhost-container: <nil>
  STEP: delete the pod @ 04/20/24 14:55:22.734
  Apr 20 14:55:22.765: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6952" for this suite. @ 04/20/24 14:55:22.788
• [4.227 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 04/20/24 14:55:22.805
  Apr 20 14:55:22.805: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename daemonsets @ 04/20/24 14:55:22.811
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:55:22.841
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:55:22.846
  Apr 20 14:55:22.907: INFO: Create a RollingUpdate DaemonSet
  Apr 20 14:55:22.922: INFO: Check that daemon pods launch on every node of the cluster
  Apr 20 14:55:22.985: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 20 14:55:22.985: INFO: Node nok4chie7ate-1 is running 0 daemon pod, expected 1
  E0420 14:55:23.015221      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 14:55:23.943: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 20 14:55:23.943: INFO: Node nok4chie7ate-1 is running 0 daemon pod, expected 1
  E0420 14:55:24.016294      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 14:55:24.951: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Apr 20 14:55:24.951: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  Apr 20 14:55:24.951: INFO: Update the DaemonSet to trigger a rollout
  Apr 20 14:55:24.975: INFO: Updating DaemonSet daemon-set
  E0420 14:55:25.017240      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 14:55:26.000: INFO: Roll back the DaemonSet before rollout is complete
  E0420 14:55:26.017053      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 14:55:26.017: INFO: Updating DaemonSet daemon-set
  Apr 20 14:55:26.017: INFO: Make sure DaemonSet rollback is complete
  Apr 20 14:55:26.023: INFO: Wrong image for pod: daemon-set-4q9lv. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  Apr 20 14:55:26.023: INFO: Pod daemon-set-4q9lv is not available
  E0420 14:55:27.017607      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:55:28.017700      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:55:29.018000      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:55:30.018268      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:55:31.018349      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:55:32.018918      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:55:33.020121      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:55:34.021028      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:55:35.021094      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:55:36.022400      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:55:37.023266      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 14:55:37.038: INFO: Pod daemon-set-fgvgg is not available
  STEP: Deleting DaemonSet "daemon-set" @ 04/20/24 14:55:37.073
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-1757, will wait for the garbage collector to delete the pods @ 04/20/24 14:55:37.073
  Apr 20 14:55:37.150: INFO: Deleting DaemonSet.extensions daemon-set took: 17.205421ms
  Apr 20 14:55:37.251: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.587104ms
  E0420 14:55:38.023286      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:55:39.023631      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 14:55:39.361: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 20 14:55:39.361: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Apr 20 14:55:39.369: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"58089"},"items":null}

  Apr 20 14:55:39.376: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"58089"},"items":null}

  Apr 20 14:55:39.422: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-1757" for this suite. @ 04/20/24 14:55:39.432
• [16.650 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:403
  STEP: Creating a kubernetes client @ 04/20/24 14:55:39.456
  Apr 20 14:55:39.456: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename webhook @ 04/20/24 14:55:39.464
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:55:39.506
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:55:39.517
  STEP: Setting up server cert @ 04/20/24 14:55:39.566
  E0420 14:55:40.024227      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/20/24 14:55:40.408
  STEP: Deploying the webhook pod @ 04/20/24 14:55:40.441
  STEP: Wait for the deployment to be ready @ 04/20/24 14:55:40.469
  Apr 20 14:55:40.507: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0420 14:55:41.024875      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:55:42.025347      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/20/24 14:55:42.536
  STEP: Verifying the service has paired with the endpoint @ 04/20/24 14:55:42.568
  E0420 14:55:43.026504      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 14:55:43.568: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 04/20/24 14:55:43.589
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 04/20/24 14:55:43.649
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 04/20/24 14:55:43.668
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 04/20/24 14:55:43.695
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 04/20/24 14:55:43.713
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 04/20/24 14:55:43.726
  Apr 20 14:55:43.841: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5458" for this suite. @ 04/20/24 14:55:43.851
  STEP: Destroying namespace "webhook-markers-5125" for this suite. @ 04/20/24 14:55:43.864
• [4.431 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:125
  STEP: Creating a kubernetes client @ 04/20/24 14:55:43.889
  Apr 20 14:55:43.889: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename projected @ 04/20/24 14:55:43.893
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:55:43.922
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:55:43.927
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-6a2b5c5d-c8ee-4b52-848a-717c67a5f0df @ 04/20/24 14:55:43.94
  STEP: Creating the pod @ 04/20/24 14:55:43.949
  E0420 14:55:44.026821      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:55:45.028008      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating configmap projected-configmap-test-upd-6a2b5c5d-c8ee-4b52-848a-717c67a5f0df @ 04/20/24 14:55:46.012
  STEP: waiting to observe update in volume @ 04/20/24 14:55:46.026
  E0420 14:55:46.027763      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:55:47.028094      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:55:48.028511      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:55:49.029083      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:55:50.029780      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:55:51.029736      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:55:52.030018      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:55:53.030903      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:55:54.031840      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:55:55.031980      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:55:56.032773      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:55:57.032897      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:55:58.033581      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:55:59.033893      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:00.034058      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:01.034253      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:02.034614      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:03.034776      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:04.035034      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:05.036042      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:06.036496      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:07.037061      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:08.037769      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:09.038129      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:10.039036      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:11.039344      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:12.039464      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:13.039765      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:14.040414      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:15.041160      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:16.041398      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:17.041807      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:18.041821      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:19.041997      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:20.042461      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:21.043602      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:22.043988      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:23.044262      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:24.044601      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:25.045763      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:26.045623      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:27.051930      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:28.048188      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:29.047103      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:30.047293      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:31.048045      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:32.048472      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:33.049159      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:34.049703      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:35.050181      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:36.051221      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:37.052314      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:38.053309      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:39.053828      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:40.054372      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:41.055340      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:42.056091      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:43.057278      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:44.061140      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:45.060520      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:46.060886      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:47.060931      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:48.062249      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:49.063446      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:50.063491      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:51.064191      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:52.064295      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:53.065332      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:54.065562      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:55.066560      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:56.066542      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:57.066792      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:58.066887      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:59.067039      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:57:00.068055      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:57:01.068820      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:57:02.069092      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:57:03.069998      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:57:04.070256      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:57:05.070285      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:57:06.073515      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:57:07.072525      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:57:08.073651      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:57:09.074739      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:57:10.075139      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:57:11.076307      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:57:12.077056      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:57:13.077565      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:57:14.078410      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 14:57:15.058: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0420 14:57:15.078460      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "projected-6286" for this suite. @ 04/20/24 14:57:15.078
• [91.207 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:153
  STEP: Creating a kubernetes client @ 04/20/24 14:57:15.098
  Apr 20 14:57:15.098: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/20/24 14:57:15.108
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:57:15.164
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:57:15.17
  Apr 20 14:57:15.176: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  E0420 14:57:16.079299      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:57:17.080252      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 04/20/24 14:57:18.04
  Apr 20 14:57:18.040: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=crd-publish-openapi-8356 --namespace=crd-publish-openapi-8356 create -f -'
  E0420 14:57:18.080734      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 14:57:18.436: INFO: stderr: ""
  Apr 20 14:57:18.436: INFO: stdout: "e2e-test-crd-publish-openapi-7721-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  Apr 20 14:57:18.437: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=crd-publish-openapi-8356 --namespace=crd-publish-openapi-8356 delete e2e-test-crd-publish-openapi-7721-crds test-cr'
  Apr 20 14:57:18.720: INFO: stderr: ""
  Apr 20 14:57:18.720: INFO: stdout: "e2e-test-crd-publish-openapi-7721-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  Apr 20 14:57:18.721: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=crd-publish-openapi-8356 --namespace=crd-publish-openapi-8356 apply -f -'
  Apr 20 14:57:18.916: INFO: stderr: ""
  Apr 20 14:57:18.916: INFO: stdout: "e2e-test-crd-publish-openapi-7721-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  Apr 20 14:57:18.916: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=crd-publish-openapi-8356 --namespace=crd-publish-openapi-8356 delete e2e-test-crd-publish-openapi-7721-crds test-cr'
  E0420 14:57:19.081599      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 14:57:19.102: INFO: stderr: ""
  Apr 20 14:57:19.102: INFO: stdout: "e2e-test-crd-publish-openapi-7721-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 04/20/24 14:57:19.102
  Apr 20 14:57:19.102: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=crd-publish-openapi-8356 explain e2e-test-crd-publish-openapi-7721-crds'
  Apr 20 14:57:19.250: INFO: stderr: ""
  Apr 20 14:57:19.250: INFO: stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-7721-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  E0420 14:57:20.082794      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:57:21.082967      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:57:22.083484      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 14:57:22.163: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8356" for this suite. @ 04/20/24 14:57:22.181
• [7.096 seconds]
------------------------------
S
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:269
  STEP: Creating a kubernetes client @ 04/20/24 14:57:22.194
  Apr 20 14:57:22.194: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename downward-api @ 04/20/24 14:57:22.196
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:57:22.226
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:57:22.23
  STEP: Creating a pod to test downward api env vars @ 04/20/24 14:57:22.234
  E0420 14:57:23.083910      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:57:24.084561      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:57:25.084894      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:57:26.085766      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 14:57:26.282
  Apr 20 14:57:26.290: INFO: Trying to get logs from node nok4chie7ate-3 pod downward-api-e6f0eb2c-f23d-4269-9964-30b347ab5b0e container dapi-container: <nil>
  STEP: delete the pod @ 04/20/24 14:57:26.31
  Apr 20 14:57:26.353: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2247" for this suite. @ 04/20/24 14:57:26.366
• [4.190 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:785
  STEP: Creating a kubernetes client @ 04/20/24 14:57:26.384
  Apr 20 14:57:26.384: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename services @ 04/20/24 14:57:26.387
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:57:26.421
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:57:26.426
  STEP: creating service endpoint-test2 in namespace services-4417 @ 04/20/24 14:57:26.433
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-4417 to expose endpoints map[] @ 04/20/24 14:57:26.464
  Apr 20 14:57:26.472: INFO: Failed go get Endpoints object: endpoints "endpoint-test2" not found
  E0420 14:57:27.085807      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 14:57:27.490: INFO: successfully validated that service endpoint-test2 in namespace services-4417 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-4417 @ 04/20/24 14:57:27.49
  E0420 14:57:28.085989      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:57:29.086238      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-4417 to expose endpoints map[pod1:[80]] @ 04/20/24 14:57:29.538
  Apr 20 14:57:29.565: INFO: successfully validated that service endpoint-test2 in namespace services-4417 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 04/20/24 14:57:29.565
  Apr 20 14:57:29.565: INFO: Creating new exec pod
  E0420 14:57:30.087590      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:57:31.088382      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:57:32.088830      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 14:57:32.594: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=services-4417 exec execpoddplbw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Apr 20 14:57:32.918: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Apr 20 14:57:32.918: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 20 14:57:32.919: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=services-4417 exec execpoddplbw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.7.60 80'
  E0420 14:57:33.089227      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 14:57:33.220: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.7.60 80\nConnection to 10.233.7.60 80 port [tcp/http] succeeded!\n"
  Apr 20 14:57:33.220: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-4417 @ 04/20/24 14:57:33.22
  E0420 14:57:34.089240      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:57:35.089421      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-4417 to expose endpoints map[pod1:[80] pod2:[80]] @ 04/20/24 14:57:35.264
  Apr 20 14:57:35.292: INFO: successfully validated that service endpoint-test2 in namespace services-4417 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 04/20/24 14:57:35.292
  E0420 14:57:36.090309      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 14:57:36.294: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=services-4417 exec execpoddplbw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Apr 20 14:57:36.597: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Apr 20 14:57:36.598: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 20 14:57:36.598: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=services-4417 exec execpoddplbw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.7.60 80'
  Apr 20 14:57:36.882: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.7.60 80\nConnection to 10.233.7.60 80 port [tcp/http] succeeded!\n"
  Apr 20 14:57:36.882: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-4417 @ 04/20/24 14:57:36.882
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-4417 to expose endpoints map[pod2:[80]] @ 04/20/24 14:57:36.905
  Apr 20 14:57:36.954: INFO: successfully validated that service endpoint-test2 in namespace services-4417 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 04/20/24 14:57:36.955
  E0420 14:57:37.090944      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 14:57:37.957: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=services-4417 exec execpoddplbw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  E0420 14:57:38.091564      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 14:57:38.291: INFO: stderr: "+ + nc -v -t -w 2 endpoint-test2 80\necho hostName\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Apr 20 14:57:38.291: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 20 14:57:38.291: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=services-4417 exec execpoddplbw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.7.60 80'
  Apr 20 14:57:38.608: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.7.60 80\nConnection to 10.233.7.60 80 port [tcp/http] succeeded!\n"
  Apr 20 14:57:38.608: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-4417 @ 04/20/24 14:57:38.608
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-4417 to expose endpoints map[] @ 04/20/24 14:57:38.634
  E0420 14:57:39.092134      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 14:57:39.689: INFO: successfully validated that service endpoint-test2 in namespace services-4417 exposes endpoints map[]
  Apr 20 14:57:39.743: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4417" for this suite. @ 04/20/24 14:57:39.759
• [13.396 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:380
  STEP: Creating a kubernetes client @ 04/20/24 14:57:39.782
  Apr 20 14:57:39.782: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename gc @ 04/20/24 14:57:39.787
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:57:39.815
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:57:39.82
  STEP: create the rc @ 04/20/24 14:57:39.833
  W0420 14:57:39.845444      13 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0420 14:57:40.092858      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:57:41.099023      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:57:42.101888      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:57:43.100931      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:57:44.101590      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:57:45.107006      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 04/20/24 14:57:45.888
  STEP: wait for the rc to be deleted @ 04/20/24 14:57:45.967
  E0420 14:57:46.102864      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:57:47.108977      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:57:48.106354      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:57:49.106115      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:57:50.106373      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 04/20/24 14:57:50.986
  E0420 14:57:51.107320      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:57:52.108425      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:57:53.108972      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:57:54.109353      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:57:55.110492      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:57:56.111148      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:57:57.111773      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:57:58.112782      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:57:59.113038      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:58:00.113293      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:58:01.114369      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:58:02.114556      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:58:03.115449      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:58:04.116373      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:58:05.116461      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:58:06.116866      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:58:07.120960      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:58:08.119834      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:58:09.120201      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:58:10.121058      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:58:11.121452      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:58:12.121804      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:58:13.121961      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:58:14.122384      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:58:15.123532      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:58:16.123759      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:58:17.124054      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:58:18.124242      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:58:19.124806      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:58:20.125101      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 04/20/24 14:58:21.037
  E0420 14:58:21.125506      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 14:58:21.263: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Apr 20 14:58:21.264: INFO: Deleting pod "simpletest.rc-28l8n" in namespace "gc-6450"
  Apr 20 14:58:21.293: INFO: Deleting pod "simpletest.rc-2b7mn" in namespace "gc-6450"
  Apr 20 14:58:21.338: INFO: Deleting pod "simpletest.rc-2b965" in namespace "gc-6450"
  Apr 20 14:58:21.435: INFO: Deleting pod "simpletest.rc-2h2mm" in namespace "gc-6450"
  Apr 20 14:58:21.523: INFO: Deleting pod "simpletest.rc-2qkr4" in namespace "gc-6450"
  Apr 20 14:58:21.557: INFO: Deleting pod "simpletest.rc-2xwpv" in namespace "gc-6450"
  Apr 20 14:58:21.607: INFO: Deleting pod "simpletest.rc-4bqws" in namespace "gc-6450"
  Apr 20 14:58:21.670: INFO: Deleting pod "simpletest.rc-4cq9w" in namespace "gc-6450"
  Apr 20 14:58:21.713: INFO: Deleting pod "simpletest.rc-4gsw7" in namespace "gc-6450"
  Apr 20 14:58:21.747: INFO: Deleting pod "simpletest.rc-4jbg7" in namespace "gc-6450"
  Apr 20 14:58:21.804: INFO: Deleting pod "simpletest.rc-4kt57" in namespace "gc-6450"
  Apr 20 14:58:21.878: INFO: Deleting pod "simpletest.rc-4pswc" in namespace "gc-6450"
  Apr 20 14:58:21.949: INFO: Deleting pod "simpletest.rc-4t4zc" in namespace "gc-6450"
  Apr 20 14:58:22.048: INFO: Deleting pod "simpletest.rc-57jmh" in namespace "gc-6450"
  E0420 14:58:22.125796      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 14:58:22.132: INFO: Deleting pod "simpletest.rc-5m4p4" in namespace "gc-6450"
  Apr 20 14:58:22.176: INFO: Deleting pod "simpletest.rc-66bvf" in namespace "gc-6450"
  Apr 20 14:58:22.204: INFO: Deleting pod "simpletest.rc-6cqxv" in namespace "gc-6450"
  Apr 20 14:58:22.274: INFO: Deleting pod "simpletest.rc-7m5qp" in namespace "gc-6450"
  Apr 20 14:58:22.352: INFO: Deleting pod "simpletest.rc-7nlft" in namespace "gc-6450"
  Apr 20 14:58:22.440: INFO: Deleting pod "simpletest.rc-7q8g8" in namespace "gc-6450"
  Apr 20 14:58:22.543: INFO: Deleting pod "simpletest.rc-8jh2k" in namespace "gc-6450"
  Apr 20 14:58:22.597: INFO: Deleting pod "simpletest.rc-8m5pd" in namespace "gc-6450"
  Apr 20 14:58:22.646: INFO: Deleting pod "simpletest.rc-8ssh9" in namespace "gc-6450"
  Apr 20 14:58:22.710: INFO: Deleting pod "simpletest.rc-8tx42" in namespace "gc-6450"
  Apr 20 14:58:22.783: INFO: Deleting pod "simpletest.rc-8vrcj" in namespace "gc-6450"
  Apr 20 14:58:22.816: INFO: Deleting pod "simpletest.rc-95m4n" in namespace "gc-6450"
  Apr 20 14:58:22.856: INFO: Deleting pod "simpletest.rc-96t8w" in namespace "gc-6450"
  Apr 20 14:58:23.022: INFO: Deleting pod "simpletest.rc-97dnm" in namespace "gc-6450"
  Apr 20 14:58:23.075: INFO: Deleting pod "simpletest.rc-9877x" in namespace "gc-6450"
  E0420 14:58:23.126492      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 14:58:23.181: INFO: Deleting pod "simpletest.rc-9w5qx" in namespace "gc-6450"
  Apr 20 14:58:23.232: INFO: Deleting pod "simpletest.rc-9zk9x" in namespace "gc-6450"
  Apr 20 14:58:23.305: INFO: Deleting pod "simpletest.rc-bqdrt" in namespace "gc-6450"
  Apr 20 14:58:23.496: INFO: Deleting pod "simpletest.rc-bs6xb" in namespace "gc-6450"
  Apr 20 14:58:23.599: INFO: Deleting pod "simpletest.rc-cb2vx" in namespace "gc-6450"
  Apr 20 14:58:23.710: INFO: Deleting pod "simpletest.rc-cbdrh" in namespace "gc-6450"
  Apr 20 14:58:23.816: INFO: Deleting pod "simpletest.rc-cfrl7" in namespace "gc-6450"
  Apr 20 14:58:23.883: INFO: Deleting pod "simpletest.rc-cp7pr" in namespace "gc-6450"
  Apr 20 14:58:24.000: INFO: Deleting pod "simpletest.rc-cs8cw" in namespace "gc-6450"
  Apr 20 14:58:24.107: INFO: Deleting pod "simpletest.rc-cwv4t" in namespace "gc-6450"
  E0420 14:58:24.127202      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 14:58:24.223: INFO: Deleting pod "simpletest.rc-f5zzr" in namespace "gc-6450"
  Apr 20 14:58:24.288: INFO: Deleting pod "simpletest.rc-f95hc" in namespace "gc-6450"
  Apr 20 14:58:24.377: INFO: Deleting pod "simpletest.rc-fcj77" in namespace "gc-6450"
  Apr 20 14:58:24.476: INFO: Deleting pod "simpletest.rc-fdsnz" in namespace "gc-6450"
  Apr 20 14:58:24.548: INFO: Deleting pod "simpletest.rc-fgqxr" in namespace "gc-6450"
  Apr 20 14:58:24.600: INFO: Deleting pod "simpletest.rc-fvcm5" in namespace "gc-6450"
  Apr 20 14:58:24.693: INFO: Deleting pod "simpletest.rc-gfdcj" in namespace "gc-6450"
  Apr 20 14:58:24.790: INFO: Deleting pod "simpletest.rc-gtm8s" in namespace "gc-6450"
  Apr 20 14:58:24.886: INFO: Deleting pod "simpletest.rc-hc2cz" in namespace "gc-6450"
  Apr 20 14:58:24.943: INFO: Deleting pod "simpletest.rc-hkwm8" in namespace "gc-6450"
  Apr 20 14:58:25.022: INFO: Deleting pod "simpletest.rc-hptfz" in namespace "gc-6450"
  Apr 20 14:58:25.086: INFO: Deleting pod "simpletest.rc-hwnmg" in namespace "gc-6450"
  E0420 14:58:25.128984      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 14:58:25.140: INFO: Deleting pod "simpletest.rc-hwtvf" in namespace "gc-6450"
  Apr 20 14:58:25.232: INFO: Deleting pod "simpletest.rc-j8jn9" in namespace "gc-6450"
  Apr 20 14:58:25.297: INFO: Deleting pod "simpletest.rc-jcmcr" in namespace "gc-6450"
  Apr 20 14:58:25.468: INFO: Deleting pod "simpletest.rc-jl28r" in namespace "gc-6450"
  Apr 20 14:58:25.609: INFO: Deleting pod "simpletest.rc-jn9tv" in namespace "gc-6450"
  Apr 20 14:58:25.796: INFO: Deleting pod "simpletest.rc-kb2tq" in namespace "gc-6450"
  Apr 20 14:58:25.858: INFO: Deleting pod "simpletest.rc-kcvzr" in namespace "gc-6450"
  Apr 20 14:58:25.928: INFO: Deleting pod "simpletest.rc-kh48t" in namespace "gc-6450"
  Apr 20 14:58:25.992: INFO: Deleting pod "simpletest.rc-kpkbx" in namespace "gc-6450"
  Apr 20 14:58:26.098: INFO: Deleting pod "simpletest.rc-ktmwt" in namespace "gc-6450"
  E0420 14:58:26.127988      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 14:58:26.176: INFO: Deleting pod "simpletest.rc-l5nrq" in namespace "gc-6450"
  Apr 20 14:58:26.255: INFO: Deleting pod "simpletest.rc-l5rkl" in namespace "gc-6450"
  Apr 20 14:58:26.337: INFO: Deleting pod "simpletest.rc-lg6nk" in namespace "gc-6450"
  Apr 20 14:58:26.431: INFO: Deleting pod "simpletest.rc-mqxl7" in namespace "gc-6450"
  Apr 20 14:58:26.516: INFO: Deleting pod "simpletest.rc-mvwxf" in namespace "gc-6450"
  Apr 20 14:58:26.581: INFO: Deleting pod "simpletest.rc-mxggm" in namespace "gc-6450"
  Apr 20 14:58:26.656: INFO: Deleting pod "simpletest.rc-nllf4" in namespace "gc-6450"
  Apr 20 14:58:26.712: INFO: Deleting pod "simpletest.rc-nz9tr" in namespace "gc-6450"
  Apr 20 14:58:26.750: INFO: Deleting pod "simpletest.rc-pbd4h" in namespace "gc-6450"
  Apr 20 14:58:26.858: INFO: Deleting pod "simpletest.rc-pqpqq" in namespace "gc-6450"
  Apr 20 14:58:26.936: INFO: Deleting pod "simpletest.rc-pw8jm" in namespace "gc-6450"
  Apr 20 14:58:27.078: INFO: Deleting pod "simpletest.rc-q26p6" in namespace "gc-6450"
  E0420 14:58:27.128901      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 14:58:27.132: INFO: Deleting pod "simpletest.rc-qx5dr" in namespace "gc-6450"
  Apr 20 14:58:27.224: INFO: Deleting pod "simpletest.rc-r86zs" in namespace "gc-6450"
  Apr 20 14:58:27.281: INFO: Deleting pod "simpletest.rc-rdwvr" in namespace "gc-6450"
  Apr 20 14:58:27.325: INFO: Deleting pod "simpletest.rc-rrwd4" in namespace "gc-6450"
  Apr 20 14:58:27.399: INFO: Deleting pod "simpletest.rc-s7v4s" in namespace "gc-6450"
  Apr 20 14:58:27.479: INFO: Deleting pod "simpletest.rc-slbp4" in namespace "gc-6450"
  Apr 20 14:58:27.589: INFO: Deleting pod "simpletest.rc-ssvq4" in namespace "gc-6450"
  Apr 20 14:58:27.675: INFO: Deleting pod "simpletest.rc-sx24g" in namespace "gc-6450"
  Apr 20 14:58:27.741: INFO: Deleting pod "simpletest.rc-t5pp9" in namespace "gc-6450"
  Apr 20 14:58:27.829: INFO: Deleting pod "simpletest.rc-tpxw2" in namespace "gc-6450"
  Apr 20 14:58:27.902: INFO: Deleting pod "simpletest.rc-v4bkc" in namespace "gc-6450"
  Apr 20 14:58:27.965: INFO: Deleting pod "simpletest.rc-v8xl4" in namespace "gc-6450"
  Apr 20 14:58:28.025: INFO: Deleting pod "simpletest.rc-vkhvv" in namespace "gc-6450"
  Apr 20 14:58:28.081: INFO: Deleting pod "simpletest.rc-vsjkf" in namespace "gc-6450"
  E0420 14:58:28.129147      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 14:58:28.198: INFO: Deleting pod "simpletest.rc-vwrnh" in namespace "gc-6450"
  Apr 20 14:58:28.243: INFO: Deleting pod "simpletest.rc-wc66t" in namespace "gc-6450"
  Apr 20 14:58:28.304: INFO: Deleting pod "simpletest.rc-wm5nt" in namespace "gc-6450"
  Apr 20 14:58:28.360: INFO: Deleting pod "simpletest.rc-x2jjp" in namespace "gc-6450"
  Apr 20 14:58:28.430: INFO: Deleting pod "simpletest.rc-x4bmw" in namespace "gc-6450"
  Apr 20 14:58:28.498: INFO: Deleting pod "simpletest.rc-xbwhm" in namespace "gc-6450"
  Apr 20 14:58:28.569: INFO: Deleting pod "simpletest.rc-xmp4f" in namespace "gc-6450"
  Apr 20 14:58:28.652: INFO: Deleting pod "simpletest.rc-xx2zw" in namespace "gc-6450"
  Apr 20 14:58:28.681: INFO: Deleting pod "simpletest.rc-z7f4d" in namespace "gc-6450"
  Apr 20 14:58:28.754: INFO: Deleting pod "simpletest.rc-zbcqr" in namespace "gc-6450"
  Apr 20 14:58:28.796: INFO: Deleting pod "simpletest.rc-zbzzw" in namespace "gc-6450"
  Apr 20 14:58:28.871: INFO: Deleting pod "simpletest.rc-zd7m8" in namespace "gc-6450"
  Apr 20 14:58:28.914: INFO: Deleting pod "simpletest.rc-zfkhc" in namespace "gc-6450"
  Apr 20 14:58:28.948: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-6450" for this suite. @ 04/20/24 14:58:28.986
• [49.230 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 04/20/24 14:58:29.012
  Apr 20 14:58:29.012: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename watch @ 04/20/24 14:58:29.02
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:58:29.085
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:58:29.095
  STEP: creating a watch on configmaps with label A @ 04/20/24 14:58:29.104
  STEP: creating a watch on configmaps with label B @ 04/20/24 14:58:29.105
  STEP: creating a watch on configmaps with label A or B @ 04/20/24 14:58:29.11
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 04/20/24 14:58:29.112
  Apr 20 14:58:29.125: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-4269  c1ee2d4e-93fa-4f2f-b02b-143d6786bb34 59872 0 2024-04-20 14:58:29 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-04-20 14:58:29 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 20 14:58:29.126: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-4269  c1ee2d4e-93fa-4f2f-b02b-143d6786bb34 59872 0 2024-04-20 14:58:29 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-04-20 14:58:29 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 04/20/24 14:58:29.126
  E0420 14:58:29.129801      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 14:58:29.167: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-4269  c1ee2d4e-93fa-4f2f-b02b-143d6786bb34 59873 0 2024-04-20 14:58:29 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-04-20 14:58:29 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 20 14:58:29.167: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-4269  c1ee2d4e-93fa-4f2f-b02b-143d6786bb34 59873 0 2024-04-20 14:58:29 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-04-20 14:58:29 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 04/20/24 14:58:29.167
  Apr 20 14:58:29.198: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-4269  c1ee2d4e-93fa-4f2f-b02b-143d6786bb34 59874 0 2024-04-20 14:58:29 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-04-20 14:58:29 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 20 14:58:29.198: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-4269  c1ee2d4e-93fa-4f2f-b02b-143d6786bb34 59874 0 2024-04-20 14:58:29 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-04-20 14:58:29 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 04/20/24 14:58:29.198
  Apr 20 14:58:29.226: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-4269  c1ee2d4e-93fa-4f2f-b02b-143d6786bb34 59875 0 2024-04-20 14:58:29 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-04-20 14:58:29 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 20 14:58:29.227: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-4269  c1ee2d4e-93fa-4f2f-b02b-143d6786bb34 59875 0 2024-04-20 14:58:29 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-04-20 14:58:29 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 04/20/24 14:58:29.227
  Apr 20 14:58:29.247: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-4269  0777104c-ae58-47c7-8023-e3e1b0725092 59876 0 2024-04-20 14:58:29 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-04-20 14:58:29 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 20 14:58:29.248: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-4269  0777104c-ae58-47c7-8023-e3e1b0725092 59876 0 2024-04-20 14:58:29 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-04-20 14:58:29 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E0420 14:58:30.130158      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:58:31.130781      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:58:32.130991      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:58:33.131380      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:58:34.132095      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:58:35.133553      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:58:36.134226      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:58:37.135061      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:58:38.135952      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:58:39.136835      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 04/20/24 14:58:39.249
  Apr 20 14:58:39.264: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-4269  0777104c-ae58-47c7-8023-e3e1b0725092 60386 0 2024-04-20 14:58:29 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-04-20 14:58:29 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 20 14:58:39.264: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-4269  0777104c-ae58-47c7-8023-e3e1b0725092 60386 0 2024-04-20 14:58:29 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-04-20 14:58:29 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E0420 14:58:40.137151      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:58:41.138161      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:58:42.139426      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:58:43.140467      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:58:44.140343      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:58:45.142970      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:58:46.141927      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:58:47.142397      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:58:48.142577      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:58:49.142805      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 14:58:49.265: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-4269" for this suite. @ 04/20/24 14:58:49.284
• [20.287 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 04/20/24 14:58:49.299
  Apr 20 14:58:49.299: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename deployment @ 04/20/24 14:58:49.303
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:58:49.339
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:58:49.346
  Apr 20 14:58:49.353: INFO: Creating deployment "test-recreate-deployment"
  Apr 20 14:58:49.370: INFO: Waiting deployment "test-recreate-deployment" to be updated to revision 1
  Apr 20 14:58:49.384: INFO: deployment "test-recreate-deployment" doesn't have the required revision set
  E0420 14:58:50.150251      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:58:51.145112      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 14:58:51.398: INFO: Waiting deployment "test-recreate-deployment" to complete
  Apr 20 14:58:51.404: INFO: Triggering a new rollout for deployment "test-recreate-deployment"
  Apr 20 14:58:51.421: INFO: Updating deployment test-recreate-deployment
  Apr 20 14:58:51.421: INFO: Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  Apr 20 14:58:51.621: INFO: Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1837",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a0870544-cf9c-4141-97d1-bd8211e8fea5",
      ResourceVersion: (string) (len=5) "60474",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849221929,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221931,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221931,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221931,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221931,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221931,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221929,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=63) "ReplicaSet \"test-recreate-deployment-76fb77d45\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Apr 20 14:58:51.632: INFO: New ReplicaSet "test-recreate-deployment-76fb77d45" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1837",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "de4d3417-1cac-46cc-aff4-a6bbe81c98e9",
      ResourceVersion: (string) (len=5) "60471",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849221931,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45",
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "a0870544-cf9c-4141-97d1-bd8211e8fea5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221931,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 61 30 38 37 30 35  34 34 2d 63 66 39 63 2d  |\"a0870544-cf9c-|
              00000120  34 31 34 31 2d 39 37 64  31 2d 62 64 38 32 31 31  |4141-97d1-bd8211|
              00000130  65 38 66 65 61 35 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |e8fea5\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221931,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 20 14:58:51.639: INFO: All old ReplicaSets of Deployment "test-recreate-deployment":
  Apr 20 14:58:51.639: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-5cf87b5b86",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1837",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8ce41f17-dc3e-4b11-8d9c-cff81f8d28b6",
      ResourceVersion: (string) (len=5) "60462",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849221929,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5cf87b5b86"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "a0870544-cf9c-4141-97d1-bd8211e8fea5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221931,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 61 30 38 37 30 35  34 34 2d 63 66 39 63 2d  |\"a0870544-cf9c-|
              00000120  34 31 34 31 2d 39 37 64  31 2d 62 64 38 32 31 31  |4141-97d1-bd8211|
              00000130  65 38 66 65 61 35 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |e8fea5\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221931,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5cf87b5b86"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "5cf87b5b86",
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 20 14:58:51.653: INFO: Pod "test-recreate-deployment-76fb77d45-9rg54" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-recreate-deployment-76fb77d45-9rg54",
      GenerateName: (string) (len=35) "test-recreate-deployment-76fb77d45-",
      Namespace: (string) (len=15) "deployment-1837",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7a59feaf-a3eb-4bde-8bc3-75341c290eb1",
      ResourceVersion: (string) (len=5) "60470",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849221931,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
          UID: (types.UID) (len=36) "de4d3417-1cac-46cc-aff4-a6bbe81c98e9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221931,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 65  34 64 33 34 31 37 2d 31  |d\":\"de4d3417-1|
              00000090  63 61 63 2d 34 36 63 63  2d 61 66 66 34 2d 61 36  |cac-46cc-aff4-a6|
              000000a0  62 62 65 38 31 63 39 38  65 39 5c 22 7d 22 3a 7b  |bbe81c98e9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221931,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-x77sf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-x77sf",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "nok4chie7ate-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221931,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221931,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221931,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221931,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221931,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "192.168.121.8",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "192.168.121.8"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849221931,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 14:58:51.660: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1837" for this suite. @ 04/20/24 14:58:51.669
• [2.384 seconds]
------------------------------
SSSS
------------------------------
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:137
  STEP: Creating a kubernetes client @ 04/20/24 14:58:51.685
  Apr 20 14:58:51.685: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename dns @ 04/20/24 14:58:51.689
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:58:51.714
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:58:51.718
  STEP: Creating a test headless service @ 04/20/24 14:58:51.724
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9125.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-9125.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9125.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-9125.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-9125.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-9125.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-9125.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-9125.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-9125.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-9125.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-9125.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-9125.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 22.2.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.2.22_udp@PTR;check="$$(dig +tcp +noall +answer +search 22.2.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.2.22_tcp@PTR;sleep 1; done
   @ 04/20/24 14:58:51.752
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9125.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-9125.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9125.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-9125.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-9125.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-9125.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-9125.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-9125.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-9125.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-9125.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-9125.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-9125.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 22.2.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.2.22_udp@PTR;check="$$(dig +tcp +noall +answer +search 22.2.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.2.22_tcp@PTR;sleep 1; done
   @ 04/20/24 14:58:51.752
  STEP: creating a pod to probe DNS @ 04/20/24 14:58:51.752
  STEP: submitting the pod to kubernetes @ 04/20/24 14:58:51.752
  E0420 14:58:52.146075      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:58:53.147064      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 04/20/24 14:58:53.799
  STEP: looking for the results for each expected name from probers @ 04/20/24 14:58:53.808
  Apr 20 14:58:53.823: INFO: Unable to read wheezy_udp@dns-test-service.dns-9125.svc.cluster.local from pod dns-9125/dns-test-ca43eb3d-d908-4064-b0b8-91a3a0bdb5f5: the server could not find the requested resource (get pods dns-test-ca43eb3d-d908-4064-b0b8-91a3a0bdb5f5)
  Apr 20 14:58:53.832: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9125.svc.cluster.local from pod dns-9125/dns-test-ca43eb3d-d908-4064-b0b8-91a3a0bdb5f5: the server could not find the requested resource (get pods dns-test-ca43eb3d-d908-4064-b0b8-91a3a0bdb5f5)
  Apr 20 14:58:53.841: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-9125.svc.cluster.local from pod dns-9125/dns-test-ca43eb3d-d908-4064-b0b8-91a3a0bdb5f5: the server could not find the requested resource (get pods dns-test-ca43eb3d-d908-4064-b0b8-91a3a0bdb5f5)
  Apr 20 14:58:53.848: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-9125.svc.cluster.local from pod dns-9125/dns-test-ca43eb3d-d908-4064-b0b8-91a3a0bdb5f5: the server could not find the requested resource (get pods dns-test-ca43eb3d-d908-4064-b0b8-91a3a0bdb5f5)
  Apr 20 14:58:53.894: INFO: Unable to read jessie_udp@dns-test-service.dns-9125.svc.cluster.local from pod dns-9125/dns-test-ca43eb3d-d908-4064-b0b8-91a3a0bdb5f5: the server could not find the requested resource (get pods dns-test-ca43eb3d-d908-4064-b0b8-91a3a0bdb5f5)
  Apr 20 14:58:53.902: INFO: Unable to read jessie_tcp@dns-test-service.dns-9125.svc.cluster.local from pod dns-9125/dns-test-ca43eb3d-d908-4064-b0b8-91a3a0bdb5f5: the server could not find the requested resource (get pods dns-test-ca43eb3d-d908-4064-b0b8-91a3a0bdb5f5)
  Apr 20 14:58:53.915: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9125.svc.cluster.local from pod dns-9125/dns-test-ca43eb3d-d908-4064-b0b8-91a3a0bdb5f5: the server could not find the requested resource (get pods dns-test-ca43eb3d-d908-4064-b0b8-91a3a0bdb5f5)
  Apr 20 14:58:53.924: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9125.svc.cluster.local from pod dns-9125/dns-test-ca43eb3d-d908-4064-b0b8-91a3a0bdb5f5: the server could not find the requested resource (get pods dns-test-ca43eb3d-d908-4064-b0b8-91a3a0bdb5f5)
  Apr 20 14:58:53.958: INFO: Lookups using dns-9125/dns-test-ca43eb3d-d908-4064-b0b8-91a3a0bdb5f5 failed for: [wheezy_udp@dns-test-service.dns-9125.svc.cluster.local wheezy_tcp@dns-test-service.dns-9125.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-9125.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-9125.svc.cluster.local jessie_udp@dns-test-service.dns-9125.svc.cluster.local jessie_tcp@dns-test-service.dns-9125.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-9125.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-9125.svc.cluster.local]

  Apr 20 14:58:53.980: INFO: Pod client logs for webserver: 
  Apr 20 14:58:53.997: INFO: Pod client logs for querier: 
  Apr 20 14:58:54.018: INFO: Pod client logs for jessie-querier: 
  E0420 14:58:54.147490      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:58:55.148470      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:58:56.148865      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:58:57.148943      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:58:58.149938      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 14:58:58.816: INFO: Unable to read wheezy_udp@dns-test-service.dns-9125.svc.cluster.local from pod dns-9125/dns-test-ca43eb3d-d908-4064-b0b8-91a3a0bdb5f5: the server could not find the requested resource (get pods dns-test-ca43eb3d-d908-4064-b0b8-91a3a0bdb5f5)
  Apr 20 14:58:58.821: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9125.svc.cluster.local from pod dns-9125/dns-test-ca43eb3d-d908-4064-b0b8-91a3a0bdb5f5: the server could not find the requested resource (get pods dns-test-ca43eb3d-d908-4064-b0b8-91a3a0bdb5f5)
  Apr 20 14:58:58.863: INFO: Unable to read jessie_udp@dns-test-service.dns-9125.svc.cluster.local from pod dns-9125/dns-test-ca43eb3d-d908-4064-b0b8-91a3a0bdb5f5: the server could not find the requested resource (get pods dns-test-ca43eb3d-d908-4064-b0b8-91a3a0bdb5f5)
  Apr 20 14:58:58.871: INFO: Unable to read jessie_tcp@dns-test-service.dns-9125.svc.cluster.local from pod dns-9125/dns-test-ca43eb3d-d908-4064-b0b8-91a3a0bdb5f5: the server could not find the requested resource (get pods dns-test-ca43eb3d-d908-4064-b0b8-91a3a0bdb5f5)
  Apr 20 14:58:58.917: INFO: Lookups using dns-9125/dns-test-ca43eb3d-d908-4064-b0b8-91a3a0bdb5f5 failed for: [wheezy_udp@dns-test-service.dns-9125.svc.cluster.local wheezy_tcp@dns-test-service.dns-9125.svc.cluster.local jessie_udp@dns-test-service.dns-9125.svc.cluster.local jessie_tcp@dns-test-service.dns-9125.svc.cluster.local]

  Apr 20 14:58:58.929: INFO: Pod client logs for webserver: 
  Apr 20 14:58:58.974: INFO: Pod client logs for querier: 
  Apr 20 14:58:58.989: INFO: Pod client logs for jessie-querier: 
  E0420 14:58:59.150958      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:59:00.151982      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:59:01.152501      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:59:02.152982      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:59:03.153388      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 14:59:03.826: INFO: Unable to read wheezy_udp@dns-test-service.dns-9125.svc.cluster.local from pod dns-9125/dns-test-ca43eb3d-d908-4064-b0b8-91a3a0bdb5f5: the server could not find the requested resource (get pods dns-test-ca43eb3d-d908-4064-b0b8-91a3a0bdb5f5)
  Apr 20 14:59:03.834: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9125.svc.cluster.local from pod dns-9125/dns-test-ca43eb3d-d908-4064-b0b8-91a3a0bdb5f5: the server could not find the requested resource (get pods dns-test-ca43eb3d-d908-4064-b0b8-91a3a0bdb5f5)
  Apr 20 14:59:03.923: INFO: Unable to read jessie_udp@dns-test-service.dns-9125.svc.cluster.local from pod dns-9125/dns-test-ca43eb3d-d908-4064-b0b8-91a3a0bdb5f5: the server could not find the requested resource (get pods dns-test-ca43eb3d-d908-4064-b0b8-91a3a0bdb5f5)
  Apr 20 14:59:03.932: INFO: Unable to read jessie_tcp@dns-test-service.dns-9125.svc.cluster.local from pod dns-9125/dns-test-ca43eb3d-d908-4064-b0b8-91a3a0bdb5f5: the server could not find the requested resource (get pods dns-test-ca43eb3d-d908-4064-b0b8-91a3a0bdb5f5)
  Apr 20 14:59:03.982: INFO: Lookups using dns-9125/dns-test-ca43eb3d-d908-4064-b0b8-91a3a0bdb5f5 failed for: [wheezy_udp@dns-test-service.dns-9125.svc.cluster.local wheezy_tcp@dns-test-service.dns-9125.svc.cluster.local jessie_udp@dns-test-service.dns-9125.svc.cluster.local jessie_tcp@dns-test-service.dns-9125.svc.cluster.local]

  Apr 20 14:59:04.000: INFO: Pod client logs for webserver: 
  Apr 20 14:59:04.013: INFO: Pod client logs for querier: 
  Apr 20 14:59:04.024: INFO: Pod client logs for jessie-querier: 
  E0420 14:59:04.153952      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:59:05.155311      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:59:06.155373      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:59:07.156161      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:59:08.156518      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 14:59:08.817: INFO: Unable to read wheezy_udp@dns-test-service.dns-9125.svc.cluster.local from pod dns-9125/dns-test-ca43eb3d-d908-4064-b0b8-91a3a0bdb5f5: the server could not find the requested resource (get pods dns-test-ca43eb3d-d908-4064-b0b8-91a3a0bdb5f5)
  Apr 20 14:59:08.823: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9125.svc.cluster.local from pod dns-9125/dns-test-ca43eb3d-d908-4064-b0b8-91a3a0bdb5f5: the server could not find the requested resource (get pods dns-test-ca43eb3d-d908-4064-b0b8-91a3a0bdb5f5)
  Apr 20 14:59:08.876: INFO: Unable to read jessie_udp@dns-test-service.dns-9125.svc.cluster.local from pod dns-9125/dns-test-ca43eb3d-d908-4064-b0b8-91a3a0bdb5f5: the server could not find the requested resource (get pods dns-test-ca43eb3d-d908-4064-b0b8-91a3a0bdb5f5)
  Apr 20 14:59:08.882: INFO: Unable to read jessie_tcp@dns-test-service.dns-9125.svc.cluster.local from pod dns-9125/dns-test-ca43eb3d-d908-4064-b0b8-91a3a0bdb5f5: the server could not find the requested resource (get pods dns-test-ca43eb3d-d908-4064-b0b8-91a3a0bdb5f5)
  Apr 20 14:59:08.932: INFO: Lookups using dns-9125/dns-test-ca43eb3d-d908-4064-b0b8-91a3a0bdb5f5 failed for: [wheezy_udp@dns-test-service.dns-9125.svc.cluster.local wheezy_tcp@dns-test-service.dns-9125.svc.cluster.local jessie_udp@dns-test-service.dns-9125.svc.cluster.local jessie_tcp@dns-test-service.dns-9125.svc.cluster.local]

  Apr 20 14:59:08.943: INFO: Pod client logs for webserver: 
  Apr 20 14:59:08.956: INFO: Pod client logs for querier: 
  Apr 20 14:59:08.969: INFO: Pod client logs for jessie-querier: 
  E0420 14:59:09.157389      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:59:10.158015      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:59:11.158599      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:59:12.159074      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:59:13.159218      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 14:59:13.821: INFO: Unable to read wheezy_udp@dns-test-service.dns-9125.svc.cluster.local from pod dns-9125/dns-test-ca43eb3d-d908-4064-b0b8-91a3a0bdb5f5: the server could not find the requested resource (get pods dns-test-ca43eb3d-d908-4064-b0b8-91a3a0bdb5f5)
  Apr 20 14:59:13.832: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9125.svc.cluster.local from pod dns-9125/dns-test-ca43eb3d-d908-4064-b0b8-91a3a0bdb5f5: the server could not find the requested resource (get pods dns-test-ca43eb3d-d908-4064-b0b8-91a3a0bdb5f5)
  Apr 20 14:59:13.886: INFO: Unable to read jessie_udp@dns-test-service.dns-9125.svc.cluster.local from pod dns-9125/dns-test-ca43eb3d-d908-4064-b0b8-91a3a0bdb5f5: the server could not find the requested resource (get pods dns-test-ca43eb3d-d908-4064-b0b8-91a3a0bdb5f5)
  Apr 20 14:59:13.893: INFO: Unable to read jessie_tcp@dns-test-service.dns-9125.svc.cluster.local from pod dns-9125/dns-test-ca43eb3d-d908-4064-b0b8-91a3a0bdb5f5: the server could not find the requested resource (get pods dns-test-ca43eb3d-d908-4064-b0b8-91a3a0bdb5f5)
  Apr 20 14:59:13.938: INFO: Lookups using dns-9125/dns-test-ca43eb3d-d908-4064-b0b8-91a3a0bdb5f5 failed for: [wheezy_udp@dns-test-service.dns-9125.svc.cluster.local wheezy_tcp@dns-test-service.dns-9125.svc.cluster.local jessie_udp@dns-test-service.dns-9125.svc.cluster.local jessie_tcp@dns-test-service.dns-9125.svc.cluster.local]

  Apr 20 14:59:13.953: INFO: Pod client logs for webserver: 
  Apr 20 14:59:13.971: INFO: Pod client logs for querier: 
  Apr 20 14:59:13.984: INFO: Pod client logs for jessie-querier: 
  E0420 14:59:14.159995      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:59:15.160999      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:59:16.161185      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:59:17.161295      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:59:18.161578      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 14:59:18.820: INFO: Unable to read wheezy_udp@dns-test-service.dns-9125.svc.cluster.local from pod dns-9125/dns-test-ca43eb3d-d908-4064-b0b8-91a3a0bdb5f5: the server could not find the requested resource (get pods dns-test-ca43eb3d-d908-4064-b0b8-91a3a0bdb5f5)
  Apr 20 14:59:18.830: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9125.svc.cluster.local from pod dns-9125/dns-test-ca43eb3d-d908-4064-b0b8-91a3a0bdb5f5: the server could not find the requested resource (get pods dns-test-ca43eb3d-d908-4064-b0b8-91a3a0bdb5f5)
  Apr 20 14:59:18.924: INFO: Unable to read jessie_udp@dns-test-service.dns-9125.svc.cluster.local from pod dns-9125/dns-test-ca43eb3d-d908-4064-b0b8-91a3a0bdb5f5: the server could not find the requested resource (get pods dns-test-ca43eb3d-d908-4064-b0b8-91a3a0bdb5f5)
  Apr 20 14:59:18.934: INFO: Unable to read jessie_tcp@dns-test-service.dns-9125.svc.cluster.local from pod dns-9125/dns-test-ca43eb3d-d908-4064-b0b8-91a3a0bdb5f5: the server could not find the requested resource (get pods dns-test-ca43eb3d-d908-4064-b0b8-91a3a0bdb5f5)
  Apr 20 14:59:19.015: INFO: Lookups using dns-9125/dns-test-ca43eb3d-d908-4064-b0b8-91a3a0bdb5f5 failed for: [wheezy_udp@dns-test-service.dns-9125.svc.cluster.local wheezy_tcp@dns-test-service.dns-9125.svc.cluster.local jessie_udp@dns-test-service.dns-9125.svc.cluster.local jessie_tcp@dns-test-service.dns-9125.svc.cluster.local]

  Apr 20 14:59:19.030: INFO: Pod client logs for webserver: 
  Apr 20 14:59:19.045: INFO: Pod client logs for querier: 
  Apr 20 14:59:19.062: INFO: Pod client logs for jessie-querier: 
  E0420 14:59:19.161881      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:59:20.162762      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:59:21.163352      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:59:22.163616      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:59:23.164168      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 14:59:23.961: INFO: DNS probes using dns-9125/dns-test-ca43eb3d-d908-4064-b0b8-91a3a0bdb5f5 succeeded

  STEP: deleting the pod @ 04/20/24 14:59:23.962
  STEP: deleting the test service @ 04/20/24 14:59:24.041
  STEP: deleting the test headless service @ 04/20/24 14:59:24.108
  Apr 20 14:59:24.159: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0420 14:59:24.165172      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "dns-9125" for this suite. @ 04/20/24 14:59:24.185
• [32.525 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:41
  STEP: Creating a kubernetes client @ 04/20/24 14:59:24.214
  Apr 20 14:59:24.214: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename containers @ 04/20/24 14:59:24.238
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:59:24.283
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:59:24.291
  E0420 14:59:25.166049      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:59:26.168075      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 14:59:26.353: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-505" for this suite. @ 04/20/24 14:59:26.364
• [2.164 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:46
  STEP: Creating a kubernetes client @ 04/20/24 14:59:26.38
  Apr 20 14:59:26.380: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename downward-api @ 04/20/24 14:59:26.384
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:59:26.42
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:59:26.427
  STEP: Creating a pod to test downward api env vars @ 04/20/24 14:59:26.432
  E0420 14:59:27.167906      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:59:28.169024      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 14:59:28.49
  Apr 20 14:59:28.497: INFO: Trying to get logs from node nok4chie7ate-3 pod downward-api-9e6eccaf-4d5a-4e3a-ae4a-c1798a171785 container dapi-container: <nil>
  STEP: delete the pod @ 04/20/24 14:59:28.518
  Apr 20 14:59:28.544: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8697" for this suite. @ 04/20/24 14:59:28.554
• [2.185 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1399
  STEP: Creating a kubernetes client @ 04/20/24 14:59:28.565
  Apr 20 14:59:28.565: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename kubectl @ 04/20/24 14:59:28.569
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:59:28.612
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:59:28.619
  Apr 20 14:59:28.625: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-1656 create -f -'
  Apr 20 14:59:28.971: INFO: stderr: ""
  Apr 20 14:59:28.972: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  Apr 20 14:59:28.972: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-1656 create -f -'
  E0420 14:59:29.171359      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 14:59:29.462: INFO: stderr: ""
  Apr 20 14:59:29.462: INFO: stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 04/20/24 14:59:29.462
  E0420 14:59:30.169532      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 14:59:30.476: INFO: Selector matched 1 pods for map[app:agnhost]
  Apr 20 14:59:30.477: INFO: Found 1 / 1
  Apr 20 14:59:30.477: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  Apr 20 14:59:30.488: INFO: Selector matched 1 pods for map[app:agnhost]
  Apr 20 14:59:30.488: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Apr 20 14:59:30.488: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-1656 describe pod agnhost-primary-j54jv'
  Apr 20 14:59:30.698: INFO: stderr: ""
  Apr 20 14:59:30.698: INFO: stdout: "Name:             agnhost-primary-j54jv\nNamespace:        kubectl-1656\nPriority:         0\nService Account:  default\nNode:             nok4chie7ate-3/192.168.121.8\nStart Time:       Sat, 20 Apr 2024 14:59:29 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               10.233.66.150\nIPs:\n  IP:           10.233.66.150\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   cri-o://e2cc850da0b57f23beb38fae4265b48a4b379e387a8a74d62d7bb335d1dfd5c8\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.47\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:c9997bf8d2e223d7d2a0078dcfb11a653e9b16cf09418829ec03e1d57ca9628a\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Sat, 20 Apr 2024 14:59:29 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-c75qk (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-c75qk:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  1s    default-scheduler  Successfully assigned kubectl-1656/agnhost-primary-j54jv to nok4chie7ate-3\n  Normal  Pulled     1s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.47\" already present on machine\n  Normal  Created    1s    kubelet            Created container agnhost-primary\n  Normal  Started    1s    kubelet            Started container agnhost-primary\n"
  Apr 20 14:59:30.699: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-1656 describe rc agnhost-primary'
  Apr 20 14:59:30.886: INFO: stderr: ""
  Apr 20 14:59:30.886: INFO: stdout: "Name:         agnhost-primary\nNamespace:    kubectl-1656\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:        registry.k8s.io/e2e-test-images/agnhost:2.47\n    Port:         6379/TCP\n    Host Port:    0/TCP\n    Environment:  <none>\n    Mounts:       <none>\n  Volumes:        <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  1s    replication-controller  Created pod: agnhost-primary-j54jv\n"
  Apr 20 14:59:30.887: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-1656 describe service agnhost-primary'
  Apr 20 14:59:31.096: INFO: stderr: ""
  Apr 20 14:59:31.096: INFO: stdout: "Name:              agnhost-primary\nNamespace:         kubectl-1656\nLabels:            app=agnhost\n                   role=primary\nAnnotations:       <none>\nSelector:          app=agnhost,role=primary\nType:              ClusterIP\nIP Family Policy:  SingleStack\nIP Families:       IPv4\nIP:                10.233.57.250\nIPs:               10.233.57.250\nPort:              <unset>  6379/TCP\nTargetPort:        agnhost-server/TCP\nEndpoints:         10.233.66.150:6379\nSession Affinity:  None\nEvents:            <none>\n"
  Apr 20 14:59:31.108: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-1656 describe node nok4chie7ate-1'
  E0420 14:59:31.170282      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 14:59:31.456: INFO: stderr: ""
  Apr 20 14:59:31.456: INFO: stdout: "Name:               nok4chie7ate-1\nRoles:              control-plane\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=nok4chie7ate-1\n                    kubernetes.io/os=linux\n                    node-role.kubernetes.io/control-plane=\n                    node.kubernetes.io/exclude-from-external-load-balancers=\nAnnotations:        flannel.alpha.coreos.com/backend-data: {\"VNI\":1,\"VtepMAC\":\"da:44:81:5c:70:05\"}\n                    flannel.alpha.coreos.com/backend-type: vxlan\n                    flannel.alpha.coreos.com/kube-subnet-manager: true\n                    flannel.alpha.coreos.com/public-ip: 192.168.121.235\n                    kubeadm.alpha.kubernetes.io/cri-socket: unix:///var/run/crio/crio.sock\n                    node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Sat, 20 Apr 2024 09:17:55 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  nok4chie7ate-1\n  AcquireTime:     <unset>\n  RenewTime:       Sat, 20 Apr 2024 14:59:21 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Sat, 20 Apr 2024 14:11:36 +0000   Sat, 20 Apr 2024 14:11:36 +0000   FlannelIsUp                  Flannel is running on this node\n  MemoryPressure       False   Sat, 20 Apr 2024 14:57:21 +0000   Sat, 20 Apr 2024 13:53:24 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Sat, 20 Apr 2024 14:57:21 +0000   Sat, 20 Apr 2024 13:53:24 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Sat, 20 Apr 2024 14:57:21 +0000   Sat, 20 Apr 2024 13:53:24 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Sat, 20 Apr 2024 14:57:21 +0000   Sat, 20 Apr 2024 14:05:07 +0000   KubeletReady                 kubelet is posting ready status. AppArmor enabled\nAddresses:\n  InternalIP:  192.168.121.235\n  Hostname:    nok4chie7ate-1\nCapacity:\n  cpu:                2\n  ephemeral-storage:  115008636Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             8132672Ki\n  pods:               110\nAllocatable:\n  cpu:                1600m\n  ephemeral-storage:  111880401014\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             3283008Ki\n  pods:               110\nSystem Info:\n  Machine ID:                 18fa132fb7864884bd1ecddfc611007d\n  System UUID:                18fa132f-b786-4884-bd1e-cddfc611007d\n  Boot ID:                    ad75c03f-2ae5-49b1-8939-6788ea4e4885\n  Kernel Version:             6.8.0-28-generic\n  OS Image:                   Ubuntu Noble Numbat (development branch)\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  cri-o://1.29.3\n  Kubelet Version:            v1.29.4\n  Kube-Proxy Version:         v1.29.4\nPodCIDR:                      10.233.64.0/24\nPodCIDRs:                     10.233.64.0/24\nNon-terminated Pods:          (8 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  kube-system                 coredns-76f75df574-jghzz                                   100m (6%)     0 (0%)      70Mi (2%)        170Mi (5%)     48m\n  kube-system                 kube-addon-manager-nok4chie7ate-1                          5m (0%)       0 (0%)      50Mi (1%)        0 (0%)         46m\n  kube-system                 kube-apiserver-nok4chie7ate-1                              250m (15%)    0 (0%)      0 (0%)           0 (0%)         46m\n  kube-system                 kube-controller-manager-nok4chie7ate-1                     200m (12%)    0 (0%)      0 (0%)           0 (0%)         46m\n  kube-system                 kube-flannel-ds-t9926                                      100m (6%)     0 (0%)      50Mi (1%)        0 (0%)         48m\n  kube-system                 kube-proxy-fwrhv                                           0 (0%)        0 (0%)      0 (0%)           0 (0%)         47m\n  kube-system                 kube-scheduler-nok4chie7ate-1                              100m (6%)     0 (0%)      0 (0%)           0 (0%)         47m\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-a8ae23328e1d4fd2-khgbq    0 (0%)        0 (0%)      0 (0%)           0 (0%)         47m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests    Limits\n  --------           --------    ------\n  cpu                755m (47%)  0 (0%)\n  memory             170Mi (5%)  170Mi (5%)\n  ephemeral-storage  0 (0%)      0 (0%)\n  hugepages-1Gi      0 (0%)      0 (0%)\n  hugepages-2Mi      0 (0%)      0 (0%)\nEvents:\n  Type    Reason                   Age                   From             Message\n  ----    ------                   ----                  ----             -------\n  Normal  Starting                 83m                   kube-proxy       \n  Normal  Starting                 96m                   kube-proxy       \n  Normal  Starting                 105m                  kube-proxy       \n  Normal  Starting                 114m                  kube-proxy       \n  Normal  Starting                 114m                  kube-proxy       \n  Normal  Starting                 92m                   kube-proxy       \n  Normal  Starting                 47m                   kube-proxy       \n  Normal  NodeNotReady             114m                  node-controller  Node nok4chie7ate-1 status is now: NodeNotReady\n  Normal  NodeReady                113m (x2 over 3h14m)  kubelet          Node nok4chie7ate-1 status is now: NodeReady\n  Normal  NodeHasSufficientPID     113m (x2 over 3h14m)  kubelet          Node nok4chie7ate-1 status is now: NodeHasSufficientPID\n  Normal  NodeHasSufficientMemory  113m (x2 over 3h14m)  kubelet          Node nok4chie7ate-1 status is now: NodeHasSufficientMemory\n  Normal  NodeHasNoDiskPressure    113m (x2 over 3h14m)  kubelet          Node nok4chie7ate-1 status is now: NodeHasNoDiskPressure\n  Normal  RegisteredNode           109m                  node-controller  Node nok4chie7ate-1 event: Registered Node nok4chie7ate-1 in Controller\n  Normal  Starting                 107m                  kubelet          Starting kubelet.\n  Normal  NodeHasSufficientMemory  107m (x8 over 107m)   kubelet          Node nok4chie7ate-1 status is now: NodeHasSufficientMemory\n  Normal  NodeHasNoDiskPressure    107m (x8 over 107m)   kubelet          Node nok4chie7ate-1 status is now: NodeHasNoDiskPressure\n  Normal  NodeHasSufficientPID     107m (x7 over 107m)   kubelet          Node nok4chie7ate-1 status is now: NodeHasSufficientPID\n  Normal  NodeAllocatableEnforced  107m                  kubelet          Updated Node Allocatable limit across pods\n  Normal  RegisteredNode           106m                  node-controller  Node nok4chie7ate-1 event: Registered Node nok4chie7ate-1 in Controller\n  Normal  RegisteredNode           95m                   node-controller  Node nok4chie7ate-1 event: Registered Node nok4chie7ate-1 in Controller\n  Normal  NodeHasNoDiskPressure    94m (x8 over 94m)     kubelet          Node nok4chie7ate-1 status is now: NodeHasNoDiskPressure\n  Normal  NodeHasSufficientPID     94m (x7 over 94m)     kubelet          Node nok4chie7ate-1 status is now: NodeHasSufficientPID\n  Normal  NodeAllocatableEnforced  94m                   kubelet          Updated Node Allocatable limit across pods\n  Normal  Starting                 94m                   kubelet          Starting kubelet.\n  Normal  NodeHasSufficientMemory  94m (x8 over 94m)     kubelet          Node nok4chie7ate-1 status is now: NodeHasSufficientMemory\n  Normal  RegisteredNode           92m                   node-controller  Node nok4chie7ate-1 event: Registered Node nok4chie7ate-1 in Controller\n  Normal  RegisteredNode           86m                   node-controller  Node nok4chie7ate-1 event: Registered Node nok4chie7ate-1 in Controller\n  Normal  NodeNotReady             86m                   node-controller  Node nok4chie7ate-1 status is now: NodeNotReady\n  Normal  NodeHasSufficientPID     84m (x7 over 84m)     kubelet          Node nok4chie7ate-1 status is now: NodeHasSufficientPID\n  Normal  Starting                 84m                   kubelet          Starting kubelet.\n  Normal  NodeHasSufficientMemory  84m (x8 over 84m)     kubelet          Node nok4chie7ate-1 status is now: NodeHasSufficientMemory\n  Normal  NodeHasNoDiskPressure    84m (x8 over 84m)     kubelet          Node nok4chie7ate-1 status is now: NodeHasNoDiskPressure\n  Normal  NodeAllocatableEnforced  84m                   kubelet          Updated Node Allocatable limit across pods\n  Normal  RegisteredNode           82m                   node-controller  Node nok4chie7ate-1 event: Registered Node nok4chie7ate-1 in Controller\n  Normal  Starting                 72m                   kubelet          Starting kubelet.\n  Normal  NodeHasSufficientMemory  72m                   kubelet          Node nok4chie7ate-1 status is now: NodeHasSufficientMemory\n  Normal  NodeHasNoDiskPressure    72m                   kubelet          Node nok4chie7ate-1 status is now: NodeHasNoDiskPressure\n  Normal  NodeHasSufficientPID     72m                   kubelet          Node nok4chie7ate-1 status is now: NodeHasSufficientPID\n  Normal  NodeNotReady             72m                   kubelet          Node nok4chie7ate-1 status is now: NodeNotReady\n  Normal  NodeAllocatableEnforced  72m                   kubelet          Updated Node Allocatable limit across pods\n  Normal  NodeReady                72m                   kubelet          Node nok4chie7ate-1 status is now: NodeReady\n  Normal  NodeNotReady             72m                   kubelet          Node nok4chie7ate-1 status is now: NodeNotReady\n  Normal  Starting                 72m                   kubelet          Starting kubelet.\n  Normal  NodeHasSufficientMemory  72m                   kubelet          Node nok4chie7ate-1 status is now: NodeHasSufficientMemory\n  Normal  NodeHasNoDiskPressure    72m                   kubelet          Node nok4chie7ate-1 status is now: NodeHasNoDiskPressure\n  Normal  NodeHasSufficientPID     72m                   kubelet          Node nok4chie7ate-1 status is now: NodeHasSufficientPID\n  Normal  NodeReady                72m                   kubelet          Node nok4chie7ate-1 status is now: NodeReady\n  Normal  NodeAllocatableEnforced  72m                   kubelet          Updated Node Allocatable limit across pods\n  Normal  RegisteredNode           70m                   node-controller  Node nok4chie7ate-1 event: Registered Node nok4chie7ate-1 in Controller\n  Normal  NodeNotReady             69m                   node-controller  Node nok4chie7ate-1 status is now: NodeNotReady\n  Normal  NodeAllocatableEnforced  66m                   kubelet          Updated Node Allocatable limit across pods\n  Normal  NodeHasSufficientMemory  66m (x8 over 66m)     kubelet          Node nok4chie7ate-1 status is now: NodeHasSufficientMemory\n  Normal  NodeHasNoDiskPressure    66m (x8 over 66m)     kubelet          Node nok4chie7ate-1 status is now: NodeHasNoDiskPressure\n  Normal  NodeHasSufficientPID     66m (x7 over 66m)     kubelet          Node nok4chie7ate-1 status is now: NodeHasSufficientPID\n  Normal  Starting                 66m                   kubelet          Starting kubelet.\n  Normal  RegisteredNode           64m                   node-controller  Node nok4chie7ate-1 event: Registered Node nok4chie7ate-1 in Controller\n  Normal  NodeNotReady             54m                   kubelet          Node nok4chie7ate-1 status is now: NodeNotReady\n  Normal  NodeHasNoDiskPressure    54m                   kubelet          Node nok4chie7ate-1 status is now: NodeHasNoDiskPressure\n  Normal  NodeHasSufficientPID     54m                   kubelet          Node nok4chie7ate-1 status is now: NodeHasSufficientPID\n  Normal  NodeHasSufficientMemory  54m                   kubelet          Node nok4chie7ate-1 status is now: NodeHasSufficientMemory\n  Normal  Starting                 54m                   kubelet          Starting kubelet.\n  Normal  NodeAllocatableEnforced  54m                   kubelet          Updated Node Allocatable limit across pods\n  Normal  Starting                 54m                   kubelet          Starting kubelet.\n  Normal  NodeHasSufficientMemory  54m                   kubelet          Node nok4chie7ate-1 status is now: NodeHasSufficientMemory\n  Normal  NodeHasNoDiskPressure    54m                   kubelet          Node nok4chie7ate-1 status is now: NodeHasNoDiskPressure\n  Normal  NodeHasSufficientPID     54m                   kubelet          Node nok4chie7ate-1 status is now: NodeHasSufficientPID\n  Normal  NodeAllocatableEnforced  54m                   kubelet          Updated Node Allocatable limit across pods\n  Normal  NodeReady                54m                   kubelet          Node nok4chie7ate-1 status is now: NodeReady\n"
  Apr 20 14:59:31.458: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-1656 describe namespace kubectl-1656'
  Apr 20 14:59:31.711: INFO: stderr: ""
  Apr 20 14:59:31.712: INFO: stdout: "Name:         kubectl-1656\nLabels:       e2e-framework=kubectl\n              e2e-run=52298dc7-4cd7-47ec-bf38-306dda76a0f0\n              kubernetes.io/metadata.name=kubectl-1656\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  Apr 20 14:59:31.713: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1656" for this suite. @ 04/20/24 14:59:31.725
• [3.176 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:357
  STEP: Creating a kubernetes client @ 04/20/24 14:59:31.745
  Apr 20 14:59:31.745: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/20/24 14:59:31.749
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:59:31.834
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:59:31.842
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 04/20/24 14:59:31.847
  Apr 20 14:59:31.849: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  E0420 14:59:32.171384      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:59:33.171662      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:59:34.173039      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 14:59:34.853: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  E0420 14:59:35.174116      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:59:36.173933      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:59:37.179946      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:59:38.179103      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:59:39.179607      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:59:40.180233      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:59:41.181015      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:59:42.181799      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:59:43.182328      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:59:44.182772      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:59:45.183157      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:59:46.183622      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:59:47.184466      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:59:48.185013      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 14:59:48.592: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3733" for this suite. @ 04/20/24 14:59:48.61
• [16.877 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 04/20/24 14:59:48.625
  Apr 20 14:59:48.625: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename deployment @ 04/20/24 14:59:48.63
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:59:48.653
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:59:48.659
  Apr 20 14:59:48.663: INFO: Creating deployment "webserver-deployment"
  Apr 20 14:59:48.671: INFO: Waiting for observed generation 1
  E0420 14:59:49.186035      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:59:50.186422      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 14:59:50.688: INFO: Waiting for all required pods to come up
  Apr 20 14:59:50.698: INFO: Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 04/20/24 14:59:50.699
  Apr 20 14:59:50.699: INFO: Waiting for deployment "webserver-deployment" to complete
  Apr 20 14:59:50.715: INFO: Updating deployment "webserver-deployment" with a non-existent image
  Apr 20 14:59:50.736: INFO: Updating deployment webserver-deployment
  Apr 20 14:59:50.736: INFO: Waiting for observed generation 2
  E0420 14:59:51.186627      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:59:52.187521      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 14:59:52.752: INFO: Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  Apr 20 14:59:52.758: INFO: Waiting for the first rollout's replicaset to have .spec.replicas = 8
  Apr 20 14:59:52.763: INFO: Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  Apr 20 14:59:52.779: INFO: Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  Apr 20 14:59:52.779: INFO: Waiting for the second rollout's replicaset to have .spec.replicas = 5
  Apr 20 14:59:52.790: INFO: Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  Apr 20 14:59:52.801: INFO: Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  Apr 20 14:59:52.801: INFO: Scaling up the deployment "webserver-deployment" from 10 to 30
  Apr 20 14:59:52.817: INFO: Updating deployment webserver-deployment
  Apr 20 14:59:52.817: INFO: Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  Apr 20 14:59:52.830: INFO: Verifying that first rollout's replicaset has .spec.replicas = 20
  Apr 20 14:59:52.846: INFO: Verifying that second rollout's replicaset has .spec.replicas = 13
  Apr 20 14:59:52.904: INFO: Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1746",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "04026070-7a1b-4d94-9224-10fc026d681f",
      ResourceVersion: (string) (len=5) "60963",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849221988,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221992,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221992,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 13,
      UpdatedReplicas: (int32) 5,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      UnavailableReplicas: (int32) 5,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221991,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221988,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=59) "ReplicaSet \"webserver-deployment-9b4f5bf69\" is progressing."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221992,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221992,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Apr 20 14:59:52.954: INFO: New ReplicaSet "webserver-deployment-9b4f5bf69" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1746",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a27ac0ff-d5d5-4f19-92ea-492ed211214e",
      ResourceVersion: (string) (len=5) "60959",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849221990,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "04026070-7a1b-4d94-9224-10fc026d681f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221991,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221992,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 30 34 30 32 36 30  37 30 2d 37 61 31 62 2d  |\"04026070-7a1b-|
              00000120  34 64 39 34 2d 39 32 32  34 2d 31 30 66 63 30 32  |4d94-9224-10fc02|
              00000130  36 64 36 38 31 66 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |6d681f\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 5,
      FullyLabeledReplicas: (int32) 5,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 20 14:59:52.958: INFO: All old ReplicaSets of Deployment "webserver-deployment":
  Apr 20 14:59:52.959: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1746",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e2745d7c-0362-4276-96c3-dee6f18eb5e1",
      ResourceVersion: (string) (len=5) "60958",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849221988,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "04026070-7a1b-4d94-9224-10fc026d681f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221991,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221992,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 30 34 30 32 36 30  37 30 2d 37 61 31 62 2d  |\"04026070-7a1b-|
              00000120  34 64 39 34 2d 39 32 32  34 2d 31 30 66 63 30 32  |4d94-9224-10fc02|
              00000130  36 64 36 38 31 66 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |6d681f\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 8,
      FullyLabeledReplicas: (int32) 8,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 20 14:59:53.076: INFO: Pod "webserver-deployment-557759b7c7-2whnr" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-2whnr",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1746",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bda50b21-b0b1-4f52-af50-d3c230f5e4ae",
      ResourceVersion: (string) (len=5) "60992",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849221993,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "e2745d7c-0362-4276-96c3-dee6f18eb5e1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221993,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 32  37 34 35 64 37 63 2d 30  |d\":\"e2745d7c-0|
              00000090  33 36 32 2d 34 32 37 36  2d 39 36 63 33 2d 64 65  |362-4276-96c3-de|
              000000a0  65 36 66 31 38 65 62 35  65 31 5c 22 7d 22 3a 7b  |e6f18eb5e1\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7vd8z",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7vd8z",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 14:59:53.092: INFO: Pod "webserver-deployment-557759b7c7-4x4w5" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-4x4w5",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1746",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4d9280ae-8f57-457c-992a-5e47b4e12e96",
      ResourceVersion: (string) (len=5) "60883",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849221988,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "e2745d7c-0362-4276-96c3-dee6f18eb5e1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221988,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 32  37 34 35 64 37 63 2d 30  |d\":\"e2745d7c-0|
              00000090  33 36 32 2d 34 32 37 36  2d 39 36 63 33 2d 64 65  |362-4276-96c3-de|
              000000a0  65 36 66 31 38 65 62 35  65 31 5c 22 7d 22 3a 7b  |e6f18eb5e1\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221990,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 36 2e  31 35 34 5c 22 7d 22 3a  |.233.66.154\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fpgmg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fpgmg",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "nok4chie7ate-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221990,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221988,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221990,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221990,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221988,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "192.168.121.8",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "192.168.121.8"
        }
      },
      PodIP: (string) (len=13) "10.233.66.154",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.66.154"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849221988,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849221990,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://77c121dc1495e9bb0380e4be48c169a4d53bfa09752ef63bf0190789b11b831e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 14:59:53.100: INFO: Pod "webserver-deployment-557759b7c7-7c7pl" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-7c7pl",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1746",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7062eefb-7c76-4dd7-96d9-86b6ccf0ad75",
      ResourceVersion: (string) (len=5) "60874",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849221988,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "e2745d7c-0362-4276-96c3-dee6f18eb5e1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221988,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 32  37 34 35 64 37 63 2d 30  |d\":\"e2745d7c-0|
              00000090  33 36 32 2d 34 32 37 36  2d 39 36 63 33 2d 64 65  |362-4276-96c3-de|
              000000a0  65 36 66 31 38 65 62 35  65 31 5c 22 7d 22 3a 7b  |e6f18eb5e1\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221990,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 35 2e  31 32 31 5c 22 7d 22 3a  |.233.65.121\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8xpnj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8xpnj",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "nok4chie7ate-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221990,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221988,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221990,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221990,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221988,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.193",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.193"
        }
      },
      PodIP: (string) (len=13) "10.233.65.121",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.65.121"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849221988,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849221989,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://d68fc0f9cf846ab54306e7e512b460eec0df2de0b8eb8dbdbdff309b4d87df8d",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 14:59:53.106: INFO: Pod "webserver-deployment-557759b7c7-7n97t" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-7n97t",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1746",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "35fd056f-84ba-4fb1-b1b7-5e5862ce7653",
      ResourceVersion: (string) (len=5) "60991",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849221992,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "e2745d7c-0362-4276-96c3-dee6f18eb5e1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221992,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 32  37 34 35 64 37 63 2d 30  |d\":\"e2745d7c-0|
              00000090  33 36 32 2d 34 32 37 36  2d 39 36 63 33 2d 64 65  |362-4276-96c3-de|
              000000a0  65 36 66 31 38 65 62 35  65 31 5c 22 7d 22 3a 7b  |e6f18eb5e1\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cwnl8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cwnl8",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "nok4chie7ate-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221993,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 14:59:53.109: INFO: Pod "webserver-deployment-557759b7c7-7ttts" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-7ttts",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1746",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a453847d-0c9e-4f85-96fc-710ecd02559d",
      ResourceVersion: (string) (len=5) "60980",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849221992,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "e2745d7c-0362-4276-96c3-dee6f18eb5e1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221992,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 32  37 34 35 64 37 63 2d 30  |d\":\"e2745d7c-0|
              00000090  33 36 32 2d 34 32 37 36  2d 39 36 63 33 2d 64 65  |362-4276-96c3-de|
              000000a0  65 36 66 31 38 65 62 35  65 31 5c 22 7d 22 3a 7b  |e6f18eb5e1\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-h2rnm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-h2rnm",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 14:59:53.112: INFO: Pod "webserver-deployment-557759b7c7-bcz5j" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-bcz5j",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1746",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7d7adfb6-276c-4d36-983a-3590ae80a979",
      ResourceVersion: (string) (len=5) "60982",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849221992,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "e2745d7c-0362-4276-96c3-dee6f18eb5e1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221992,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 32  37 34 35 64 37 63 2d 30  |d\":\"e2745d7c-0|
              00000090  33 36 32 2d 34 32 37 36  2d 39 36 63 33 2d 64 65  |362-4276-96c3-de|
              000000a0  65 36 66 31 38 65 62 35  65 31 5c 22 7d 22 3a 7b  |e6f18eb5e1\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-msrsl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-msrsl",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "nok4chie7ate-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221992,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 14:59:53.114: INFO: Pod "webserver-deployment-557759b7c7-dn2fq" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-dn2fq",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1746",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f4b202db-6ac1-4716-9354-f0b7cb8e6b6c",
      ResourceVersion: (string) (len=5) "60993",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849221992,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "e2745d7c-0362-4276-96c3-dee6f18eb5e1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221992,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 32  37 34 35 64 37 63 2d 30  |d\":\"e2745d7c-0|
              00000090  33 36 32 2d 34 32 37 36  2d 39 36 63 33 2d 64 65  |362-4276-96c3-de|
              000000a0  65 36 66 31 38 65 62 35  65 31 5c 22 7d 22 3a 7b  |e6f18eb5e1\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221992,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-g7n8p",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-g7n8p",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "nok4chie7ate-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221992,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221992,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221992,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221992,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221992,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "192.168.121.8",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "192.168.121.8"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849221992,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 14:59:53.119: INFO: Pod "webserver-deployment-557759b7c7-gt6mw" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-gt6mw",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1746",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6d002bda-0771-4471-8690-b42bd57a8376",
      ResourceVersion: (string) (len=5) "60989",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849221992,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "e2745d7c-0362-4276-96c3-dee6f18eb5e1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221992,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 32  37 34 35 64 37 63 2d 30  |d\":\"e2745d7c-0|
              00000090  33 36 32 2d 34 32 37 36  2d 39 36 63 33 2d 64 65  |362-4276-96c3-de|
              000000a0  65 36 66 31 38 65 62 35  65 31 5c 22 7d 22 3a 7b  |e6f18eb5e1\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-w6c9p",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-w6c9p",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "nok4chie7ate-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221992,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 14:59:53.121: INFO: Pod "webserver-deployment-557759b7c7-hv6lq" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-hv6lq",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1746",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c88c4e09-8cd7-4ac8-be71-0729832bd116",
      ResourceVersion: (string) (len=5) "60977",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849221992,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "e2745d7c-0362-4276-96c3-dee6f18eb5e1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221992,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 32  37 34 35 64 37 63 2d 30  |d\":\"e2745d7c-0|
              00000090  33 36 32 2d 34 32 37 36  2d 39 36 63 33 2d 64 65  |362-4276-96c3-de|
              000000a0  65 36 66 31 38 65 62 35  65 31 5c 22 7d 22 3a 7b  |e6f18eb5e1\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-c2b86",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-c2b86",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 14:59:53.128: INFO: Pod "webserver-deployment-557759b7c7-n98wx" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-n98wx",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1746",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ab4960c6-30cb-4e71-94cf-7699a2e36769",
      ResourceVersion: (string) (len=5) "60890",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849221988,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "e2745d7c-0362-4276-96c3-dee6f18eb5e1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221988,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 32  37 34 35 64 37 63 2d 30  |d\":\"e2745d7c-0|
              00000090  33 36 32 2d 34 32 37 36  2d 39 36 63 33 2d 64 65  |362-4276-96c3-de|
              000000a0  65 36 66 31 38 65 62 35  65 31 5c 22 7d 22 3a 7b  |e6f18eb5e1\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221990,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 36 2e  31 35 33 5c 22 7d 22 3a  |.233.66.153\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-56qkt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-56qkt",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "nok4chie7ate-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221990,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221988,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221990,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221990,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221988,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "192.168.121.8",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "192.168.121.8"
        }
      },
      PodIP: (string) (len=13) "10.233.66.153",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.66.153"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849221988,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849221990,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://da904e95773d4ed15d3a1bd736b73230c7fc50f43c95add5f7700a561cfea531",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 14:59:53.138: INFO: Pod "webserver-deployment-557759b7c7-nh7b8" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-nh7b8",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1746",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2c46aab2-9bd8-4acc-ab72-d11833c69366",
      ResourceVersion: (string) (len=5) "60867",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849221988,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "e2745d7c-0362-4276-96c3-dee6f18eb5e1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221988,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 32  37 34 35 64 37 63 2d 30  |d\":\"e2745d7c-0|
              00000090  33 36 32 2d 34 32 37 36  2d 39 36 63 33 2d 64 65  |362-4276-96c3-de|
              000000a0  65 36 66 31 38 65 62 35  65 31 5c 22 7d 22 3a 7b  |e6f18eb5e1\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221990,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 35 2e  31 32 32 5c 22 7d 22 3a  |.233.65.122\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bg29w",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bg29w",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "nok4chie7ate-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221990,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221988,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221990,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221990,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221988,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.193",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.193"
        }
      },
      PodIP: (string) (len=13) "10.233.65.122",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.65.122"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849221988,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849221989,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://521fae0e048a6326f75678458ffa9b6d816bfc627999ec976b6820eaf11639bf",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 14:59:53.146: INFO: Pod "webserver-deployment-557759b7c7-nkkmq" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-nkkmq",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1746",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ebd677a5-4102-46a9-9c96-d6e92db6e16a",
      ResourceVersion: (string) (len=5) "60872",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849221988,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "e2745d7c-0362-4276-96c3-dee6f18eb5e1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221988,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 32  37 34 35 64 37 63 2d 30  |d\":\"e2745d7c-0|
              00000090  33 36 32 2d 34 32 37 36  2d 39 36 63 33 2d 64 65  |362-4276-96c3-de|
              000000a0  65 36 66 31 38 65 62 35  65 31 5c 22 7d 22 3a 7b  |e6f18eb5e1\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221990,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 34 2e  31 34 32 5c 22 7d 22 3a  |.233.64.142\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-m92h7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-m92h7",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "nok4chie7ate-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221990,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221988,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221990,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221990,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221988,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.235",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.235"
        }
      },
      PodIP: (string) (len=13) "10.233.64.142",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.64.142"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849221988,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849221990,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://9579110c041d52d7cfd094ef3ba95eb5a2b1b4af61a2453290e2393c2ef8d0d1",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 14:59:53.151: INFO: Pod "webserver-deployment-557759b7c7-rhk2n" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-rhk2n",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1746",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a4370775-5d99-40d6-a641-0868fdac7099",
      ResourceVersion: (string) (len=5) "60882",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849221988,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "e2745d7c-0362-4276-96c3-dee6f18eb5e1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221988,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 32  37 34 35 64 37 63 2d 30  |d\":\"e2745d7c-0|
              00000090  33 36 32 2d 34 32 37 36  2d 39 36 63 33 2d 64 65  |362-4276-96c3-de|
              000000a0  65 36 66 31 38 65 62 35  65 31 5c 22 7d 22 3a 7b  |e6f18eb5e1\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221990,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 34 2e  31 34 30 5c 22 7d 22 3a  |.233.64.140\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9v9fh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9v9fh",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "nok4chie7ate-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221990,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221988,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221990,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221990,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221988,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.235",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.235"
        }
      },
      PodIP: (string) (len=13) "10.233.64.140",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.64.140"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849221988,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849221989,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://a25da502139d5bfa5c3d04d63f9be57978fd5d888cc11f90d56460d99fa3a0b1",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 14:59:53.165: INFO: Pod "webserver-deployment-557759b7c7-vxx4m" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-vxx4m",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1746",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4b80ea89-6ac7-47bf-9e0c-0111ddc9fff7",
      ResourceVersion: (string) (len=5) "60878",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849221988,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "e2745d7c-0362-4276-96c3-dee6f18eb5e1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221988,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 32  37 34 35 64 37 63 2d 30  |d\":\"e2745d7c-0|
              00000090  33 36 32 2d 34 32 37 36  2d 39 36 63 33 2d 64 65  |362-4276-96c3-de|
              000000a0  65 36 66 31 38 65 62 35  65 31 5c 22 7d 22 3a 7b  |e6f18eb5e1\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221990,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 34 2e  31 34 31 5c 22 7d 22 3a  |.233.64.141\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lr7pm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lr7pm",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "nok4chie7ate-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221990,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221988,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221990,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221990,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221988,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.235",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.235"
        }
      },
      PodIP: (string) (len=13) "10.233.64.141",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.64.141"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849221988,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849221990,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://f8d088ce6b1d31df2a43f6a30ab614152fb623617966fa7496cf09678a947407",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 14:59:53.177: INFO: Pod "webserver-deployment-557759b7c7-wpnwf" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-wpnwf",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1746",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e4d454a7-83b1-4e9a-887c-8b65919dcef6",
      ResourceVersion: (string) (len=5) "60979",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849221992,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "e2745d7c-0362-4276-96c3-dee6f18eb5e1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221992,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 32  37 34 35 64 37 63 2d 30  |d\":\"e2745d7c-0|
              00000090  33 36 32 2d 34 32 37 36  2d 39 36 63 33 2d 64 65  |362-4276-96c3-de|
              000000a0  65 36 66 31 38 65 62 35  65 31 5c 22 7d 22 3a 7b  |e6f18eb5e1\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221992,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-n7mct",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-n7mct",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "nok4chie7ate-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221992,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221992,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221992,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221992,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221992,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "192.168.121.8",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "192.168.121.8"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849221992,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 14:59:53.187: INFO: Pod "webserver-deployment-557759b7c7-xq6lj" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-xq6lj",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1746",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "12696830-7774-4778-93d7-5a738c79efe4",
      ResourceVersion: (string) (len=5) "60870",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849221988,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "e2745d7c-0362-4276-96c3-dee6f18eb5e1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221988,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 32  37 34 35 64 37 63 2d 30  |d\":\"e2745d7c-0|
              00000090  33 36 32 2d 34 32 37 36  2d 39 36 63 33 2d 64 65  |362-4276-96c3-de|
              000000a0  65 36 66 31 38 65 62 35  65 31 5c 22 7d 22 3a 7b  |e6f18eb5e1\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221990,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 35 2e  31 32 30 5c 22 7d 22 3a  |.233.65.120\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tnbkg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tnbkg",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "nok4chie7ate-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221990,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221988,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221990,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221990,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221988,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.193",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.193"
        }
      },
      PodIP: (string) (len=13) "10.233.65.120",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.65.120"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849221988,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849221989,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://d954d05885b9a47de80c91c1bcca99dd7476986425d2ae594950bc940ce8ac53",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  E0420 14:59:53.188366      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 14:59:53.195: INFO: Pod "webserver-deployment-9b4f5bf69-7zz7q" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-7zz7q",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-1746",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "08a2a95e-400f-4fa3-9335-a0becdd8ea6f",
      ResourceVersion: (string) (len=5) "60987",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849221992,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "a27ac0ff-d5d5-4f19-92ea-492ed211214e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221992,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 32  37 61 63 30 66 66 2d 64  |d\":\"a27ac0ff-d|
              00000090  35 64 35 2d 34 66 31 39  2d 39 32 65 61 2d 34 39  |5d5-4f19-92ea-49|
              000000a0  32 65 64 32 31 31 32 31  34 65 5c 22 7d 22 3a 7b  |2ed211214e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6hcw7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6hcw7",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 14:59:53.200: INFO: Pod "webserver-deployment-9b4f5bf69-bfpf4" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-bfpf4",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-1746",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1c067086-8368-4439-aedf-2fe9f9876cb6",
      ResourceVersion: (string) (len=5) "60940",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849221991,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "a27ac0ff-d5d5-4f19-92ea-492ed211214e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221991,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 32  37 61 63 30 66 66 2d 64  |d\":\"a27ac0ff-d|
              00000090  35 64 35 2d 34 66 31 39  2d 39 32 65 61 2d 34 39  |5d5-4f19-92ea-49|
              000000a0  32 65 64 32 31 31 32 31  34 65 5c 22 7d 22 3a 7b  |2ed211214e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221991,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-sx8sf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-sx8sf",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "nok4chie7ate-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221991,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221991,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221991,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221991,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221991,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "192.168.121.8",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "192.168.121.8"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849221991,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 14:59:53.213: INFO: Pod "webserver-deployment-9b4f5bf69-blcnl" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-blcnl",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-1746",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2a90de46-c971-49ff-b8bb-57a21df25a98",
      ResourceVersion: (string) (len=5) "60986",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849221992,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "a27ac0ff-d5d5-4f19-92ea-492ed211214e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221992,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 32  37 61 63 30 66 66 2d 64  |d\":\"a27ac0ff-d|
              00000090  35 64 35 2d 34 66 31 39  2d 39 32 65 61 2d 34 39  |5d5-4f19-92ea-49|
              000000a0  32 65 64 32 31 31 32 31  34 65 5c 22 7d 22 3a 7b  |2ed211214e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221992,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rlt6d",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rlt6d",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "nok4chie7ate-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221992,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221992,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221992,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221992,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221992,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.193",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.193"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849221992,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 14:59:53.222: INFO: Pod "webserver-deployment-9b4f5bf69-hx22l" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-hx22l",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-1746",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7d17d2a3-f2a8-4088-9c21-5c6306ac0b3f",
      ResourceVersion: (string) (len=5) "60983",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849221992,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "a27ac0ff-d5d5-4f19-92ea-492ed211214e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221992,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 32  37 61 63 30 66 66 2d 64  |d\":\"a27ac0ff-d|
              00000090  35 64 35 2d 34 66 31 39  2d 39 32 65 61 2d 34 39  |5d5-4f19-92ea-49|
              000000a0  32 65 64 32 31 31 32 31  34 65 5c 22 7d 22 3a 7b  |2ed211214e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bgw9h",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bgw9h",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 14:59:53.231: INFO: Pod "webserver-deployment-9b4f5bf69-jx92h" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-jx92h",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-1746",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8c9322a0-fc3b-42a1-b13f-b6f116754403",
      ResourceVersion: (string) (len=5) "60984",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849221992,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "a27ac0ff-d5d5-4f19-92ea-492ed211214e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221992,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 32  37 61 63 30 66 66 2d 64  |d\":\"a27ac0ff-d|
              00000090  35 64 35 2d 34 66 31 39  2d 39 32 65 61 2d 34 39  |5d5-4f19-92ea-49|
              000000a0  32 65 64 32 31 31 32 31  34 65 5c 22 7d 22 3a 7b  |2ed211214e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9sgqv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9sgqv",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "nok4chie7ate-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221992,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 14:59:53.237: INFO: Pod "webserver-deployment-9b4f5bf69-kg6gz" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-kg6gz",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-1746",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0d694a0e-ddd3-4e3c-945d-e4d1f803bc14",
      ResourceVersion: (string) (len=5) "60943",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849221991,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "a27ac0ff-d5d5-4f19-92ea-492ed211214e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221991,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 32  37 61 63 30 66 66 2d 64  |d\":\"a27ac0ff-d|
              00000090  35 64 35 2d 34 66 31 39  2d 39 32 65 61 2d 34 39  |5d5-4f19-92ea-49|
              000000a0  32 65 64 32 31 31 32 31  34 65 5c 22 7d 22 3a 7b  |2ed211214e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221991,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rjstj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rjstj",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "nok4chie7ate-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221991,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221991,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221991,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221991,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221991,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.235",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.235"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849221991,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 14:59:53.246: INFO: Pod "webserver-deployment-9b4f5bf69-l98cq" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-l98cq",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-1746",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4f40c73d-0318-4654-b6ac-a04fdb8d3fe6",
      ResourceVersion: (string) (len=5) "60985",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849221992,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "a27ac0ff-d5d5-4f19-92ea-492ed211214e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221992,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 32  37 61 63 30 66 66 2d 64  |d\":\"a27ac0ff-d|
              00000090  35 64 35 2d 34 66 31 39  2d 39 32 65 61 2d 34 39  |5d5-4f19-92ea-49|
              000000a0  32 65 64 32 31 31 32 31  34 65 5c 22 7d 22 3a 7b  |2ed211214e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8lp94",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8lp94",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "nok4chie7ate-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221992,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 14:59:53.257: INFO: Pod "webserver-deployment-9b4f5bf69-s8cl7" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-s8cl7",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-1746",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "179cfb9c-aa3e-4eb0-b516-c954fd3978c0",
      ResourceVersion: (string) (len=5) "60988",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849221992,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "a27ac0ff-d5d5-4f19-92ea-492ed211214e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221992,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 32  37 61 63 30 66 66 2d 64  |d\":\"a27ac0ff-d|
              00000090  35 64 35 2d 34 66 31 39  2d 39 32 65 61 2d 34 39  |5d5-4f19-92ea-49|
              000000a0  32 65 64 32 31 31 32 31  34 65 5c 22 7d 22 3a 7b  |2ed211214e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mvch8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mvch8",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 14:59:53.270: INFO: Pod "webserver-deployment-9b4f5bf69-tkf5r" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-tkf5r",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-1746",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cbf8df54-ea5c-4f04-9f0f-ed152a198369",
      ResourceVersion: (string) (len=5) "60908",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849221990,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "a27ac0ff-d5d5-4f19-92ea-492ed211214e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221990,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 32  37 61 63 30 66 66 2d 64  |d\":\"a27ac0ff-d|
              00000090  35 64 35 2d 34 66 31 39  2d 39 32 65 61 2d 34 39  |5d5-4f19-92ea-49|
              000000a0  32 65 64 32 31 31 32 31  34 65 5c 22 7d 22 3a 7b  |2ed211214e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221990,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vwrgl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vwrgl",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "nok4chie7ate-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221990,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221990,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221990,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221990,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221990,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "192.168.121.8",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "192.168.121.8"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849221990,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 14:59:53.284: INFO: Pod "webserver-deployment-9b4f5bf69-xc96h" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-xc96h",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-1746",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c7c4ca85-5fb7-476c-affa-1fecca228a91",
      ResourceVersion: (string) (len=5) "60990",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849221992,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "a27ac0ff-d5d5-4f19-92ea-492ed211214e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221992,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 32  37 61 63 30 66 66 2d 64  |d\":\"a27ac0ff-d|
              00000090  35 64 35 2d 34 66 31 39  2d 39 32 65 61 2d 34 39  |5d5-4f19-92ea-49|
              000000a0  32 65 64 32 31 31 32 31  34 65 5c 22 7d 22 3a 7b  |2ed211214e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gpt5h",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gpt5h",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 14:59:53.295: INFO: Pod "webserver-deployment-9b4f5bf69-xss8k" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-xss8k",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-1746",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1dcad4aa-d80f-4e60-87a6-09666b21597f",
      ResourceVersion: (string) (len=5) "60920",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849221990,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "a27ac0ff-d5d5-4f19-92ea-492ed211214e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221990,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 32  37 61 63 30 66 66 2d 64  |d\":\"a27ac0ff-d|
              00000090  35 64 35 2d 34 66 31 39  2d 39 32 65 61 2d 34 39  |5d5-4f19-92ea-49|
              000000a0  32 65 64 32 31 31 32 31  34 65 5c 22 7d 22 3a 7b  |2ed211214e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221990,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dtllp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dtllp",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "nok4chie7ate-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221990,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221990,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221990,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221990,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221990,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.235",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.235"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849221990,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 14:59:53.308: INFO: Pod "webserver-deployment-9b4f5bf69-xzbj7" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-xzbj7",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-1746",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "872f13b3-b593-4f24-b23b-222864c4bf08",
      ResourceVersion: (string) (len=5) "60921",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849221990,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "a27ac0ff-d5d5-4f19-92ea-492ed211214e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221990,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 32  37 61 63 30 66 66 2d 64  |d\":\"a27ac0ff-d|
              00000090  35 64 35 2d 34 66 31 39  2d 39 32 65 61 2d 34 39  |5d5-4f19-92ea-49|
              000000a0  32 65 64 32 31 31 32 31  34 65 5c 22 7d 22 3a 7b  |2ed211214e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221990,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5x4ld",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5x4ld",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "nok4chie7ate-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221990,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221990,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221990,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221990,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221990,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.193",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.193"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849221990,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 14:59:53.318: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1746" for this suite. @ 04/20/24 14:59:53.385
• [4.903 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:324
  STEP: Creating a kubernetes client @ 04/20/24 14:59:53.535
  Apr 20 14:59:53.535: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename cronjob @ 04/20/24 14:59:53.549
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:59:53.857
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:59:53.87
  STEP: Creating a cronjob @ 04/20/24 14:59:53.885
  STEP: creating @ 04/20/24 14:59:53.885
  STEP: getting @ 04/20/24 14:59:53.932
  STEP: listing @ 04/20/24 14:59:53.956
  STEP: watching @ 04/20/24 14:59:53.977
  Apr 20 14:59:53.977: INFO: starting watch
  STEP: cluster-wide listing @ 04/20/24 14:59:53.978
  STEP: cluster-wide watching @ 04/20/24 14:59:53.992
  Apr 20 14:59:53.992: INFO: starting watch
  STEP: patching @ 04/20/24 14:59:53.995
  STEP: updating @ 04/20/24 14:59:54.023
  Apr 20 14:59:54.084: INFO: waiting for watch events with expected annotations
  Apr 20 14:59:54.084: INFO: saw patched and updated annotations
  STEP: patching /status @ 04/20/24 14:59:54.085
  STEP: updating /status @ 04/20/24 14:59:54.116
  E0420 14:59:54.189413      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get /status @ 04/20/24 14:59:54.214
  STEP: deleting @ 04/20/24 14:59:54.261
  STEP: deleting a collection @ 04/20/24 14:59:54.37
  Apr 20 14:59:54.502: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-5129" for this suite. @ 04/20/24 14:59:54.543
• [1.063 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:305
  STEP: Creating a kubernetes client @ 04/20/24 14:59:54.599
  Apr 20 14:59:54.599: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename namespaces @ 04/20/24 14:59:54.607
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:59:54.696
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:59:54.705
  STEP: Read namespace status @ 04/20/24 14:59:54.717
  Apr 20 14:59:54.756: INFO: Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 04/20/24 14:59:54.756
  Apr 20 14:59:54.782: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 04/20/24 14:59:54.783
  Apr 20 14:59:54.827: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  Apr 20 14:59:54.827: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-9925" for this suite. @ 04/20/24 14:59:54.852
• [0.286 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:117
  STEP: Creating a kubernetes client @ 04/20/24 14:59:54.885
  Apr 20 14:59:54.885: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename dns @ 04/20/24 14:59:54.894
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:59:54.938
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:59:54.946
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-9413.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-9413.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
   @ 04/20/24 14:59:54.955
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-9413.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-9413.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 04/20/24 14:59:54.955
  STEP: creating a pod to probe /etc/hosts @ 04/20/24 14:59:54.955
  STEP: submitting the pod to kubernetes @ 04/20/24 14:59:54.955
  E0420 14:59:55.197343      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:59:56.192025      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 04/20/24 14:59:57.014
  STEP: looking for the results for each expected name from probers @ 04/20/24 14:59:57.023
  Apr 20 14:59:57.074: INFO: Unable to read jessie_hosts@dns-querier-1 from pod dns-9413/dns-test-4d8db477-a790-420d-9cb5-faa692855539: the server could not find the requested resource (get pods dns-test-4d8db477-a790-420d-9cb5-faa692855539)
  Apr 20 14:59:57.074: INFO: Lookups using dns-9413/dns-test-4d8db477-a790-420d-9cb5-faa692855539 failed for: [jessie_hosts@dns-querier-1]

  Apr 20 14:59:57.117: INFO: Pod client logs for webserver: 
  Apr 20 14:59:57.138: INFO: Pod client logs for querier: 
  Apr 20 14:59:57.156: INFO: Pod client logs for jessie-querier: 
  E0420 14:59:57.192951      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:59:58.193460      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:59:59.193983      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:00:00.195089      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:00:01.197381      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:00:02.095: INFO: Unable to read jessie_hosts@dns-querier-1 from pod dns-9413/dns-test-4d8db477-a790-420d-9cb5-faa692855539: the server could not find the requested resource (get pods dns-test-4d8db477-a790-420d-9cb5-faa692855539)
  Apr 20 15:00:02.095: INFO: Lookups using dns-9413/dns-test-4d8db477-a790-420d-9cb5-faa692855539 failed for: [jessie_hosts@dns-querier-1]

  Apr 20 15:00:02.117: INFO: Pod client logs for webserver: 
  Apr 20 15:00:02.136: INFO: Pod client logs for querier: 
  Apr 20 15:00:02.171: INFO: Pod client logs for jessie-querier: 
  E0420 15:00:02.197146      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:00:03.198110      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:00:04.198889      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:00:05.200468      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:00:06.200333      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:00:07.063: INFO: DNS probes using dns-9413/dns-test-4d8db477-a790-420d-9cb5-faa692855539 succeeded

  STEP: deleting the pod @ 04/20/24 15:00:07.065
  Apr 20 15:00:07.104: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9413" for this suite. @ 04/20/24 15:00:07.122
• [12.251 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 04/20/24 15:00:07.137
  Apr 20 15:00:07.137: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename events @ 04/20/24 15:00:07.15
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:00:07.187
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:00:07.192
  STEP: creating a test event @ 04/20/24 15:00:07.197
  E0420 15:00:07.200334      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: listing events in all namespaces @ 04/20/24 15:00:07.206
  STEP: listing events in test namespace @ 04/20/24 15:00:07.245
  STEP: listing events with field selection filtering on source @ 04/20/24 15:00:07.251
  STEP: listing events with field selection filtering on reportingController @ 04/20/24 15:00:07.256
  STEP: getting the test event @ 04/20/24 15:00:07.261
  STEP: patching the test event @ 04/20/24 15:00:07.265
  STEP: getting the test event @ 04/20/24 15:00:07.278
  STEP: updating the test event @ 04/20/24 15:00:07.283
  STEP: getting the test event @ 04/20/24 15:00:07.294
  STEP: deleting the test event @ 04/20/24 15:00:07.297
  STEP: listing events in all namespaces @ 04/20/24 15:00:07.308
  STEP: listing events in test namespace @ 04/20/24 15:00:07.385
  Apr 20 15:00:07.391: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-6686" for this suite. @ 04/20/24 15:00:07.406
• [0.290 seconds]
------------------------------
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3565
  STEP: Creating a kubernetes client @ 04/20/24 15:00:07.427
  Apr 20 15:00:07.427: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename services @ 04/20/24 15:00:07.429
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:00:07.467
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:00:07.472
  STEP: creating a collection of services @ 04/20/24 15:00:07.478
  Apr 20 15:00:07.478: INFO: Creating e2e-svc-a-qsg5w
  Apr 20 15:00:07.507: INFO: Creating e2e-svc-b-kz58p
  Apr 20 15:00:07.532: INFO: Creating e2e-svc-c-bwkqc
  STEP: deleting service collection @ 04/20/24 15:00:07.555
  Apr 20 15:00:07.629: INFO: Collection of services has been deleted
  Apr 20 15:00:07.629: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3531" for this suite. @ 04/20/24 15:00:07.639
• [0.229 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:198
  STEP: Creating a kubernetes client @ 04/20/24 15:00:07.683
  Apr 20 15:00:07.683: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename container-probe @ 04/20/24 15:00:07.687
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:00:07.727
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:00:07.731
  STEP: Creating pod liveness-9d2c23ae-d20b-4ccb-8bf1-ba8fa8bc70d8 in namespace container-probe-4086 @ 04/20/24 15:00:07.738
  E0420 15:00:08.201181      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:00:09.201247      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/20/24 15:00:09.778
  Apr 20 15:00:09.789: INFO: Initial restart count of pod liveness-9d2c23ae-d20b-4ccb-8bf1-ba8fa8bc70d8 is 0
  Apr 20 15:00:09.798: INFO: Get pod liveness-9d2c23ae-d20b-4ccb-8bf1-ba8fa8bc70d8 in namespace container-probe-4086
  E0420 15:00:10.201993      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:00:11.202806      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:00:11.811: INFO: Get pod liveness-9d2c23ae-d20b-4ccb-8bf1-ba8fa8bc70d8 in namespace container-probe-4086
  E0420 15:00:12.203591      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:00:13.204023      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:00:13.820: INFO: Get pod liveness-9d2c23ae-d20b-4ccb-8bf1-ba8fa8bc70d8 in namespace container-probe-4086
  E0420 15:00:14.204872      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:00:15.204913      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:00:15.827: INFO: Get pod liveness-9d2c23ae-d20b-4ccb-8bf1-ba8fa8bc70d8 in namespace container-probe-4086
  E0420 15:00:16.205090      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:00:17.205815      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:00:17.835: INFO: Get pod liveness-9d2c23ae-d20b-4ccb-8bf1-ba8fa8bc70d8 in namespace container-probe-4086
  E0420 15:00:18.206083      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:00:19.206869      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:00:19.844: INFO: Get pod liveness-9d2c23ae-d20b-4ccb-8bf1-ba8fa8bc70d8 in namespace container-probe-4086
  E0420 15:00:20.207212      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:00:21.207827      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:00:21.852: INFO: Get pod liveness-9d2c23ae-d20b-4ccb-8bf1-ba8fa8bc70d8 in namespace container-probe-4086
  E0420 15:00:22.208515      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:00:23.208893      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:00:23.862: INFO: Get pod liveness-9d2c23ae-d20b-4ccb-8bf1-ba8fa8bc70d8 in namespace container-probe-4086
  E0420 15:00:24.209848      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:00:25.210364      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:00:25.872: INFO: Get pod liveness-9d2c23ae-d20b-4ccb-8bf1-ba8fa8bc70d8 in namespace container-probe-4086
  E0420 15:00:26.211299      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:00:27.212301      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:00:27.882: INFO: Get pod liveness-9d2c23ae-d20b-4ccb-8bf1-ba8fa8bc70d8 in namespace container-probe-4086
  E0420 15:00:28.212611      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:00:29.212913      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:00:29.892: INFO: Get pod liveness-9d2c23ae-d20b-4ccb-8bf1-ba8fa8bc70d8 in namespace container-probe-4086
  Apr 20 15:00:29.892: INFO: Restart count of pod container-probe-4086/liveness-9d2c23ae-d20b-4ccb-8bf1-ba8fa8bc70d8 is now 1 (20.103114347s elapsed)
  E0420 15:00:30.213353      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:00:31.214256      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:00:31.903: INFO: Get pod liveness-9d2c23ae-d20b-4ccb-8bf1-ba8fa8bc70d8 in namespace container-probe-4086
  E0420 15:00:32.215127      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:00:33.215316      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:00:33.914: INFO: Get pod liveness-9d2c23ae-d20b-4ccb-8bf1-ba8fa8bc70d8 in namespace container-probe-4086
  E0420 15:00:34.215877      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:00:35.216941      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:00:35.920: INFO: Get pod liveness-9d2c23ae-d20b-4ccb-8bf1-ba8fa8bc70d8 in namespace container-probe-4086
  E0420 15:00:36.217143      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:00:37.217332      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:00:37.928: INFO: Get pod liveness-9d2c23ae-d20b-4ccb-8bf1-ba8fa8bc70d8 in namespace container-probe-4086
  E0420 15:00:38.217995      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:00:39.218818      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:00:39.936: INFO: Get pod liveness-9d2c23ae-d20b-4ccb-8bf1-ba8fa8bc70d8 in namespace container-probe-4086
  E0420 15:00:40.219276      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:00:41.219519      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:00:41.949: INFO: Get pod liveness-9d2c23ae-d20b-4ccb-8bf1-ba8fa8bc70d8 in namespace container-probe-4086
  E0420 15:00:42.219796      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:00:43.220013      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:00:43.959: INFO: Get pod liveness-9d2c23ae-d20b-4ccb-8bf1-ba8fa8bc70d8 in namespace container-probe-4086
  E0420 15:00:44.220948      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:00:45.221895      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:00:45.966: INFO: Get pod liveness-9d2c23ae-d20b-4ccb-8bf1-ba8fa8bc70d8 in namespace container-probe-4086
  E0420 15:00:46.222703      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:00:47.222863      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:00:47.976: INFO: Get pod liveness-9d2c23ae-d20b-4ccb-8bf1-ba8fa8bc70d8 in namespace container-probe-4086
  E0420 15:00:48.225104      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:00:49.225491      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:00:49.985: INFO: Get pod liveness-9d2c23ae-d20b-4ccb-8bf1-ba8fa8bc70d8 in namespace container-probe-4086
  Apr 20 15:00:49.985: INFO: Restart count of pod container-probe-4086/liveness-9d2c23ae-d20b-4ccb-8bf1-ba8fa8bc70d8 is now 2 (40.19614596s elapsed)
  E0420 15:00:50.227391      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:00:51.226153      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:00:51.994: INFO: Get pod liveness-9d2c23ae-d20b-4ccb-8bf1-ba8fa8bc70d8 in namespace container-probe-4086
  E0420 15:00:52.226515      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:00:53.227223      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:00:54.002: INFO: Get pod liveness-9d2c23ae-d20b-4ccb-8bf1-ba8fa8bc70d8 in namespace container-probe-4086
  E0420 15:00:54.227138      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:00:55.228297      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:00:56.010: INFO: Get pod liveness-9d2c23ae-d20b-4ccb-8bf1-ba8fa8bc70d8 in namespace container-probe-4086
  E0420 15:00:56.229311      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:00:57.231243      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:00:58.027: INFO: Get pod liveness-9d2c23ae-d20b-4ccb-8bf1-ba8fa8bc70d8 in namespace container-probe-4086
  E0420 15:00:58.231015      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:00:59.231184      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:01:00.035: INFO: Get pod liveness-9d2c23ae-d20b-4ccb-8bf1-ba8fa8bc70d8 in namespace container-probe-4086
  E0420 15:01:00.231421      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:01:01.232185      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:01:02.045: INFO: Get pod liveness-9d2c23ae-d20b-4ccb-8bf1-ba8fa8bc70d8 in namespace container-probe-4086
  E0420 15:01:02.233176      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:01:03.233861      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:01:04.058: INFO: Get pod liveness-9d2c23ae-d20b-4ccb-8bf1-ba8fa8bc70d8 in namespace container-probe-4086
  E0420 15:01:04.234800      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:01:05.235003      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:01:06.064: INFO: Get pod liveness-9d2c23ae-d20b-4ccb-8bf1-ba8fa8bc70d8 in namespace container-probe-4086
  E0420 15:01:06.235918      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:01:07.237224      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:01:08.074: INFO: Get pod liveness-9d2c23ae-d20b-4ccb-8bf1-ba8fa8bc70d8 in namespace container-probe-4086
  E0420 15:01:08.237741      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:01:09.237363      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:01:10.081: INFO: Get pod liveness-9d2c23ae-d20b-4ccb-8bf1-ba8fa8bc70d8 in namespace container-probe-4086
  Apr 20 15:01:10.081: INFO: Restart count of pod container-probe-4086/liveness-9d2c23ae-d20b-4ccb-8bf1-ba8fa8bc70d8 is now 3 (1m0.291622107s elapsed)
  E0420 15:01:10.237563      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:01:11.238378      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:01:12.089: INFO: Get pod liveness-9d2c23ae-d20b-4ccb-8bf1-ba8fa8bc70d8 in namespace container-probe-4086
  E0420 15:01:12.240739      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:01:13.241474      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:01:14.099: INFO: Get pod liveness-9d2c23ae-d20b-4ccb-8bf1-ba8fa8bc70d8 in namespace container-probe-4086
  E0420 15:01:14.241135      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:01:15.243231      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:01:16.111: INFO: Get pod liveness-9d2c23ae-d20b-4ccb-8bf1-ba8fa8bc70d8 in namespace container-probe-4086
  E0420 15:01:16.243582      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:01:17.243943      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:01:18.121: INFO: Get pod liveness-9d2c23ae-d20b-4ccb-8bf1-ba8fa8bc70d8 in namespace container-probe-4086
  E0420 15:01:18.244787      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:01:19.245040      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:01:20.133: INFO: Get pod liveness-9d2c23ae-d20b-4ccb-8bf1-ba8fa8bc70d8 in namespace container-probe-4086
  E0420 15:01:20.245891      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:01:21.246489      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:01:22.142: INFO: Get pod liveness-9d2c23ae-d20b-4ccb-8bf1-ba8fa8bc70d8 in namespace container-probe-4086
  E0420 15:01:22.247184      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:01:23.247945      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:01:24.152: INFO: Get pod liveness-9d2c23ae-d20b-4ccb-8bf1-ba8fa8bc70d8 in namespace container-probe-4086
  E0420 15:01:24.248837      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:01:25.250034      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:01:26.161: INFO: Get pod liveness-9d2c23ae-d20b-4ccb-8bf1-ba8fa8bc70d8 in namespace container-probe-4086
  E0420 15:01:26.250812      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:01:27.252482      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:01:28.173: INFO: Get pod liveness-9d2c23ae-d20b-4ccb-8bf1-ba8fa8bc70d8 in namespace container-probe-4086
  E0420 15:01:28.253895      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:01:29.252404      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:01:30.182: INFO: Get pod liveness-9d2c23ae-d20b-4ccb-8bf1-ba8fa8bc70d8 in namespace container-probe-4086
  Apr 20 15:01:30.182: INFO: Restart count of pod container-probe-4086/liveness-9d2c23ae-d20b-4ccb-8bf1-ba8fa8bc70d8 is now 4 (1m20.392526477s elapsed)
  E0420 15:01:30.253467      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:01:31.254016      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:01:32.193: INFO: Get pod liveness-9d2c23ae-d20b-4ccb-8bf1-ba8fa8bc70d8 in namespace container-probe-4086
  E0420 15:01:32.254486      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:01:33.255220      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:01:34.205: INFO: Get pod liveness-9d2c23ae-d20b-4ccb-8bf1-ba8fa8bc70d8 in namespace container-probe-4086
  E0420 15:01:34.256106      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:01:35.257287      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:01:36.215: INFO: Get pod liveness-9d2c23ae-d20b-4ccb-8bf1-ba8fa8bc70d8 in namespace container-probe-4086
  E0420 15:01:36.257490      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:01:37.258283      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:01:38.224: INFO: Get pod liveness-9d2c23ae-d20b-4ccb-8bf1-ba8fa8bc70d8 in namespace container-probe-4086
  E0420 15:01:38.259413      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:01:39.260291      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:01:40.234: INFO: Get pod liveness-9d2c23ae-d20b-4ccb-8bf1-ba8fa8bc70d8 in namespace container-probe-4086
  E0420 15:01:40.261113      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:01:41.261291      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:01:42.240: INFO: Get pod liveness-9d2c23ae-d20b-4ccb-8bf1-ba8fa8bc70d8 in namespace container-probe-4086
  E0420 15:01:42.262193      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:01:43.262816      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:01:44.250: INFO: Get pod liveness-9d2c23ae-d20b-4ccb-8bf1-ba8fa8bc70d8 in namespace container-probe-4086
  E0420 15:01:44.263719      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:01:45.264812      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:01:46.259: INFO: Get pod liveness-9d2c23ae-d20b-4ccb-8bf1-ba8fa8bc70d8 in namespace container-probe-4086
  E0420 15:01:46.265576      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:01:47.266111      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:01:48.266409      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:01:48.283: INFO: Get pod liveness-9d2c23ae-d20b-4ccb-8bf1-ba8fa8bc70d8 in namespace container-probe-4086
  E0420 15:01:49.266794      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:01:50.267983      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:01:50.294: INFO: Get pod liveness-9d2c23ae-d20b-4ccb-8bf1-ba8fa8bc70d8 in namespace container-probe-4086
  E0420 15:01:51.268233      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:01:52.268930      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:01:52.303: INFO: Get pod liveness-9d2c23ae-d20b-4ccb-8bf1-ba8fa8bc70d8 in namespace container-probe-4086
  E0420 15:01:53.269475      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:01:54.269999      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:01:54.313: INFO: Get pod liveness-9d2c23ae-d20b-4ccb-8bf1-ba8fa8bc70d8 in namespace container-probe-4086
  E0420 15:01:55.271049      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:01:56.271281      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:01:56.323: INFO: Get pod liveness-9d2c23ae-d20b-4ccb-8bf1-ba8fa8bc70d8 in namespace container-probe-4086
  E0420 15:01:57.271633      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:01:58.271608      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:01:58.332: INFO: Get pod liveness-9d2c23ae-d20b-4ccb-8bf1-ba8fa8bc70d8 in namespace container-probe-4086
  E0420 15:01:59.271943      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:02:00.272960      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:02:00.341: INFO: Get pod liveness-9d2c23ae-d20b-4ccb-8bf1-ba8fa8bc70d8 in namespace container-probe-4086
  E0420 15:02:01.273179      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:02:02.273782      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:02:02.349: INFO: Get pod liveness-9d2c23ae-d20b-4ccb-8bf1-ba8fa8bc70d8 in namespace container-probe-4086
  E0420 15:02:03.274173      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:02:04.274226      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:02:04.366: INFO: Get pod liveness-9d2c23ae-d20b-4ccb-8bf1-ba8fa8bc70d8 in namespace container-probe-4086
  E0420 15:02:05.274547      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:02:06.275146      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:02:06.374: INFO: Get pod liveness-9d2c23ae-d20b-4ccb-8bf1-ba8fa8bc70d8 in namespace container-probe-4086
  E0420 15:02:07.275817      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:02:08.278623      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:02:08.383: INFO: Get pod liveness-9d2c23ae-d20b-4ccb-8bf1-ba8fa8bc70d8 in namespace container-probe-4086
  E0420 15:02:09.276292      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:02:10.276991      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:02:10.391: INFO: Get pod liveness-9d2c23ae-d20b-4ccb-8bf1-ba8fa8bc70d8 in namespace container-probe-4086
  E0420 15:02:11.277276      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:02:12.278061      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:02:12.398: INFO: Get pod liveness-9d2c23ae-d20b-4ccb-8bf1-ba8fa8bc70d8 in namespace container-probe-4086
  E0420 15:02:13.278267      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:02:14.278620      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:02:14.405: INFO: Get pod liveness-9d2c23ae-d20b-4ccb-8bf1-ba8fa8bc70d8 in namespace container-probe-4086
  E0420 15:02:15.278884      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:02:16.279457      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:02:16.428: INFO: Get pod liveness-9d2c23ae-d20b-4ccb-8bf1-ba8fa8bc70d8 in namespace container-probe-4086
  E0420 15:02:17.279627      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:02:18.280481      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:02:18.438: INFO: Get pod liveness-9d2c23ae-d20b-4ccb-8bf1-ba8fa8bc70d8 in namespace container-probe-4086
  E0420 15:02:19.281463      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:02:20.281701      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:02:20.447: INFO: Get pod liveness-9d2c23ae-d20b-4ccb-8bf1-ba8fa8bc70d8 in namespace container-probe-4086
  E0420 15:02:21.282083      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:02:22.283066      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:02:22.455: INFO: Get pod liveness-9d2c23ae-d20b-4ccb-8bf1-ba8fa8bc70d8 in namespace container-probe-4086
  E0420 15:02:23.283415      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:02:24.283703      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:02:24.464: INFO: Get pod liveness-9d2c23ae-d20b-4ccb-8bf1-ba8fa8bc70d8 in namespace container-probe-4086
  E0420 15:02:25.284063      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:02:26.284596      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:02:26.474: INFO: Get pod liveness-9d2c23ae-d20b-4ccb-8bf1-ba8fa8bc70d8 in namespace container-probe-4086
  E0420 15:02:27.284933      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:02:28.285103      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:02:28.485: INFO: Get pod liveness-9d2c23ae-d20b-4ccb-8bf1-ba8fa8bc70d8 in namespace container-probe-4086
  E0420 15:02:29.286070      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:02:30.286336      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:02:30.493: INFO: Get pod liveness-9d2c23ae-d20b-4ccb-8bf1-ba8fa8bc70d8 in namespace container-probe-4086
  E0420 15:02:31.287295      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:02:32.287535      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:02:32.502: INFO: Get pod liveness-9d2c23ae-d20b-4ccb-8bf1-ba8fa8bc70d8 in namespace container-probe-4086
  E0420 15:02:33.288543      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:02:34.289204      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:02:34.511: INFO: Get pod liveness-9d2c23ae-d20b-4ccb-8bf1-ba8fa8bc70d8 in namespace container-probe-4086
  E0420 15:02:35.290707      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:02:36.290382      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:02:36.520: INFO: Get pod liveness-9d2c23ae-d20b-4ccb-8bf1-ba8fa8bc70d8 in namespace container-probe-4086
  E0420 15:02:37.290627      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:02:38.291074      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:02:38.531: INFO: Get pod liveness-9d2c23ae-d20b-4ccb-8bf1-ba8fa8bc70d8 in namespace container-probe-4086
  E0420 15:02:39.293011      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:02:40.293323      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:02:40.539: INFO: Get pod liveness-9d2c23ae-d20b-4ccb-8bf1-ba8fa8bc70d8 in namespace container-probe-4086
  Apr 20 15:02:40.539: INFO: Restart count of pod container-probe-4086/liveness-9d2c23ae-d20b-4ccb-8bf1-ba8fa8bc70d8 is now 5 (2m30.749299173s elapsed)
  STEP: deleting the pod @ 04/20/24 15:02:40.539
  Apr 20 15:02:40.568: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-4086" for this suite. @ 04/20/24 15:02:40.58
• [152.910 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:208
  STEP: Creating a kubernetes client @ 04/20/24 15:02:40.594
  Apr 20 15:02:40.594: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename endpointslice @ 04/20/24 15:02:40.599
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:02:40.632
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:02:40.637
  E0420 15:02:41.293726      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:02:42.309420      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:02:43.299304      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:02:44.299533      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:02:45.299820      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: referencing a single matching pod @ 04/20/24 15:02:45.851
  E0420 15:02:46.299936      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:02:47.300042      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:02:48.300886      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:02:49.301462      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:02:50.301749      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: referencing matching pods with named port @ 04/20/24 15:02:50.87
  E0420 15:02:51.302093      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:02:52.302226      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:02:53.302439      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:02:54.303116      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:02:55.303316      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 04/20/24 15:02:55.884
  E0420 15:02:56.304162      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:02:57.304547      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:02:58.305491      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:02:59.306195      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:03:00.306011      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: recreating EndpointSlices after they've been deleted @ 04/20/24 15:03:00.901
  Apr 20 15:03:00.960: INFO: EndpointSlice for Service endpointslice-5051/example-named-port not found
  E0420 15:03:01.307040      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:03:02.307108      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:03:03.307650      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:03:04.307514      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:03:05.307745      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:03:06.308317      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:03:07.308903      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:03:08.308787      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:03:09.309271      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:03:10.309385      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:03:10.971: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-5051" for this suite. @ 04/20/24 15:03:10.992
• [30.410 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:132
  STEP: Creating a kubernetes client @ 04/20/24 15:03:11.005
  Apr 20 15:03:11.005: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename replicaset @ 04/20/24 15:03:11.009
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:03:11.045
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:03:11.051
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 04/20/24 15:03:11.056
  E0420 15:03:11.309646      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:03:12.309837      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: When a replicaset with a matching selector is created @ 04/20/24 15:03:13.097
  STEP: Then the orphan pod is adopted @ 04/20/24 15:03:13.107
  E0420 15:03:13.310561      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: When the matched label of one of its pods change @ 04/20/24 15:03:14.123
  Apr 20 15:03:14.128: INFO: Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 04/20/24 15:03:14.152
  E0420 15:03:14.311449      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:03:15.170: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-825" for this suite. @ 04/20/24 15:03:15.181
• [4.190 seconds]
------------------------------
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 04/20/24 15:03:15.195
  Apr 20 15:03:15.195: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename svc-latency @ 04/20/24 15:03:15.2
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:03:15.23
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:03:15.24
  Apr 20 15:03:15.245: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-9079 @ 04/20/24 15:03:15.249
  I0420 15:03:15.266267      13 runners.go:197] Created replication controller with name: svc-latency-rc, namespace: svc-latency-9079, replica count: 1
  E0420 15:03:15.312703      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:03:16.313179      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:03:16.318585      13 runners.go:197] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E0420 15:03:17.313371      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:03:17.319814      13 runners.go:197] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Apr 20 15:03:17.454: INFO: Created: latency-svc-x65rj
  Apr 20 15:03:17.468: INFO: Got endpoints: latency-svc-x65rj [48.058008ms]
  Apr 20 15:03:17.500: INFO: Created: latency-svc-ml54v
  Apr 20 15:03:17.511: INFO: Got endpoints: latency-svc-ml54v [40.792191ms]
  Apr 20 15:03:17.561: INFO: Created: latency-svc-kczbr
  Apr 20 15:03:17.573: INFO: Got endpoints: latency-svc-kczbr [102.034075ms]
  Apr 20 15:03:17.583: INFO: Created: latency-svc-b2w54
  Apr 20 15:03:17.593: INFO: Got endpoints: latency-svc-b2w54 [122.32752ms]
  Apr 20 15:03:17.613: INFO: Created: latency-svc-pnhmn
  Apr 20 15:03:17.622: INFO: Got endpoints: latency-svc-pnhmn [147.483191ms]
  Apr 20 15:03:17.649: INFO: Created: latency-svc-fmxsd
  Apr 20 15:03:17.662: INFO: Created: latency-svc-rqwfq
  Apr 20 15:03:17.666: INFO: Got endpoints: latency-svc-fmxsd [189.986755ms]
  Apr 20 15:03:17.681: INFO: Created: latency-svc-ggjjw
  Apr 20 15:03:17.687: INFO: Got endpoints: latency-svc-rqwfq [211.885418ms]
  Apr 20 15:03:17.703: INFO: Created: latency-svc-d6hxd
  Apr 20 15:03:17.713: INFO: Created: latency-svc-qggwn
  Apr 20 15:03:17.717: INFO: Got endpoints: latency-svc-d6hxd [242.567822ms]
  Apr 20 15:03:17.718: INFO: Got endpoints: latency-svc-ggjjw [241.283349ms]
  Apr 20 15:03:17.738: INFO: Got endpoints: latency-svc-qggwn [263.020607ms]
  Apr 20 15:03:17.740: INFO: Created: latency-svc-d45nt
  Apr 20 15:03:17.763: INFO: Got endpoints: latency-svc-d45nt [285.858416ms]
  Apr 20 15:03:17.768: INFO: Created: latency-svc-2m7xh
  Apr 20 15:03:17.775: INFO: Got endpoints: latency-svc-2m7xh [297.404732ms]
  Apr 20 15:03:17.916: INFO: Created: latency-svc-2tx8q
  Apr 20 15:03:17.916: INFO: Created: latency-svc-zw5wh
  Apr 20 15:03:17.917: INFO: Created: latency-svc-2zmzh
  Apr 20 15:03:17.916: INFO: Created: latency-svc-tnsmw
  Apr 20 15:03:17.917: INFO: Created: latency-svc-kmdjm
  Apr 20 15:03:17.918: INFO: Created: latency-svc-hz8w2
  Apr 20 15:03:17.919: INFO: Created: latency-svc-48249
  Apr 20 15:03:17.921: INFO: Created: latency-svc-wfcx6
  Apr 20 15:03:17.922: INFO: Created: latency-svc-5z9k7
  Apr 20 15:03:17.922: INFO: Created: latency-svc-h7cs7
  Apr 20 15:03:17.922: INFO: Created: latency-svc-pf6r8
  Apr 20 15:03:17.928: INFO: Created: latency-svc-bjj89
  Apr 20 15:03:17.929: INFO: Created: latency-svc-ldlcp
  Apr 20 15:03:17.929: INFO: Created: latency-svc-fwwtw
  Apr 20 15:03:17.930: INFO: Created: latency-svc-4dpx2
  Apr 20 15:03:17.970: INFO: Got endpoints: latency-svc-48249 [492.786801ms]
  Apr 20 15:03:17.996: INFO: Got endpoints: latency-svc-pf6r8 [422.622073ms]
  Apr 20 15:03:17.996: INFO: Got endpoints: latency-svc-5z9k7 [278.302217ms]
  Apr 20 15:03:17.997: INFO: Got endpoints: latency-svc-wfcx6 [519.314984ms]
  Apr 20 15:03:17.997: INFO: Got endpoints: latency-svc-h7cs7 [330.238509ms]
  Apr 20 15:03:18.022: INFO: Got endpoints: latency-svc-zw5wh [509.830079ms]
  Apr 20 15:03:18.030: INFO: Got endpoints: latency-svc-tnsmw [343.156836ms]
  Apr 20 15:03:18.039: INFO: Got endpoints: latency-svc-kmdjm [301.008471ms]
  Apr 20 15:03:18.058: INFO: Created: latency-svc-xqt7p
  Apr 20 15:03:18.066: INFO: Got endpoints: latency-svc-4dpx2 [444.451487ms]
  Apr 20 15:03:18.067: INFO: Got endpoints: latency-svc-2tx8q [304.115959ms]
  Apr 20 15:03:18.068: INFO: Got endpoints: latency-svc-2zmzh [591.046518ms]
  Apr 20 15:03:18.084: INFO: Got endpoints: latency-svc-ldlcp [308.948166ms]
  Apr 20 15:03:18.085: INFO: Got endpoints: latency-svc-fwwtw [367.080825ms]
  Apr 20 15:03:18.098: INFO: Got endpoints: latency-svc-hz8w2 [620.0775ms]
  Apr 20 15:03:18.106: INFO: Got endpoints: latency-svc-bjj89 [512.648481ms]
  Apr 20 15:03:18.106: INFO: Got endpoints: latency-svc-xqt7p [136.538098ms]
  Apr 20 15:03:18.113: INFO: Created: latency-svc-kbz2h
  Apr 20 15:03:18.135: INFO: Created: latency-svc-jqgcq
  Apr 20 15:03:18.135: INFO: Got endpoints: latency-svc-kbz2h [139.109614ms]
  Apr 20 15:03:18.147: INFO: Created: latency-svc-fjfnt
  Apr 20 15:03:18.154: INFO: Got endpoints: latency-svc-jqgcq [156.921908ms]
  Apr 20 15:03:18.183: INFO: Created: latency-svc-hchjj
  Apr 20 15:03:18.186: INFO: Got endpoints: latency-svc-fjfnt [189.498087ms]
  Apr 20 15:03:18.203: INFO: Created: latency-svc-2qngx
  Apr 20 15:03:18.205: INFO: Got endpoints: latency-svc-hchjj [208.881924ms]
  Apr 20 15:03:18.222: INFO: Got endpoints: latency-svc-2qngx [199.962644ms]
  Apr 20 15:03:18.223: INFO: Created: latency-svc-6vb7v
  Apr 20 15:03:18.251: INFO: Created: latency-svc-ns6cz
  Apr 20 15:03:18.266: INFO: Got endpoints: latency-svc-6vb7v [236.018009ms]
  Apr 20 15:03:18.282: INFO: Got endpoints: latency-svc-ns6cz [242.669194ms]
  E0420 15:03:18.314806      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:03:18.316: INFO: Created: latency-svc-l8r6g
  Apr 20 15:03:18.325: INFO: Created: latency-svc-cvmsl
  Apr 20 15:03:18.334: INFO: Got endpoints: latency-svc-l8r6g [267.861495ms]
  Apr 20 15:03:18.350: INFO: Got endpoints: latency-svc-cvmsl [281.58085ms]
  Apr 20 15:03:18.354: INFO: Created: latency-svc-ph9cn
  Apr 20 15:03:18.367: INFO: Got endpoints: latency-svc-ph9cn [299.760259ms]
  Apr 20 15:03:18.385: INFO: Created: latency-svc-4kh5m
  Apr 20 15:03:18.415: INFO: Created: latency-svc-r4h7m
  Apr 20 15:03:18.415: INFO: Got endpoints: latency-svc-4kh5m [330.800359ms]
  Apr 20 15:03:18.418: INFO: Got endpoints: latency-svc-r4h7m [333.38818ms]
  Apr 20 15:03:18.431: INFO: Created: latency-svc-vrcd5
  Apr 20 15:03:18.436: INFO: Got endpoints: latency-svc-vrcd5 [329.975451ms]
  Apr 20 15:03:18.454: INFO: Created: latency-svc-pgzxl
  Apr 20 15:03:18.468: INFO: Got endpoints: latency-svc-pgzxl [361.224591ms]
  Apr 20 15:03:18.499: INFO: Created: latency-svc-m4gwd
  Apr 20 15:03:18.516: INFO: Got endpoints: latency-svc-m4gwd [417.694953ms]
  Apr 20 15:03:18.529: INFO: Created: latency-svc-8gmcx
  Apr 20 15:03:18.554: INFO: Created: latency-svc-zhljn
  Apr 20 15:03:18.557: INFO: Got endpoints: latency-svc-8gmcx [421.850818ms]
  Apr 20 15:03:18.581: INFO: Got endpoints: latency-svc-zhljn [427.374986ms]
  Apr 20 15:03:18.607: INFO: Created: latency-svc-9xdcr
  Apr 20 15:03:18.620: INFO: Created: latency-svc-pgs7x
  Apr 20 15:03:18.638: INFO: Got endpoints: latency-svc-9xdcr [451.705317ms]
  Apr 20 15:03:18.662: INFO: Created: latency-svc-lpzn7
  Apr 20 15:03:18.662: INFO: Got endpoints: latency-svc-pgs7x [456.514848ms]
  Apr 20 15:03:18.703: INFO: Got endpoints: latency-svc-lpzn7 [481.56811ms]
  Apr 20 15:03:18.712: INFO: Created: latency-svc-zbsn7
  Apr 20 15:03:18.753: INFO: Got endpoints: latency-svc-zbsn7 [486.822175ms]
  Apr 20 15:03:18.777: INFO: Created: latency-svc-gvpmz
  Apr 20 15:03:18.802: INFO: Got endpoints: latency-svc-gvpmz [519.685305ms]
  Apr 20 15:03:18.818: INFO: Created: latency-svc-ps2dm
  Apr 20 15:03:18.850: INFO: Created: latency-svc-hqqcj
  Apr 20 15:03:18.873: INFO: Got endpoints: latency-svc-ps2dm [538.283756ms]
  Apr 20 15:03:18.884: INFO: Created: latency-svc-qcwjp
  Apr 20 15:03:18.892: INFO: Got endpoints: latency-svc-hqqcj [542.83071ms]
  Apr 20 15:03:18.921: INFO: Got endpoints: latency-svc-qcwjp [553.185602ms]
  Apr 20 15:03:18.931: INFO: Created: latency-svc-nnxsd
  Apr 20 15:03:18.961: INFO: Got endpoints: latency-svc-nnxsd [545.419735ms]
  Apr 20 15:03:18.976: INFO: Created: latency-svc-2hccv
  Apr 20 15:03:18.990: INFO: Got endpoints: latency-svc-2hccv [572.045481ms]
  Apr 20 15:03:19.010: INFO: Created: latency-svc-rm46r
  Apr 20 15:03:19.014: INFO: Got endpoints: latency-svc-rm46r [578.021808ms]
  Apr 20 15:03:19.035: INFO: Created: latency-svc-4glw2
  Apr 20 15:03:19.052: INFO: Got endpoints: latency-svc-4glw2 [584.024982ms]
  Apr 20 15:03:19.063: INFO: Created: latency-svc-vdwtv
  Apr 20 15:03:19.065: INFO: Got endpoints: latency-svc-vdwtv [549.304058ms]
  Apr 20 15:03:19.078: INFO: Created: latency-svc-z9ktd
  Apr 20 15:03:19.090: INFO: Got endpoints: latency-svc-z9ktd [532.803466ms]
  Apr 20 15:03:19.097: INFO: Created: latency-svc-t4nj5
  Apr 20 15:03:19.113: INFO: Created: latency-svc-bfxdb
  Apr 20 15:03:19.114: INFO: Got endpoints: latency-svc-t4nj5 [532.431917ms]
  Apr 20 15:03:19.128: INFO: Got endpoints: latency-svc-bfxdb [490.116282ms]
  Apr 20 15:03:19.148: INFO: Created: latency-svc-vfvx6
  Apr 20 15:03:19.158: INFO: Got endpoints: latency-svc-vfvx6 [495.679899ms]
  Apr 20 15:03:19.175: INFO: Created: latency-svc-fk4zm
  Apr 20 15:03:19.193: INFO: Created: latency-svc-ns5rv
  Apr 20 15:03:19.200: INFO: Got endpoints: latency-svc-fk4zm [496.279208ms]
  Apr 20 15:03:19.213: INFO: Got endpoints: latency-svc-ns5rv [459.646127ms]
  Apr 20 15:03:19.215: INFO: Created: latency-svc-5ppzg
  Apr 20 15:03:19.233: INFO: Got endpoints: latency-svc-5ppzg [430.781363ms]
  Apr 20 15:03:19.236: INFO: Created: latency-svc-zt5fk
  Apr 20 15:03:19.254: INFO: Created: latency-svc-cqbm2
  Apr 20 15:03:19.267: INFO: Created: latency-svc-m5jgk
  Apr 20 15:03:19.282: INFO: Got endpoints: latency-svc-zt5fk [408.921753ms]
  Apr 20 15:03:19.289: INFO: Created: latency-svc-d69qb
  Apr 20 15:03:19.302: INFO: Created: latency-svc-l9d6q
  E0420 15:03:19.314490      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:03:19.344: INFO: Got endpoints: latency-svc-cqbm2 [451.382357ms]
  Apr 20 15:03:19.395: INFO: Got endpoints: latency-svc-m5jgk [474.5975ms]
  Apr 20 15:03:19.425: INFO: Got endpoints: latency-svc-d69qb [464.12209ms]
  Apr 20 15:03:19.454: INFO: Created: latency-svc-cfxmq
  Apr 20 15:03:19.463: INFO: Created: latency-svc-6cdcm
  Apr 20 15:03:19.470: INFO: Created: latency-svc-dc5lj
  Apr 20 15:03:19.471: INFO: Created: latency-svc-lwp76
  Apr 20 15:03:19.471: INFO: Created: latency-svc-nrj89
  Apr 20 15:03:19.472: INFO: Created: latency-svc-vlfv9
  Apr 20 15:03:19.472: INFO: Created: latency-svc-dhzz9
  Apr 20 15:03:19.472: INFO: Created: latency-svc-rw6ls
  Apr 20 15:03:19.472: INFO: Created: latency-svc-5zvpt
  Apr 20 15:03:19.473: INFO: Created: latency-svc-8cfmw
  Apr 20 15:03:19.487: INFO: Got endpoints: latency-svc-l9d6q [496.143787ms]
  Apr 20 15:03:19.495: INFO: Created: latency-svc-cdfwg
  Apr 20 15:03:19.497: INFO: Created: latency-svc-wgxns
  Apr 20 15:03:19.497: INFO: Created: latency-svc-bw858
  Apr 20 15:03:19.499: INFO: Created: latency-svc-wlmtx
  Apr 20 15:03:19.514: INFO: Created: latency-svc-r52wh
  Apr 20 15:03:19.521: INFO: Got endpoints: latency-svc-dhzz9 [407.182397ms]
  Apr 20 15:03:19.543: INFO: Created: latency-svc-c9z97
  Apr 20 15:03:19.568: INFO: Got endpoints: latency-svc-cfxmq [286.548697ms]
  Apr 20 15:03:19.604: INFO: Created: latency-svc-qvmsg
  Apr 20 15:03:19.620: INFO: Got endpoints: latency-svc-5zvpt [406.906952ms]
  Apr 20 15:03:19.645: INFO: Created: latency-svc-z92rf
  Apr 20 15:03:19.672: INFO: Got endpoints: latency-svc-vlfv9 [619.161327ms]
  Apr 20 15:03:19.692: INFO: Created: latency-svc-7ghzf
  Apr 20 15:03:19.717: INFO: Got endpoints: latency-svc-nrj89 [702.974189ms]
  Apr 20 15:03:19.743: INFO: Created: latency-svc-kh2jx
  Apr 20 15:03:19.770: INFO: Got endpoints: latency-svc-8cfmw [612.448356ms]
  Apr 20 15:03:19.799: INFO: Created: latency-svc-c22x7
  Apr 20 15:03:19.819: INFO: Got endpoints: latency-svc-lwp76 [690.990387ms]
  Apr 20 15:03:19.841: INFO: Created: latency-svc-l6l8l
  Apr 20 15:03:19.871: INFO: Got endpoints: latency-svc-rw6ls [671.012657ms]
  Apr 20 15:03:19.894: INFO: Created: latency-svc-m4654
  Apr 20 15:03:19.924: INFO: Got endpoints: latency-svc-dc5lj [858.421666ms]
  Apr 20 15:03:19.944: INFO: Created: latency-svc-ckfkk
  Apr 20 15:03:19.971: INFO: Got endpoints: latency-svc-6cdcm [880.907753ms]
  Apr 20 15:03:20.000: INFO: Created: latency-svc-g4n6w
  Apr 20 15:03:20.022: INFO: Got endpoints: latency-svc-wlmtx [625.933709ms]
  Apr 20 15:03:20.050: INFO: Created: latency-svc-j9nnk
  Apr 20 15:03:20.070: INFO: Got endpoints: latency-svc-wgxns [645.232696ms]
  Apr 20 15:03:20.098: INFO: Created: latency-svc-5sd7v
  Apr 20 15:03:20.117: INFO: Got endpoints: latency-svc-cdfwg [884.677532ms]
  Apr 20 15:03:20.157: INFO: Created: latency-svc-97hdt
  Apr 20 15:03:20.167: INFO: Got endpoints: latency-svc-bw858 [822.92669ms]
  Apr 20 15:03:20.205: INFO: Created: latency-svc-tjz6l
  Apr 20 15:03:20.227: INFO: Got endpoints: latency-svc-r52wh [740.079958ms]
  Apr 20 15:03:20.251: INFO: Created: latency-svc-p4l99
  Apr 20 15:03:20.275: INFO: Got endpoints: latency-svc-c9z97 [753.08016ms]
  Apr 20 15:03:20.313: INFO: Created: latency-svc-vgn82
  E0420 15:03:20.315436      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:03:20.330: INFO: Got endpoints: latency-svc-qvmsg [761.397048ms]
  Apr 20 15:03:20.361: INFO: Created: latency-svc-xfz8q
  Apr 20 15:03:20.382: INFO: Got endpoints: latency-svc-z92rf [761.799065ms]
  Apr 20 15:03:20.408: INFO: Created: latency-svc-9dh9m
  Apr 20 15:03:20.427: INFO: Got endpoints: latency-svc-7ghzf [754.930814ms]
  Apr 20 15:03:20.459: INFO: Created: latency-svc-gdrk2
  Apr 20 15:03:20.479: INFO: Got endpoints: latency-svc-kh2jx [761.507401ms]
  Apr 20 15:03:20.506: INFO: Created: latency-svc-gw5dl
  Apr 20 15:03:20.521: INFO: Got endpoints: latency-svc-c22x7 [750.410092ms]
  Apr 20 15:03:20.570: INFO: Created: latency-svc-cb4bb
  Apr 20 15:03:20.581: INFO: Got endpoints: latency-svc-l6l8l [761.015261ms]
  Apr 20 15:03:20.618: INFO: Created: latency-svc-jcxxm
  Apr 20 15:03:20.628: INFO: Got endpoints: latency-svc-m4654 [756.895762ms]
  Apr 20 15:03:20.657: INFO: Created: latency-svc-hnvjw
  Apr 20 15:03:20.677: INFO: Got endpoints: latency-svc-ckfkk [752.843011ms]
  Apr 20 15:03:20.711: INFO: Created: latency-svc-v4zcl
  Apr 20 15:03:20.725: INFO: Got endpoints: latency-svc-g4n6w [754.187541ms]
  Apr 20 15:03:20.763: INFO: Created: latency-svc-8vj94
  Apr 20 15:03:20.786: INFO: Got endpoints: latency-svc-j9nnk [763.24344ms]
  Apr 20 15:03:20.834: INFO: Got endpoints: latency-svc-5sd7v [763.78395ms]
  Apr 20 15:03:20.844: INFO: Created: latency-svc-bw9m5
  Apr 20 15:03:20.878: INFO: Created: latency-svc-tglwp
  Apr 20 15:03:20.883: INFO: Got endpoints: latency-svc-97hdt [764.429697ms]
  Apr 20 15:03:20.919: INFO: Created: latency-svc-dhhl7
  Apr 20 15:03:20.926: INFO: Got endpoints: latency-svc-tjz6l [758.661244ms]
  Apr 20 15:03:20.948: INFO: Created: latency-svc-wzz9c
  Apr 20 15:03:20.971: INFO: Got endpoints: latency-svc-p4l99 [744.002803ms]
  Apr 20 15:03:20.995: INFO: Created: latency-svc-rz4gm
  Apr 20 15:03:21.021: INFO: Got endpoints: latency-svc-vgn82 [746.297095ms]
  Apr 20 15:03:21.044: INFO: Created: latency-svc-nxwlf
  Apr 20 15:03:21.068: INFO: Got endpoints: latency-svc-xfz8q [737.985903ms]
  Apr 20 15:03:21.105: INFO: Created: latency-svc-jd8bf
  Apr 20 15:03:21.124: INFO: Got endpoints: latency-svc-9dh9m [742.877308ms]
  Apr 20 15:03:21.167: INFO: Created: latency-svc-gkqk7
  Apr 20 15:03:21.178: INFO: Got endpoints: latency-svc-gdrk2 [751.28ms]
  Apr 20 15:03:21.240: INFO: Got endpoints: latency-svc-gw5dl [761.415328ms]
  Apr 20 15:03:21.243: INFO: Created: latency-svc-vt8pv
  Apr 20 15:03:21.281: INFO: Created: latency-svc-2qhm7
  Apr 20 15:03:21.289: INFO: Got endpoints: latency-svc-cb4bb [767.451948ms]
  E0420 15:03:21.316131      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:03:21.317: INFO: Got endpoints: latency-svc-jcxxm [736.608566ms]
  Apr 20 15:03:21.318: INFO: Created: latency-svc-pgvs6
  Apr 20 15:03:21.350: INFO: Created: latency-svc-qzpxs
  Apr 20 15:03:21.378: INFO: Got endpoints: latency-svc-hnvjw [749.814778ms]
  Apr 20 15:03:21.405: INFO: Created: latency-svc-b9xgl
  Apr 20 15:03:21.426: INFO: Got endpoints: latency-svc-v4zcl [748.320307ms]
  Apr 20 15:03:21.485: INFO: Got endpoints: latency-svc-8vj94 [759.252188ms]
  Apr 20 15:03:21.495: INFO: Created: latency-svc-2sfr9
  Apr 20 15:03:21.508: INFO: Created: latency-svc-49fw5
  Apr 20 15:03:21.519: INFO: Got endpoints: latency-svc-bw9m5 [733.400928ms]
  Apr 20 15:03:21.544: INFO: Created: latency-svc-qhqml
  Apr 20 15:03:21.569: INFO: Got endpoints: latency-svc-tglwp [734.14446ms]
  Apr 20 15:03:21.597: INFO: Created: latency-svc-t2jkt
  Apr 20 15:03:21.622: INFO: Got endpoints: latency-svc-dhhl7 [739.45736ms]
  Apr 20 15:03:21.660: INFO: Created: latency-svc-v2rpj
  Apr 20 15:03:21.678: INFO: Got endpoints: latency-svc-wzz9c [752.50135ms]
  Apr 20 15:03:21.712: INFO: Created: latency-svc-8wg6t
  Apr 20 15:03:21.722: INFO: Got endpoints: latency-svc-rz4gm [750.622659ms]
  Apr 20 15:03:21.745: INFO: Created: latency-svc-68wbd
  Apr 20 15:03:21.771: INFO: Got endpoints: latency-svc-nxwlf [749.215275ms]
  Apr 20 15:03:21.805: INFO: Created: latency-svc-b8bv2
  Apr 20 15:03:21.826: INFO: Got endpoints: latency-svc-jd8bf [757.621964ms]
  Apr 20 15:03:21.869: INFO: Created: latency-svc-7xxwl
  Apr 20 15:03:21.875: INFO: Got endpoints: latency-svc-gkqk7 [750.31156ms]
  Apr 20 15:03:21.913: INFO: Created: latency-svc-26tgv
  Apr 20 15:03:21.936: INFO: Got endpoints: latency-svc-vt8pv [756.697772ms]
  Apr 20 15:03:21.995: INFO: Got endpoints: latency-svc-2qhm7 [754.079743ms]
  Apr 20 15:03:22.001: INFO: Created: latency-svc-t464v
  Apr 20 15:03:22.022: INFO: Got endpoints: latency-svc-pgvs6 [733.461452ms]
  Apr 20 15:03:22.033: INFO: Created: latency-svc-wvzcd
  Apr 20 15:03:22.051: INFO: Created: latency-svc-ms44k
  Apr 20 15:03:22.072: INFO: Got endpoints: latency-svc-qzpxs [754.667907ms]
  Apr 20 15:03:22.119: INFO: Created: latency-svc-h9kcb
  Apr 20 15:03:22.128: INFO: Got endpoints: latency-svc-b9xgl [749.412414ms]
  Apr 20 15:03:22.181: INFO: Created: latency-svc-x4nx5
  Apr 20 15:03:22.188: INFO: Got endpoints: latency-svc-2sfr9 [762.567779ms]
  Apr 20 15:03:22.231: INFO: Got endpoints: latency-svc-49fw5 [746.773785ms]
  Apr 20 15:03:22.232: INFO: Created: latency-svc-xzh8s
  Apr 20 15:03:22.280: INFO: Created: latency-svc-msf5z
  Apr 20 15:03:22.295: INFO: Got endpoints: latency-svc-qhqml [775.855314ms]
  E0420 15:03:22.316266      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:03:22.329: INFO: Got endpoints: latency-svc-t2jkt [760.826993ms]
  Apr 20 15:03:22.361: INFO: Created: latency-svc-fcxjg
  Apr 20 15:03:22.384: INFO: Created: latency-svc-8dfvw
  Apr 20 15:03:22.393: INFO: Got endpoints: latency-svc-v2rpj [768.471817ms]
  Apr 20 15:03:22.445: INFO: Got endpoints: latency-svc-8wg6t [766.297159ms]
  Apr 20 15:03:22.446: INFO: Created: latency-svc-kvcqw
  Apr 20 15:03:22.472: INFO: Created: latency-svc-q6w82
  Apr 20 15:03:22.477: INFO: Got endpoints: latency-svc-68wbd [755.112045ms]
  Apr 20 15:03:22.510: INFO: Created: latency-svc-9nrwl
  Apr 20 15:03:22.528: INFO: Got endpoints: latency-svc-b8bv2 [757.368762ms]
  Apr 20 15:03:22.570: INFO: Created: latency-svc-plv67
  Apr 20 15:03:22.577: INFO: Got endpoints: latency-svc-7xxwl [751.105462ms]
  Apr 20 15:03:22.606: INFO: Created: latency-svc-mlhj4
  Apr 20 15:03:22.627: INFO: Got endpoints: latency-svc-26tgv [751.562514ms]
  Apr 20 15:03:22.649: INFO: Created: latency-svc-2wsnx
  Apr 20 15:03:22.675: INFO: Got endpoints: latency-svc-t464v [738.652668ms]
  Apr 20 15:03:22.707: INFO: Created: latency-svc-hv9cq
  Apr 20 15:03:22.729: INFO: Got endpoints: latency-svc-wvzcd [734.131266ms]
  Apr 20 15:03:22.750: INFO: Created: latency-svc-9v2ns
  Apr 20 15:03:22.773: INFO: Got endpoints: latency-svc-ms44k [750.984216ms]
  Apr 20 15:03:22.813: INFO: Created: latency-svc-b2bjf
  Apr 20 15:03:22.826: INFO: Got endpoints: latency-svc-h9kcb [753.189336ms]
  Apr 20 15:03:22.851: INFO: Created: latency-svc-grm62
  Apr 20 15:03:22.867: INFO: Got endpoints: latency-svc-x4nx5 [737.768491ms]
  Apr 20 15:03:22.893: INFO: Created: latency-svc-whngc
  Apr 20 15:03:22.922: INFO: Got endpoints: latency-svc-xzh8s [732.381713ms]
  Apr 20 15:03:22.956: INFO: Created: latency-svc-2h2k9
  Apr 20 15:03:22.967: INFO: Got endpoints: latency-svc-msf5z [735.957557ms]
  Apr 20 15:03:22.991: INFO: Created: latency-svc-9h6dl
  Apr 20 15:03:23.019: INFO: Got endpoints: latency-svc-fcxjg [724.137378ms]
  Apr 20 15:03:23.043: INFO: Created: latency-svc-dvjwv
  Apr 20 15:03:23.070: INFO: Got endpoints: latency-svc-8dfvw [740.547487ms]
  Apr 20 15:03:23.093: INFO: Created: latency-svc-6xz6n
  Apr 20 15:03:23.117: INFO: Got endpoints: latency-svc-kvcqw [723.811109ms]
  Apr 20 15:03:23.155: INFO: Created: latency-svc-kk27h
  Apr 20 15:03:23.174: INFO: Got endpoints: latency-svc-q6w82 [728.869125ms]
  Apr 20 15:03:23.196: INFO: Created: latency-svc-74xg5
  Apr 20 15:03:23.220: INFO: Got endpoints: latency-svc-9nrwl [743.321712ms]
  Apr 20 15:03:23.243: INFO: Created: latency-svc-twzq8
  Apr 20 15:03:23.268: INFO: Got endpoints: latency-svc-plv67 [738.783475ms]
  Apr 20 15:03:23.296: INFO: Created: latency-svc-pvkdc
  E0420 15:03:23.316934      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:03:23.317: INFO: Got endpoints: latency-svc-mlhj4 [739.40519ms]
  Apr 20 15:03:23.345: INFO: Created: latency-svc-fccq9
  Apr 20 15:03:23.369: INFO: Got endpoints: latency-svc-2wsnx [741.948881ms]
  Apr 20 15:03:23.391: INFO: Created: latency-svc-z44rf
  Apr 20 15:03:23.417: INFO: Got endpoints: latency-svc-hv9cq [742.322376ms]
  Apr 20 15:03:23.441: INFO: Created: latency-svc-j74fr
  Apr 20 15:03:23.468: INFO: Got endpoints: latency-svc-9v2ns [739.486768ms]
  Apr 20 15:03:23.492: INFO: Created: latency-svc-96m95
  Apr 20 15:03:23.528: INFO: Got endpoints: latency-svc-b2bjf [755.006944ms]
  Apr 20 15:03:23.555: INFO: Created: latency-svc-c4pf5
  Apr 20 15:03:23.568: INFO: Got endpoints: latency-svc-grm62 [741.389521ms]
  Apr 20 15:03:23.606: INFO: Created: latency-svc-2cxg2
  Apr 20 15:03:23.617: INFO: Got endpoints: latency-svc-whngc [750.735322ms]
  Apr 20 15:03:23.648: INFO: Created: latency-svc-rs4wj
  Apr 20 15:03:23.681: INFO: Got endpoints: latency-svc-2h2k9 [758.63061ms]
  Apr 20 15:03:23.713: INFO: Created: latency-svc-gj69c
  Apr 20 15:03:23.730: INFO: Got endpoints: latency-svc-9h6dl [762.79406ms]
  Apr 20 15:03:23.756: INFO: Created: latency-svc-45kcq
  Apr 20 15:03:23.771: INFO: Got endpoints: latency-svc-dvjwv [751.200029ms]
  Apr 20 15:03:23.819: INFO: Created: latency-svc-6dvbg
  Apr 20 15:03:23.826: INFO: Got endpoints: latency-svc-6xz6n [755.427039ms]
  Apr 20 15:03:23.873: INFO: Created: latency-svc-xkqht
  Apr 20 15:03:23.887: INFO: Got endpoints: latency-svc-kk27h [770.763459ms]
  Apr 20 15:03:23.923: INFO: Created: latency-svc-6n2dv
  Apr 20 15:03:23.928: INFO: Got endpoints: latency-svc-74xg5 [753.920856ms]
  Apr 20 15:03:23.954: INFO: Created: latency-svc-tlgps
  Apr 20 15:03:23.974: INFO: Got endpoints: latency-svc-twzq8 [753.397401ms]
  Apr 20 15:03:24.001: INFO: Created: latency-svc-jjcc6
  Apr 20 15:03:24.024: INFO: Got endpoints: latency-svc-pvkdc [755.58391ms]
  Apr 20 15:03:24.058: INFO: Created: latency-svc-qpmk2
  Apr 20 15:03:24.068: INFO: Got endpoints: latency-svc-fccq9 [750.788176ms]
  Apr 20 15:03:24.092: INFO: Created: latency-svc-g4qz5
  Apr 20 15:03:24.126: INFO: Got endpoints: latency-svc-z44rf [755.689337ms]
  Apr 20 15:03:24.155: INFO: Created: latency-svc-trrtd
  Apr 20 15:03:24.168: INFO: Got endpoints: latency-svc-j74fr [751.283404ms]
  Apr 20 15:03:24.196: INFO: Created: latency-svc-rdb9h
  Apr 20 15:03:24.222: INFO: Got endpoints: latency-svc-96m95 [753.725463ms]
  Apr 20 15:03:24.245: INFO: Created: latency-svc-65xcg
  Apr 20 15:03:24.268: INFO: Got endpoints: latency-svc-c4pf5 [739.724564ms]
  Apr 20 15:03:24.287: INFO: Created: latency-svc-z5rk2
  E0420 15:03:24.317365      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:03:24.320: INFO: Got endpoints: latency-svc-2cxg2 [752.050265ms]
  Apr 20 15:03:24.342: INFO: Created: latency-svc-78gl9
  Apr 20 15:03:24.370: INFO: Got endpoints: latency-svc-rs4wj [752.332927ms]
  Apr 20 15:03:24.397: INFO: Created: latency-svc-nlfll
  Apr 20 15:03:24.420: INFO: Got endpoints: latency-svc-gj69c [739.257882ms]
  Apr 20 15:03:24.449: INFO: Created: latency-svc-hlxz2
  Apr 20 15:03:24.497: INFO: Got endpoints: latency-svc-45kcq [766.915174ms]
  Apr 20 15:03:24.519: INFO: Created: latency-svc-fgt7f
  Apr 20 15:03:24.522: INFO: Got endpoints: latency-svc-6dvbg [751.255086ms]
  Apr 20 15:03:24.545: INFO: Created: latency-svc-h42kd
  Apr 20 15:03:24.571: INFO: Got endpoints: latency-svc-xkqht [744.715589ms]
  Apr 20 15:03:24.593: INFO: Created: latency-svc-p67qk
  Apr 20 15:03:24.618: INFO: Got endpoints: latency-svc-6n2dv [730.220047ms]
  Apr 20 15:03:24.639: INFO: Created: latency-svc-p95t7
  Apr 20 15:03:24.670: INFO: Got endpoints: latency-svc-tlgps [742.369018ms]
  Apr 20 15:03:24.687: INFO: Created: latency-svc-j79fk
  Apr 20 15:03:24.720: INFO: Got endpoints: latency-svc-jjcc6 [746.138588ms]
  Apr 20 15:03:24.750: INFO: Created: latency-svc-svqsw
  Apr 20 15:03:24.768: INFO: Got endpoints: latency-svc-qpmk2 [744.036876ms]
  Apr 20 15:03:24.795: INFO: Created: latency-svc-d6pzh
  Apr 20 15:03:24.815: INFO: Got endpoints: latency-svc-g4qz5 [746.652124ms]
  Apr 20 15:03:24.838: INFO: Created: latency-svc-k8h8s
  Apr 20 15:03:24.866: INFO: Got endpoints: latency-svc-trrtd [740.063842ms]
  Apr 20 15:03:24.885: INFO: Created: latency-svc-fsprh
  Apr 20 15:03:24.918: INFO: Got endpoints: latency-svc-rdb9h [747.500853ms]
  Apr 20 15:03:24.940: INFO: Created: latency-svc-mlr9k
  Apr 20 15:03:24.971: INFO: Got endpoints: latency-svc-65xcg [748.478896ms]
  Apr 20 15:03:24.988: INFO: Created: latency-svc-2wjk6
  Apr 20 15:03:25.021: INFO: Got endpoints: latency-svc-z5rk2 [753.058469ms]
  Apr 20 15:03:25.040: INFO: Created: latency-svc-6mwlw
  Apr 20 15:03:25.070: INFO: Got endpoints: latency-svc-78gl9 [750.296711ms]
  Apr 20 15:03:25.088: INFO: Created: latency-svc-tgxq4
  Apr 20 15:03:25.121: INFO: Got endpoints: latency-svc-nlfll [750.890079ms]
  Apr 20 15:03:25.149: INFO: Created: latency-svc-rhfzf
  Apr 20 15:03:25.176: INFO: Got endpoints: latency-svc-hlxz2 [756.142606ms]
  Apr 20 15:03:25.204: INFO: Created: latency-svc-hlxc8
  Apr 20 15:03:25.233: INFO: Got endpoints: latency-svc-fgt7f [735.223163ms]
  Apr 20 15:03:25.259: INFO: Created: latency-svc-62q5t
  Apr 20 15:03:25.273: INFO: Got endpoints: latency-svc-h42kd [750.257451ms]
  Apr 20 15:03:25.307: INFO: Created: latency-svc-nzjkp
  E0420 15:03:25.317482      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:03:25.332: INFO: Got endpoints: latency-svc-p67qk [761.781087ms]
  Apr 20 15:03:25.376: INFO: Got endpoints: latency-svc-p95t7 [758.409549ms]
  Apr 20 15:03:25.465: INFO: Got endpoints: latency-svc-j79fk [794.422778ms]
  Apr 20 15:03:25.487: INFO: Got endpoints: latency-svc-svqsw [766.647385ms]
  Apr 20 15:03:25.521: INFO: Got endpoints: latency-svc-d6pzh [751.540032ms]
  Apr 20 15:03:25.580: INFO: Got endpoints: latency-svc-k8h8s [765.26354ms]
  Apr 20 15:03:25.623: INFO: Got endpoints: latency-svc-fsprh [756.635887ms]
  Apr 20 15:03:25.673: INFO: Got endpoints: latency-svc-mlr9k [755.591026ms]
  Apr 20 15:03:25.722: INFO: Got endpoints: latency-svc-2wjk6 [751.332603ms]
  Apr 20 15:03:25.771: INFO: Got endpoints: latency-svc-6mwlw [749.361818ms]
  Apr 20 15:03:25.820: INFO: Got endpoints: latency-svc-tgxq4 [749.636646ms]
  Apr 20 15:03:25.872: INFO: Got endpoints: latency-svc-rhfzf [751.00717ms]
  Apr 20 15:03:25.920: INFO: Got endpoints: latency-svc-hlxc8 [743.420463ms]
  Apr 20 15:03:25.970: INFO: Got endpoints: latency-svc-62q5t [736.60184ms]
  Apr 20 15:03:26.023: INFO: Got endpoints: latency-svc-nzjkp [750.52185ms]
  Apr 20 15:03:26.023: INFO: Latencies: [40.792191ms 102.034075ms 122.32752ms 136.538098ms 139.109614ms 147.483191ms 156.921908ms 189.498087ms 189.986755ms 199.962644ms 208.881924ms 211.885418ms 236.018009ms 241.283349ms 242.567822ms 242.669194ms 263.020607ms 267.861495ms 278.302217ms 281.58085ms 285.858416ms 286.548697ms 297.404732ms 299.760259ms 301.008471ms 304.115959ms 308.948166ms 329.975451ms 330.238509ms 330.800359ms 333.38818ms 343.156836ms 361.224591ms 367.080825ms 406.906952ms 407.182397ms 408.921753ms 417.694953ms 421.850818ms 422.622073ms 427.374986ms 430.781363ms 444.451487ms 451.382357ms 451.705317ms 456.514848ms 459.646127ms 464.12209ms 474.5975ms 481.56811ms 486.822175ms 490.116282ms 492.786801ms 495.679899ms 496.143787ms 496.279208ms 509.830079ms 512.648481ms 519.314984ms 519.685305ms 532.431917ms 532.803466ms 538.283756ms 542.83071ms 545.419735ms 549.304058ms 553.185602ms 572.045481ms 578.021808ms 584.024982ms 591.046518ms 612.448356ms 619.161327ms 620.0775ms 625.933709ms 645.232696ms 671.012657ms 690.990387ms 702.974189ms 723.811109ms 724.137378ms 728.869125ms 730.220047ms 732.381713ms 733.400928ms 733.461452ms 734.131266ms 734.14446ms 735.223163ms 735.957557ms 736.60184ms 736.608566ms 737.768491ms 737.985903ms 738.652668ms 738.783475ms 739.257882ms 739.40519ms 739.45736ms 739.486768ms 739.724564ms 740.063842ms 740.079958ms 740.547487ms 741.389521ms 741.948881ms 742.322376ms 742.369018ms 742.877308ms 743.321712ms 743.420463ms 744.002803ms 744.036876ms 744.715589ms 746.138588ms 746.297095ms 746.652124ms 746.773785ms 747.500853ms 748.320307ms 748.478896ms 749.215275ms 749.361818ms 749.412414ms 749.636646ms 749.814778ms 750.257451ms 750.296711ms 750.31156ms 750.410092ms 750.52185ms 750.622659ms 750.735322ms 750.788176ms 750.890079ms 750.984216ms 751.00717ms 751.105462ms 751.200029ms 751.255086ms 751.28ms 751.283404ms 751.332603ms 751.540032ms 751.562514ms 752.050265ms 752.332927ms 752.50135ms 752.843011ms 753.058469ms 753.08016ms 753.189336ms 753.397401ms 753.725463ms 753.920856ms 754.079743ms 754.187541ms 754.667907ms 754.930814ms 755.006944ms 755.112045ms 755.427039ms 755.58391ms 755.591026ms 755.689337ms 756.142606ms 756.635887ms 756.697772ms 756.895762ms 757.368762ms 757.621964ms 758.409549ms 758.63061ms 758.661244ms 759.252188ms 760.826993ms 761.015261ms 761.397048ms 761.415328ms 761.507401ms 761.781087ms 761.799065ms 762.567779ms 762.79406ms 763.24344ms 763.78395ms 764.429697ms 765.26354ms 766.297159ms 766.647385ms 766.915174ms 767.451948ms 768.471817ms 770.763459ms 775.855314ms 794.422778ms 822.92669ms 858.421666ms 880.907753ms 884.677532ms]
  Apr 20 15:03:26.024: INFO: 50 %ile: 739.724564ms
  Apr 20 15:03:26.024: INFO: 90 %ile: 761.781087ms
  Apr 20 15:03:26.024: INFO: 99 %ile: 880.907753ms
  Apr 20 15:03:26.024: INFO: Total sample count: 200
  Apr 20 15:03:26.024: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-9079" for this suite. @ 04/20/24 15:03:26.037
• [10.855 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1764
  STEP: Creating a kubernetes client @ 04/20/24 15:03:26.051
  Apr 20 15:03:26.051: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename kubectl @ 04/20/24 15:03:26.054
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:03:26.084
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:03:26.089
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 04/20/24 15:03:26.095
  Apr 20 15:03:26.095: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-4692 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  Apr 20 15:03:26.266: INFO: stderr: ""
  Apr 20 15:03:26.266: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 04/20/24 15:03:26.266
  Apr 20 15:03:26.277: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-4692 delete pods e2e-test-httpd-pod'
  E0420 15:03:26.318324      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:03:27.318577      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:03:27.654: INFO: stderr: ""
  Apr 20 15:03:27.654: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Apr 20 15:03:27.655: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4692" for this suite. @ 04/20/24 15:03:27.665
• [1.628 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:550
  STEP: Creating a kubernetes client @ 04/20/24 15:03:27.682
  Apr 20 15:03:27.683: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename container-probe @ 04/20/24 15:03:27.685
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:03:27.709
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:03:27.717
  STEP: Creating pod test-grpc-a7368c12-8643-4a27-8359-9fd89e568499 in namespace container-probe-1375 @ 04/20/24 15:03:27.721
  E0420 15:03:28.318745      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:03:29.318765      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/20/24 15:03:29.754
  Apr 20 15:03:29.761: INFO: Initial restart count of pod test-grpc-a7368c12-8643-4a27-8359-9fd89e568499 is 0
  Apr 20 15:03:29.766: INFO: Get pod test-grpc-a7368c12-8643-4a27-8359-9fd89e568499 in namespace container-probe-1375
  E0420 15:03:30.319307      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:03:31.319926      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:03:31.775: INFO: Get pod test-grpc-a7368c12-8643-4a27-8359-9fd89e568499 in namespace container-probe-1375
  E0420 15:03:32.320375      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:03:33.321981      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:03:33.789: INFO: Get pod test-grpc-a7368c12-8643-4a27-8359-9fd89e568499 in namespace container-probe-1375
  E0420 15:03:34.321823      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:03:35.330144      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:03:35.807: INFO: Get pod test-grpc-a7368c12-8643-4a27-8359-9fd89e568499 in namespace container-probe-1375
  E0420 15:03:36.323576      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:03:37.324217      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:03:37.821: INFO: Get pod test-grpc-a7368c12-8643-4a27-8359-9fd89e568499 in namespace container-probe-1375
  E0420 15:03:38.324455      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:03:39.324981      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:03:39.833: INFO: Get pod test-grpc-a7368c12-8643-4a27-8359-9fd89e568499 in namespace container-probe-1375
  E0420 15:03:40.325747      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:03:41.326131      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:03:41.842: INFO: Get pod test-grpc-a7368c12-8643-4a27-8359-9fd89e568499 in namespace container-probe-1375
  E0420 15:03:42.326225      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:03:43.327642      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:03:43.850: INFO: Get pod test-grpc-a7368c12-8643-4a27-8359-9fd89e568499 in namespace container-probe-1375
  E0420 15:03:44.327138      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:03:45.328283      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:03:45.856: INFO: Get pod test-grpc-a7368c12-8643-4a27-8359-9fd89e568499 in namespace container-probe-1375
  E0420 15:03:46.329143      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:03:47.329684      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:03:47.863: INFO: Get pod test-grpc-a7368c12-8643-4a27-8359-9fd89e568499 in namespace container-probe-1375
  E0420 15:03:48.329912      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:03:49.330776      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:03:49.871: INFO: Get pod test-grpc-a7368c12-8643-4a27-8359-9fd89e568499 in namespace container-probe-1375
  E0420 15:03:50.330873      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:03:51.331307      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:03:51.880: INFO: Get pod test-grpc-a7368c12-8643-4a27-8359-9fd89e568499 in namespace container-probe-1375
  E0420 15:03:52.331512      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:03:53.331892      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:03:53.887: INFO: Get pod test-grpc-a7368c12-8643-4a27-8359-9fd89e568499 in namespace container-probe-1375
  E0420 15:03:54.332847      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:03:55.333708      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:03:55.895: INFO: Get pod test-grpc-a7368c12-8643-4a27-8359-9fd89e568499 in namespace container-probe-1375
  E0420 15:03:56.333892      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:03:57.334453      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:03:57.903: INFO: Get pod test-grpc-a7368c12-8643-4a27-8359-9fd89e568499 in namespace container-probe-1375
  E0420 15:03:58.335344      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:03:59.335461      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:03:59.911: INFO: Get pod test-grpc-a7368c12-8643-4a27-8359-9fd89e568499 in namespace container-probe-1375
  E0420 15:04:00.335742      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:04:01.336498      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:04:01.921: INFO: Get pod test-grpc-a7368c12-8643-4a27-8359-9fd89e568499 in namespace container-probe-1375
  E0420 15:04:02.337542      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:04:03.337816      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:04:03.929: INFO: Get pod test-grpc-a7368c12-8643-4a27-8359-9fd89e568499 in namespace container-probe-1375
  E0420 15:04:04.338256      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:04:05.339251      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:04:05.937: INFO: Get pod test-grpc-a7368c12-8643-4a27-8359-9fd89e568499 in namespace container-probe-1375
  E0420 15:04:06.339774      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:04:07.340050      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:04:07.948: INFO: Get pod test-grpc-a7368c12-8643-4a27-8359-9fd89e568499 in namespace container-probe-1375
  E0420 15:04:08.341148      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:04:09.343360      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:04:09.955: INFO: Get pod test-grpc-a7368c12-8643-4a27-8359-9fd89e568499 in namespace container-probe-1375
  E0420 15:04:10.344263      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:04:11.344799      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:04:11.965: INFO: Get pod test-grpc-a7368c12-8643-4a27-8359-9fd89e568499 in namespace container-probe-1375
  E0420 15:04:12.345765      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:04:13.346221      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:04:13.973: INFO: Get pod test-grpc-a7368c12-8643-4a27-8359-9fd89e568499 in namespace container-probe-1375
  E0420 15:04:14.346826      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:04:15.346967      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:04:15.981: INFO: Get pod test-grpc-a7368c12-8643-4a27-8359-9fd89e568499 in namespace container-probe-1375
  E0420 15:04:16.347759      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:04:17.348471      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:04:17.994: INFO: Get pod test-grpc-a7368c12-8643-4a27-8359-9fd89e568499 in namespace container-probe-1375
  E0420 15:04:18.349288      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:04:19.349837      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:04:20.004: INFO: Get pod test-grpc-a7368c12-8643-4a27-8359-9fd89e568499 in namespace container-probe-1375
  E0420 15:04:20.350878      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:04:21.351587      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:04:22.015: INFO: Get pod test-grpc-a7368c12-8643-4a27-8359-9fd89e568499 in namespace container-probe-1375
  E0420 15:04:22.351962      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:04:23.352427      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:04:24.026: INFO: Get pod test-grpc-a7368c12-8643-4a27-8359-9fd89e568499 in namespace container-probe-1375
  E0420 15:04:24.352519      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:04:25.352783      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:04:26.036: INFO: Get pod test-grpc-a7368c12-8643-4a27-8359-9fd89e568499 in namespace container-probe-1375
  E0420 15:04:26.352900      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:04:27.353319      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:04:28.043: INFO: Get pod test-grpc-a7368c12-8643-4a27-8359-9fd89e568499 in namespace container-probe-1375
  E0420 15:04:28.353584      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:04:29.354261      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:04:30.050: INFO: Get pod test-grpc-a7368c12-8643-4a27-8359-9fd89e568499 in namespace container-probe-1375
  E0420 15:04:30.355311      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:04:31.356260      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:04:32.059: INFO: Get pod test-grpc-a7368c12-8643-4a27-8359-9fd89e568499 in namespace container-probe-1375
  E0420 15:04:32.356474      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:04:33.357083      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:04:34.069: INFO: Get pod test-grpc-a7368c12-8643-4a27-8359-9fd89e568499 in namespace container-probe-1375
  Apr 20 15:04:34.069: INFO: Restart count of pod container-probe-1375/test-grpc-a7368c12-8643-4a27-8359-9fd89e568499 is now 1 (1m4.308568308s elapsed)
  STEP: deleting the pod @ 04/20/24 15:04:34.07
  Apr 20 15:04:34.099: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-1375" for this suite. @ 04/20/24 15:04:34.117
• [66.449 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:183
  STEP: Creating a kubernetes client @ 04/20/24 15:04:34.133
  Apr 20 15:04:34.133: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename container-probe @ 04/20/24 15:04:34.138
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:04:34.179
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:04:34.189
  STEP: Creating pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395 @ 04/20/24 15:04:34.195
  E0420 15:04:34.358038      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:04:35.358165      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/20/24 15:04:36.24
  Apr 20 15:04:36.247: INFO: Initial restart count of pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 is 0
  Apr 20 15:04:36.254: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:04:36.358979      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:04:37.359247      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:04:38.263: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:04:38.360070      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:04:39.361109      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:04:40.272: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:04:40.360443      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:04:41.360991      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:04:42.281: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:04:42.361293      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:04:43.361860      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:04:44.289: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:04:44.362747      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:04:45.362961      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:04:46.298: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:04:46.363068      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:04:47.363258      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:04:48.305: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:04:48.363446      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:04:49.363812      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:04:50.323: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:04:50.364592      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:04:51.364419      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:04:52.335: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:04:52.365001      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:04:53.365382      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:04:54.346: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:04:54.365915      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:04:55.366002      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:04:56.354: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:04:56.366565      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:04:57.367069      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:04:58.366: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:04:58.367096      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:04:59.367416      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:05:00.367792      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:05:00.375: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:05:01.367976      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:05:02.368862      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:05:02.383: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:05:03.368977      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:05:04.369380      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:05:04.392: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:05:05.370223      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:05:06.370735      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:05:06.400: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:05:07.370987      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:05:08.372091      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:05:08.409: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:05:09.372229      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:05:10.372483      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:05:10.420: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:05:11.372691      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:05:12.373403      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:05:12.429: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:05:13.373426      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:05:14.374268      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:05:14.435: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:05:15.374797      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:05:16.375134      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:05:16.445: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:05:17.376004      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:05:18.376331      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:05:18.452: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:05:19.376593      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:05:20.377963      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:05:20.500: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:05:21.378065      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:05:22.378584      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:05:22.511: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:05:23.378948      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:05:24.379566      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:05:24.520: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:05:25.394792      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:05:26.386714      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:05:26.531: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:05:27.387219      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:05:28.387938      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:05:28.540: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:05:29.388211      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:05:30.388462      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:05:30.549: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:05:31.388751      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:05:32.389398      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:05:32.557: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:05:33.389612      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:05:34.391932      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:05:34.566: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:05:35.390882      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:05:36.391006      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:05:36.577: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:05:37.393081      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:05:38.392407      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:05:38.588: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:05:39.393236      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:05:40.393458      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:05:40.601: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:05:41.394363      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:05:42.395343      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:05:42.613: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:05:43.395239      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:05:44.395784      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:05:44.621: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:05:45.396761      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:05:46.396944      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:05:46.630: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:05:47.397253      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:05:48.398372      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:05:48.641: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:05:49.398410      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:05:50.398774      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:05:50.650: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:05:51.399015      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:05:52.399573      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:05:52.660: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:05:53.400018      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:05:54.400594      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:05:54.668: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:05:55.401180      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:05:56.401360      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:05:56.676: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:05:57.401602      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:05:58.401816      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:05:58.684: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:05:59.402863      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:06:00.403061      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:06:00.693: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:06:01.403311      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:06:02.403574      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:06:02.704: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:06:03.404764      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:06:04.405438      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:06:04.713: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:06:05.405947      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:06:06.406522      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:06:06.721: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:06:07.408056      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:06:08.408088      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:06:08.729: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:06:09.408270      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:06:10.408712      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:06:10.738: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:06:11.408867      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:06:12.409463      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:06:12.747: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:06:13.410106      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:06:14.410575      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:06:14.756: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:06:15.410857      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:06:16.411362      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:06:16.762: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:06:17.411778      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:06:18.412200      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:06:18.771: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:06:19.412431      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:06:20.412972      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:06:20.778: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:06:21.413781      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:06:22.413506      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:06:22.799: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:06:23.413847      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:06:24.413985      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:06:24.805: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:06:25.414246      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:06:26.414984      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:06:26.814: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:06:27.416098      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:06:28.416954      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:06:28.823: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:06:29.418070      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:06:30.418320      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:06:30.831: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:06:31.418457      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:06:32.419011      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:06:32.838: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:06:33.420266      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:06:34.420409      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:06:34.848: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:06:35.421091      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:06:36.421396      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:06:36.856: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:06:37.422263      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:06:38.422607      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:06:38.866: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:06:39.423081      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:06:40.423212      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:06:40.874: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:06:41.424601      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:06:42.424727      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:06:42.885: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:06:43.425165      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:06:44.425746      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:06:44.893: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:06:45.426324      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:06:46.426925      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:06:46.901: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:06:47.427037      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:06:48.428228      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:06:48.909: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:06:49.428954      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:06:50.429429      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:06:50.920: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:06:51.429826      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:06:52.429955      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:06:52.936: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:06:53.430503      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:06:54.430748      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:06:54.945: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:06:55.430942      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:06:56.431307      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:06:56.956: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:06:57.432345      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:06:58.433165      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:06:58.963: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:06:59.434134      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:07:00.436758      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:07:00.974: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:07:01.436375      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:07:02.436312      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:07:02.984: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:07:03.436948      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:07:04.437576      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:07:04.995: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:07:05.438537      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:07:06.439751      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:07:07.004: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:07:07.439766      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:07:08.441122      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:07:09.015: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:07:09.443352      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:07:10.442192      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:07:11.021: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:07:11.442911      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:07:12.443243      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:07:13.035: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:07:13.444022      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:07:14.444344      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:07:15.045: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:07:15.444652      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:07:16.445290      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:07:17.058: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:07:17.445996      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:07:18.446799      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:07:19.069: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:07:19.447373      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:07:20.448467      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:07:21.085: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:07:21.448942      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:07:22.449165      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:07:23.093: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:07:23.449998      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:07:24.450626      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:07:25.104: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:07:25.451083      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:07:26.451342      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:07:27.113: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:07:27.451800      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:07:28.453969      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:07:29.123: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:07:29.452090      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:07:30.452296      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:07:31.136: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:07:31.452621      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:07:32.453299      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:07:33.150: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:07:33.454303      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:07:34.455037      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:07:35.160: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:07:35.455338      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:07:36.456178      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:07:37.172: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:07:37.456202      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:07:38.456628      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:07:39.183: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:07:39.457799      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:07:40.458128      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:07:41.195: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:07:41.458380      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:07:42.459146      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:07:43.207: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:07:43.460178      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:07:44.462070      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:07:45.219: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:07:45.462533      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:07:46.462987      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:07:47.231: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:07:47.464317      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:07:48.465160      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:07:49.243: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:07:49.465402      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:07:50.466485      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:07:51.252: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:07:51.466916      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:07:52.467096      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:07:53.266: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:07:53.468061      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:07:54.469488      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:07:55.280: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:07:55.469435      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:07:56.470207      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:07:57.289: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:07:57.471227      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:07:58.471574      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:07:59.299: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:07:59.472470      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:08:00.473076      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:08:01.311: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:08:01.473606      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:08:02.473955      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:08:03.318: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:08:03.474229      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:08:04.474319      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:08:05.330: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:08:05.475617      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:08:06.475366      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:08:07.339: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:08:07.476542      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:08:08.476646      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:08:09.351: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:08:09.477697      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:08:10.478311      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:08:11.360: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:08:11.478951      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:08:12.479045      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:08:13.369: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:08:13.480288      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:08:14.482397      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:08:15.378: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:08:15.481035      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:08:16.481409      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:08:17.388: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:08:17.481717      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:08:18.482140      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:08:19.400: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:08:19.483034      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:08:20.484937      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:08:21.418: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:08:21.486270      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:08:22.486541      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:08:23.430: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:08:23.487630      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:08:24.488326      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:08:25.488476      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:08:25.489: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:08:26.488992      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:08:27.489449      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:08:27.497: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:08:28.500400      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:08:29.493024      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:08:29.507: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:08:30.493363      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:08:31.493584      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:08:31.517: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:08:32.496084      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:08:33.496997      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:08:33.524: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:08:34.497994      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:08:35.498098      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:08:35.534: INFO: Get pod liveness-171cd9bf-d6ce-4d3b-9e2d-67262ae318a3 in namespace container-probe-7395
  E0420 15:08:36.499089      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:08:37.503919      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 04/20/24 15:08:37.54
  Apr 20 15:08:37.575: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7395" for this suite. @ 04/20/24 15:08:37.609
• [243.499 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 04/20/24 15:08:37.638
  Apr 20 15:08:37.639: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 04/20/24 15:08:37.649
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:08:37.681
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:08:37.686
  STEP: creating a target pod @ 04/20/24 15:08:37.691
  E0420 15:08:38.503897      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:08:39.504184      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 04/20/24 15:08:39.733
  E0420 15:08:40.505113      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:08:41.507931      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 04/20/24 15:08:41.792
  Apr 20 15:08:41.792: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-5411 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 20 15:08:41.793: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  Apr 20 15:08:41.796: INFO: ExecWithOptions: Clientset creation
  Apr 20 15:08:41.797: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/ephemeral-containers-test-5411/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  Apr 20 15:08:41.920: INFO: Exec stderr: ""
  Apr 20 15:08:41.961: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-5411" for this suite. @ 04/20/24 15:08:41.972
• [4.357 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:371
  STEP: Creating a kubernetes client @ 04/20/24 15:08:41.996
  Apr 20 15:08:41.997: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename webhook @ 04/20/24 15:08:42.003
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:08:42.037
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:08:42.049
  STEP: Setting up server cert @ 04/20/24 15:08:42.092
  E0420 15:08:42.505907      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/20/24 15:08:43.181
  STEP: Deploying the webhook pod @ 04/20/24 15:08:43.196
  STEP: Wait for the deployment to be ready @ 04/20/24 15:08:43.22
  Apr 20 15:08:43.238: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0420 15:08:43.506170      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:08:44.507996      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/20/24 15:08:45.266
  STEP: Verifying the service has paired with the endpoint @ 04/20/24 15:08:45.299
  E0420 15:08:45.509248      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:08:46.306: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 04/20/24 15:08:46.335
  STEP: Registering slow webhook via the AdmissionRegistration API @ 04/20/24 15:08:46.335
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 04/20/24 15:08:46.384
  E0420 15:08:46.510028      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 04/20/24 15:08:47.41
  STEP: Registering slow webhook via the AdmissionRegistration API @ 04/20/24 15:08:47.41
  E0420 15:08:47.510383      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:08:48.511448      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is longer than webhook latency @ 04/20/24 15:08:48.519
  STEP: Registering slow webhook via the AdmissionRegistration API @ 04/20/24 15:08:48.519
  E0420 15:08:49.511715      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:08:50.513623      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:08:51.512413      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:08:52.513008      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:08:53.513303      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 04/20/24 15:08:53.601
  STEP: Registering slow webhook via the AdmissionRegistration API @ 04/20/24 15:08:53.601
  E0420 15:08:54.513507      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:08:55.513531      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:08:56.514456      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:08:57.514395      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:08:58.515374      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:08:58.783: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2516" for this suite. @ 04/20/24 15:08:58.8
  STEP: Destroying namespace "webhook-markers-8678" for this suite. @ 04/20/24 15:08:58.817
• [16.836 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:751
  STEP: Creating a kubernetes client @ 04/20/24 15:08:58.834
  Apr 20 15:08:58.834: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename statefulset @ 04/20/24 15:08:58.844
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:08:58.88
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:08:58.887
  STEP: Creating service test in namespace statefulset-6177 @ 04/20/24 15:08:58.893
  STEP: Creating stateful set ss in namespace statefulset-6177 @ 04/20/24 15:08:58.909
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-6177 @ 04/20/24 15:08:58.93
  Apr 20 15:08:58.945: INFO: Found 0 stateful pods, waiting for 1
  E0420 15:08:59.515543      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:09:00.516098      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:09:01.517211      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:09:02.517331      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:09:03.517632      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:09:04.518129      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:09:05.518072      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:09:06.519182      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:09:07.519369      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:09:08.520204      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:09:08.944: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 04/20/24 15:09:08.944
  Apr 20 15:09:08.953: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=statefulset-6177 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Apr 20 15:09:09.248: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Apr 20 15:09:09.248: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Apr 20 15:09:09.248: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Apr 20 15:09:09.255: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0420 15:09:09.521002      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:09:10.521254      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:09:11.521421      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:09:12.521946      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:09:13.522226      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:09:14.523097      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:09:15.523254      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:09:16.523906      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:09:17.524124      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:09:18.525163      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:09:19.260: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Apr 20 15:09:19.260: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Apr 20 15:09:19.303: INFO: POD   NODE            PHASE    GRACE  CONDITIONS
  Apr 20 15:09:19.303: INFO: ss-0  nok4chie7ate-3  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-04-20 15:09:00 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-04-20 15:08:58 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-04-20 15:09:09 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-04-20 15:09:09 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-04-20 15:08:58 +0000 UTC  }]
  Apr 20 15:09:19.303: INFO: 
  Apr 20 15:09:19.303: INFO: StatefulSet ss has not reached scale 3, at 1
  E0420 15:09:19.525880      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:09:20.313: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.986601197s
  E0420 15:09:20.526439      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:09:21.323: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.976424759s
  E0420 15:09:21.526907      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:09:22.334: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.967189588s
  E0420 15:09:22.527939      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:09:23.350: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.956027275s
  E0420 15:09:23.528460      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:09:24.359: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.939508571s
  E0420 15:09:24.529493      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:09:25.374: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.931281536s
  E0420 15:09:25.529557      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:09:26.383: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.916238924s
  E0420 15:09:26.529939      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:09:27.397: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.90738442s
  E0420 15:09:27.530759      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:09:28.407: INFO: Verifying statefulset ss doesn't scale past 3 for another 892.904289ms
  E0420 15:09:28.531214      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-6177 @ 04/20/24 15:09:29.407
  Apr 20 15:09:29.443: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=statefulset-6177 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E0420 15:09:29.532371      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:09:29.754: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Apr 20 15:09:29.754: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Apr 20 15:09:29.754: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Apr 20 15:09:29.755: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=statefulset-6177 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Apr 20 15:09:30.022: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  Apr 20 15:09:30.022: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Apr 20 15:09:30.022: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Apr 20 15:09:30.023: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=statefulset-6177 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Apr 20 15:09:30.315: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  Apr 20 15:09:30.315: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Apr 20 15:09:30.315: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Apr 20 15:09:30.326: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=false
  E0420 15:09:30.532703      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:09:31.533330      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:09:32.533526      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:09:33.534083      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:09:34.534234      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:09:35.535390      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:09:36.536283      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:09:37.536566      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:09:38.536899      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:09:39.537410      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:09:40.327: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Apr 20 15:09:40.327: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Apr 20 15:09:40.327: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 04/20/24 15:09:40.327
  Apr 20 15:09:40.336: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=statefulset-6177 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E0420 15:09:40.537307      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:09:40.611: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Apr 20 15:09:40.611: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Apr 20 15:09:40.611: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Apr 20 15:09:40.611: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=statefulset-6177 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Apr 20 15:09:40.859: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Apr 20 15:09:40.859: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Apr 20 15:09:40.859: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Apr 20 15:09:40.860: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=statefulset-6177 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Apr 20 15:09:41.093: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Apr 20 15:09:41.093: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Apr 20 15:09:41.093: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Apr 20 15:09:41.094: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Apr 20 15:09:41.101: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 3
  E0420 15:09:41.540985      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:09:42.540122      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:09:43.540315      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:09:44.540914      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:09:45.540744      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:09:46.541246      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:09:47.541444      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:09:48.541982      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:09:49.544384      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:09:50.543114      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:09:51.116: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Apr 20 15:09:51.116: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  Apr 20 15:09:51.116: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  Apr 20 15:09:51.156: INFO: POD   NODE            PHASE    GRACE  CONDITIONS
  Apr 20 15:09:51.156: INFO: ss-0  nok4chie7ate-3  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-04-20 15:09:00 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-04-20 15:08:58 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-04-20 15:09:41 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-04-20 15:09:41 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-04-20 15:08:58 +0000 UTC  }]
  Apr 20 15:09:51.156: INFO: ss-1  nok4chie7ate-2  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-04-20 15:09:20 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-04-20 15:09:19 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-04-20 15:09:41 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-04-20 15:09:41 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-04-20 15:09:19 +0000 UTC  }]
  Apr 20 15:09:51.156: INFO: ss-2  nok4chie7ate-1  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-04-20 15:09:20 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-04-20 15:09:19 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-04-20 15:09:41 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-04-20 15:09:41 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-04-20 15:09:19 +0000 UTC  }]
  Apr 20 15:09:51.156: INFO: 
  Apr 20 15:09:51.156: INFO: StatefulSet ss has not reached scale 0, at 3
  E0420 15:09:51.543241      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:09:52.172: INFO: POD   NODE            PHASE      GRACE  CONDITIONS
  Apr 20 15:09:52.172: INFO: ss-0  nok4chie7ate-3  Succeeded  30s    [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-04-20 15:09:51 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-04-20 15:08:58 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-04-20 15:09:41 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-04-20 15:09:41 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-04-20 15:08:58 +0000 UTC  }]
  Apr 20 15:09:52.172: INFO: ss-1  nok4chie7ate-2  Succeeded  30s    [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-04-20 15:09:51 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-04-20 15:09:19 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-04-20 15:09:41 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-04-20 15:09:41 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-04-20 15:09:19 +0000 UTC  }]
  Apr 20 15:09:52.172: INFO: ss-2  nok4chie7ate-1  Succeeded  30s    [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-04-20 15:09:51 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-04-20 15:09:19 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-04-20 15:09:41 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-04-20 15:09:41 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-04-20 15:09:19 +0000 UTC  }]
  Apr 20 15:09:52.172: INFO: 
  Apr 20 15:09:52.172: INFO: StatefulSet ss has not reached scale 0, at 3
  E0420 15:09:52.544233      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:09:53.180: INFO: Verifying statefulset ss doesn't scale past 0 for another 7.971439987s
  E0420 15:09:53.544912      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:09:54.187: INFO: Verifying statefulset ss doesn't scale past 0 for another 6.963866642s
  E0420 15:09:54.545937      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:09:55.195: INFO: Verifying statefulset ss doesn't scale past 0 for another 5.956573131s
  E0420 15:09:55.546154      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:09:56.203: INFO: Verifying statefulset ss doesn't scale past 0 for another 4.948699987s
  E0420 15:09:56.546431      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:09:57.215: INFO: Verifying statefulset ss doesn't scale past 0 for another 3.940265504s
  E0420 15:09:57.547192      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:09:58.225: INFO: Verifying statefulset ss doesn't scale past 0 for another 2.928899332s
  E0420 15:09:58.547906      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:09:59.233: INFO: Verifying statefulset ss doesn't scale past 0 for another 1.918881963s
  E0420 15:09:59.548783      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:10:00.239: INFO: Verifying statefulset ss doesn't scale past 0 for another 911.76368ms
  E0420 15:10:00.549831      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-6177 @ 04/20/24 15:10:01.24
  Apr 20 15:10:01.250: INFO: Scaling statefulset ss to 0
  Apr 20 15:10:01.272: INFO: Waiting for statefulset status.replicas updated to 0
  Apr 20 15:10:01.278: INFO: Deleting all statefulset in ns statefulset-6177
  Apr 20 15:10:01.283: INFO: Scaling statefulset ss to 0
  Apr 20 15:10:01.306: INFO: Waiting for statefulset status.replicas updated to 0
  Apr 20 15:10:01.310: INFO: Deleting statefulset ss
  Apr 20 15:10:01.335: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6177" for this suite. @ 04/20/24 15:10:01.347
• [62.531 seconds]
------------------------------
S
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:110
  STEP: Creating a kubernetes client @ 04/20/24 15:10:01.366
  Apr 20 15:10:01.366: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename configmap @ 04/20/24 15:10:01.369
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:10:01.394
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:10:01.404
  STEP: Creating configMap with name configmap-test-volume-map-a07c8efb-d66f-423a-b9cc-56ef7b1e9b8b @ 04/20/24 15:10:01.413
  STEP: Creating a pod to test consume configMaps @ 04/20/24 15:10:01.441
  E0420 15:10:01.550310      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:10:02.551025      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 15:10:03.475
  Apr 20 15:10:03.480: INFO: Trying to get logs from node nok4chie7ate-3 pod pod-configmaps-8085b7fa-55aa-4ff6-8d62-f19d6fe24b89 container agnhost-container: <nil>
  STEP: delete the pod @ 04/20/24 15:10:03.494
  Apr 20 15:10:03.522: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3591" for this suite. @ 04/20/24 15:10:03.532
• [2.176 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:131
  STEP: Creating a kubernetes client @ 04/20/24 15:10:03.547
  Apr 20 15:10:03.548: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename runtimeclass @ 04/20/24 15:10:03.551
  E0420 15:10:03.551850      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:10:03.572
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:10:03.578
  Apr 20 15:10:03.626: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-6381" for this suite. @ 04/20/24 15:10:03.637
• [0.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 04/20/24 15:10:03.658
  Apr 20 15:10:03.658: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename crd-watch @ 04/20/24 15:10:03.667
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:10:03.689
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:10:03.694
  Apr 20 15:10:03.698: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  E0420 15:10:04.552919      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:10:05.553882      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating first CR  @ 04/20/24 15:10:06.366
  Apr 20 15:10:06.375: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-04-20T15:10:06Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-04-20T15:10:06Z]] name:name1 resourceVersion:64822 uid:40ba75f3-416f-4cb9-9576-d19702707954] num:map[num1:9223372036854775807 num2:1000000]]}
  E0420 15:10:06.554555      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:10:07.555063      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:10:08.555759      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:10:09.556533      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:10:10.560259      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:10:11.557829      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:10:12.558430      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:10:13.558630      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:10:14.559122      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:10:15.559615      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating second CR @ 04/20/24 15:10:16.375
  Apr 20 15:10:16.391: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-04-20T15:10:16Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-04-20T15:10:16Z]] name:name2 resourceVersion:64890 uid:5d596a34-4a47-4734-a4ee-12292c7d1a97] num:map[num1:9223372036854775807 num2:1000000]]}
  E0420 15:10:16.559948      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:10:17.560776      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:10:18.561166      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:10:19.561144      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:10:20.561289      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:10:21.562190      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:10:22.562198      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:10:23.562924      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:10:24.562947      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:10:25.563411      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Modifying first CR @ 04/20/24 15:10:26.392
  Apr 20 15:10:26.405: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-04-20T15:10:06Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-04-20T15:10:26Z]] name:name1 resourceVersion:64908 uid:40ba75f3-416f-4cb9-9576-d19702707954] num:map[num1:9223372036854775807 num2:1000000]]}
  E0420 15:10:26.564089      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:10:27.564904      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:10:28.564970      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:10:29.565557      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:10:30.565934      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:10:31.566846      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:10:32.566971      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:10:33.567600      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:10:34.568521      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:10:35.569352      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Modifying second CR @ 04/20/24 15:10:36.406
  Apr 20 15:10:36.432: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-04-20T15:10:16Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-04-20T15:10:36Z]] name:name2 resourceVersion:64926 uid:5d596a34-4a47-4734-a4ee-12292c7d1a97] num:map[num1:9223372036854775807 num2:1000000]]}
  E0420 15:10:36.569775      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:10:37.576274      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:10:38.570979      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:10:39.571371      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:10:40.571354      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:10:41.571789      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:10:42.572522      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:10:43.572908      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:10:44.572961      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:10:45.573368      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting first CR @ 04/20/24 15:10:46.433
  Apr 20 15:10:46.460: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-04-20T15:10:06Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-04-20T15:10:26Z]] name:name1 resourceVersion:64944 uid:40ba75f3-416f-4cb9-9576-d19702707954] num:map[num1:9223372036854775807 num2:1000000]]}
  E0420 15:10:46.574202      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:10:47.574464      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:10:48.574929      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:10:49.575336      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:10:50.575607      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:10:51.575895      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:10:52.576599      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:10:53.577050      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:10:54.578224      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:10:55.588803      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting second CR @ 04/20/24 15:10:56.461
  Apr 20 15:10:56.482: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-04-20T15:10:16Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-04-20T15:10:36Z]] name:name2 resourceVersion:64961 uid:5d596a34-4a47-4734-a4ee-12292c7d1a97] num:map[num1:9223372036854775807 num2:1000000]]}
  E0420 15:10:56.579811      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:10:57.580401      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:10:58.581842      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:10:59.582002      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:11:00.583080      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:11:01.583247      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:11:02.583588      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:11:03.584404      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:11:04.584252      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:11:05.585139      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:11:06.584805      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:11:07.030: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-2239" for this suite. @ 04/20/24 15:11:07.044
• [63.400 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 04/20/24 15:11:07.059
  Apr 20 15:11:07.059: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename subpath @ 04/20/24 15:11:07.063
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:11:07.098
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:11:07.104
  STEP: Setting up data @ 04/20/24 15:11:07.115
  STEP: Creating pod pod-subpath-test-secret-495s @ 04/20/24 15:11:07.14
  STEP: Creating a pod to test atomic-volume-subpath @ 04/20/24 15:11:07.14
  E0420 15:11:07.585161      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:11:08.585221      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:11:09.587130      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:11:10.587494      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:11:11.592001      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:11:12.589162      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:11:13.589838      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:11:14.590066      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:11:15.590918      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:11:16.591829      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:11:17.593194      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:11:18.594196      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:11:19.595068      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:11:20.595846      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:11:21.610500      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:11:22.603236      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:11:23.603623      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:11:24.604741      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:11:25.605064      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:11:26.605962      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:11:27.607053      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:11:28.607371      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:11:29.607578      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:11:30.608225      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 15:11:31.284
  Apr 20 15:11:31.293: INFO: Trying to get logs from node nok4chie7ate-3 pod pod-subpath-test-secret-495s container test-container-subpath-secret-495s: <nil>
  STEP: delete the pod @ 04/20/24 15:11:31.318
  STEP: Deleting pod pod-subpath-test-secret-495s @ 04/20/24 15:11:31.355
  Apr 20 15:11:31.356: INFO: Deleting pod "pod-subpath-test-secret-495s" in namespace "subpath-4421"
  Apr 20 15:11:31.363: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-4421" for this suite. @ 04/20/24 15:11:31.374
• [24.330 seconds]
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:54
  STEP: Creating a kubernetes client @ 04/20/24 15:11:31.389
  Apr 20 15:11:31.389: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename podtemplate @ 04/20/24 15:11:31.396
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:11:31.43
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:11:31.437
  Apr 20 15:11:31.500: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-6735" for this suite. @ 04/20/24 15:11:31.509
• [0.133 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:177
  STEP: Creating a kubernetes client @ 04/20/24 15:11:31.523
  Apr 20 15:11:31.523: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename crd-webhook @ 04/20/24 15:11:31.526
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:11:31.562
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:11:31.567
  STEP: Setting up server cert @ 04/20/24 15:11:31.572
  E0420 15:11:31.608054      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 04/20/24 15:11:32.244
  STEP: Deploying the custom resource conversion webhook pod @ 04/20/24 15:11:32.263
  STEP: Wait for the deployment to be ready @ 04/20/24 15:11:32.303
  Apr 20 15:11:32.334: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E0420 15:11:32.609270      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:11:33.608795      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/20/24 15:11:34.368
  STEP: Verifying the service has paired with the endpoint @ 04/20/24 15:11:34.399
  E0420 15:11:34.608794      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:11:35.400: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Apr 20 15:11:35.414: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  E0420 15:11:35.608888      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:11:36.609567      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:11:37.610089      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 04/20/24 15:11:38.228
  STEP: Create a v2 custom resource @ 04/20/24 15:11:38.257
  STEP: List CRs in v1 @ 04/20/24 15:11:38.495
  STEP: List CRs in v2 @ 04/20/24 15:11:38.505
  E0420 15:11:38.610400      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:11:39.155: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-57" for this suite. @ 04/20/24 15:11:39.172
• [7.683 seconds]
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:237
  STEP: Creating a kubernetes client @ 04/20/24 15:11:39.208
  Apr 20 15:11:39.208: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename projected @ 04/20/24 15:11:39.218
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:11:39.255
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:11:39.265
  STEP: Creating a pod to test downward API volume plugin @ 04/20/24 15:11:39.274
  E0420 15:11:39.610561      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:11:40.610841      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:11:41.611855      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:11:42.612546      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 15:11:43.327
  Apr 20 15:11:43.333: INFO: Trying to get logs from node nok4chie7ate-3 pod downwardapi-volume-5d99f8b0-c848-4e13-a480-297918a6f480 container client-container: <nil>
  STEP: delete the pod @ 04/20/24 15:11:43.345
  Apr 20 15:11:43.374: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9509" for this suite. @ 04/20/24 15:11:43.384
• [4.187 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3154
  STEP: Creating a kubernetes client @ 04/20/24 15:11:43.395
  Apr 20 15:11:43.395: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename services @ 04/20/24 15:11:43.398
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:11:43.42
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:11:43.425
  STEP: creating an Endpoint @ 04/20/24 15:11:43.435
  STEP: waiting for available Endpoint @ 04/20/24 15:11:43.443
  STEP: listing all Endpoints @ 04/20/24 15:11:43.446
  STEP: updating the Endpoint @ 04/20/24 15:11:43.452
  STEP: fetching the Endpoint @ 04/20/24 15:11:43.462
  STEP: patching the Endpoint @ 04/20/24 15:11:43.468
  STEP: fetching the Endpoint @ 04/20/24 15:11:43.482
  STEP: deleting the Endpoint by Collection @ 04/20/24 15:11:43.487
  STEP: waiting for Endpoint deletion @ 04/20/24 15:11:43.506
  STEP: fetching the Endpoint @ 04/20/24 15:11:43.509
  Apr 20 15:11:43.515: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6932" for this suite. @ 04/20/24 15:11:43.523
• [0.137 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:530
  STEP: Creating a kubernetes client @ 04/20/24 15:11:43.535
  Apr 20 15:11:43.535: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename security-context-test @ 04/20/24 15:11:43.538
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:11:43.564
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:11:43.569
  E0420 15:11:43.613120      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:11:44.613361      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:11:45.614048      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:11:46.614333      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:11:47.615174      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:11:47.620: INFO: Got logs for pod "busybox-privileged-false-67bf3ef7-d24a-4ad4-9a6a-55d515874820": "ip: RTNETLINK answers: Operation not permitted\n"
  Apr 20 15:11:47.620: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-3094" for this suite. @ 04/20/24 15:11:47.629
• [4.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 04/20/24 15:11:47.642
  Apr 20 15:11:47.642: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename init-container @ 04/20/24 15:11:47.646
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:11:47.67
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:11:47.675
  STEP: creating the pod @ 04/20/24 15:11:47.68
  Apr 20 15:11:47.681: INFO: PodSpec: initContainers in spec.initContainers
  E0420 15:11:48.616063      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:11:49.617050      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:11:50.617025      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:11:51.617151      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:11:52.617722      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:11:53.617724      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:11:54.617804      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:11:55.618106      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:11:56.618777      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:11:57.619078      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:11:58.619240      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:11:59.620160      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:00.620806      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:01.621895      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:02.622998      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:03.623151      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:04.623553      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:05.624036      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:06.624594      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:07.625124      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:08.625297      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:09.626575      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:10.626701      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:11.629569      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:12.627317      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:13.627500      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:14.628329      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:15.629469      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:16.629740      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:17.630383      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:18.631274      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:19.632164      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:20.632553      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:21.633092      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:22.633697      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:23.634180      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:24.635241      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:25.635405      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:26.636140      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:27.636797      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:28.636963      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:12:29.104: INFO: init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-e261c305-0778-4e86-acfd-56170f68a340", GenerateName:"", Namespace:"init-container-4051", SelfLink:"", UID:"507cebb9-f3ee-4608-ba31-2f612ef8938b", ResourceVersion:"65324", Generation:0, CreationTimestamp:time.Date(2024, time.April, 20, 15, 11, 47, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"681297303"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 15, 11, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003d443c0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 15, 12, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003d443f0), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-lpvts", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc005a1aac0), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-lpvts", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-lpvts", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.9", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-lpvts", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc0039ca778), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"nok4chie7ate-3", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc0004fc1c0), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc0039ca800)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc0039ca820)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc0039ca828), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc0039ca82c), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc004174b30), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.April, 20, 15, 11, 48, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.April, 20, 15, 11, 47, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.April, 20, 15, 11, 47, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.April, 20, 15, 11, 47, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.April, 20, 15, 11, 47, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"192.168.121.8", HostIPs:[]v1.HostIP{v1.HostIP{IP:"192.168.121.8"}}, PodIP:"10.233.66.183", PodIPs:[]v1.PodIP{v1.PodIP{IP:"10.233.66.183"}}, StartTime:time.Date(2024, time.April, 20, 15, 11, 47, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0004fc540)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0004fc5b0)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:a9155b13325b2abef48e71de77bb8ac015412a566829f621d06bfae5c699b1b9", ContainerID:"cri-o://ee3734d914af6be1dafaa36718f58636911351ab4d14a9af03961c83939594cd", Started:(*bool)(0xc0039ca8cf), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc005a1ab40), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"", ContainerID:"", Started:(*bool)(0xc0039ca8d5), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc005a1ab00), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.9", ImageID:"", ContainerID:"", Started:(*bool)(0xc0039ca8a4), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  Apr 20 15:12:29.107: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-4051" for this suite. @ 04/20/24 15:12:29.116
• [41.486 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:141
  STEP: Creating a kubernetes client @ 04/20/24 15:12:29.131
  Apr 20 15:12:29.132: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename secrets @ 04/20/24 15:12:29.136
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:12:29.169
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:12:29.175
  STEP: Creating projection with secret that has name secret-emptykey-test-2db0598f-cf1a-4bf7-9dd6-c6b6a48478ff @ 04/20/24 15:12:29.18
  Apr 20 15:12:29.183: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9852" for this suite. @ 04/20/24 15:12:29.193
• [0.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:75
  STEP: Creating a kubernetes client @ 04/20/24 15:12:29.205
  Apr 20 15:12:29.205: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename projected @ 04/20/24 15:12:29.207
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:12:29.231
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:12:29.238
  STEP: Creating configMap with name projected-configmap-test-volume-91a35f86-7146-40fe-a967-e43d6e2f6a6f @ 04/20/24 15:12:29.243
  STEP: Creating a pod to test consume configMaps @ 04/20/24 15:12:29.255
  E0420 15:12:29.637723      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:30.639022      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 15:12:31.287
  Apr 20 15:12:31.292: INFO: Trying to get logs from node nok4chie7ate-3 pod pod-projected-configmaps-5c36fce4-5847-48db-9a62-6cd484f6c843 container agnhost-container: <nil>
  STEP: delete the pod @ 04/20/24 15:12:31.31
  Apr 20 15:12:31.333: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2039" for this suite. @ 04/20/24 15:12:31.343
• [2.148 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:168
  STEP: Creating a kubernetes client @ 04/20/24 15:12:31.353
  Apr 20 15:12:31.354: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename field-validation @ 04/20/24 15:12:31.357
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:12:31.382
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:12:31.388
  Apr 20 15:12:31.394: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  E0420 15:12:31.639080      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:32.639935      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:33.640061      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0420 15:12:34.155066      13 warnings.go:70] unknown field "alpha"
  W0420 15:12:34.156064      13 warnings.go:70] unknown field "beta"
  W0420 15:12:34.156082      13 warnings.go:70] unknown field "delta"
  W0420 15:12:34.156094      13 warnings.go:70] unknown field "epsilon"
  W0420 15:12:34.156103      13 warnings.go:70] unknown field "gamma"
  E0420 15:12:34.641084      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:12:34.770: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-8278" for this suite. @ 04/20/24 15:12:34.781
• [3.451 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:505
  STEP: Creating a kubernetes client @ 04/20/24 15:12:34.805
  Apr 20 15:12:34.805: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename configmap @ 04/20/24 15:12:34.808
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:12:34.839
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:12:34.849
  Apr 20 15:12:34.924: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8511" for this suite. @ 04/20/24 15:12:34.935
• [0.148 seconds]
------------------------------
SS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 04/20/24 15:12:34.953
  Apr 20 15:12:34.953: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 04/20/24 15:12:34.957
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:12:35
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:12:35.014
  STEP: creating a target pod @ 04/20/24 15:12:35.02
  E0420 15:12:35.641228      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:36.641571      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 04/20/24 15:12:37.076
  E0420 15:12:37.645749      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:38.643831      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 04/20/24 15:12:39.125
  Apr 20 15:12:39.126: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-7111 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 20 15:12:39.127: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  Apr 20 15:12:39.134: INFO: ExecWithOptions: Clientset creation
  Apr 20 15:12:39.135: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/ephemeral-containers-test-7111/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  Apr 20 15:12:39.233: INFO: Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 04/20/24 15:12:39.248
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 04/20/24 15:12:39.257
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 04/20/24 15:12:39.274
  Apr 20 15:12:39.290: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-7111" for this suite. @ 04/20/24 15:12:39.301
• [4.360 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 04/20/24 15:12:39.314
  Apr 20 15:12:39.314: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename cronjob @ 04/20/24 15:12:39.317
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:12:39.347
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:12:39.358
  STEP: Creating a ForbidConcurrent cronjob @ 04/20/24 15:12:39.363
  STEP: Ensuring a job is scheduled @ 04/20/24 15:12:39.375
  E0420 15:12:39.645691      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:40.644984      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:41.645130      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:42.645184      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:43.645854      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:44.646866      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:45.647560      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:46.647509      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:47.647917      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:48.648567      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:49.649069      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:50.649505      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:51.650028      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:52.650065      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:53.650606      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:54.650534      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:55.650873      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:56.652086      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:57.652051      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:58.652225      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:59.653262      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:00.653762      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 04/20/24 15:13:01.386
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 04/20/24 15:13:01.399
  STEP: Ensuring no more jobs are scheduled @ 04/20/24 15:13:01.404
  E0420 15:13:01.654124      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:02.655156      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:03.654907      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:04.655753      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:05.656707      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:06.657413      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:07.658242      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:08.658464      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:09.658839      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:10.658970      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:11.659832      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:12.660933      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:13.660734      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:14.661626      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:15.663395      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:16.664287      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:17.664147      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:18.664537      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:19.665113      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:20.665416      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:21.666231      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:22.666739      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:23.667162      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:24.668075      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:25.668560      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:26.669080      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:27.669213      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:28.669415      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:29.670038      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:30.670251      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:31.671220      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:32.671934      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:33.672043      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:34.672921      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:35.673210      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:36.673241      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:37.673463      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:38.673623      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:39.674635      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:40.675012      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:41.675578      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:42.676374      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:43.677048      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:44.677926      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:45.678034      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:46.678389      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:47.679191      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:48.680271      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:49.680479      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:50.682104      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:51.681521      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:52.681854      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:53.682420      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:54.682994      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:55.683822      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:56.684438      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:57.684598      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:58.685725      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:59.685589      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:00.685996      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:01.686825      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:02.687441      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:03.687610      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:04.687620      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:05.687988      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:06.688093      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:07.688367      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:08.688518      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:09.689505      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:10.690132      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:11.690182      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:12.693526      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:13.694394      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:14.694285      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:15.694419      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:16.694893      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:17.695892      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:18.696779      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:19.697444      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:20.698262      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:21.699306      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:22.699626      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:23.700806      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:24.701752      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:25.701981      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:26.702247      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:27.702333      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:28.702947      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:29.703834      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:30.703948      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:31.704616      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:32.705764      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:33.706195      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:34.707124      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:35.708147      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:36.708231      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:37.708889      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:38.709357      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:39.709183      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:40.709445      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:41.710117      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:42.710778      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:43.711851      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:44.712811      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:45.716311      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:46.716290      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:47.717060      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:48.717433      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:49.718493      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:50.719007      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:51.719114      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:52.720033      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:53.721120      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:54.721946      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:55.722865      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:56.723786      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:57.724401      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:58.724758      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:59.725207      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:00.725578      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:01.725984      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:02.726274      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:03.726487      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:04.727463      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:05.728348      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:06.729022      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:07.729326      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:08.730446      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:09.731083      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:10.731629      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:11.731815      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:12.732159      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:13.732727      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:14.733598      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:15.733790      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:16.733963      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:17.734993      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:18.735479      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:19.735576      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:20.736016      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:21.736795      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:22.737182      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:23.737287      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:24.738157      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:25.739108      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:26.739059      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:27.739624      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:28.740440      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:29.740520      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:30.740624      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:31.742025      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:32.742184      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:33.742621      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:34.742756      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:35.743600      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:36.744225      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:37.744263      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:38.744451      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:39.745034      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:40.745229      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:41.745368      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:42.745881      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:43.745914      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:44.746033      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:45.746615      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:46.747245      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:47.747878      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:48.748437      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:49.748521      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:50.749024      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:51.750053      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:52.751100      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:53.751155      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:54.751931      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:55.752195      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:56.752724      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:57.753343      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:58.754009      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:59.754809      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:00.755367      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:01.756233      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:02.756902      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:03.756907      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:04.757781      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:05.758436      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:06.758800      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:07.759334      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:08.759373      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:09.759609      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:10.759889      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:11.760776      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:12.761381      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:13.761955      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:14.762770      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:15.763554      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:16.763970      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:17.765108      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:18.765616      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:19.766828      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:20.767290      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:21.768163      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:22.768555      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:23.769448      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:24.770501      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:25.770692      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:26.771121      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:27.772069      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:28.772560      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:29.773103      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:30.773625      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:31.773824      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:32.773968      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:33.774127      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:34.775086      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:35.775431      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:36.778243      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:37.777124      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:38.777479      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:39.777487      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:40.777872      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:41.778123      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:42.778644      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:43.779509      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:44.780393      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:45.781220      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:46.781393      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:47.782122      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:48.784798      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:49.784175      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:50.783828      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:51.784584      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:52.785192      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:53.786005      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:54.786919      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:55.787816      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:56.789106      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:57.789062      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:58.789706      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:59.790724      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:00.791218      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:01.792193      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:02.792414      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:03.793273      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:04.794597      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:05.795475      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:06.795944      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:07.796044      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:08.796762      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:09.797521      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:10.797607      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:11.798756      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:12.799508      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:13.799854      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:14.799919      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:15.800083      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:16.800331      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:17.800788      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:18.801469      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:19.801627      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:20.802166      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:21.803101      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:22.803483      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:23.804322      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:24.805171      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:25.805100      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:26.805449      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:27.806102      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:28.806321      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:29.807469      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:30.807497      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:31.807566      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:32.808322      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:33.808503      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:34.810150      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:35.810917      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:36.811002      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:37.811956      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:38.812185      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:39.812641      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:40.812863      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:41.813257      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:42.813621      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:43.813994      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:44.814080      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:45.815201      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:46.815912      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:47.816274      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:48.816433      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:49.817266      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:50.817908      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:51.818152      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:52.819117      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:53.820147      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:54.821069      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:55.822168      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:56.822204      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:57.822993      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:58.823632      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:59.824709      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:00.825048      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing cronjob @ 04/20/24 15:18:01.446
  Apr 20 15:18:01.490: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-2596" for this suite. @ 04/20/24 15:18:01.511
• [322.215 seconds]
------------------------------
SSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 04/20/24 15:18:01.53
  Apr 20 15:18:01.530: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename cronjob @ 04/20/24 15:18:01.535
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:18:01.607
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:18:01.617
  STEP: Creating a suspended cronjob @ 04/20/24 15:18:01.63
  STEP: Ensuring no jobs are scheduled @ 04/20/24 15:18:01.644
  E0420 15:18:01.825395      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:02.825974      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:03.826630      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:04.827541      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:05.828573      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:06.828988      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:07.829213      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:08.829497      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:09.830566      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:10.831186      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:11.832432      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:12.832503      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:13.832836      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:14.832792      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:15.833038      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:16.833153      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:17.834159      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:18.835239      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:19.835432      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:20.835992      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:21.836382      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:22.837596      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:23.837597      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:24.837826      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:25.838484      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:26.839135      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:27.840382      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:28.839879      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:29.840787      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:30.841599      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:31.842920      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:32.842822      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:33.843884      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:34.844093      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:35.845069      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:36.845628      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:37.846391      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:38.847218      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:39.847802      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:40.848149      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:41.850837      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:42.850171      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:43.850970      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:44.852414      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:45.853275      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:46.854597      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:47.854229      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:48.854416      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:49.854501      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:50.854876      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:51.854962      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:52.855206      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:53.856185      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:54.857259      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:55.857646      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:56.857938      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:57.861221      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:58.858613      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:59.859055      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:00.859503      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:01.860485      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:02.861129      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:03.862294      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:04.863065      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:05.863803      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:06.864030      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:07.864584      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:08.865282      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:09.865148      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:10.865906      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:11.866867      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:12.867060      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:13.868120      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:14.868965      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:15.869135      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:16.869365      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:17.870237      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:18.871070      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:19.871532      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:20.872369      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:21.873363      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:22.873825      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:23.874207      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:24.875072      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:25.875207      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:26.875576      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:27.875894      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:28.876504      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:29.877383      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:30.878158      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:31.878620      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:32.879382      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:33.879649      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:34.879916      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:35.880487      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:36.881043      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:37.881457      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:38.882174      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:39.882797      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:40.883236      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:41.883298      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:42.883579      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:43.884396      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:44.885882      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:45.886144      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:46.886354      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:47.887439      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:48.887537      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:49.888654      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:50.889232      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:51.890168      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:52.890351      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:53.891210      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:54.892152      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:55.892356      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:56.893071      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:57.893203      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:58.893496      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:59.893549      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:00.894117      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:01.894067      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:02.894275      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:03.894484      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:04.895460      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:05.896147      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:06.896851      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:07.897642      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:08.898433      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:09.899116      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:10.899292      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:11.900111      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:12.900925      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:13.902264      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:14.902161      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:15.903153      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:16.903454      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:17.904216      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:18.904829      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:19.905740      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:20.906361      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:21.906715      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:22.907161      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:23.907569      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:24.907779      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:25.908949      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:26.909584      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:27.910115      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:28.910832      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:29.911989      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:30.917079      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:31.912406      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:32.912777      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:33.913432      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:34.914075      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:35.915177      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:36.915379      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:37.915839      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:38.919222      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:39.918745      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:40.916954      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:41.917248      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:42.917610      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:43.918436      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:44.918731      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:45.919157      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:46.919204      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:47.920282      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:48.920422      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:49.920562      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:50.921280      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:51.922260      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:52.922293      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:53.922583      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:54.922786      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:55.923651      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:56.923854      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:57.924800      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:58.925510      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:59.926530      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:00.927892      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:01.928498      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:02.929203      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:03.929402      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:04.929746      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:05.930489      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:06.931116      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:07.931648      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:08.932386      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:09.932978      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:10.933104      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:11.934196      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:12.936243      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:13.935426      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:14.935722      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:15.936017      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:16.936089      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:17.936403      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:18.937154      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:19.937387      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:20.938153      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:21.938916      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:22.940131      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:23.939399      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:24.940346      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:25.941114      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:26.941640      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:27.942132      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:28.942908      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:29.943516      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:30.943590      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:31.943932      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:32.944568      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:33.944860      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:34.945983      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:35.946356      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:36.947281      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:37.947992      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:38.948186      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:39.949259      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:40.949416      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:41.950607      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:42.950411      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:43.951238      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:44.952455      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:45.952709      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:46.952829      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:47.953794      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:48.954584      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:49.955230      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:50.955899      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:51.956631      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:52.956994      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:53.957574      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:54.959123      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:55.959270      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:56.959566      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:57.959814      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:58.960368      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:59.961119      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:00.961934      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:01.962012      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:02.962414      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:03.962973      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:04.963879      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:05.964224      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:06.964474      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:07.965446      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:08.965805      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:09.966528      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:10.966988      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:11.967842      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:12.968152      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:13.969053      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:14.970325      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:15.970232      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:16.970803      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:17.971627      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:18.979140      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:19.974634      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:20.975034      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:21.975312      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:22.976172      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:23.976325      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:24.976785      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:25.977874      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:26.978525      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:27.978614      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:28.979253      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:29.980126      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:30.981026      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:31.982131      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:32.983318      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:33.984453      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:34.983848      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:35.984789      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:36.985427      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:37.986170      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:38.986835      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:39.987798      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:40.988109      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:41.989124      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:42.990033      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:43.990423      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:44.991813      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:45.992494      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:46.992247      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:47.992850      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:48.994045      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:49.994173      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:50.994431      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:51.994807      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:53.000354      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:53.995878      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:54.996058      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:55.997046      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:56.998283      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:57.999077      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:58.999716      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:59.999988      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:23:01.000537      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring no job exists by listing jobs explicitly @ 04/20/24 15:23:01.666
  STEP: Removing cronjob @ 04/20/24 15:23:01.672
  Apr 20 15:23:01.688: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-1678" for this suite. @ 04/20/24 15:23:01.703
• [300.198 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:210
  STEP: Creating a kubernetes client @ 04/20/24 15:23:01.729
  Apr 20 15:23:01.729: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename webhook @ 04/20/24 15:23:01.734
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:23:01.777
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:23:01.783
  STEP: Setting up server cert @ 04/20/24 15:23:01.839
  E0420 15:23:02.000885      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:23:03.003891      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/20/24 15:23:03.538
  STEP: Deploying the webhook pod @ 04/20/24 15:23:03.555
  STEP: Wait for the deployment to be ready @ 04/20/24 15:23:03.583
  Apr 20 15:23:03.608: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0420 15:23:04.002808      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:23:05.003904      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/20/24 15:23:05.631
  STEP: Verifying the service has paired with the endpoint @ 04/20/24 15:23:05.659
  E0420 15:23:06.005149      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:23:06.659: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 04/20/24 15:23:06.675
  STEP: create a pod @ 04/20/24 15:23:06.719
  E0420 15:23:07.006357      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:23:08.006571      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 04/20/24 15:23:08.762
  Apr 20 15:23:08.764: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=webhook-6950 attach --namespace=webhook-6950 to-be-attached-pod -i -c=container1'
  E0420 15:23:09.006602      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:23:09.026: INFO: rc: 1
  Apr 20 15:23:09.157: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6950" for this suite. @ 04/20/24 15:23:09.223
  STEP: Destroying namespace "webhook-markers-2265" for this suite. @ 04/20/24 15:23:09.24
• [7.534 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:117
  STEP: Creating a kubernetes client @ 04/20/24 15:23:09.269
  Apr 20 15:23:09.269: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename field-validation @ 04/20/24 15:23:09.273
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:23:09.312
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:23:09.321
  STEP: apply creating a deployment @ 04/20/24 15:23:09.339
  Apr 20 15:23:09.426: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-5196" for this suite. @ 04/20/24 15:23:09.444
• [0.201 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:400
  STEP: Creating a kubernetes client @ 04/20/24 15:23:09.471
  Apr 20 15:23:09.471: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename namespaces @ 04/20/24 15:23:09.474
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:23:09.499
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:23:09.504
  STEP: Creating namespace "e2e-ns-flsct" @ 04/20/24 15:23:09.509
  Apr 20 15:23:09.531: INFO: Namespace "e2e-ns-flsct-2350" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-flsct-2350" @ 04/20/24 15:23:09.531
  Apr 20 15:23:09.550: INFO: Namespace "e2e-ns-flsct-2350" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-flsct-2350" @ 04/20/24 15:23:09.55
  Apr 20 15:23:09.566: INFO: Namespace "e2e-ns-flsct-2350" has []v1.FinalizerName{"kubernetes"}
  Apr 20 15:23:09.566: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-4818" for this suite. @ 04/20/24 15:23:09.576
  STEP: Destroying namespace "e2e-ns-flsct-2350" for this suite. @ 04/20/24 15:23:09.589
• [0.130 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:276
  STEP: Creating a kubernetes client @ 04/20/24 15:23:09.605
  Apr 20 15:23:09.605: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/20/24 15:23:09.608
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:23:09.63
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:23:09.637
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 04/20/24 15:23:09.641
  Apr 20 15:23:09.642: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  E0420 15:23:10.007028      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:23:11.007874      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:23:12.024254      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:23:12.886: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  E0420 15:23:13.025347      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:23:14.025827      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:23:15.026516      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:23:16.026702      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:23:17.027566      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:23:18.031919      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:23:19.032133      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:23:20.032192      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:23:21.033094      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:23:22.034220      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:23:23.034319      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:23:24.035088      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:23:25.035754      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:23:26.036773      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:23:26.600: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3908" for this suite. @ 04/20/24 15:23:26.628
• [17.038 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 04/20/24 15:23:26.644
  Apr 20 15:23:26.644: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename pods @ 04/20/24 15:23:26.648
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:23:26.678
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:23:26.683
  STEP: creating the pod @ 04/20/24 15:23:26.689
  STEP: submitting the pod to kubernetes @ 04/20/24 15:23:26.689
  STEP: verifying QOS class is set on the pod @ 04/20/24 15:23:26.708
  Apr 20 15:23:26.718: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6186" for this suite. @ 04/20/24 15:23:26.727
• [0.099 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:69
  STEP: Creating a kubernetes client @ 04/20/24 15:23:26.744
  Apr 20 15:23:26.744: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/20/24 15:23:26.748
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:23:26.781
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:23:26.786
  Apr 20 15:23:26.792: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  E0420 15:23:27.037258      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:23:28.037716      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:23:29.038496      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 04/20/24 15:23:29.907
  Apr 20 15:23:29.908: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=crd-publish-openapi-2542 --namespace=crd-publish-openapi-2542 create -f -'
  E0420 15:23:30.038747      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:23:30.356: INFO: stderr: ""
  Apr 20 15:23:30.356: INFO: stdout: "e2e-test-crd-publish-openapi-6960-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  Apr 20 15:23:30.357: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=crd-publish-openapi-2542 --namespace=crd-publish-openapi-2542 delete e2e-test-crd-publish-openapi-6960-crds test-foo'
  Apr 20 15:23:30.537: INFO: stderr: ""
  Apr 20 15:23:30.537: INFO: stdout: "e2e-test-crd-publish-openapi-6960-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  Apr 20 15:23:30.538: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=crd-publish-openapi-2542 --namespace=crd-publish-openapi-2542 apply -f -'
  Apr 20 15:23:30.844: INFO: stderr: ""
  Apr 20 15:23:30.844: INFO: stdout: "e2e-test-crd-publish-openapi-6960-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  Apr 20 15:23:30.845: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=crd-publish-openapi-2542 --namespace=crd-publish-openapi-2542 delete e2e-test-crd-publish-openapi-6960-crds test-foo'
  Apr 20 15:23:31.034: INFO: stderr: ""
  Apr 20 15:23:31.034: INFO: stdout: "e2e-test-crd-publish-openapi-6960-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 04/20/24 15:23:31.034
  Apr 20 15:23:31.034: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=crd-publish-openapi-2542 --namespace=crd-publish-openapi-2542 create -f -'
  E0420 15:23:31.039354      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:23:31.187: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 04/20/24 15:23:31.187
  Apr 20 15:23:31.187: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=crd-publish-openapi-2542 --namespace=crd-publish-openapi-2542 create -f -'
  Apr 20 15:23:31.346: INFO: rc: 1
  Apr 20 15:23:31.347: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=crd-publish-openapi-2542 --namespace=crd-publish-openapi-2542 apply -f -'
  Apr 20 15:23:31.515: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 04/20/24 15:23:31.515
  Apr 20 15:23:31.515: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=crd-publish-openapi-2542 --namespace=crd-publish-openapi-2542 create -f -'
  Apr 20 15:23:31.672: INFO: rc: 1
  Apr 20 15:23:31.673: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=crd-publish-openapi-2542 --namespace=crd-publish-openapi-2542 apply -f -'
  Apr 20 15:23:31.853: INFO: rc: 1
  STEP: kubectl explain works to explain CR properties @ 04/20/24 15:23:31.853
  Apr 20 15:23:31.854: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=crd-publish-openapi-2542 explain e2e-test-crd-publish-openapi-6960-crds'
  Apr 20 15:23:32.012: INFO: stderr: ""
  Apr 20 15:23:32.012: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-6960-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 04/20/24 15:23:32.013
  Apr 20 15:23:32.014: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=crd-publish-openapi-2542 explain e2e-test-crd-publish-openapi-6960-crds.metadata'
  E0420 15:23:32.039701      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:23:32.202: INFO: stderr: ""
  Apr 20 15:23:32.202: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-6960-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  Apr 20 15:23:32.203: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=crd-publish-openapi-2542 explain e2e-test-crd-publish-openapi-6960-crds.spec'
  Apr 20 15:23:32.366: INFO: stderr: ""
  Apr 20 15:23:32.366: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-6960-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  Apr 20 15:23:32.367: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=crd-publish-openapi-2542 explain e2e-test-crd-publish-openapi-6960-crds.spec.bars'
  Apr 20 15:23:32.538: INFO: stderr: ""
  Apr 20 15:23:32.538: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-6960-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 04/20/24 15:23:32.539
  Apr 20 15:23:32.539: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=crd-publish-openapi-2542 explain e2e-test-crd-publish-openapi-6960-crds.spec.bars2'
  Apr 20 15:23:32.703: INFO: rc: 1
  E0420 15:23:33.040489      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:23:34.040605      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:23:35.054387      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:23:35.575: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2542" for this suite. @ 04/20/24 15:23:35.593
• [8.860 seconds]
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 04/20/24 15:23:35.604
  Apr 20 15:23:35.604: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename csiinlinevolumes @ 04/20/24 15:23:35.606
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:23:35.64
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:23:35.645
  STEP: Creating two CSIDrivers @ 04/20/24 15:23:35.65
  STEP: Getting "inline-driver-d532d5da-e2e0-41a9-817a-d994b28b702f" & "inline-driver-7626cb6c-22bf-4c06-91c0-c8d7f633f567" @ 04/20/24 15:23:35.686
  STEP: Patching the CSIDriver "inline-driver-7626cb6c-22bf-4c06-91c0-c8d7f633f567" @ 04/20/24 15:23:35.698
  STEP: Updating the CSIDriver "inline-driver-7626cb6c-22bf-4c06-91c0-c8d7f633f567" @ 04/20/24 15:23:35.718
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-9598" @ 04/20/24 15:23:35.734
  STEP: Deleting CSIDriver "inline-driver-d532d5da-e2e0-41a9-817a-d994b28b702f" @ 04/20/24 15:23:35.74
  STEP: Confirm deletion of CSIDriver "inline-driver-d532d5da-e2e0-41a9-817a-d994b28b702f" @ 04/20/24 15:23:35.752
  STEP: Deleting CSIDriver "inline-driver-7626cb6c-22bf-4c06-91c0-c8d7f633f567" via DeleteCollection @ 04/20/24 15:23:35.758
  STEP: Confirm deletion of CSIDriver "inline-driver-7626cb6c-22bf-4c06-91c0-c8d7f633f567" @ 04/20/24 15:23:35.772
  Apr 20 15:23:35.777: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-9598" for this suite. @ 04/20/24 15:23:35.786
• [0.194 seconds]
------------------------------
SS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:166
  STEP: Creating a kubernetes client @ 04/20/24 15:23:35.798
  Apr 20 15:23:35.798: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename replicaset @ 04/20/24 15:23:35.8
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:23:35.85
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:23:35.854
  STEP: Create a ReplicaSet @ 04/20/24 15:23:35.858
  STEP: Verify that the required pods have come up @ 04/20/24 15:23:35.868
  Apr 20 15:23:35.874: INFO: Pod name sample-pod: Found 0 pods out of 3
  E0420 15:23:36.054878      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:23:37.055066      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:23:38.056145      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:23:39.056153      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:23:40.057139      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:23:40.884: INFO: Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 04/20/24 15:23:40.885
  Apr 20 15:23:40.893: INFO: Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 04/20/24 15:23:40.893
  STEP: DeleteCollection of the ReplicaSets @ 04/20/24 15:23:40.905
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 04/20/24 15:23:40.927
  Apr 20 15:23:40.933: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-2242" for this suite. @ 04/20/24 15:23:40.949
• [5.169 seconds]
------------------------------
SS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:321
  STEP: Creating a kubernetes client @ 04/20/24 15:23:40.966
  Apr 20 15:23:40.967: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename statefulset @ 04/20/24 15:23:40.971
  E0420 15:23:41.057636      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:23:41.097
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:23:41.103
  STEP: Creating service test in namespace statefulset-1912 @ 04/20/24 15:23:41.109
  STEP: Creating a new StatefulSet @ 04/20/24 15:23:41.118
  Apr 20 15:23:41.141: INFO: Found 0 stateful pods, waiting for 3
  E0420 15:23:42.058282      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:23:43.059293      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:23:44.060404      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:23:45.060831      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:23:46.061513      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:23:47.061618      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:23:48.062361      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:23:49.062472      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:23:50.063136      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:23:51.064300      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:23:51.144: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Apr 20 15:23:51.144: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Apr 20 15:23:51.144: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  Apr 20 15:23:51.185: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=statefulset-1912 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Apr 20 15:23:51.493: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Apr 20 15:23:51.493: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Apr 20 15:23:51.493: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E0420 15:23:52.065235      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:23:53.065312      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:23:54.065496      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:23:55.066105      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:23:56.067121      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:23:57.068312      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:23:58.069883      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:23:59.070714      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:00.071619      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:01.071820      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 04/20/24 15:24:01.51
  Apr 20 15:24:01.544: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 04/20/24 15:24:01.544
  E0420 15:24:02.072874      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:03.073193      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:04.073850      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:05.078257      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:06.076583      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:07.077075      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:08.077363      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:09.079303      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:10.077986      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:11.078405      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating Pods in reverse ordinal order @ 04/20/24 15:24:11.561
  Apr 20 15:24:11.569: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=statefulset-1912 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Apr 20 15:24:11.849: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Apr 20 15:24:11.849: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Apr 20 15:24:11.849: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E0420 15:24:12.079564      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:13.082787      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:14.082733      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:15.082867      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:16.083136      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:17.084161      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:18.084931      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:19.085401      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:20.086949      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:21.086783      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Rolling back to a previous revision @ 04/20/24 15:24:21.911
  Apr 20 15:24:21.913: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=statefulset-1912 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E0420 15:24:22.087697      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:24:22.264: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Apr 20 15:24:22.264: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Apr 20 15:24:22.264: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E0420 15:24:23.100007      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:24.092238      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:25.093072      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:26.093801      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:27.093970      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:28.095013      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:29.095828      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:30.095814      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:31.095969      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:32.096639      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:24:32.310: INFO: Updating stateful set ss2
  E0420 15:24:33.096989      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:34.097596      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:35.098339      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:36.098526      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:37.098826      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:38.100019      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:39.100493      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:40.100757      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:41.101259      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:42.101734      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Rolling back update in reverse ordinal order @ 04/20/24 15:24:42.328
  Apr 20 15:24:42.337: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=statefulset-1912 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Apr 20 15:24:42.649: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Apr 20 15:24:42.649: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Apr 20 15:24:42.649: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E0420 15:24:43.102239      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:44.102496      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:45.102840      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:46.103874      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:47.104249      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:48.105086      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:49.105500      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:50.105906      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:51.106299      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:52.106328      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:24:52.680: INFO: Deleting all statefulset in ns statefulset-1912
  Apr 20 15:24:52.686: INFO: Scaling statefulset ss2 to 0
  E0420 15:24:53.107488      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:54.108195      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:55.108961      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:56.109115      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:57.109239      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:58.110118      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:59.110648      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:00.110770      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:01.110843      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:02.111889      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:25:02.724: INFO: Waiting for statefulset status.replicas updated to 0
  Apr 20 15:25:02.730: INFO: Deleting statefulset ss2
  Apr 20 15:25:02.758: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1912" for this suite. @ 04/20/24 15:25:02.769
• [81.816 seconds]
------------------------------
S
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:176
  STEP: Creating a kubernetes client @ 04/20/24 15:25:02.784
  Apr 20 15:25:02.784: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename configmap @ 04/20/24 15:25:02.791
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:25:02.844
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:25:02.849
  STEP: Creating configMap with name configmap-test-upd-19213644-6eb8-47ab-8786-32cce671bdea @ 04/20/24 15:25:02.862
  STEP: Creating the pod @ 04/20/24 15:25:02.87
  E0420 15:25:03.112788      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:04.113116      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for pod with text data @ 04/20/24 15:25:04.91
  STEP: Waiting for pod with binary data @ 04/20/24 15:25:04.961
  Apr 20 15:25:04.979: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6134" for this suite. @ 04/20/24 15:25:04.989
• [2.220 seconds]
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 04/20/24 15:25:05.004
  Apr 20 15:25:05.004: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename deployment @ 04/20/24 15:25:05.007
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:25:05.04
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:25:05.045
  Apr 20 15:25:05.069: INFO: Pod name cleanup-pod: Found 0 pods out of 1
  E0420 15:25:05.113305      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:06.113457      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:07.114596      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:08.114424      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:09.115091      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:25:10.083: INFO: Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 04/20/24 15:25:10.083
  Apr 20 15:25:10.083: INFO: Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 04/20/24 15:25:10.111
  E0420 15:25:10.115148      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:25:10.141: INFO: Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8827",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "dce3bcce-d774-4e0b-89b8-8dc1b88c8849",
      ResourceVersion: (string) (len=5) "67503",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849223510,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849223510,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 0,
      Replicas: (int32) 0,
      UpdatedReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) <nil>,
      CollisionCount: (*int32)(<nil>)
    }
  }


  Apr 20 15:25:10.152: INFO: New ReplicaSet of Deployment "test-cleanup-deployment" is nil.
  Apr 20 15:25:10.152: INFO: All old ReplicaSets of Deployment "test-cleanup-deployment":
  Apr 20 15:25:10.153: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8827",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3cfba95a-a390-431a-a2fa-12f4adf09876",
      ResourceVersion: (string) (len=5) "67506",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849223505,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "dce3bcce-d774-4e0b-89b8-8dc1b88c8849",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849223505,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=483) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000050  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000060  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000070  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000080  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000090  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              000000a0  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000b0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000c0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000d0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000f0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000100  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000110  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000120  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000130  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000140  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000160  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000170  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000180  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000190  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000001a0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001b0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001c0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001d0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001e0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849223506,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849223510,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=103) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000020  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000030  22 75 69 64 5c 22 3a 5c  22 64 63 65 33 62 63 63  |"uid\":\"dce3bcc|
              00000040  65 2d 64 37 37 34 2d 34  65 30 62 2d 38 39 62 38  |e-d774-4e0b-89b8|
              00000050  2d 38 64 63 31 62 38 38  63 38 38 34 39 5c 22 7d  |-8dc1b88c8849\"}|
              00000060  22 3a 7b 7d 7d 7d 7d                              |":{}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 20 15:25:10.164: INFO: Pod "test-cleanup-controller-fbsr7" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=29) "test-cleanup-controller-fbsr7",
      GenerateName: (string) (len=24) "test-cleanup-controller-",
      Namespace: (string) (len=15) "deployment-8827",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "091d6cf2-4d61-47bc-89dc-22e1b6291a86",
      ResourceVersion: (string) (len=5) "67430",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849223505,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=23) "test-cleanup-controller",
          UID: (types.UID) (len=36) "3cfba95a-a390-431a-a2fa-12f4adf09876",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849223505,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=500) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 2c 22 66  |},"f:pod":{}},"f|
              00000050  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000060  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000070  75 69 64 5c 22 3a 5c 22  33 63 66 62 61 39 35 61  |uid\":\"3cfba95a|
              00000080  2d 61 33 39 30 2d 34 33  31 61 2d 61 32 66 61 2d  |-a390-431a-a2fa-|
              00000090  31 32 66 34 61 64 66 30  39 38 37 36 5c 22 7d 22  |12f4adf09876\"}"|
              000000a0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000b0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000c0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              000000d0  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              000000e0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              000000f0  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000100  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000110  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000120  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000130  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000140  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000150  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000160  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              00000170  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              00000180  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              00000190  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001a0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001b0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001c0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              000001d0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              000001e0  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              000001f0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849223506,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 36 2e  31 39 34 5c 22 7d 22 3a  |.233.66.194\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-b6tv5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-b6tv5",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)(<nil>),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "nok4chie7ate-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849223506,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849223505,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849223506,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849223506,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849223505,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "192.168.121.8",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "192.168.121.8"
        }
      },
      PodIP: (string) (len=13) "10.233.66.194",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.66.194"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849223505,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849223505,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://54661fc176d2d792c1ed88747d389e65b2e00f286496602bd4b50d2013d49ff6",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 15:25:10.176: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-8827" for this suite. @ 04/20/24 15:25:10.186
• [5.221 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:818
  STEP: Creating a kubernetes client @ 04/20/24 15:25:10.226
  Apr 20 15:25:10.226: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename gc @ 04/20/24 15:25:10.234
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:25:10.275
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:25:10.283
  Apr 20 15:25:10.362: INFO: pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"8984b030-3757-4b72-ba8f-2ab17c8a7c74", Controller:(*bool)(0xc001ffe1b6), BlockOwnerDeletion:(*bool)(0xc001ffe1b7)}}
  Apr 20 15:25:10.377: INFO: pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"e97dbbe5-40f7-4f23-9aaf-39c65d9c8444", Controller:(*bool)(0xc002e95fe6), BlockOwnerDeletion:(*bool)(0xc002e95fe7)}}
  Apr 20 15:25:10.390: INFO: pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"70bff099-bc37-4499-ba9f-a5fd5322fb6b", Controller:(*bool)(0xc002d1a216), BlockOwnerDeletion:(*bool)(0xc002d1a217)}}
  E0420 15:25:11.115359      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:12.115755      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:13.116411      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:14.117272      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:15.118264      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:25:15.419: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-9151" for this suite. @ 04/20/24 15:25:15.43
• [5.219 seconds]
------------------------------
SSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:812
  STEP: Creating a kubernetes client @ 04/20/24 15:25:15.445
  Apr 20 15:25:15.445: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename sched-preemption @ 04/20/24 15:25:15.451
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:25:15.497
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:25:15.504
  Apr 20 15:25:15.533: INFO: Waiting up to 1m0s for all nodes to be ready
  E0420 15:25:16.119442      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:17.119524      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:18.121061      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:19.120923      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:20.121084      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:21.121639      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:22.121811      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:23.122766      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:24.122946      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:25.123284      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:26.123551      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:27.124336      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:28.125172      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:29.126321      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:30.126359      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:31.127026      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:32.127414      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:33.127815      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:34.128134      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:35.129072      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:36.133458      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:37.130428      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:38.131728      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:39.131102      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:40.131142      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:41.131257      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:42.131592      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:43.131863      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:44.133046      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:45.133301      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:46.133557      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:47.133628      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:48.134739      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:49.135140      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:50.135837      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:51.136049      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:52.136234      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:53.137866      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:54.137569      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:55.138633      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:56.139096      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:57.139102      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:58.139889      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:59.140174      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:00.140352      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:01.140544      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:02.140826      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:03.141370      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:04.141564      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:05.141966      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:06.142786      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:07.143248      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:08.143577      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:09.144552      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:10.145754      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:11.146651      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:12.147885      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:13.148621      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:14.150148      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:15.150276      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:26:15.547: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 04/20/24 15:26:15.556
  Apr 20 15:26:15.556: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename sched-preemption-path @ 04/20/24 15:26:15.562
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:26:15.597
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:26:15.602
  Apr 20 15:26:15.636: INFO: PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  Apr 20 15:26:15.644: INFO: PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  Apr 20 15:26:15.783: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-7887" for this suite. @ 04/20/24 15:26:15.791
  Apr 20 15:26:15.810: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-5811" for this suite. @ 04/20/24 15:26:15.818
• [60.383 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:228
  STEP: Creating a kubernetes client @ 04/20/24 15:26:15.83
  Apr 20 15:26:15.830: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename var-expansion @ 04/20/24 15:26:15.833
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:26:15.865
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:26:15.87
  STEP: creating the pod with failed condition @ 04/20/24 15:26:15.875
  E0420 15:26:16.151440      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:17.152441      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:18.153647      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:19.153796      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:20.154846      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:21.155580      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:22.156852      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:23.156875      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:24.157441      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:25.157339      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:26.159057      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:27.158508      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:28.159127      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:29.159775      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:30.160034      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:31.160957      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:32.161279      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:33.162076      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:34.162641      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:35.163020      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:36.163252      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:37.163429      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:38.164235      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:39.164938      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:40.165128      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:41.165837      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:42.165933      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:43.166587      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:44.166878      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:45.167879      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:46.168971      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:47.169239      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:48.169991      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:49.170159      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:50.171061      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:51.171469      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:52.171745      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:53.172411      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:54.173030      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:55.173354      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:56.174098      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:57.174443      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:58.175469      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:59.175916      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:00.176790      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:01.177328      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:02.177759      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:03.178924      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:04.179635      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:05.180888      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:06.181146      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:07.181872      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:08.182192      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:09.182804      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:10.183720      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:11.184044      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:12.184103      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:13.184259      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:14.184427      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:15.185557      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:16.185842      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:17.186047      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:18.187047      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:19.187914      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:20.187842      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:21.188754      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:22.189311      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:23.190398      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:24.191172      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:25.192190      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:26.192601      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:27.193626      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:28.194620      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:29.195225      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:30.196488      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:31.197302      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:32.198036      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:33.198917      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:34.200421      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:35.199842      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:36.199944      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:37.200517      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:38.200510      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:39.200926      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:40.201053      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:41.201299      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:42.201818      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:43.202382      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:44.203057      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:45.203558      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:46.203969      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:47.204138      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:48.205261      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:49.207625      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:50.207445      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:51.208174      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:52.208705      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:53.208840      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:54.209337      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:55.209840      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:56.210541      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:57.211623      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:58.211753      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:59.212095      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:00.212441      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:01.213438      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:02.214134      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:03.214441      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:04.215127      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:05.216103      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:06.216583      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:07.216818      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:08.217835      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:09.218152      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:10.219282      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:11.220268      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:12.221587      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:13.220761      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:14.221382      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:15.221513      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: updating the pod @ 04/20/24 15:28:15.892
  E0420 15:28:16.221957      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:28:16.440: INFO: Successfully updated pod "var-expansion-817e5ced-b65a-4fa1-bae8-9080a32956ad"
  STEP: waiting for pod running @ 04/20/24 15:28:16.44
  E0420 15:28:17.222944      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:18.223777      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 04/20/24 15:28:18.459
  Apr 20 15:28:18.459: INFO: Deleting pod "var-expansion-817e5ced-b65a-4fa1-bae8-9080a32956ad" in namespace "var-expansion-8314"
  Apr 20 15:28:18.474: INFO: Wait up to 5m0s for pod "var-expansion-817e5ced-b65a-4fa1-bae8-9080a32956ad" to be fully deleted
  E0420 15:28:19.224356      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:20.230485      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:21.226110      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:22.226914      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:23.227175      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:24.228162      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:25.228834      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:26.229196      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:27.229490      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:28.230468      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:29.230852      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:30.231569      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:31.233280      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:32.233790      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:33.234097      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:34.234571      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:35.235755      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:36.236186      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:37.237000      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:38.237918      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:39.239490      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:40.239005      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:41.239297      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:42.240164      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:43.240197      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:44.240645      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:45.240806      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:46.241140      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:47.241395      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:48.242108      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:49.242882      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:50.243553      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:28:50.643: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-8314" for this suite. @ 04/20/24 15:28:50.655
• [154.838 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:164
  STEP: Creating a kubernetes client @ 04/20/24 15:28:50.669
  Apr 20 15:28:50.669: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename disruption @ 04/20/24 15:28:50.673
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:28:50.707
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:28:50.712
  STEP: Waiting for the pdb to be processed @ 04/20/24 15:28:50.727
  E0420 15:28:51.244093      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:52.244210      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating PodDisruptionBudget status @ 04/20/24 15:28:52.737
  STEP: Waiting for all pods to be running @ 04/20/24 15:28:52.756
  Apr 20 15:28:52.765: INFO: running pods: 0 < 1
  E0420 15:28:53.245105      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:54.246286      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 04/20/24 15:28:54.765
  STEP: Waiting for the pdb to be processed @ 04/20/24 15:28:54.792
  STEP: Patching PodDisruptionBudget status @ 04/20/24 15:28:54.814
  STEP: Waiting for the pdb to be processed @ 04/20/24 15:28:54.835
  Apr 20 15:28:54.842: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2972" for this suite. @ 04/20/24 15:28:54.855
• [4.200 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:86
  STEP: Creating a kubernetes client @ 04/20/24 15:28:54.87
  Apr 20 15:28:54.870: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename downward-api @ 04/20/24 15:28:54.874
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:28:54.923
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:28:54.928
  STEP: Creating a pod to test downward API volume plugin @ 04/20/24 15:28:54.934
  E0420 15:28:55.246609      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:56.247089      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:57.247813      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:58.247867      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 15:28:59
  Apr 20 15:28:59.008: INFO: Trying to get logs from node nok4chie7ate-3 pod downwardapi-volume-47eafe1b-80b7-404c-bb5e-089dfc1d286f container client-container: <nil>
  STEP: delete the pod @ 04/20/24 15:28:59.042
  Apr 20 15:28:59.071: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-814" for this suite. @ 04/20/24 15:28:59.081
• [4.224 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 04/20/24 15:28:59.094
  Apr 20 15:28:59.094: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename deployment @ 04/20/24 15:28:59.096
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:28:59.132
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:28:59.137
  STEP: creating a Deployment @ 04/20/24 15:28:59.15
  STEP: waiting for Deployment to be created @ 04/20/24 15:28:59.161
  STEP: waiting for all Replicas to be Ready @ 04/20/24 15:28:59.164
  Apr 20 15:28:59.166: INFO: observed Deployment test-deployment in namespace deployment-8911 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Apr 20 15:28:59.167: INFO: observed Deployment test-deployment in namespace deployment-8911 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Apr 20 15:28:59.218: INFO: observed Deployment test-deployment in namespace deployment-8911 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Apr 20 15:28:59.218: INFO: observed Deployment test-deployment in namespace deployment-8911 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  E0420 15:28:59.247964      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:28:59.286: INFO: observed Deployment test-deployment in namespace deployment-8911 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Apr 20 15:28:59.286: INFO: observed Deployment test-deployment in namespace deployment-8911 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Apr 20 15:28:59.331: INFO: observed Deployment test-deployment in namespace deployment-8911 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Apr 20 15:28:59.331: INFO: observed Deployment test-deployment in namespace deployment-8911 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Apr 20 15:29:00.152: INFO: observed Deployment test-deployment in namespace deployment-8911 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  Apr 20 15:29:00.153: INFO: observed Deployment test-deployment in namespace deployment-8911 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  E0420 15:29:00.248594      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:01.248962      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:29:01.870: INFO: observed Deployment test-deployment in namespace deployment-8911 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 04/20/24 15:29:01.87
  Apr 20 15:29:01.907: INFO: observed event type ADDED
  STEP: waiting for Replicas to scale @ 04/20/24 15:29:01.908
  Apr 20 15:29:01.912: INFO: observed Deployment test-deployment in namespace deployment-8911 with ReadyReplicas 0
  Apr 20 15:29:01.912: INFO: observed Deployment test-deployment in namespace deployment-8911 with ReadyReplicas 0
  Apr 20 15:29:01.912: INFO: observed Deployment test-deployment in namespace deployment-8911 with ReadyReplicas 0
  Apr 20 15:29:01.912: INFO: observed Deployment test-deployment in namespace deployment-8911 with ReadyReplicas 0
  Apr 20 15:29:01.912: INFO: observed Deployment test-deployment in namespace deployment-8911 with ReadyReplicas 0
  Apr 20 15:29:01.912: INFO: observed Deployment test-deployment in namespace deployment-8911 with ReadyReplicas 0
  Apr 20 15:29:01.913: INFO: observed Deployment test-deployment in namespace deployment-8911 with ReadyReplicas 0
  Apr 20 15:29:01.913: INFO: observed Deployment test-deployment in namespace deployment-8911 with ReadyReplicas 0
  Apr 20 15:29:01.913: INFO: observed Deployment test-deployment in namespace deployment-8911 with ReadyReplicas 1
  Apr 20 15:29:01.913: INFO: observed Deployment test-deployment in namespace deployment-8911 with ReadyReplicas 1
  Apr 20 15:29:01.913: INFO: observed Deployment test-deployment in namespace deployment-8911 with ReadyReplicas 2
  Apr 20 15:29:01.914: INFO: observed Deployment test-deployment in namespace deployment-8911 with ReadyReplicas 2
  Apr 20 15:29:01.914: INFO: observed Deployment test-deployment in namespace deployment-8911 with ReadyReplicas 2
  Apr 20 15:29:01.914: INFO: observed Deployment test-deployment in namespace deployment-8911 with ReadyReplicas 2
  Apr 20 15:29:01.953: INFO: observed Deployment test-deployment in namespace deployment-8911 with ReadyReplicas 2
  Apr 20 15:29:01.953: INFO: observed Deployment test-deployment in namespace deployment-8911 with ReadyReplicas 2
  Apr 20 15:29:02.025: INFO: observed Deployment test-deployment in namespace deployment-8911 with ReadyReplicas 2
  Apr 20 15:29:02.025: INFO: observed Deployment test-deployment in namespace deployment-8911 with ReadyReplicas 2
  Apr 20 15:29:02.113: INFO: observed Deployment test-deployment in namespace deployment-8911 with ReadyReplicas 1
  Apr 20 15:29:02.114: INFO: observed Deployment test-deployment in namespace deployment-8911 with ReadyReplicas 1
  Apr 20 15:29:02.140: INFO: observed Deployment test-deployment in namespace deployment-8911 with ReadyReplicas 1
  Apr 20 15:29:02.140: INFO: observed Deployment test-deployment in namespace deployment-8911 with ReadyReplicas 1
  E0420 15:29:02.249937      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:29:03.195: INFO: observed Deployment test-deployment in namespace deployment-8911 with ReadyReplicas 2
  Apr 20 15:29:03.195: INFO: observed Deployment test-deployment in namespace deployment-8911 with ReadyReplicas 2
  E0420 15:29:03.250912      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:29:03.272: INFO: observed Deployment test-deployment in namespace deployment-8911 with ReadyReplicas 1
  STEP: listing Deployments @ 04/20/24 15:29:03.272
  Apr 20 15:29:03.280: INFO: Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 04/20/24 15:29:03.28
  Apr 20 15:29:03.315: INFO: observed Deployment test-deployment in namespace deployment-8911 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 04/20/24 15:29:03.316
  Apr 20 15:29:03.336: INFO: observed Deployment test-deployment in namespace deployment-8911 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Apr 20 15:29:03.365: INFO: observed Deployment test-deployment in namespace deployment-8911 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Apr 20 15:29:03.462: INFO: observed Deployment test-deployment in namespace deployment-8911 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Apr 20 15:29:03.521: INFO: observed Deployment test-deployment in namespace deployment-8911 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Apr 20 15:29:03.552: INFO: observed Deployment test-deployment in namespace deployment-8911 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Apr 20 15:29:04.246: INFO: observed Deployment test-deployment in namespace deployment-8911 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  E0420 15:29:04.251220      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:29:04.298: INFO: observed Deployment test-deployment in namespace deployment-8911 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Apr 20 15:29:04.325: INFO: observed Deployment test-deployment in namespace deployment-8911 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Apr 20 15:29:04.350: INFO: observed Deployment test-deployment in namespace deployment-8911 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Apr 20 15:29:04.368: INFO: observed Deployment test-deployment in namespace deployment-8911 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  E0420 15:29:05.251547      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:29:05.637: INFO: observed Deployment test-deployment in namespace deployment-8911 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 04/20/24 15:29:05.696
  STEP: fetching the DeploymentStatus @ 04/20/24 15:29:05.718
  Apr 20 15:29:05.730: INFO: observed Deployment test-deployment in namespace deployment-8911 with ReadyReplicas 1
  Apr 20 15:29:05.732: INFO: observed Deployment test-deployment in namespace deployment-8911 with ReadyReplicas 1
  Apr 20 15:29:05.733: INFO: observed Deployment test-deployment in namespace deployment-8911 with ReadyReplicas 1
  Apr 20 15:29:05.733: INFO: observed Deployment test-deployment in namespace deployment-8911 with ReadyReplicas 1
  Apr 20 15:29:05.733: INFO: observed Deployment test-deployment in namespace deployment-8911 with ReadyReplicas 1
  Apr 20 15:29:05.733: INFO: observed Deployment test-deployment in namespace deployment-8911 with ReadyReplicas 2
  Apr 20 15:29:05.733: INFO: observed Deployment test-deployment in namespace deployment-8911 with ReadyReplicas 2
  Apr 20 15:29:05.734: INFO: observed Deployment test-deployment in namespace deployment-8911 with ReadyReplicas 2
  Apr 20 15:29:05.734: INFO: observed Deployment test-deployment in namespace deployment-8911 with ReadyReplicas 2
  Apr 20 15:29:05.734: INFO: observed Deployment test-deployment in namespace deployment-8911 with ReadyReplicas 2
  Apr 20 15:29:05.734: INFO: observed Deployment test-deployment in namespace deployment-8911 with ReadyReplicas 3
  STEP: deleting the Deployment @ 04/20/24 15:29:05.735
  Apr 20 15:29:05.760: INFO: observed event type MODIFIED
  Apr 20 15:29:05.760: INFO: observed event type MODIFIED
  Apr 20 15:29:05.760: INFO: observed event type MODIFIED
  Apr 20 15:29:05.762: INFO: observed event type MODIFIED
  Apr 20 15:29:05.762: INFO: observed event type MODIFIED
  Apr 20 15:29:05.762: INFO: observed event type MODIFIED
  Apr 20 15:29:05.763: INFO: observed event type MODIFIED
  Apr 20 15:29:05.763: INFO: observed event type MODIFIED
  Apr 20 15:29:05.764: INFO: observed event type MODIFIED
  Apr 20 15:29:05.764: INFO: observed event type MODIFIED
  Apr 20 15:29:05.764: INFO: observed event type MODIFIED
  Apr 20 15:29:05.764: INFO: observed event type MODIFIED
  Apr 20 15:29:05.765: INFO: observed event type MODIFIED
  Apr 20 15:29:05.765: INFO: observed event type MODIFIED
  Apr 20 15:29:05.775: INFO: Log out all the ReplicaSets if there is no deployment created
  Apr 20 15:29:05.789: INFO: ReplicaSet "test-deployment-64fd565c98":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-64fd565c98",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8911",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bef40b86-d758-4870-8400-e23bdf55fb9d",
      ResourceVersion: (string) (len=5) "68274",
      Generation: (int64) 4,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849223741,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "e865502e-0d30-46c9-a840-fcec0ae552da",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849223745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 65 38 36 35  35 30 32 65 2d 30 64 33  |":\"e865502e-0d3|
              00000130  30 2d 34 36 63 39 2d 61  38 34 30 2d 66 63 65 63  |0-46c9-a840-fcec|
              00000140  30 61 65 35 35 32 64 61  5c 22 7d 22 3a 7b 7d 7d  |0ae552da\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849223745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=25) "registry.k8s.io/pause:3.9",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(2),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 4,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Apr 20 15:29:05.820: INFO: pod: "test-deployment-64fd565c98-l5576":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-64fd565c98-l5576",
      GenerateName: (string) (len=27) "test-deployment-64fd565c98-",
      Namespace: (string) (len=15) "deployment-8911",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e8ed0995-223c-47fb-bdbb-2a2a053f4474",
      ResourceVersion: (string) (len=5) "68269",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849223742,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849223747,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=22) "test-deployment-static": (string) (len=4) "true",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-64fd565c98",
          UID: (types.UID) (len=36) "bef40b86-d758-4870-8400-e23bdf55fb9d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849223742,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  62 65 66 34 30 62 38 36  |uid\":\"bef40b86|
              000000a0  2d 64 37 35 38 2d 34 38  37 30 2d 38 34 30 30 2d  |-d758-4870-8400-|
              000000b0  65 32 33 62 64 66 35 35  66 62 39 64 5c 22 7d 22  |e23bdf55fb9d\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849223743,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 36 2e  31 39 39 5c 22 7d 22 3a  |.233.66.199\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-f6zd4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-f6zd4",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "nok4chie7ate-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849223743,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849223742,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849223743,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849223743,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849223742,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "192.168.121.8",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "192.168.121.8"
        }
      },
      PodIP: (string) (len=13) "10.233.66.199",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.66.199"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849223742,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849223742,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:7031c1b283388d2c2e09b57badb803c05ebed362dc88d84b480cc47f72a21097",
          ContainerID: (string) (len=72) "cri-o://ead016de9da6aec2caa62cf317ab3ad9ed96758f16efe6257045d22568c2c6be",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Apr 20 15:29:05.834: INFO: pod: "test-deployment-64fd565c98-wvtq7":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-64fd565c98-wvtq7",
      GenerateName: (string) (len=27) "test-deployment-64fd565c98-",
      Namespace: (string) (len=15) "deployment-8911",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "97625ebc-514d-41cb-bcfd-93cd1304f238",
      ResourceVersion: (string) (len=5) "68263",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849223743,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849223746,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-64fd565c98",
          UID: (types.UID) (len=36) "bef40b86-d758-4870-8400-e23bdf55fb9d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849223743,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  62 65 66 34 30 62 38 36  |uid\":\"bef40b86|
              000000a0  2d 64 37 35 38 2d 34 38  37 30 2d 38 34 30 30 2d  |-d758-4870-8400-|
              000000b0  65 32 33 62 64 66 35 35  66 62 39 64 5c 22 7d 22  |e23bdf55fb9d\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849223745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=621) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 72 65 61 73 6f 6e  |me":{},"f:reason|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000090  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000000a0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 49  |"k:{\"type\":\"I|
              000000b0  6e 69 74 69 61 6c 69 7a  65 64 5c 22 7d 22 3a 7b  |nitialized\"}":{|
              000000c0  22 2e 22 3a 7b 7d 2c 22  66 3a 6c 61 73 74 50 72  |".":{},"f:lastPr|
              000000d0  6f 62 65 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |obeTime":{},"f:l|
              000000e0  61 73 74 54 72 61 6e 73  69 74 69 6f 6e 54 69 6d  |astTransitionTim|
              000000f0  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000100  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000110  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              00000120  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 50 6f  |k:{\"type\":\"Po|
              00000130  64 52 65 61 64 79 54 6f  53 74 61 72 74 43 6f 6e  |dReadyToStartCon|
              00000140  74 61 69 6e 65 72 73 5c  22 7d 22 3a 7b 22 2e 22  |tainers\"}":{"."|
              00000150  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000160  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000170  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000180  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000190  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 2c 22 6b  |,"f:type":{}},"k|
              000001a0  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 52 65 61  |:{\"type\":\"Rea|
              000001b0  64 79 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |dy\"}":{".":{},"|
              000001c0  66 3a 6c 61 73 74 50 72  6f 62 65 54 69 6d 65 22  |f:lastProbeTime"|
              000001d0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 54 72 61 6e 73  |:{},"f:lastTrans|
              000001e0  69 74 69 6f 6e 54 69 6d  65 22 3a 7b 7d 2c 22 66  |itionTime":{},"f|
              000001f0  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000200  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000210  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000220  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000230  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000240  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000250  3a 70 68 61 73 65 22 3a  7b 7d 2c 22 66 3a 73 74  |:phase":{},"f:st|
              00000260  61 72 74 54 69 6d 65 22  3a 7b 7d 7d 7d           |artTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qgzjr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qgzjr",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "nok4chie7ate-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=9) "Succeeded",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849223745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849223743,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=12) "PodCompleted",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849223745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=12) "PodCompleted",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849223745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=12) "PodCompleted",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849223743,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.235",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.235"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849223743,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)({
              ExitCode: (int32) 0,
              Signal: (int32) 0,
              Reason: (string) (len=9) "Completed",
              Message: (string) "",
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849223744,
                  loc: (*time.Location)(<already shown>)
                }
              },
              FinishedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849223744,
                  loc: (*time.Location)(<already shown>)
                }
              },
              ContainerID: (string) (len=72) "cri-o://2895384593ef9491225abcdc6997539dd47e32a89c9f249155e0f7d084bc207a"
            })
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:7031c1b283388d2c2e09b57badb803c05ebed362dc88d84b480cc47f72a21097",
          ContainerID: (string) (len=72) "cri-o://2895384593ef9491225abcdc6997539dd47e32a89c9f249155e0f7d084bc207a",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Apr 20 15:29:05.852: INFO: ReplicaSet "test-deployment-79ff746c4":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=25) "test-deployment-79ff746c4",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8911",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "eb594302-3e93-4382-b15f-854993e1a6d7",
      ResourceVersion: (string) (len=5) "68266",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849223743,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "e865502e-0d30-46c9-a840-fcec0ae552da",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849223744,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 65 38 36 35  35 30 32 65 2d 30 64 33  |":\"e865502e-0d3|
              00000130  30 2d 34 36 63 39 2d 61  38 34 30 2d 66 63 65 63  |0-46c9-a840-fcec|
              00000140  30 61 65 35 35 32 64 61  5c 22 7d 22 3a 7b 7d 7d  |0ae552da\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849223745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 2,
      AvailableReplicas: (int32) 2,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Apr 20 15:29:05.868: INFO: pod: "test-deployment-79ff746c4-58nsr":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-79ff746c4-58nsr",
      GenerateName: (string) (len=26) "test-deployment-79ff746c4-",
      Namespace: (string) (len=15) "deployment-8911",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "23091199-58ce-423a-90db-86b6ca0fda85",
      ResourceVersion: (string) (len=5) "68282",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849223743,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849223746,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(1),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-79ff746c4",
          UID: (types.UID) (len=36) "eb594302-3e93-4382-b15f-854993e1a6d7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849223743,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  65 62 35 39 34 33 30 32  |uid\":\"eb594302|
              000000a0  2d 33 65 39 33 2d 34 33  38 32 2d 62 31 35 66 2d  |-3e93-4382-b15f-|
              000000b0  38 35 34 39 39 33 65 31  61 36 64 37 5c 22 7d 22  |854993e1a6d7\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849223744,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 36 2e  32 30 30 5c 22 7d 22 3a  |.233.66.200\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-48zls",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-48zls",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "nok4chie7ate-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849223744,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849223743,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849223744,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849223744,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849223743,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "192.168.121.8",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "192.168.121.8"
        }
      },
      PodIP: (string) (len=13) "10.233.66.200",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.66.200"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849223743,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849223744,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://1d9a7baf1f769b4a1b2dcf0540dfcaec88b7dc52d0e0fb04d13d6b52df244a4e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Apr 20 15:29:05.892: INFO: pod: "test-deployment-79ff746c4-lm8td":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-79ff746c4-lm8td",
      GenerateName: (string) (len=26) "test-deployment-79ff746c4-",
      Namespace: (string) (len=15) "deployment-8911",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "331e3523-c51a-454b-bc8e-1f69f014ee9a",
      ResourceVersion: (string) (len=5) "68265",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849223744,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-79ff746c4",
          UID: (types.UID) (len=36) "eb594302-3e93-4382-b15f-854993e1a6d7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849223744,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  65 62 35 39 34 33 30 32  |uid\":\"eb594302|
              000000a0  2d 33 65 39 33 2d 34 33  38 32 2d 62 31 35 66 2d  |-3e93-4382-b15f-|
              000000b0  38 35 34 39 39 33 65 31  61 36 64 37 5c 22 7d 22  |854993e1a6d7\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849223745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 35 2e  31 33 35 5c 22 7d 22 3a  |.233.65.135\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hkr85",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hkr85",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "nok4chie7ate-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849223745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849223744,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849223745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849223745,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849223744,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.193",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.193"
        }
      },
      PodIP: (string) (len=13) "10.233.65.135",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.65.135"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849223744,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849223744,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://94b13d693d5d8de9f637ececfa9f1e7ce58e1cdf36bdc3fdd22fba55af24b9a6",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Apr 20 15:29:05.904: INFO: ReplicaSet "test-deployment-7fcc79b8c7":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-7fcc79b8c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8911",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a16ac6f5-3702-4614-84a3-cffd5e0b6592",
      ResourceVersion: (string) (len=5) "68188",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849223739,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "7fcc79b8c7",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "e865502e-0d30-46c9-a840-fcec0ae552da",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849223743,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 65 38 36 35  35 30 32 65 2d 30 64 33  |":\"e865502e-0d3|
              00000130  30 2d 34 36 63 39 2d 61  38 34 30 2d 66 63 65 63  |0-46c9-a840-fcec|
              00000140  30 61 65 35 35 32 64 61  5c 22 7d 22 3a 7b 7d 7d  |0ae552da\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849223743,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "7fcc79b8c7",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "7fcc79b8c7",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Apr 20 15:29:05.922: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-8911" for this suite. @ 04/20/24 15:29:05.939
• [6.865 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 04/20/24 15:29:05.965
  Apr 20 15:29:05.966: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename watch @ 04/20/24 15:29:05.975
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:29:06.034
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:29:06.04
  STEP: creating a watch on configmaps @ 04/20/24 15:29:06.047
  STEP: creating a new configmap @ 04/20/24 15:29:06.05
  STEP: modifying the configmap once @ 04/20/24 15:29:06.057
  STEP: closing the watch once it receives two notifications @ 04/20/24 15:29:06.077
  Apr 20 15:29:06.077: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-9582  21756973-0728-4153-b36d-f3fef489927f 68295 0 2024-04-20 15:29:06 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-04-20 15:29:06 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 20 15:29:06.077: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-9582  21756973-0728-4153-b36d-f3fef489927f 68296 0 2024-04-20 15:29:06 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-04-20 15:29:06 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 04/20/24 15:29:06.078
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 04/20/24 15:29:06.097
  STEP: deleting the configmap @ 04/20/24 15:29:06.1
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 04/20/24 15:29:06.117
  Apr 20 15:29:06.117: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-9582  21756973-0728-4153-b36d-f3fef489927f 68298 0 2024-04-20 15:29:06 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-04-20 15:29:06 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 20 15:29:06.117: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-9582  21756973-0728-4153-b36d-f3fef489927f 68299 0 2024-04-20 15:29:06 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-04-20 15:29:06 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 20 15:29:06.118: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-9582" for this suite. @ 04/20/24 15:29:06.129
• [0.182 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:123
  STEP: Creating a kubernetes client @ 04/20/24 15:29:06.148
  Apr 20 15:29:06.148: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename podtemplate @ 04/20/24 15:29:06.152
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:29:06.194
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:29:06.2
  STEP: Create set of pod templates @ 04/20/24 15:29:06.206
  Apr 20 15:29:06.221: INFO: created test-podtemplate-1
  Apr 20 15:29:06.238: INFO: created test-podtemplate-2
  Apr 20 15:29:06.250: INFO: created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 04/20/24 15:29:06.251
  E0420 15:29:06.251474      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete collection of pod templates @ 04/20/24 15:29:06.263
  Apr 20 15:29:06.263: INFO: requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 04/20/24 15:29:06.308
  Apr 20 15:29:06.308: INFO: requesting list of pod templates to confirm quantity
  Apr 20 15:29:06.316: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-1180" for this suite. @ 04/20/24 15:29:06.329
• [0.204 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:209
  STEP: Creating a kubernetes client @ 04/20/24 15:29:06.352
  Apr 20 15:29:06.352: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename downward-api @ 04/20/24 15:29:06.356
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:29:06.407
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:29:06.413
  STEP: Creating a pod to test downward API volume plugin @ 04/20/24 15:29:06.42
  E0420 15:29:07.252166      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:08.252641      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:09.253235      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:10.254150      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 15:29:10.471
  Apr 20 15:29:10.477: INFO: Trying to get logs from node nok4chie7ate-3 pod downwardapi-volume-f3f7aada-67ea-4d29-bf7d-0456f0795d93 container client-container: <nil>
  STEP: delete the pod @ 04/20/24 15:29:10.494
  Apr 20 15:29:10.538: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4722" for this suite. @ 04/20/24 15:29:10.548
• [4.213 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:168
  STEP: Creating a kubernetes client @ 04/20/24 15:29:10.567
  Apr 20 15:29:10.568: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename container-probe @ 04/20/24 15:29:10.57
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:29:10.617
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:29:10.623
  STEP: Creating pod liveness-c76d5ae2-75b4-499d-a320-7d3d81bf6ff6 in namespace container-probe-462 @ 04/20/24 15:29:10.628
  E0420 15:29:11.254909      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:12.255630      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/20/24 15:29:12.667
  Apr 20 15:29:12.673: INFO: Initial restart count of pod liveness-c76d5ae2-75b4-499d-a320-7d3d81bf6ff6 is 0
  Apr 20 15:29:12.679: INFO: Get pod liveness-c76d5ae2-75b4-499d-a320-7d3d81bf6ff6 in namespace container-probe-462
  E0420 15:29:13.255936      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:14.256593      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:29:14.687: INFO: Get pod liveness-c76d5ae2-75b4-499d-a320-7d3d81bf6ff6 in namespace container-probe-462
  E0420 15:29:15.256789      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:16.257345      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:29:16.697: INFO: Get pod liveness-c76d5ae2-75b4-499d-a320-7d3d81bf6ff6 in namespace container-probe-462
  E0420 15:29:17.257541      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:18.258493      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:29:18.704: INFO: Get pod liveness-c76d5ae2-75b4-499d-a320-7d3d81bf6ff6 in namespace container-probe-462
  E0420 15:29:19.259089      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:20.260007      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:29:20.712: INFO: Get pod liveness-c76d5ae2-75b4-499d-a320-7d3d81bf6ff6 in namespace container-probe-462
  E0420 15:29:21.261148      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:22.261947      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:29:22.721: INFO: Get pod liveness-c76d5ae2-75b4-499d-a320-7d3d81bf6ff6 in namespace container-probe-462
  E0420 15:29:23.263206      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:24.263983      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:29:24.730: INFO: Get pod liveness-c76d5ae2-75b4-499d-a320-7d3d81bf6ff6 in namespace container-probe-462
  E0420 15:29:25.263951      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:26.264485      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:29:26.738: INFO: Get pod liveness-c76d5ae2-75b4-499d-a320-7d3d81bf6ff6 in namespace container-probe-462
  E0420 15:29:27.264759      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:28.265874      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:29:28.751: INFO: Get pod liveness-c76d5ae2-75b4-499d-a320-7d3d81bf6ff6 in namespace container-probe-462
  E0420 15:29:29.266057      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:30.267059      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:29:30.758: INFO: Get pod liveness-c76d5ae2-75b4-499d-a320-7d3d81bf6ff6 in namespace container-probe-462
  E0420 15:29:31.268141      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:32.268513      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:29:32.770: INFO: Get pod liveness-c76d5ae2-75b4-499d-a320-7d3d81bf6ff6 in namespace container-probe-462
  Apr 20 15:29:32.770: INFO: Restart count of pod container-probe-462/liveness-c76d5ae2-75b4-499d-a320-7d3d81bf6ff6 is now 1 (20.097240111s elapsed)
  STEP: deleting the pod @ 04/20/24 15:29:32.77
  Apr 20 15:29:32.801: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-462" for this suite. @ 04/20/24 15:29:32.83
• [22.277 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:329
  STEP: Creating a kubernetes client @ 04/20/24 15:29:32.846
  Apr 20 15:29:32.846: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename dns @ 04/20/24 15:29:32.85
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:29:32.882
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:29:32.888
  STEP: Creating a test externalName service @ 04/20/24 15:29:32.893
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1899.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-1899.svc.cluster.local; sleep 1; done
   @ 04/20/24 15:29:32.903
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1899.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-1899.svc.cluster.local; sleep 1; done
   @ 04/20/24 15:29:32.903
  STEP: creating a pod to probe DNS @ 04/20/24 15:29:32.903
  STEP: submitting the pod to kubernetes @ 04/20/24 15:29:32.904
  E0420 15:29:33.268743      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:34.269025      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 04/20/24 15:29:34.971
  STEP: looking for the results for each expected name from probers @ 04/20/24 15:29:34.977
  Apr 20 15:29:35.001: INFO: DNS probes using dns-test-59f932eb-da1a-4e1d-8d29-94282dd3999b succeeded

  STEP: changing the externalName to bar.example.com @ 04/20/24 15:29:35.001
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1899.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-1899.svc.cluster.local; sleep 1; done
   @ 04/20/24 15:29:35.019
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1899.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-1899.svc.cluster.local; sleep 1; done
   @ 04/20/24 15:29:35.019
  STEP: creating a second pod to probe DNS @ 04/20/24 15:29:35.019
  STEP: submitting the pod to kubernetes @ 04/20/24 15:29:35.019
  E0420 15:29:35.269857      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:36.272230      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 04/20/24 15:29:37.056
  STEP: looking for the results for each expected name from probers @ 04/20/24 15:29:37.065
  Apr 20 15:29:37.086: INFO: File wheezy_udp@dns-test-service-3.dns-1899.svc.cluster.local from pod  dns-1899/dns-test-dfd538eb-0233-497e-b857-5eb721ac335c contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Apr 20 15:29:37.100: INFO: File jessie_udp@dns-test-service-3.dns-1899.svc.cluster.local from pod  dns-1899/dns-test-dfd538eb-0233-497e-b857-5eb721ac335c contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Apr 20 15:29:37.100: INFO: Lookups using dns-1899/dns-test-dfd538eb-0233-497e-b857-5eb721ac335c failed for: [wheezy_udp@dns-test-service-3.dns-1899.svc.cluster.local jessie_udp@dns-test-service-3.dns-1899.svc.cluster.local]

  Apr 20 15:29:37.124: INFO: Pod client logs for webserver: 
  Apr 20 15:29:37.140: INFO: Pod client logs for querier: 
  Apr 20 15:29:37.153: INFO: Pod client logs for jessie-querier: 
  E0420 15:29:37.272186      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:38.272190      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:39.272302      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:40.272486      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:41.273190      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:29:42.076: INFO: File wheezy_udp@dns-test-service-3.dns-1899.svc.cluster.local from pod  dns-1899/dns-test-dfd538eb-0233-497e-b857-5eb721ac335c contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Apr 20 15:29:42.087: INFO: File jessie_udp@dns-test-service-3.dns-1899.svc.cluster.local from pod  dns-1899/dns-test-dfd538eb-0233-497e-b857-5eb721ac335c contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Apr 20 15:29:42.087: INFO: Lookups using dns-1899/dns-test-dfd538eb-0233-497e-b857-5eb721ac335c failed for: [wheezy_udp@dns-test-service-3.dns-1899.svc.cluster.local jessie_udp@dns-test-service-3.dns-1899.svc.cluster.local]

  Apr 20 15:29:42.098: INFO: Pod client logs for webserver: 
  Apr 20 15:29:42.111: INFO: Pod client logs for querier: 
  Apr 20 15:29:42.123: INFO: Pod client logs for jessie-querier: 
  E0420 15:29:42.273500      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:43.273754      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:44.274636      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:45.274875      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:46.275001      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:29:47.077: INFO: File wheezy_udp@dns-test-service-3.dns-1899.svc.cluster.local from pod  dns-1899/dns-test-dfd538eb-0233-497e-b857-5eb721ac335c contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Apr 20 15:29:47.085: INFO: File jessie_udp@dns-test-service-3.dns-1899.svc.cluster.local from pod  dns-1899/dns-test-dfd538eb-0233-497e-b857-5eb721ac335c contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Apr 20 15:29:47.085: INFO: Lookups using dns-1899/dns-test-dfd538eb-0233-497e-b857-5eb721ac335c failed for: [wheezy_udp@dns-test-service-3.dns-1899.svc.cluster.local jessie_udp@dns-test-service-3.dns-1899.svc.cluster.local]

  Apr 20 15:29:47.099: INFO: Pod client logs for webserver: 
  Apr 20 15:29:47.114: INFO: Pod client logs for querier: 
  Apr 20 15:29:47.132: INFO: Pod client logs for jessie-querier: 
  E0420 15:29:47.276000      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:48.276986      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:49.277434      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:50.277709      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:51.288270      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:29:52.074: INFO: File wheezy_udp@dns-test-service-3.dns-1899.svc.cluster.local from pod  dns-1899/dns-test-dfd538eb-0233-497e-b857-5eb721ac335c contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Apr 20 15:29:52.082: INFO: File jessie_udp@dns-test-service-3.dns-1899.svc.cluster.local from pod  dns-1899/dns-test-dfd538eb-0233-497e-b857-5eb721ac335c contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Apr 20 15:29:52.082: INFO: Lookups using dns-1899/dns-test-dfd538eb-0233-497e-b857-5eb721ac335c failed for: [wheezy_udp@dns-test-service-3.dns-1899.svc.cluster.local jessie_udp@dns-test-service-3.dns-1899.svc.cluster.local]

  Apr 20 15:29:52.097: INFO: Pod client logs for webserver: 
  Apr 20 15:29:52.112: INFO: Pod client logs for querier: 
  Apr 20 15:29:52.125: INFO: Pod client logs for jessie-querier: 
  E0420 15:29:52.282336      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:53.282880      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:54.283391      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:55.284240      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:56.284322      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:29:57.075: INFO: File wheezy_udp@dns-test-service-3.dns-1899.svc.cluster.local from pod  dns-1899/dns-test-dfd538eb-0233-497e-b857-5eb721ac335c contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Apr 20 15:29:57.084: INFO: File jessie_udp@dns-test-service-3.dns-1899.svc.cluster.local from pod  dns-1899/dns-test-dfd538eb-0233-497e-b857-5eb721ac335c contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Apr 20 15:29:57.084: INFO: Lookups using dns-1899/dns-test-dfd538eb-0233-497e-b857-5eb721ac335c failed for: [wheezy_udp@dns-test-service-3.dns-1899.svc.cluster.local jessie_udp@dns-test-service-3.dns-1899.svc.cluster.local]

  Apr 20 15:29:57.098: INFO: Pod client logs for webserver: 
  Apr 20 15:29:57.111: INFO: Pod client logs for querier: 
  Apr 20 15:29:57.125: INFO: Pod client logs for jessie-querier: 
  E0420 15:29:57.285360      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:58.286311      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:59.286620      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:00.286960      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:01.287111      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:30:02.077: INFO: File wheezy_udp@dns-test-service-3.dns-1899.svc.cluster.local from pod  dns-1899/dns-test-dfd538eb-0233-497e-b857-5eb721ac335c contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Apr 20 15:30:02.084: INFO: File jessie_udp@dns-test-service-3.dns-1899.svc.cluster.local from pod  dns-1899/dns-test-dfd538eb-0233-497e-b857-5eb721ac335c contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Apr 20 15:30:02.084: INFO: Lookups using dns-1899/dns-test-dfd538eb-0233-497e-b857-5eb721ac335c failed for: [wheezy_udp@dns-test-service-3.dns-1899.svc.cluster.local jessie_udp@dns-test-service-3.dns-1899.svc.cluster.local]

  Apr 20 15:30:02.096: INFO: Pod client logs for webserver: 
  Apr 20 15:30:02.111: INFO: Pod client logs for querier: 
  Apr 20 15:30:02.122: INFO: Pod client logs for jessie-querier: 
  E0420 15:30:02.288179      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:03.288513      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:04.289187      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:05.289202      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:06.289497      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:30:07.088: INFO: DNS probes using dns-test-dfd538eb-0233-497e-b857-5eb721ac335c succeeded

  STEP: changing the service to type=ClusterIP @ 04/20/24 15:30:07.088
  W0420 15:30:07.141328      13 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1899.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-1899.svc.cluster.local; sleep 1; done
   @ 04/20/24 15:30:07.145
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1899.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-1899.svc.cluster.local; sleep 1; done
   @ 04/20/24 15:30:07.145
  STEP: creating a third pod to probe DNS @ 04/20/24 15:30:07.145
  STEP: submitting the pod to kubernetes @ 04/20/24 15:30:07.153
  E0420 15:30:07.290287      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:08.291213      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 04/20/24 15:30:09.19
  STEP: looking for the results for each expected name from probers @ 04/20/24 15:30:09.197
  Apr 20 15:30:09.223: INFO: DNS probes using dns-test-47191677-69f4-425c-bff3-84bec8814b0d succeeded

  STEP: deleting the pod @ 04/20/24 15:30:09.224
  STEP: deleting the pod @ 04/20/24 15:30:09.253
  STEP: deleting the pod @ 04/20/24 15:30:09.278
  E0420 15:30:09.291696      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the test externalName service @ 04/20/24 15:30:09.313
  Apr 20 15:30:09.351: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-1899" for this suite. @ 04/20/24 15:30:09.367
• [36.553 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 04/20/24 15:30:09.413
  Apr 20 15:30:09.413: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename tables @ 04/20/24 15:30:09.421
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:30:09.461
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:30:09.466
  Apr 20 15:30:09.476: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-3687" for this suite. @ 04/20/24 15:30:09.486
• [0.083 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:397
  STEP: Creating a kubernetes client @ 04/20/24 15:30:09.498
  Apr 20 15:30:09.498: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename resourcequota @ 04/20/24 15:30:09.502
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:30:09.527
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:30:09.531
  STEP: Counting existing ResourceQuota @ 04/20/24 15:30:09.536
  E0420 15:30:10.292112      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:11.292251      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:12.292773      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:13.293074      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:14.293241      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 04/20/24 15:30:14.542
  STEP: Ensuring resource quota status is calculated @ 04/20/24 15:30:14.553
  E0420 15:30:15.294139      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:16.294791      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ReplicationController @ 04/20/24 15:30:16.566
  STEP: Ensuring resource quota status captures replication controller creation @ 04/20/24 15:30:16.601
  E0420 15:30:17.295313      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:18.295847      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicationController @ 04/20/24 15:30:18.614
  STEP: Ensuring resource quota status released usage @ 04/20/24 15:30:18.631
  E0420 15:30:19.296234      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:20.297345      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:30:20.641: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1303" for this suite. @ 04/20/24 15:30:20.652
• [11.170 seconds]
------------------------------
SSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:191
  STEP: Creating a kubernetes client @ 04/20/24 15:30:20.668
  Apr 20 15:30:20.668: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename dns @ 04/20/24 15:30:20.673
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:30:20.711
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:30:20.716
  STEP: Creating a test headless service @ 04/20/24 15:30:20.721
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8584 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-8584;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8584 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-8584;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8584.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-8584.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8584.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-8584.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-8584.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-8584.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-8584.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-8584.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-8584.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-8584.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-8584.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-8584.svc;check="$$(dig +notcp +noall +answer +search 189.6.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.6.189_udp@PTR;check="$$(dig +tcp +noall +answer +search 189.6.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.6.189_tcp@PTR;sleep 1; done
   @ 04/20/24 15:30:20.756
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8584 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-8584;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8584 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-8584;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8584.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-8584.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8584.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-8584.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-8584.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-8584.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-8584.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-8584.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-8584.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-8584.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-8584.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-8584.svc;check="$$(dig +notcp +noall +answer +search 189.6.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.6.189_udp@PTR;check="$$(dig +tcp +noall +answer +search 189.6.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.6.189_tcp@PTR;sleep 1; done
   @ 04/20/24 15:30:20.757
  STEP: creating a pod to probe DNS @ 04/20/24 15:30:20.757
  STEP: submitting the pod to kubernetes @ 04/20/24 15:30:20.758
  E0420 15:30:21.297620      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:22.298120      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 04/20/24 15:30:22.822
  STEP: looking for the results for each expected name from probers @ 04/20/24 15:30:22.831
  Apr 20 15:30:22.842: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-8584/dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a: the server could not find the requested resource (get pods dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a)
  Apr 20 15:30:22.850: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-8584/dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a: the server could not find the requested resource (get pods dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a)
  Apr 20 15:30:22.859: INFO: Unable to read wheezy_udp@dns-test-service.dns-8584 from pod dns-8584/dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a: the server could not find the requested resource (get pods dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a)
  Apr 20 15:30:22.869: INFO: Unable to read wheezy_tcp@dns-test-service.dns-8584 from pod dns-8584/dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a: the server could not find the requested resource (get pods dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a)
  Apr 20 15:30:22.875: INFO: Unable to read wheezy_udp@dns-test-service.dns-8584.svc from pod dns-8584/dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a: the server could not find the requested resource (get pods dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a)
  Apr 20 15:30:22.881: INFO: Unable to read wheezy_tcp@dns-test-service.dns-8584.svc from pod dns-8584/dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a: the server could not find the requested resource (get pods dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a)
  Apr 20 15:30:22.928: INFO: Unable to read jessie_udp@dns-test-service from pod dns-8584/dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a: the server could not find the requested resource (get pods dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a)
  Apr 20 15:30:22.935: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-8584/dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a: the server could not find the requested resource (get pods dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a)
  Apr 20 15:30:22.989: INFO: Unable to read jessie_udp@dns-test-service.dns-8584 from pod dns-8584/dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a: the server could not find the requested resource (get pods dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a)
  Apr 20 15:30:22.997: INFO: Unable to read jessie_tcp@dns-test-service.dns-8584 from pod dns-8584/dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a: the server could not find the requested resource (get pods dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a)
  Apr 20 15:30:23.001: INFO: Unable to read jessie_udp@dns-test-service.dns-8584.svc from pod dns-8584/dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a: the server could not find the requested resource (get pods dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a)
  Apr 20 15:30:23.009: INFO: Unable to read jessie_tcp@dns-test-service.dns-8584.svc from pod dns-8584/dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a: the server could not find the requested resource (get pods dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a)
  Apr 20 15:30:23.046: INFO: Lookups using dns-8584/dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-8584 wheezy_tcp@dns-test-service.dns-8584 wheezy_udp@dns-test-service.dns-8584.svc wheezy_tcp@dns-test-service.dns-8584.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-8584 jessie_tcp@dns-test-service.dns-8584 jessie_udp@dns-test-service.dns-8584.svc jessie_tcp@dns-test-service.dns-8584.svc]

  Apr 20 15:30:23.062: INFO: Pod client logs for webserver: 
  Apr 20 15:30:23.075: INFO: Pod client logs for querier: 
  Apr 20 15:30:23.087: INFO: Pod client logs for jessie-querier: 
  E0420 15:30:23.298877      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:24.299615      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:25.300213      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:26.301261      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:27.302136      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:30:27.844: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-8584/dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a: the server could not find the requested resource (get pods dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a)
  Apr 20 15:30:27.852: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-8584/dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a: the server could not find the requested resource (get pods dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a)
  Apr 20 15:30:27.862: INFO: Unable to read wheezy_udp@dns-test-service.dns-8584 from pod dns-8584/dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a: the server could not find the requested resource (get pods dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a)
  Apr 20 15:30:27.872: INFO: Unable to read wheezy_tcp@dns-test-service.dns-8584 from pod dns-8584/dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a: the server could not find the requested resource (get pods dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a)
  Apr 20 15:30:27.879: INFO: Unable to read wheezy_udp@dns-test-service.dns-8584.svc from pod dns-8584/dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a: the server could not find the requested resource (get pods dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a)
  Apr 20 15:30:27.890: INFO: Unable to read wheezy_tcp@dns-test-service.dns-8584.svc from pod dns-8584/dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a: the server could not find the requested resource (get pods dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a)
  Apr 20 15:30:27.960: INFO: Unable to read jessie_udp@dns-test-service from pod dns-8584/dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a: the server could not find the requested resource (get pods dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a)
  Apr 20 15:30:27.969: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-8584/dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a: the server could not find the requested resource (get pods dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a)
  Apr 20 15:30:27.976: INFO: Unable to read jessie_udp@dns-test-service.dns-8584 from pod dns-8584/dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a: the server could not find the requested resource (get pods dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a)
  Apr 20 15:30:27.985: INFO: Unable to read jessie_tcp@dns-test-service.dns-8584 from pod dns-8584/dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a: the server could not find the requested resource (get pods dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a)
  Apr 20 15:30:27.995: INFO: Unable to read jessie_udp@dns-test-service.dns-8584.svc from pod dns-8584/dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a: the server could not find the requested resource (get pods dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a)
  Apr 20 15:30:28.005: INFO: Unable to read jessie_tcp@dns-test-service.dns-8584.svc from pod dns-8584/dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a: the server could not find the requested resource (get pods dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a)
  Apr 20 15:30:28.066: INFO: Lookups using dns-8584/dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-8584 wheezy_tcp@dns-test-service.dns-8584 wheezy_udp@dns-test-service.dns-8584.svc wheezy_tcp@dns-test-service.dns-8584.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-8584 jessie_tcp@dns-test-service.dns-8584 jessie_udp@dns-test-service.dns-8584.svc jessie_tcp@dns-test-service.dns-8584.svc]

  Apr 20 15:30:28.080: INFO: Pod client logs for webserver: 
  Apr 20 15:30:28.091: INFO: Pod client logs for querier: 
  Apr 20 15:30:28.103: INFO: Pod client logs for jessie-querier: 
  E0420 15:30:28.303027      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:29.303638      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:30.303847      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:31.305104      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:32.305399      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:30:32.843: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-8584/dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a: the server could not find the requested resource (get pods dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a)
  Apr 20 15:30:32.852: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-8584/dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a: the server could not find the requested resource (get pods dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a)
  Apr 20 15:30:32.860: INFO: Unable to read wheezy_udp@dns-test-service.dns-8584 from pod dns-8584/dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a: the server could not find the requested resource (get pods dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a)
  Apr 20 15:30:32.867: INFO: Unable to read wheezy_tcp@dns-test-service.dns-8584 from pod dns-8584/dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a: the server could not find the requested resource (get pods dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a)
  Apr 20 15:30:32.877: INFO: Unable to read wheezy_udp@dns-test-service.dns-8584.svc from pod dns-8584/dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a: the server could not find the requested resource (get pods dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a)
  Apr 20 15:30:32.883: INFO: Unable to read wheezy_tcp@dns-test-service.dns-8584.svc from pod dns-8584/dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a: the server could not find the requested resource (get pods dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a)
  Apr 20 15:30:32.937: INFO: Unable to read jessie_udp@dns-test-service from pod dns-8584/dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a: the server could not find the requested resource (get pods dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a)
  Apr 20 15:30:32.945: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-8584/dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a: the server could not find the requested resource (get pods dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a)
  Apr 20 15:30:32.952: INFO: Unable to read jessie_udp@dns-test-service.dns-8584 from pod dns-8584/dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a: the server could not find the requested resource (get pods dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a)
  Apr 20 15:30:32.959: INFO: Unable to read jessie_tcp@dns-test-service.dns-8584 from pod dns-8584/dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a: the server could not find the requested resource (get pods dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a)
  Apr 20 15:30:32.970: INFO: Unable to read jessie_udp@dns-test-service.dns-8584.svc from pod dns-8584/dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a: the server could not find the requested resource (get pods dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a)
  Apr 20 15:30:32.978: INFO: Unable to read jessie_tcp@dns-test-service.dns-8584.svc from pod dns-8584/dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a: the server could not find the requested resource (get pods dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a)
  Apr 20 15:30:33.026: INFO: Lookups using dns-8584/dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-8584 wheezy_tcp@dns-test-service.dns-8584 wheezy_udp@dns-test-service.dns-8584.svc wheezy_tcp@dns-test-service.dns-8584.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-8584 jessie_tcp@dns-test-service.dns-8584 jessie_udp@dns-test-service.dns-8584.svc jessie_tcp@dns-test-service.dns-8584.svc]

  Apr 20 15:30:33.041: INFO: Pod client logs for webserver: 
  Apr 20 15:30:33.054: INFO: Pod client logs for querier: 
  Apr 20 15:30:33.066: INFO: Pod client logs for jessie-querier: 
  E0420 15:30:33.306086      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:34.306543      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:35.307077      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:36.307372      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:37.308175      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:30:37.844: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-8584/dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a: the server could not find the requested resource (get pods dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a)
  Apr 20 15:30:37.856: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-8584/dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a: the server could not find the requested resource (get pods dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a)
  Apr 20 15:30:37.868: INFO: Unable to read wheezy_udp@dns-test-service.dns-8584 from pod dns-8584/dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a: the server could not find the requested resource (get pods dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a)
  Apr 20 15:30:37.878: INFO: Unable to read wheezy_tcp@dns-test-service.dns-8584 from pod dns-8584/dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a: the server could not find the requested resource (get pods dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a)
  Apr 20 15:30:37.888: INFO: Unable to read wheezy_udp@dns-test-service.dns-8584.svc from pod dns-8584/dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a: the server could not find the requested resource (get pods dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a)
  Apr 20 15:30:37.896: INFO: Unable to read wheezy_tcp@dns-test-service.dns-8584.svc from pod dns-8584/dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a: the server could not find the requested resource (get pods dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a)
  Apr 20 15:30:37.955: INFO: Unable to read jessie_udp@dns-test-service from pod dns-8584/dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a: the server could not find the requested resource (get pods dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a)
  Apr 20 15:30:37.962: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-8584/dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a: the server could not find the requested resource (get pods dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a)
  Apr 20 15:30:37.969: INFO: Unable to read jessie_udp@dns-test-service.dns-8584 from pod dns-8584/dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a: the server could not find the requested resource (get pods dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a)
  Apr 20 15:30:37.977: INFO: Unable to read jessie_tcp@dns-test-service.dns-8584 from pod dns-8584/dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a: the server could not find the requested resource (get pods dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a)
  Apr 20 15:30:37.983: INFO: Unable to read jessie_udp@dns-test-service.dns-8584.svc from pod dns-8584/dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a: the server could not find the requested resource (get pods dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a)
  Apr 20 15:30:37.991: INFO: Unable to read jessie_tcp@dns-test-service.dns-8584.svc from pod dns-8584/dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a: the server could not find the requested resource (get pods dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a)
  Apr 20 15:30:38.044: INFO: Lookups using dns-8584/dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-8584 wheezy_tcp@dns-test-service.dns-8584 wheezy_udp@dns-test-service.dns-8584.svc wheezy_tcp@dns-test-service.dns-8584.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-8584 jessie_tcp@dns-test-service.dns-8584 jessie_udp@dns-test-service.dns-8584.svc jessie_tcp@dns-test-service.dns-8584.svc]

  Apr 20 15:30:38.061: INFO: Pod client logs for webserver: 
  Apr 20 15:30:38.078: INFO: Pod client logs for querier: 
  Apr 20 15:30:38.091: INFO: Pod client logs for jessie-querier: 
  E0420 15:30:38.308168      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:39.309134      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:40.309559      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:41.310117      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:42.310980      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:30:42.841: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-8584/dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a: the server could not find the requested resource (get pods dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a)
  Apr 20 15:30:42.849: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-8584/dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a: the server could not find the requested resource (get pods dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a)
  Apr 20 15:30:42.856: INFO: Unable to read wheezy_udp@dns-test-service.dns-8584 from pod dns-8584/dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a: the server could not find the requested resource (get pods dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a)
  Apr 20 15:30:42.864: INFO: Unable to read wheezy_tcp@dns-test-service.dns-8584 from pod dns-8584/dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a: the server could not find the requested resource (get pods dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a)
  Apr 20 15:30:42.872: INFO: Unable to read wheezy_udp@dns-test-service.dns-8584.svc from pod dns-8584/dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a: the server could not find the requested resource (get pods dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a)
  Apr 20 15:30:42.879: INFO: Unable to read wheezy_tcp@dns-test-service.dns-8584.svc from pod dns-8584/dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a: the server could not find the requested resource (get pods dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a)
  Apr 20 15:30:42.943: INFO: Unable to read jessie_udp@dns-test-service from pod dns-8584/dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a: the server could not find the requested resource (get pods dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a)
  Apr 20 15:30:42.994: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-8584/dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a: the server could not find the requested resource (get pods dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a)
  Apr 20 15:30:43.001: INFO: Unable to read jessie_udp@dns-test-service.dns-8584 from pod dns-8584/dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a: the server could not find the requested resource (get pods dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a)
  Apr 20 15:30:43.007: INFO: Unable to read jessie_tcp@dns-test-service.dns-8584 from pod dns-8584/dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a: the server could not find the requested resource (get pods dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a)
  Apr 20 15:30:43.015: INFO: Unable to read jessie_udp@dns-test-service.dns-8584.svc from pod dns-8584/dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a: the server could not find the requested resource (get pods dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a)
  Apr 20 15:30:43.023: INFO: Unable to read jessie_tcp@dns-test-service.dns-8584.svc from pod dns-8584/dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a: the server could not find the requested resource (get pods dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a)
  Apr 20 15:30:43.066: INFO: Lookups using dns-8584/dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-8584 wheezy_tcp@dns-test-service.dns-8584 wheezy_udp@dns-test-service.dns-8584.svc wheezy_tcp@dns-test-service.dns-8584.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-8584 jessie_tcp@dns-test-service.dns-8584 jessie_udp@dns-test-service.dns-8584.svc jessie_tcp@dns-test-service.dns-8584.svc]

  Apr 20 15:30:43.079: INFO: Pod client logs for webserver: 
  Apr 20 15:30:43.092: INFO: Pod client logs for querier: 
  Apr 20 15:30:43.104: INFO: Pod client logs for jessie-querier: 
  E0420 15:30:43.311545      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:44.312258      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:45.313525      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:46.316593      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:47.315025      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:30:47.840: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-8584/dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a: the server could not find the requested resource (get pods dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a)
  Apr 20 15:30:47.848: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-8584/dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a: the server could not find the requested resource (get pods dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a)
  Apr 20 15:30:47.854: INFO: Unable to read wheezy_udp@dns-test-service.dns-8584 from pod dns-8584/dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a: the server could not find the requested resource (get pods dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a)
  Apr 20 15:30:47.861: INFO: Unable to read wheezy_tcp@dns-test-service.dns-8584 from pod dns-8584/dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a: the server could not find the requested resource (get pods dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a)
  Apr 20 15:30:47.870: INFO: Unable to read wheezy_udp@dns-test-service.dns-8584.svc from pod dns-8584/dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a: the server could not find the requested resource (get pods dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a)
  Apr 20 15:30:47.879: INFO: Unable to read wheezy_tcp@dns-test-service.dns-8584.svc from pod dns-8584/dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a: the server could not find the requested resource (get pods dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a)
  Apr 20 15:30:47.935: INFO: Unable to read jessie_udp@dns-test-service from pod dns-8584/dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a: the server could not find the requested resource (get pods dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a)
  Apr 20 15:30:47.941: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-8584/dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a: the server could not find the requested resource (get pods dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a)
  Apr 20 15:30:47.948: INFO: Unable to read jessie_udp@dns-test-service.dns-8584 from pod dns-8584/dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a: the server could not find the requested resource (get pods dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a)
  Apr 20 15:30:47.955: INFO: Unable to read jessie_tcp@dns-test-service.dns-8584 from pod dns-8584/dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a: the server could not find the requested resource (get pods dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a)
  Apr 20 15:30:47.962: INFO: Unable to read jessie_udp@dns-test-service.dns-8584.svc from pod dns-8584/dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a: the server could not find the requested resource (get pods dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a)
  Apr 20 15:30:47.968: INFO: Unable to read jessie_tcp@dns-test-service.dns-8584.svc from pod dns-8584/dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a: the server could not find the requested resource (get pods dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a)
  Apr 20 15:30:48.016: INFO: Lookups using dns-8584/dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-8584 wheezy_tcp@dns-test-service.dns-8584 wheezy_udp@dns-test-service.dns-8584.svc wheezy_tcp@dns-test-service.dns-8584.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-8584 jessie_tcp@dns-test-service.dns-8584 jessie_udp@dns-test-service.dns-8584.svc jessie_tcp@dns-test-service.dns-8584.svc]

  Apr 20 15:30:48.039: INFO: Pod client logs for webserver: 
  Apr 20 15:30:48.051: INFO: Pod client logs for querier: 
  Apr 20 15:30:48.069: INFO: Pod client logs for jessie-querier: 
  E0420 15:30:48.315102      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:49.315510      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:50.316578      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:51.317833      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:52.317165      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:30:52.975: INFO: Unable to read jessie_udp@dns-test-service from pod dns-8584/dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a: the server could not find the requested resource (get pods dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a)
  Apr 20 15:30:52.983: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-8584/dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a: the server could not find the requested resource (get pods dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a)
  Apr 20 15:30:52.995: INFO: Unable to read jessie_udp@dns-test-service.dns-8584 from pod dns-8584/dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a: the server could not find the requested resource (get pods dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a)
  Apr 20 15:30:53.005: INFO: Unable to read jessie_tcp@dns-test-service.dns-8584 from pod dns-8584/dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a: the server could not find the requested resource (get pods dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a)
  Apr 20 15:30:53.020: INFO: Unable to read jessie_udp@dns-test-service.dns-8584.svc from pod dns-8584/dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a: the server could not find the requested resource (get pods dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a)
  Apr 20 15:30:53.031: INFO: Unable to read jessie_tcp@dns-test-service.dns-8584.svc from pod dns-8584/dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a: the server could not find the requested resource (get pods dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a)
  Apr 20 15:30:53.077: INFO: Lookups using dns-8584/dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a failed for: [jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-8584 jessie_tcp@dns-test-service.dns-8584 jessie_udp@dns-test-service.dns-8584.svc jessie_tcp@dns-test-service.dns-8584.svc]

  Apr 20 15:30:53.092: INFO: Pod client logs for webserver: 
  Apr 20 15:30:53.108: INFO: Pod client logs for querier: 
  Apr 20 15:30:53.122: INFO: Pod client logs for jessie-querier: 
  E0420 15:30:53.318220      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:54.318804      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:55.319369      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:56.320479      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:57.321594      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:30:57.951: INFO: Unable to read jessie_udp@dns-test-service from pod dns-8584/dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a: the server could not find the requested resource (get pods dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a)
  Apr 20 15:30:58.049: INFO: Lookups using dns-8584/dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a failed for: [jessie_udp@dns-test-service]

  Apr 20 15:30:58.064: INFO: Pod client logs for webserver: 
  Apr 20 15:30:58.077: INFO: Pod client logs for querier: 
  Apr 20 15:30:58.091: INFO: Pod client logs for jessie-querier: 
  E0420 15:30:58.322045      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:59.322345      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:00.322919      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:01.323060      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:02.323443      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:31:03.169: INFO: DNS probes using dns-8584/dns-test-f784d6b7-8bbb-4863-9829-243734e2e54a succeeded

  STEP: deleting the pod @ 04/20/24 15:31:03.171
  STEP: deleting the test service @ 04/20/24 15:31:03.206
  STEP: deleting the test headless service @ 04/20/24 15:31:03.273
  Apr 20 15:31:03.314: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0420 15:31:03.323990      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "dns-8584" for this suite. @ 04/20/24 15:31:03.333
• [42.680 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:130
  STEP: Creating a kubernetes client @ 04/20/24 15:31:03.356
  Apr 20 15:31:03.356: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename sched-preemption @ 04/20/24 15:31:03.375
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:31:03.408
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:31:03.414
  Apr 20 15:31:03.449: INFO: Waiting up to 1m0s for all nodes to be ready
  E0420 15:31:04.324566      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:05.325385      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:06.325446      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:07.325959      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:08.326153      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:09.326380      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:10.326619      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:11.327338      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:12.331126      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:13.329635      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:14.329949      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:15.330268      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:16.330240      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:17.330999      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:18.331584      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:19.331447      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:20.331598      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:21.332026      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:22.332156      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:23.332387      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:24.332560      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:25.332701      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:26.332986      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:27.334015      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:28.334823      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:29.335069      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:30.335465      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:31.335547      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:32.336150      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:33.337123      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:34.337223      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:35.337435      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:36.338255      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:37.338538      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:38.338905      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:39.339454      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:40.339644      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:41.340016      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:42.340216      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:43.341095      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:44.341444      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:45.341473      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:46.341945      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:47.342949      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:48.343040      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:49.344088      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:50.345167      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:51.345610      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:52.346210      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:53.346542      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:54.347137      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:55.347533      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:56.347952      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:57.348379      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:58.349431      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:59.350086      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:00.351139      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:01.351107      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:02.352174      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:03.352643      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:32:03.460: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 04/20/24 15:32:03.465
  Apr 20 15:32:03.512: INFO: Created pod: pod0-0-sched-preemption-low-priority
  Apr 20 15:32:03.527: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  Apr 20 15:32:03.569: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  Apr 20 15:32:03.606: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  Apr 20 15:32:03.694: INFO: Created pod: pod2-0-sched-preemption-medium-priority
  Apr 20 15:32:03.723: INFO: Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 04/20/24 15:32:03.723
  E0420 15:32:04.353636      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:05.354078      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 04/20/24 15:32:05.791
  E0420 15:32:06.355002      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:07.355226      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:32:07.961: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-7792" for this suite. @ 04/20/24 15:32:07.971
• [64.630 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:214
  STEP: Creating a kubernetes client @ 04/20/24 15:32:07.987
  Apr 20 15:32:07.987: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename container-probe @ 04/20/24 15:32:07.99
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:32:08.033
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:32:08.039
  STEP: Creating pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409 @ 04/20/24 15:32:08.044
  E0420 15:32:08.355641      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:09.356627      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/20/24 15:32:10.072
  Apr 20 15:32:10.079: INFO: Initial restart count of pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d is 0
  Apr 20 15:32:10.085: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:32:10.357447      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:11.357949      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:32:12.091: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:32:12.359083      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:13.360190      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:32:14.104: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:32:14.361291      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:15.361399      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:32:16.117: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:32:16.362114      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:17.363252      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:32:18.125: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:32:18.363425      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:19.363956      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:32:20.134: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:32:20.364136      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:21.364743      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:32:22.142: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:32:22.365825      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:23.369104      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:32:24.152: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:32:24.368162      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:25.368615      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:32:26.168: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:32:26.369312      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:27.370057      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:32:28.177: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:32:28.370373      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:29.371072      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:32:30.184: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:32:30.372475      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:31.372560      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:32:32.195: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:32:32.373795      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:33.374316      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:32:34.214: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:32:34.374453      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:35.374826      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:32:36.223: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:32:36.374901      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:37.375618      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:32:38.231: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:32:38.376948      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:39.377175      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:32:40.241: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:32:40.378057      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:41.378349      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:32:42.249: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:32:42.378740      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:43.378767      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:32:44.257: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:32:44.380010      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:45.385389      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:32:46.274: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:32:46.380992      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:47.381740      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:32:48.281: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:32:48.382246      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:49.382605      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:32:50.289: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:32:50.382799      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:51.384110      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:32:52.298: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:32:52.384532      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:53.384943      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:32:54.307: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:32:54.385409      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:55.386070      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:32:56.325: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:32:56.386923      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:57.387160      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:32:58.335: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:32:58.387971      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:59.388108      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:33:00.343: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:33:00.388539      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:01.389010      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:33:02.352: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:33:02.390336      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:03.390908      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:33:04.368: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:33:04.391728      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:05.391856      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:33:06.376: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:33:06.392335      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:07.392944      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:33:08.383: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:33:08.393567      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:09.394198      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:33:10.393: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:33:10.394358      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:11.395122      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:12.395764      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:33:12.402: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:33:13.395952      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:14.396563      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:33:14.411: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:33:15.396880      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:16.396950      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:33:16.426: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:33:17.397059      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:18.397957      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:33:18.440: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:33:19.398244      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:20.399149      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:33:20.447: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:33:21.399840      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:22.399947      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:33:22.458: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:33:23.400711      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:24.400891      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:33:24.466: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:33:25.405069      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:26.402163      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:33:26.483: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:33:27.402284      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:28.403407      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:33:28.490: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:33:29.404043      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:30.405068      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:33:30.501: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:33:31.405445      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:32.406271      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:33:32.516: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:33:33.406445      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:34.406711      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:33:34.524: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:33:35.407354      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:36.408266      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:33:36.532: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:33:37.408881      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:38.409319      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:33:38.539: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:33:39.409210      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:40.409751      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:33:40.552: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:33:41.409890      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:42.410734      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:33:42.559: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:33:43.411449      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:44.411709      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:33:44.568: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:33:45.411910      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:46.412045      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:33:46.581: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:33:47.412221      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:48.413036      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:33:48.588: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:33:49.413213      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:50.413566      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:33:50.596: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:33:51.414085      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:52.414141      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:33:52.607: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:33:53.414577      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:54.414836      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:33:54.615: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:33:55.415626      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:56.416120      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:33:56.625: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:33:57.416397      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:58.417018      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:33:58.638: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:33:59.418054      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:34:00.419078      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:34:00.644: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:34:01.419269      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:34:02.419839      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:34:02.651: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:34:03.419903      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:34:04.420301      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:34:04.661: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:34:05.420882      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:34:06.421978      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:34:06.669: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:34:07.422457      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:34:08.423439      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:34:08.677: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:34:09.423850      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:34:10.424080      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:34:10.687: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:34:11.424350      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:34:12.424903      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:34:12.697: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:34:13.425053      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:34:14.425847      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:34:14.707: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:34:15.426214      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:34:16.426867      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:34:16.720: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:34:17.426995      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:34:18.427918      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:34:18.731: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:34:19.428445      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:34:20.428398      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:34:20.739: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:34:21.428733      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:34:22.429079      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:34:22.751: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:34:23.429221      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:34:24.429450      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:34:24.767: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:34:25.429827      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:34:26.429962      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:34:26.775: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:34:27.430826      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:34:28.430885      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:34:28.787: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:34:29.431591      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:34:30.432581      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:34:30.796: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:34:31.433250      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:34:32.433554      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:34:32.803: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:34:33.434557      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:34:34.435335      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:34:34.810: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:34:35.435447      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:34:36.436181      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:34:36.820: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:34:37.436836      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:34:38.437264      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:34:38.828: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:34:39.437416      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:34:40.437499      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:34:40.839: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:34:41.437843      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:34:42.438303      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:34:42.847: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:34:43.439244      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:34:44.439474      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:34:44.859: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:34:45.439620      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:34:46.440756      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:34:46.869: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:34:47.441249      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:34:48.441503      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:34:48.879: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:34:49.442083      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:34:50.442553      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:34:50.888: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:34:51.442880      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:34:52.443103      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:34:52.897: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:34:53.445077      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:34:54.444286      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:34:54.906: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:34:55.444972      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:34:56.445091      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:34:56.919: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:34:57.445414      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:34:58.445518      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:34:58.927: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:34:59.446401      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:00.446631      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:35:00.936: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:35:01.447800      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:02.448362      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:35:02.944: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:35:03.449154      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:04.448942      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:35:04.952: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:35:05.449066      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:06.449392      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:35:06.966: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:35:07.450157      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:08.451722      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:35:08.979: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:35:09.452118      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:10.453159      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:35:10.992: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:35:11.453061      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:12.453239      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:35:13.001: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:35:13.453466      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:14.454135      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:35:15.008: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:35:15.454314      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:16.454440      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:35:17.017: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:35:17.455233      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:18.456489      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:35:19.026: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:35:19.456886      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:20.456913      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:35:21.034: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:35:21.457243      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:22.457857      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:35:23.060: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:35:23.460182      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:24.460209      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:35:25.069: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:35:25.461517      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:26.461883      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:35:27.078: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:35:27.462452      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:28.462940      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:35:29.089: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:35:29.463609      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:30.464602      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:35:31.097: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:35:31.464745      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:32.464970      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:35:33.107: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:35:33.465438      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:34.466182      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:35:35.116: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:35:35.466621      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:36.467010      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:35:37.128: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:35:37.467187      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:38.469810      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:35:39.141: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:35:39.467980      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:40.468072      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:35:41.148: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:35:41.468529      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:42.469461      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:35:43.155: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:35:43.470105      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:44.471129      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:35:45.168: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:35:45.472302      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:46.472622      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:35:47.179: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:35:47.472883      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:48.473126      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:35:49.187: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:35:49.473852      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:50.474176      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:35:51.197: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:35:51.475182      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:52.475443      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:35:53.204: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:35:53.476008      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:54.476581      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:35:55.212: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:35:55.477430      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:56.477954      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:35:57.223: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:35:57.478427      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:58.479178      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:35:59.231: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:35:59.479541      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:36:00.480251      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:36:01.241: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:36:01.480813      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:36:02.481167      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:36:03.249: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:36:03.481484      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:36:04.481982      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:36:05.261: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:36:05.483239      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:36:06.483357      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:36:07.271: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:36:07.484068      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:36:08.484301      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:36:09.280: INFO: Get pod test-webserver-4b75c416-16b0-4b2d-a50e-692fc575699d in namespace container-probe-409
  E0420 15:36:09.485204      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:36:10.485351      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 04/20/24 15:36:11.281
  Apr 20 15:36:11.309: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-409" for this suite. @ 04/20/24 15:36:11.322
• [243.352 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:238
  STEP: Creating a kubernetes client @ 04/20/24 15:36:11.342
  Apr 20 15:36:11.342: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename webhook @ 04/20/24 15:36:11.357
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:36:11.387
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:36:11.396
  STEP: Setting up server cert @ 04/20/24 15:36:11.442
  E0420 15:36:11.485890      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:36:12.486510      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/20/24 15:36:12.708
  STEP: Deploying the webhook pod @ 04/20/24 15:36:12.728
  STEP: Wait for the deployment to be ready @ 04/20/24 15:36:12.75
  Apr 20 15:36:12.763: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0420 15:36:13.487064      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:36:14.487288      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/20/24 15:36:14.783
  STEP: Verifying the service has paired with the endpoint @ 04/20/24 15:36:14.805
  E0420 15:36:15.488240      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:36:15.806: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 04/20/24 15:36:15.822
  STEP: create a namespace for the webhook @ 04/20/24 15:36:15.865
  STEP: create a configmap should be unconditionally rejected by the webhook @ 04/20/24 15:36:15.901
  Apr 20 15:36:16.022: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4624" for this suite. @ 04/20/24 15:36:16.035
  STEP: Destroying namespace "webhook-markers-573" for this suite. @ 04/20/24 15:36:16.051
  STEP: Destroying namespace "fail-closed-namespace-4912" for this suite. @ 04/20/24 15:36:16.065
• [4.735 seconds]
------------------------------
S
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 04/20/24 15:36:16.076
  Apr 20 15:36:16.076: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename init-container @ 04/20/24 15:36:16.079
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:36:16.11
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:36:16.114
  STEP: creating the pod @ 04/20/24 15:36:16.121
  Apr 20 15:36:16.121: INFO: PodSpec: initContainers in spec.initContainers
  E0420 15:36:16.489181      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:36:17.490002      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:36:18.492222      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:36:19.493181      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:36:20.456: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-2931" for this suite. @ 04/20/24 15:36:20.466
  E0420 15:36:20.494074      13 retrywatcher.go:129] "Watch failed" err="context canceled"
• [4.431 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1538
  STEP: Creating a kubernetes client @ 04/20/24 15:36:20.509
  Apr 20 15:36:20.509: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename kubectl @ 04/20/24 15:36:20.513
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:36:20.54
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:36:20.545
  STEP: creating Agnhost RC @ 04/20/24 15:36:20.55
  Apr 20 15:36:20.550: INFO: namespace kubectl-3213
  Apr 20 15:36:20.551: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-3213 create -f -'
  Apr 20 15:36:20.887: INFO: stderr: ""
  Apr 20 15:36:20.887: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 04/20/24 15:36:20.887
  E0420 15:36:21.495626      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:36:21.897: INFO: Selector matched 1 pods for map[app:agnhost]
  Apr 20 15:36:21.897: INFO: Found 0 / 1
  E0420 15:36:22.495545      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:36:22.896: INFO: Selector matched 1 pods for map[app:agnhost]
  Apr 20 15:36:22.896: INFO: Found 1 / 1
  Apr 20 15:36:22.896: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  Apr 20 15:36:22.911: INFO: Selector matched 1 pods for map[app:agnhost]
  Apr 20 15:36:22.911: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Apr 20 15:36:22.911: INFO: wait on agnhost-primary startup in kubectl-3213 
  Apr 20 15:36:22.912: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-3213 logs agnhost-primary-rswsl agnhost-primary'
  Apr 20 15:36:23.146: INFO: stderr: ""
  Apr 20 15:36:23.146: INFO: stdout: "Paused\n"
  STEP: exposing RC @ 04/20/24 15:36:23.146
  Apr 20 15:36:23.147: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-3213 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  Apr 20 15:36:23.358: INFO: stderr: ""
  Apr 20 15:36:23.358: INFO: stdout: "service/rm2 exposed\n"
  Apr 20 15:36:23.368: INFO: Service rm2 in namespace kubectl-3213 found.
  E0420 15:36:23.495728      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:36:24.495884      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: exposing service @ 04/20/24 15:36:25.382
  Apr 20 15:36:25.383: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-3213 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  E0420 15:36:25.496267      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:36:25.608: INFO: stderr: ""
  Apr 20 15:36:25.608: INFO: stdout: "service/rm3 exposed\n"
  Apr 20 15:36:25.629: INFO: Service rm3 in namespace kubectl-3213 found.
  E0420 15:36:26.496760      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:36:27.496883      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:36:27.647: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3213" for this suite. @ 04/20/24 15:36:27.655
• [7.158 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:424
  STEP: Creating a kubernetes client @ 04/20/24 15:36:27.67
  Apr 20 15:36:27.670: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename configmap @ 04/20/24 15:36:27.673
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:36:27.7
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:36:27.704
  STEP: Creating configMap with name configmap-test-volume-e087d53a-12ab-435b-b2b6-13359b32cea3 @ 04/20/24 15:36:27.709
  STEP: Creating a pod to test consume configMaps @ 04/20/24 15:36:27.716
  E0420 15:36:28.497035      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:36:29.497990      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:36:30.498016      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:36:31.498168      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 15:36:31.757
  Apr 20 15:36:31.764: INFO: Trying to get logs from node nok4chie7ate-3 pod pod-configmaps-347b7b88-848b-4058-a168-9b975ad59d0f container configmap-volume-test: <nil>
  STEP: delete the pod @ 04/20/24 15:36:31.8
  Apr 20 15:36:31.827: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1760" for this suite. @ 04/20/24 15:36:31.834
• [4.174 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:163
  STEP: Creating a kubernetes client @ 04/20/24 15:36:31.844
  Apr 20 15:36:31.844: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename resourcequota @ 04/20/24 15:36:31.847
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:36:31.872
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:36:31.877
  STEP: Discovering how many secrets are in namespace by default @ 04/20/24 15:36:31.882
  E0420 15:36:32.499244      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:36:33.499921      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:36:34.500827      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:36:35.501341      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:36:36.502789      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 04/20/24 15:36:36.893
  E0420 15:36:37.503093      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:36:38.503302      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:36:39.503530      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:36:40.504568      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:36:41.505065      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 04/20/24 15:36:41.902
  STEP: Ensuring resource quota status is calculated @ 04/20/24 15:36:41.913
  E0420 15:36:42.505958      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:36:43.506060      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Secret @ 04/20/24 15:36:43.922
  STEP: Ensuring resource quota status captures secret creation @ 04/20/24 15:36:43.945
  E0420 15:36:44.507614      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:36:45.507180      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a secret @ 04/20/24 15:36:45.953
  STEP: Ensuring resource quota status released usage @ 04/20/24 15:36:45.966
  E0420 15:36:46.507959      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:36:47.509015      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:36:47.975: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8081" for this suite. @ 04/20/24 15:36:47.983
• [16.153 seconds]
------------------------------
SS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:349
  STEP: Creating a kubernetes client @ 04/20/24 15:36:47.997
  Apr 20 15:36:47.997: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename security-context-test @ 04/20/24 15:36:48.002
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:36:48.048
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:36:48.054
  E0420 15:36:48.510061      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:36:49.511258      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:36:50.511881      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:36:51.513464      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:36:52.096: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-1815" for this suite. @ 04/20/24 15:36:52.106
• [4.122 seconds]
------------------------------
SSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:107
  STEP: Creating a kubernetes client @ 04/20/24 15:36:52.121
  Apr 20 15:36:52.121: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename container-probe @ 04/20/24 15:36:52.124
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:36:52.154
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:36:52.159
  E0420 15:36:52.514347      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:36:53.514802      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:36:54.515425      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:36:55.515808      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:36:56.515708      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:36:57.516204      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:36:58.517147      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:36:59.517992      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:00.518738      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:01.523988      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:02.520464      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:03.521522      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:04.521129      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:05.521836      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:06.522298      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:07.523045      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:08.523166      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:09.523407      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:10.524728      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:11.525650      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:12.525996      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:13.526495      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:14.527605      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:15.528448      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:16.529133      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:17.530176      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:18.530234      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:19.530780      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:20.531719      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:21.532015      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:22.532290      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:23.532428      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:24.533021      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:25.533879      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:26.533993      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:27.534263      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:28.534617      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:29.535172      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:30.535770      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:31.536403      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:32.537275      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:33.537171      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:34.537295      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:35.539323      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:36.538490      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:37.538812      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:38.539373      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:39.539860      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:40.540168      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:41.540392      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:42.540880      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:43.540993      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:44.541610      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:45.542136      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:46.543199      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:47.543306      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:48.544396      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:49.544626      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:50.545041      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:51.546026      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:37:52.192: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-5221" for this suite. @ 04/20/24 15:37:52.206
• [60.102 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 04/20/24 15:37:52.223
  Apr 20 15:37:52.224: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename pods @ 04/20/24 15:37:52.235
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:37:52.277
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:37:52.284
  Apr 20 15:37:52.291: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: creating the pod @ 04/20/24 15:37:52.295
  STEP: submitting the pod to kubernetes @ 04/20/24 15:37:52.295
  E0420 15:37:52.546981      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:53.549058      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:37:54.425: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7877" for this suite. @ 04/20/24 15:37:54.434
• [2.223 seconds]
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 04/20/24 15:37:54.447
  Apr 20 15:37:54.447: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename daemonsets @ 04/20/24 15:37:54.45
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:37:54.476
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:37:54.481
  Apr 20 15:37:54.516: INFO: Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 04/20/24 15:37:54.524
  Apr 20 15:37:54.530: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 20 15:37:54.530: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 04/20/24 15:37:54.53
  E0420 15:37:54.549052      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:37:54.571: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 20 15:37:54.572: INFO: Node nok4chie7ate-2 is running 0 daemon pod, expected 1
  E0420 15:37:55.549414      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:37:55.572: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 20 15:37:55.572: INFO: Node nok4chie7ate-2 is running 0 daemon pod, expected 1
  E0420 15:37:56.550144      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:37:56.576: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Apr 20 15:37:56.576: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 04/20/24 15:37:56.596
  Apr 20 15:37:56.640: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Apr 20 15:37:56.640: INFO: Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
  E0420 15:37:57.550235      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:37:57.644: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 20 15:37:57.644: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 04/20/24 15:37:57.644
  Apr 20 15:37:57.687: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 20 15:37:57.687: INFO: Node nok4chie7ate-2 is running 0 daemon pod, expected 1
  E0420 15:37:58.551329      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:37:58.686: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 20 15:37:58.686: INFO: Node nok4chie7ate-2 is running 0 daemon pod, expected 1
  E0420 15:37:59.552473      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:37:59.684: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Apr 20 15:37:59.684: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 04/20/24 15:37:59.709
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-1770, will wait for the garbage collector to delete the pods @ 04/20/24 15:37:59.709
  Apr 20 15:37:59.787: INFO: Deleting DaemonSet.extensions daemon-set took: 18.47013ms
  Apr 20 15:37:59.888: INFO: Terminating DaemonSet.extensions daemon-set pods took: 101.371488ms
  E0420 15:38:00.552509      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:38:01.101: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 20 15:38:01.101: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Apr 20 15:38:01.108: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"70047"},"items":null}

  Apr 20 15:38:01.116: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"70047"},"items":null}

  Apr 20 15:38:01.176: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-1770" for this suite. @ 04/20/24 15:38:01.185
• [6.759 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:669
  STEP: Creating a kubernetes client @ 04/20/24 15:38:01.206
  Apr 20 15:38:01.206: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename pv @ 04/20/24 15:38:01.208
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:38:01.244
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:38:01.251
  STEP: Creating initial PV and PVC @ 04/20/24 15:38:01.256
  Apr 20 15:38:01.257: INFO: Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-7302" @ 04/20/24 15:38:01.29
  STEP: Listing PVCs in namespace "pv-7302" @ 04/20/24 15:38:01.298
  STEP: Reading "pvc-fjzvf" Status @ 04/20/24 15:38:01.308
  STEP: Reading "pv-7302-v4wrt" Status @ 04/20/24 15:38:01.321
  STEP: Patching "pvc-fjzvf" Status @ 04/20/24 15:38:01.341
  STEP: Patching "pv-7302-v4wrt" Status @ 04/20/24 15:38:01.356
  STEP: Updating "pvc-fjzvf" Status @ 04/20/24 15:38:01.368
  STEP: Updating "pv-7302-v4wrt" Status @ 04/20/24 15:38:01.393
  Apr 20 15:38:01.470: INFO: AfterEach: deleting 1 PVCs and 1 PVs...
  Apr 20 15:38:01.470: INFO: Deleting PersistentVolumeClaim "pvc-fjzvf"
  Apr 20 15:38:01.496: INFO: Deleting PersistentVolume "pv-7302-v4wrt"
  Apr 20 15:38:01.510: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-7302" for this suite. @ 04/20/24 15:38:01.523
• [0.333 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:793
  STEP: Creating a kubernetes client @ 04/20/24 15:38:01.542
  Apr 20 15:38:01.542: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename statefulset @ 04/20/24 15:38:01.546
  E0420 15:38:01.553555      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:38:01.591
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:38:01.598
  STEP: Creating service test in namespace statefulset-1081 @ 04/20/24 15:38:01.609
  STEP: Looking for a node to schedule stateful set and pod @ 04/20/24 15:38:01.622
  STEP: Creating pod with conflicting port in namespace statefulset-1081 @ 04/20/24 15:38:01.637
  STEP: Waiting until pod test-pod will start running in namespace statefulset-1081 @ 04/20/24 15:38:01.672
  E0420 15:38:02.553843      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:03.554063      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating statefulset with conflicting port in namespace statefulset-1081 @ 04/20/24 15:38:03.694
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-1081 @ 04/20/24 15:38:03.709
  Apr 20 15:38:03.733: INFO: Observed stateful pod in namespace: statefulset-1081, name: ss-0, uid: 65dd345b-e564-4188-bf58-011294777bf9, status phase: Pending. Waiting for statefulset controller to delete.
  Apr 20 15:38:03.771: INFO: Observed stateful pod in namespace: statefulset-1081, name: ss-0, uid: 65dd345b-e564-4188-bf58-011294777bf9, status phase: Failed. Waiting for statefulset controller to delete.
  Apr 20 15:38:03.797: INFO: Observed stateful pod in namespace: statefulset-1081, name: ss-0, uid: 65dd345b-e564-4188-bf58-011294777bf9, status phase: Failed. Waiting for statefulset controller to delete.
  Apr 20 15:38:03.802: INFO: Observed delete event for stateful pod ss-0 in namespace statefulset-1081
  STEP: Removing pod with conflicting port in namespace statefulset-1081 @ 04/20/24 15:38:03.802
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-1081 and will be in running state @ 04/20/24 15:38:03.83
  E0420 15:38:04.554488      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:05.554570      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:06.554750      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:07.555465      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:08.555970      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:09.556215      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:10.556541      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:11.557150      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:12.558478      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:13.559292      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:14.559990      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:15.561017      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:16.562096      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:17.562180      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:18.563230      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:19.563384      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:38:19.918: INFO: Deleting all statefulset in ns statefulset-1081
  Apr 20 15:38:19.924: INFO: Scaling statefulset ss to 0
  E0420 15:38:20.564272      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:21.564483      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:22.565531      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:23.565265      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:24.565759      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:25.566566      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:26.566445      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:27.566890      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:28.567756      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:29.567255      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:38:29.957: INFO: Waiting for statefulset status.replicas updated to 0
  Apr 20 15:38:29.965: INFO: Deleting statefulset ss
  Apr 20 15:38:29.999: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1081" for this suite. @ 04/20/24 15:38:30.008
• [28.479 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 04/20/24 15:38:30.021
  Apr 20 15:38:30.021: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename watch @ 04/20/24 15:38:30.027
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:38:30.058
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:38:30.066
  STEP: getting a starting resourceVersion @ 04/20/24 15:38:30.074
  STEP: starting a background goroutine to produce watch events @ 04/20/24 15:38:30.084
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 04/20/24 15:38:30.084
  E0420 15:38:30.567287      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:31.568301      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:32.568432      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:38:32.842: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-229" for this suite. @ 04/20/24 15:38:32.89
• [2.929 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:274
  STEP: Creating a kubernetes client @ 04/20/24 15:38:32.952
  Apr 20 15:38:32.952: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename namespaces @ 04/20/24 15:38:32.96
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:38:33.004
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:38:33.01
  STEP: creating a Namespace @ 04/20/24 15:38:33.017
  STEP: patching the Namespace @ 04/20/24 15:38:33.05
  STEP: get the Namespace and ensuring it has the label @ 04/20/24 15:38:33.065
  Apr 20 15:38:33.071: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-9146" for this suite. @ 04/20/24 15:38:33.081
  STEP: Destroying namespace "nspatchtest-ad97b595-9021-4db2-ad0b-27db2dd826bb-6309" for this suite. @ 04/20/24 15:38:33.096
• [0.156 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:527
  STEP: Creating a kubernetes client @ 04/20/24 15:38:33.109
  Apr 20 15:38:33.109: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename container-probe @ 04/20/24 15:38:33.114
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:38:33.141
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:38:33.146
  STEP: Creating pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925 @ 04/20/24 15:38:33.151
  E0420 15:38:33.569549      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:34.570262      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/20/24 15:38:35.193
  Apr 20 15:38:35.205: INFO: Initial restart count of pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 is 0
  Apr 20 15:38:35.212: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:38:35.570987      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:36.571621      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:38:37.226: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:38:37.571709      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:38.572724      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:38:39.235: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:38:39.572956      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:40.573373      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:38:41.247: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:38:41.574024      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:42.574423      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:38:43.262: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:38:43.575135      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:44.576009      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:38:45.273: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:38:45.576395      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:46.576784      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:38:47.285: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:38:47.577107      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:48.577638      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:38:49.295: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:38:49.577879      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:50.579374      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:38:51.312: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:38:51.579245      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:52.581090      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:38:53.321: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:38:53.580992      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:54.582259      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:38:55.331: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:38:55.582748      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:56.583266      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:38:57.340: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:38:57.583813      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:58.584104      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:38:59.350: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:38:59.584090      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:00.584368      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:39:01.364: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:39:01.585250      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:02.585128      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:39:03.372: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:39:03.585450      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:04.586581      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:39:05.382: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:39:05.587080      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:06.587785      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:39:07.392: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:39:07.588511      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:08.589514      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:39:09.400: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:39:09.589844      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:10.590511      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:39:11.409: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:39:11.591575      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:12.592163      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:39:13.422: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:39:13.593430      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:14.594348      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:39:15.431: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:39:15.594337      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:16.594571      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:39:17.441: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:39:17.594994      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:18.595570      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:39:19.460: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:39:19.597076      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:20.596707      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:39:21.486: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:39:21.597035      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:22.598133      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:39:23.493: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:39:23.598887      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:24.599287      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:39:25.505: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:39:25.599996      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:26.600438      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:39:27.521: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:39:27.603607      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:28.601915      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:39:29.529: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:39:29.601944      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:30.602598      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:39:31.538: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:39:31.603702      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:32.604035      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:39:33.546: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:39:33.605064      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:34.605940      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:39:35.557: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:39:35.606936      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:36.607105      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:39:37.566: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:39:37.608097      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:38.608997      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:39:39.578: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:39:39.610099      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:40.610202      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:39:41.587: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:39:41.610526      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:42.611079      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:39:43.596: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:39:43.611888      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:44.612801      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:39:45.608: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:39:45.612961      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:46.613363      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:47.614223      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:39:47.617: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:39:48.614557      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:49.615634      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:39:49.625: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:39:50.616028      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:51.616355      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:39:51.642: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:39:52.616590      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:53.617202      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:39:53.654: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:39:54.618324      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:55.618916      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:39:55.662: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:39:56.619095      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:57.619346      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:39:57.670: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:39:58.619645      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:59.619830      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:39:59.678: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:40:00.619933      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:01.620199      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:40:01.685: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:40:02.620639      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:03.621135      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:40:03.694: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:40:04.621820      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:05.622528      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:40:05.702: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:40:06.623416      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:07.623579      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:40:07.712: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:40:08.624630      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:09.625489      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:40:09.719: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:40:10.625723      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:11.626305      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:40:11.730: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:40:12.627018      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:13.627359      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:40:13.742: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:40:14.627722      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:15.628442      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:40:15.751: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:40:16.628719      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:17.629050      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:40:17.760: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:40:18.629739      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:19.629582      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:40:19.768: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:40:20.629808      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:21.630377      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:40:21.776: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:40:22.630510      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:23.631320      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:40:23.790: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:40:24.632150      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:25.632359      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:40:25.801: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:40:26.632752      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:27.633330      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:40:27.810: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:40:28.633579      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:29.634758      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:40:29.819: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:40:30.635114      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:31.635206      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:40:31.832: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:40:32.635407      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:33.635651      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:40:33.840: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:40:34.636128      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:35.636355      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:40:35.850: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:40:36.636743      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:37.636959      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:40:37.860: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:40:38.637400      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:39.638235      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:40:39.867: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:40:40.638477      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:41.639636      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:40:41.880: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:40:42.639579      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:43.640122      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:40:43.891: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:40:44.640730      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:45.641531      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:40:45.899: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:40:46.641784      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:47.642057      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:40:47.908: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:40:48.643072      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:49.643969      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:40:49.924: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:40:50.644317      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:51.644507      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:40:51.935: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:40:52.644828      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:53.645503      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:40:53.944: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:40:54.645454      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:55.646081      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:40:55.952: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:40:56.647004      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:57.647274      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:40:57.974: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:40:58.648325      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:59.649594      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:40:59.985: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:41:00.650462      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:01.650954      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:41:01.999: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:41:02.651766      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:03.651838      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:41:04.011: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:41:04.652504      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:05.666291      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:41:06.020: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:41:06.654605      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:07.654991      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:41:08.033: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:41:08.655304      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:09.655539      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:41:10.046: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:41:10.659984      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:11.656836      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:41:12.066: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:41:12.657235      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:13.657542      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:41:14.079: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:41:14.658055      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:15.658260      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:41:16.090: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:41:16.658619      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:17.659380      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:41:18.115: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:41:18.659782      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:19.668350      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:41:20.127: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:41:20.664366      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:21.664508      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:41:22.142: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:41:22.664855      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:23.665600      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:41:24.164: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:41:24.666149      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:25.667112      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:41:26.175: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:41:26.667912      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:27.668745      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:41:28.188: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:41:28.668892      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:29.669204      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:41:30.199: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:41:30.669439      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:31.670338      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:41:32.213: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:41:32.671512      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:33.672484      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:41:34.226: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:41:34.672776      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:35.673614      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:41:36.239: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:41:36.674944      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:37.675309      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:41:38.252: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:41:38.675877      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:39.676029      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:41:40.260: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:41:40.677197      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:41.676851      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:41:42.274: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:41:42.677190      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:43.677838      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:41:44.283: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:41:44.678820      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:45.679234      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:41:46.295: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:41:46.679638      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:47.680413      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:41:48.306: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:41:48.680481      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:49.681776      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:41:50.318: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:41:50.681808      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:51.681936      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:41:52.332: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:41:52.683125      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:53.683406      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:41:54.346: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:41:54.684373      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:55.686862      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:41:56.362: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:41:56.685470      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:57.686041      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:41:58.370: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:41:58.686237      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:59.687173      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:42:00.378: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:42:00.687349      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:01.687938      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:42:02.387: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:42:02.688843      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:03.689407      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:42:04.396: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:42:04.690320      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:05.690981      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:42:06.404: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:42:06.691209      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:07.692032      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:42:08.413: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:42:08.692142      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:09.692587      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:42:10.421: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:42:10.692921      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:11.693433      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:42:12.431: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:42:12.693659      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:13.694308      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:42:14.437: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:42:14.695400      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:15.696176      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:42:16.447: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:42:16.696984      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:17.697429      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:42:18.454: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:42:18.698302      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:19.699117      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:42:20.464: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:42:20.699708      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:21.699982      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:42:22.474: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:42:22.700541      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:23.701115      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:42:24.484: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:42:24.701787      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:25.702096      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:42:26.491: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:42:26.702957      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:27.704411      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:42:28.504: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:42:28.704563      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:29.705051      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:42:30.514: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:42:30.706187      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:31.706373      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:42:32.527: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:42:32.706414      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:33.706949      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:42:34.537: INFO: Get pod test-grpc-fd6dd32d-b47e-4a30-97a2-687c58f53573 in namespace container-probe-2925
  E0420 15:42:34.707734      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:35.708763      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 04/20/24 15:42:36.538
  Apr 20 15:42:36.572: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2925" for this suite. @ 04/20/24 15:42:36.592
• [243.504 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:103
  STEP: Creating a kubernetes client @ 04/20/24 15:42:36.614
  Apr 20 15:42:36.614: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename resourcequota @ 04/20/24 15:42:36.622
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:42:36.666
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:42:36.675
  STEP: Counting existing ResourceQuota @ 04/20/24 15:42:36.683
  E0420 15:42:36.709154      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:37.709377      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:38.710077      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:39.710908      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:40.710959      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 04/20/24 15:42:41.692
  STEP: Ensuring resource quota status is calculated @ 04/20/24 15:42:41.707
  E0420 15:42:41.711587      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:42.711878      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:43.712579      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Service @ 04/20/24 15:42:43.724
  STEP: Creating a NodePort Service @ 04/20/24 15:42:43.769
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 04/20/24 15:42:43.853
  STEP: Ensuring resource quota status captures service creation @ 04/20/24 15:42:43.9
  E0420 15:42:44.713561      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:45.714906      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting Services @ 04/20/24 15:42:45.91
  STEP: Ensuring resource quota status released usage @ 04/20/24 15:42:46.016
  E0420 15:42:46.714986      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:47.715175      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:42:48.027: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3302" for this suite. @ 04/20/24 15:42:48.039
• [11.442 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:132
  STEP: Creating a kubernetes client @ 04/20/24 15:42:48.056
  Apr 20 15:42:48.056: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename downward-api @ 04/20/24 15:42:48.059
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:42:48.106
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:42:48.111
  STEP: Creating the pod @ 04/20/24 15:42:48.116
  E0420 15:42:48.715507      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:49.721184      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:50.717878      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:42:50.725: INFO: Successfully updated pod "labelsupdatec2e16ed0-2451-4276-961b-e071f9989cce"
  E0420 15:42:51.718910      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:52.719983      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:42:52.755: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9695" for this suite. @ 04/20/24 15:42:52.767
• [4.729 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 04/20/24 15:42:52.787
  Apr 20 15:42:52.787: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename container-runtime @ 04/20/24 15:42:52.793
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:42:52.84
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:42:52.846
  STEP: create the container @ 04/20/24 15:42:52.851
  W0420 15:42:52.868972      13 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 04/20/24 15:42:52.869
  E0420 15:42:53.719861      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:54.720008      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:55.720785      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 04/20/24 15:42:55.915
  STEP: the container should be terminated @ 04/20/24 15:42:55.922
  STEP: the termination message should be set @ 04/20/24 15:42:55.923
  Apr 20 15:42:55.923: INFO: Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 04/20/24 15:42:55.923
  Apr 20 15:42:55.950: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-3425" for this suite. @ 04/20/24 15:42:55.967
• [3.196 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:289
  STEP: Creating a kubernetes client @ 04/20/24 15:42:55.984
  Apr 20 15:42:55.984: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename field-validation @ 04/20/24 15:42:55.987
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:42:56.073
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:42:56.078
  Apr 20 15:42:56.083: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  E0420 15:42:56.721016      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:57.721647      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:58.721853      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:42:59.407: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-5274" for this suite. @ 04/20/24 15:42:59.414
• [3.441 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 04/20/24 15:42:59.426
  Apr 20 15:42:59.426: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename daemonsets @ 04/20/24 15:42:59.428
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:42:59.47
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:42:59.474
  STEP: Creating a simple DaemonSet "daemon-set" @ 04/20/24 15:42:59.525
  STEP: Check that daemon pods launch on every node of the cluster. @ 04/20/24 15:42:59.539
  Apr 20 15:42:59.552: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 20 15:42:59.553: INFO: Node nok4chie7ate-1 is running 0 daemon pod, expected 1
  E0420 15:42:59.722883      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:43:00.560: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 20 15:43:00.560: INFO: Node nok4chie7ate-1 is running 0 daemon pod, expected 1
  E0420 15:43:00.723810      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:43:01.565: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Apr 20 15:43:01.565: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 04/20/24 15:43:01.576
  Apr 20 15:43:01.616: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Apr 20 15:43:01.616: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 04/20/24 15:43:01.616
  E0420 15:43:01.724382      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting DaemonSet "daemon-set" @ 04/20/24 15:43:02.639
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-6451, will wait for the garbage collector to delete the pods @ 04/20/24 15:43:02.639
  Apr 20 15:43:02.709: INFO: Deleting DaemonSet.extensions daemon-set took: 12.113905ms
  E0420 15:43:02.724954      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:43:02.811: INFO: Terminating DaemonSet.extensions daemon-set pods took: 101.117651ms
  E0420 15:43:03.725573      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:04.726705      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:43:05.318: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 20 15:43:05.318: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Apr 20 15:43:05.325: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"71033"},"items":null}

  Apr 20 15:43:05.331: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"71033"},"items":null}

  Apr 20 15:43:05.365: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-6451" for this suite. @ 04/20/24 15:43:05.377
• [5.967 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:742
  STEP: Creating a kubernetes client @ 04/20/24 15:43:05.4
  Apr 20 15:43:05.400: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename svcaccounts @ 04/20/24 15:43:05.404
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:43:05.498
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:43:05.503
  Apr 20 15:43:05.514: INFO: Got root ca configmap in namespace "svcaccounts-116"
  Apr 20 15:43:05.524: INFO: Deleted root ca configmap in namespace "svcaccounts-116"
  E0420 15:43:05.727014      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting for a new root ca configmap created @ 04/20/24 15:43:06.024
  Apr 20 15:43:06.031: INFO: Recreated root ca configmap in namespace "svcaccounts-116"
  Apr 20 15:43:06.044: INFO: Updated root ca configmap in namespace "svcaccounts-116"
  STEP: waiting for the root ca configmap reconciled @ 04/20/24 15:43:06.545
  Apr 20 15:43:06.553: INFO: Reconciled root ca configmap in namespace "svcaccounts-116"
  Apr 20 15:43:06.553: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-116" for this suite. @ 04/20/24 15:43:06.563
• [1.181 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 04/20/24 15:43:06.6
  Apr 20 15:43:06.600: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename endpointslicemirroring @ 04/20/24 15:43:06.602
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:43:06.65
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:43:06.658
  STEP: mirroring a new custom Endpoint @ 04/20/24 15:43:06.695
  Apr 20 15:43:06.719: INFO: Waiting for at least 1 EndpointSlice to exist, got 0
  E0420 15:43:06.727627      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:07.728070      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:08.728392      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: mirroring an update to a custom Endpoint @ 04/20/24 15:43:08.729
  Apr 20 15:43:08.748: INFO: Expected EndpointSlice to have 10.2.3.4 as address, got 10.1.2.3
  E0420 15:43:09.728845      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:10.729823      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: mirroring deletion of a custom Endpoint @ 04/20/24 15:43:10.759
  Apr 20 15:43:10.780: INFO: Waiting for 0 EndpointSlices to exist, got 1
  E0420 15:43:11.729920      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:12.730384      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:43:12.789: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-1144" for this suite. @ 04/20/24 15:43:12.798
• [6.211 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:175
  STEP: Creating a kubernetes client @ 04/20/24 15:43:12.814
  Apr 20 15:43:12.814: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename projected @ 04/20/24 15:43:12.818
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:43:12.85
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:43:12.857
  STEP: Creating configMap with name cm-test-opt-del-07a4d96e-1027-4a24-8b0f-19b99f38e5b8 @ 04/20/24 15:43:12.87
  STEP: Creating configMap with name cm-test-opt-upd-805f7072-933f-49e9-9d05-90b8409c5226 @ 04/20/24 15:43:12.878
  STEP: Creating the pod @ 04/20/24 15:43:12.888
  E0420 15:43:13.733841      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:14.732371      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-07a4d96e-1027-4a24-8b0f-19b99f38e5b8 @ 04/20/24 15:43:14.991
  STEP: Updating configmap cm-test-opt-upd-805f7072-933f-49e9-9d05-90b8409c5226 @ 04/20/24 15:43:15.008
  STEP: Creating configMap with name cm-test-opt-create-35e32862-7c67-45da-a02f-be1006c4257c @ 04/20/24 15:43:15.02
  STEP: waiting to observe update in volume @ 04/20/24 15:43:15.029
  E0420 15:43:15.733639      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:16.734458      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:17.735477      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:18.736277      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:19.736377      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:20.736550      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:21.736805      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:22.737099      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:23.737437      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:24.737746      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:25.738322      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:26.738324      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:27.738490      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:28.738710      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:29.739574      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:30.740048      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:31.740917      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:32.741528      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:33.741720      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:34.742500      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:35.743030      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:36.743031      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:37.743266      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:38.744137      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:39.745085      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:40.750150      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:41.749959      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:42.749990      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:43.751015      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:44.752082      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:45.752398      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:46.753029      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:47.754219      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:48.754054      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:49.754615      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:50.755110      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:51.755359      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:52.755497      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:53.755805      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:54.756875      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:55.757619      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:56.757988      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:57.758826      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:58.759126      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:59.760138      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:00.760706      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:01.761753      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:02.762256      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:03.763210      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:04.763826      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:05.764478      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:06.764878      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:07.765568      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:08.765917      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:09.766644      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:10.767509      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:11.768237      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:12.770179      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:13.769490      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:14.769780      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:15.770140      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:16.771010      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:17.772023      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:18.772452      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:19.773314      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:20.773888      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:21.774482      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:22.775470      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:23.776530      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:24.776627      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:25.777031      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:26.777942      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:27.778287      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:28.778881      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:29.778867      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:30.779063      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:31.779713      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:32.779888      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:33.780476      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:34.780641      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:35.781480      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:36.781625      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:37.782546      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:38.783388      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:39.783853      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:40.784429      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:41.784440      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:44:42.009: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3216" for this suite. @ 04/20/24 15:44:42.016
• [89.214 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 04/20/24 15:44:42.029
  Apr 20 15:44:42.029: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename container-runtime @ 04/20/24 15:44:42.032
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:44:42.068
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:44:42.073
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 04/20/24 15:44:42.102
  E0420 15:44:42.785194      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:43.785331      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:44.786300      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:45.786534      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:46.787329      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:47.787511      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:48.788017      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:49.791918      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:50.790049      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:51.790184      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:52.790296      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:53.790910      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:54.791333      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:55.791556      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:56.791638      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:57.792182      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:58.793153      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:59.793745      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 04/20/24 15:45:00.281
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 04/20/24 15:45:00.288
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 04/20/24 15:45:00.3
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 04/20/24 15:45:00.3
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 04/20/24 15:45:00.338
  E0420 15:45:00.794608      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:45:01.795021      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:45:02.798049      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 04/20/24 15:45:03.376
  E0420 15:45:03.798048      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 04/20/24 15:45:04.393
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 04/20/24 15:45:04.407
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 04/20/24 15:45:04.407
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 04/20/24 15:45:04.472
  E0420 15:45:04.798598      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 04/20/24 15:45:05.495
  E0420 15:45:05.799820      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:45:06.800211      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 04/20/24 15:45:07.52
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 04/20/24 15:45:07.534
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 04/20/24 15:45:07.535
  Apr 20 15:45:07.593: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-5722" for this suite. @ 04/20/24 15:45:07.606
• [25.591 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:488
  STEP: Creating a kubernetes client @ 04/20/24 15:45:07.62
  Apr 20 15:45:07.621: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename security-context-test @ 04/20/24 15:45:07.626
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:45:07.67
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:45:07.675
  E0420 15:45:07.800194      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:45:08.803472      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:45:09.800781      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:45:10.801404      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:45:11.726: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-5412" for this suite. @ 04/20/24 15:45:11.737
• [4.132 seconds]
------------------------------
S
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:334
  STEP: Creating a kubernetes client @ 04/20/24 15:45:11.753
  Apr 20 15:45:11.754: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename sched-pred @ 04/20/24 15:45:11.757
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:45:11.796
  E0420 15:45:11.803619      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:45:11.804
  Apr 20 15:45:11.811: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Apr 20 15:45:11.834: INFO: Waiting for terminating namespaces to be deleted...
  Apr 20 15:45:11.841: INFO: 
  Logging pods the apiserver thinks is on node nok4chie7ate-1 before test
  Apr 20 15:45:11.857: INFO: coredns-76f75df574-jghzz from kube-system started at 2024-04-20 14:11:31 +0000 UTC (1 container statuses recorded)
  Apr 20 15:45:11.857: INFO: 	Container coredns ready: true, restart count 0
  Apr 20 15:45:11.857: INFO: kube-addon-manager-nok4chie7ate-1 from kube-system started at 2024-04-20 14:05:07 +0000 UTC (1 container statuses recorded)
  Apr 20 15:45:11.857: INFO: 	Container kube-addon-manager ready: true, restart count 8
  Apr 20 15:45:11.857: INFO: kube-apiserver-nok4chie7ate-1 from kube-system started at 2024-04-20 14:05:07 +0000 UTC (1 container statuses recorded)
  Apr 20 15:45:11.857: INFO: 	Container kube-apiserver ready: true, restart count 12
  Apr 20 15:45:11.857: INFO: kube-controller-manager-nok4chie7ate-1 from kube-system started at 2024-04-20 14:05:07 +0000 UTC (1 container statuses recorded)
  Apr 20 15:45:11.857: INFO: 	Container kube-controller-manager ready: true, restart count 10
  Apr 20 15:45:11.857: INFO: kube-flannel-ds-t9926 from kube-system started at 2024-04-20 14:11:32 +0000 UTC (1 container statuses recorded)
  Apr 20 15:45:11.857: INFO: 	Container kube-flannel ready: true, restart count 0
  Apr 20 15:45:11.857: INFO: kube-proxy-fwrhv from kube-system started at 2024-04-20 14:11:32 +0000 UTC (1 container statuses recorded)
  Apr 20 15:45:11.857: INFO: 	Container kube-proxy ready: true, restart count 0
  Apr 20 15:45:11.857: INFO: kube-scheduler-nok4chie7ate-1 from kube-system started at 2024-04-20 14:05:07 +0000 UTC (1 container statuses recorded)
  Apr 20 15:45:11.857: INFO: 	Container kube-scheduler ready: true, restart count 10
  Apr 20 15:45:11.857: INFO: sonobuoy-systemd-logs-daemon-set-a8ae23328e1d4fd2-khgbq from sonobuoy started at 2024-04-20 14:11:56 +0000 UTC (2 container statuses recorded)
  Apr 20 15:45:11.857: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 20 15:45:11.857: INFO: 	Container systemd-logs ready: true, restart count 0
  Apr 20 15:45:11.857: INFO: 
  Logging pods the apiserver thinks is on node nok4chie7ate-2 before test
  Apr 20 15:45:11.871: INFO: coredns-76f75df574-txvk2 from kube-system started at 2024-04-20 14:20:05 +0000 UTC (1 container statuses recorded)
  Apr 20 15:45:11.871: INFO: 	Container coredns ready: true, restart count 0
  Apr 20 15:45:11.871: INFO: kube-addon-manager-nok4chie7ate-2 from kube-system started at 2024-04-20 14:05:32 +0000 UTC (1 container statuses recorded)
  Apr 20 15:45:11.871: INFO: 	Container kube-addon-manager ready: true, restart count 9
  Apr 20 15:45:11.871: INFO: kube-apiserver-nok4chie7ate-2 from kube-system started at 2024-04-20 14:05:32 +0000 UTC (1 container statuses recorded)
  Apr 20 15:45:11.871: INFO: 	Container kube-apiserver ready: true, restart count 10
  Apr 20 15:45:11.871: INFO: kube-controller-manager-nok4chie7ate-2 from kube-system started at 2024-04-20 14:05:32 +0000 UTC (1 container statuses recorded)
  Apr 20 15:45:11.871: INFO: 	Container kube-controller-manager ready: true, restart count 10
  Apr 20 15:45:11.871: INFO: kube-flannel-ds-486q8 from kube-system started at 2024-04-20 14:11:32 +0000 UTC (1 container statuses recorded)
  Apr 20 15:45:11.871: INFO: 	Container kube-flannel ready: true, restart count 0
  Apr 20 15:45:11.871: INFO: kube-proxy-72cbd from kube-system started at 2024-04-20 14:11:32 +0000 UTC (1 container statuses recorded)
  Apr 20 15:45:11.871: INFO: 	Container kube-proxy ready: true, restart count 0
  Apr 20 15:45:11.871: INFO: kube-scheduler-nok4chie7ate-2 from kube-system started at 2024-04-20 14:05:32 +0000 UTC (1 container statuses recorded)
  Apr 20 15:45:11.871: INFO: 	Container kube-scheduler ready: true, restart count 10
  Apr 20 15:45:11.871: INFO: sonobuoy from sonobuoy started at 2024-04-20 14:11:50 +0000 UTC (1 container statuses recorded)
  Apr 20 15:45:11.871: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Apr 20 15:45:11.871: INFO: sonobuoy-systemd-logs-daemon-set-a8ae23328e1d4fd2-6mbwv from sonobuoy started at 2024-04-20 14:11:56 +0000 UTC (2 container statuses recorded)
  Apr 20 15:45:11.871: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 20 15:45:11.871: INFO: 	Container systemd-logs ready: true, restart count 0
  Apr 20 15:45:11.871: INFO: 
  Logging pods the apiserver thinks is on node nok4chie7ate-3 before test
  Apr 20 15:45:11.884: INFO: kube-flannel-ds-cs6vz from kube-system started at 2024-04-20 14:20:06 +0000 UTC (1 container statuses recorded)
  Apr 20 15:45:11.884: INFO: 	Container kube-flannel ready: true, restart count 0
  Apr 20 15:45:11.884: INFO: kube-proxy-92wnd from kube-system started at 2024-04-20 14:11:32 +0000 UTC (1 container statuses recorded)
  Apr 20 15:45:11.884: INFO: 	Container kube-proxy ready: true, restart count 0
  Apr 20 15:45:11.884: INFO: busybox-readonly-false-f93b4a40-191d-45a8-86b6-7e814bdd72f9 from security-context-test-5412 started at 2024-04-20 15:45:07 +0000 UTC (1 container statuses recorded)
  Apr 20 15:45:11.884: INFO: 	Container busybox-readonly-false-f93b4a40-191d-45a8-86b6-7e814bdd72f9 ready: false, restart count 0
  Apr 20 15:45:11.884: INFO: sonobuoy-e2e-job-bf54fcf72a4946a0 from sonobuoy started at 2024-04-20 14:11:56 +0000 UTC (2 container statuses recorded)
  Apr 20 15:45:11.884: INFO: 	Container e2e ready: true, restart count 0
  Apr 20 15:45:11.884: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 20 15:45:11.885: INFO: sonobuoy-systemd-logs-daemon-set-a8ae23328e1d4fd2-k6hk2 from sonobuoy started at 2024-04-20 14:11:56 +0000 UTC (2 container statuses recorded)
  Apr 20 15:45:11.885: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 20 15:45:11.885: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node nok4chie7ate-1 @ 04/20/24 15:45:11.929
  STEP: verifying the node has the label node nok4chie7ate-2 @ 04/20/24 15:45:11.96
  STEP: verifying the node has the label node nok4chie7ate-3 @ 04/20/24 15:45:12.005
  Apr 20 15:45:12.062: INFO: Pod coredns-76f75df574-jghzz requesting resource cpu=100m on Node nok4chie7ate-1
  Apr 20 15:45:12.062: INFO: Pod coredns-76f75df574-txvk2 requesting resource cpu=100m on Node nok4chie7ate-2
  Apr 20 15:45:12.062: INFO: Pod kube-addon-manager-nok4chie7ate-1 requesting resource cpu=5m on Node nok4chie7ate-1
  Apr 20 15:45:12.062: INFO: Pod kube-addon-manager-nok4chie7ate-2 requesting resource cpu=5m on Node nok4chie7ate-2
  Apr 20 15:45:12.062: INFO: Pod kube-apiserver-nok4chie7ate-1 requesting resource cpu=250m on Node nok4chie7ate-1
  Apr 20 15:45:12.062: INFO: Pod kube-apiserver-nok4chie7ate-2 requesting resource cpu=250m on Node nok4chie7ate-2
  Apr 20 15:45:12.062: INFO: Pod kube-controller-manager-nok4chie7ate-1 requesting resource cpu=200m on Node nok4chie7ate-1
  Apr 20 15:45:12.062: INFO: Pod kube-controller-manager-nok4chie7ate-2 requesting resource cpu=200m on Node nok4chie7ate-2
  Apr 20 15:45:12.062: INFO: Pod kube-flannel-ds-486q8 requesting resource cpu=100m on Node nok4chie7ate-2
  Apr 20 15:45:12.062: INFO: Pod kube-flannel-ds-cs6vz requesting resource cpu=100m on Node nok4chie7ate-3
  Apr 20 15:45:12.062: INFO: Pod kube-flannel-ds-t9926 requesting resource cpu=100m on Node nok4chie7ate-1
  Apr 20 15:45:12.062: INFO: Pod kube-proxy-72cbd requesting resource cpu=0m on Node nok4chie7ate-2
  Apr 20 15:45:12.062: INFO: Pod kube-proxy-92wnd requesting resource cpu=0m on Node nok4chie7ate-3
  Apr 20 15:45:12.062: INFO: Pod kube-proxy-fwrhv requesting resource cpu=0m on Node nok4chie7ate-1
  Apr 20 15:45:12.063: INFO: Pod kube-scheduler-nok4chie7ate-1 requesting resource cpu=100m on Node nok4chie7ate-1
  Apr 20 15:45:12.063: INFO: Pod kube-scheduler-nok4chie7ate-2 requesting resource cpu=100m on Node nok4chie7ate-2
  Apr 20 15:45:12.063: INFO: Pod sonobuoy requesting resource cpu=0m on Node nok4chie7ate-2
  Apr 20 15:45:12.063: INFO: Pod sonobuoy-e2e-job-bf54fcf72a4946a0 requesting resource cpu=0m on Node nok4chie7ate-3
  Apr 20 15:45:12.063: INFO: Pod sonobuoy-systemd-logs-daemon-set-a8ae23328e1d4fd2-6mbwv requesting resource cpu=0m on Node nok4chie7ate-2
  Apr 20 15:45:12.063: INFO: Pod sonobuoy-systemd-logs-daemon-set-a8ae23328e1d4fd2-k6hk2 requesting resource cpu=0m on Node nok4chie7ate-3
  Apr 20 15:45:12.063: INFO: Pod sonobuoy-systemd-logs-daemon-set-a8ae23328e1d4fd2-khgbq requesting resource cpu=0m on Node nok4chie7ate-1
  STEP: Starting Pods to consume most of the cluster CPU. @ 04/20/24 15:45:12.063
  Apr 20 15:45:12.063: INFO: Creating a pod which consumes cpu=591m on Node nok4chie7ate-1
  Apr 20 15:45:12.092: INFO: Creating a pod which consumes cpu=591m on Node nok4chie7ate-2
  Apr 20 15:45:12.106: INFO: Creating a pod which consumes cpu=1050m on Node nok4chie7ate-3
  E0420 15:45:12.804583      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:45:13.805152      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating another pod that requires unavailable amount of CPU. @ 04/20/24 15:45:14.199
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-c539c4c6-b7c2-4974-b914-36cbe1872525.17c80781c23fcad3], Reason = [Scheduled], Message = [Successfully assigned sched-pred-4089/filler-pod-c539c4c6-b7c2-4974-b914-36cbe1872525 to nok4chie7ate-1] @ 04/20/24 15:45:14.208
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-c539c4c6-b7c2-4974-b914-36cbe1872525.17c80781f71916c5], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 04/20/24 15:45:14.208
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-c539c4c6-b7c2-4974-b914-36cbe1872525.17c8078201f26953], Reason = [Created], Message = [Created container filler-pod-c539c4c6-b7c2-4974-b914-36cbe1872525] @ 04/20/24 15:45:14.208
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-c539c4c6-b7c2-4974-b914-36cbe1872525.17c8078204b43106], Reason = [Started], Message = [Started container filler-pod-c539c4c6-b7c2-4974-b914-36cbe1872525] @ 04/20/24 15:45:14.208
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-e27d2837-9ab1-44d2-a184-e2bdb0cfd214.17c80781c4891c3e], Reason = [Scheduled], Message = [Successfully assigned sched-pred-4089/filler-pod-e27d2837-9ab1-44d2-a184-e2bdb0cfd214 to nok4chie7ate-2] @ 04/20/24 15:45:14.208
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-e27d2837-9ab1-44d2-a184-e2bdb0cfd214.17c80781e5d6cfdd], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 04/20/24 15:45:14.208
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-e27d2837-9ab1-44d2-a184-e2bdb0cfd214.17c80781ef068ecc], Reason = [Created], Message = [Created container filler-pod-e27d2837-9ab1-44d2-a184-e2bdb0cfd214] @ 04/20/24 15:45:14.209
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-e27d2837-9ab1-44d2-a184-e2bdb0cfd214.17c80781f11c5ee0], Reason = [Started], Message = [Started container filler-pod-e27d2837-9ab1-44d2-a184-e2bdb0cfd214] @ 04/20/24 15:45:14.209
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-ef972a1d-d55b-4de5-9054-63faec01757e.17c80781c4f32af2], Reason = [Scheduled], Message = [Successfully assigned sched-pred-4089/filler-pod-ef972a1d-d55b-4de5-9054-63faec01757e to nok4chie7ate-3] @ 04/20/24 15:45:14.209
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-ef972a1d-d55b-4de5-9054-63faec01757e.17c80781e1bb96fe], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 04/20/24 15:45:14.209
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-ef972a1d-d55b-4de5-9054-63faec01757e.17c80781e88dcfec], Reason = [Created], Message = [Created container filler-pod-ef972a1d-d55b-4de5-9054-63faec01757e] @ 04/20/24 15:45:14.209
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-ef972a1d-d55b-4de5-9054-63faec01757e.17c80781ea5efd39], Reason = [Started], Message = [Started container filler-pod-ef972a1d-d55b-4de5-9054-63faec01757e] @ 04/20/24 15:45:14.209
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.17c807823f12388d], Reason = [FailedScheduling], Message = [0/3 nodes are available: 3 Insufficient cpu. preemption: 0/3 nodes are available: 3 No preemption victims found for incoming pod.] @ 04/20/24 15:45:14.235
  E0420 15:45:14.806139      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label node off the node nok4chie7ate-3 @ 04/20/24 15:45:15.234
  STEP: verifying the node doesn't have the label node @ 04/20/24 15:45:15.265
  STEP: removing the label node off the node nok4chie7ate-1 @ 04/20/24 15:45:15.28
  STEP: verifying the node doesn't have the label node @ 04/20/24 15:45:15.318
  STEP: removing the label node off the node nok4chie7ate-2 @ 04/20/24 15:45:15.331
  STEP: verifying the node doesn't have the label node @ 04/20/24 15:45:15.371
  Apr 20 15:45:15.384: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-4089" for this suite. @ 04/20/24 15:45:15.394
• [3.673 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:875
  STEP: Creating a kubernetes client @ 04/20/24 15:45:15.427
  Apr 20 15:45:15.427: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename daemonsets @ 04/20/24 15:45:15.434
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:45:15.512
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:45:15.517
  STEP: Creating simple DaemonSet "daemon-set" @ 04/20/24 15:45:15.616
  STEP: Check that daemon pods launch on every node of the cluster. @ 04/20/24 15:45:15.632
  Apr 20 15:45:15.655: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 20 15:45:15.655: INFO: Node nok4chie7ate-1 is running 0 daemon pod, expected 1
  E0420 15:45:15.806832      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:45:16.652: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 20 15:45:16.652: INFO: Node nok4chie7ate-1 is running 0 daemon pod, expected 1
  E0420 15:45:16.807007      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:45:17.656: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Apr 20 15:45:17.656: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Getting /status @ 04/20/24 15:45:17.671
  Apr 20 15:45:17.685: INFO: Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 04/20/24 15:45:17.685
  Apr 20 15:45:17.716: INFO: updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 04/20/24 15:45:17.716
  Apr 20 15:45:17.723: INFO: Observed &DaemonSet event: ADDED
  Apr 20 15:45:17.724: INFO: Observed &DaemonSet event: MODIFIED
  Apr 20 15:45:17.725: INFO: Observed &DaemonSet event: MODIFIED
  Apr 20 15:45:17.725: INFO: Observed &DaemonSet event: MODIFIED
  Apr 20 15:45:17.726: INFO: Observed &DaemonSet event: MODIFIED
  Apr 20 15:45:17.726: INFO: Observed &DaemonSet event: MODIFIED
  Apr 20 15:45:17.726: INFO: Found daemon set daemon-set in namespace daemonsets-4074 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Apr 20 15:45:17.727: INFO: Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 04/20/24 15:45:17.727
  STEP: watching for the daemon set status to be patched @ 04/20/24 15:45:17.75
  Apr 20 15:45:17.756: INFO: Observed &DaemonSet event: ADDED
  Apr 20 15:45:17.758: INFO: Observed &DaemonSet event: MODIFIED
  Apr 20 15:45:17.760: INFO: Observed &DaemonSet event: MODIFIED
  Apr 20 15:45:17.761: INFO: Observed &DaemonSet event: MODIFIED
  Apr 20 15:45:17.763: INFO: Observed &DaemonSet event: MODIFIED
  Apr 20 15:45:17.764: INFO: Observed &DaemonSet event: MODIFIED
  Apr 20 15:45:17.764: INFO: Observed daemon set daemon-set in namespace daemonsets-4074 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Apr 20 15:45:17.766: INFO: Observed &DaemonSet event: MODIFIED
  Apr 20 15:45:17.766: INFO: Found daemon set daemon-set in namespace daemonsets-4074 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  Apr 20 15:45:17.766: INFO: Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 04/20/24 15:45:17.777
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4074, will wait for the garbage collector to delete the pods @ 04/20/24 15:45:17.777
  E0420 15:45:17.808019      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:45:17.883: INFO: Deleting DaemonSet.extensions daemon-set took: 27.733387ms
  Apr 20 15:45:17.984: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.92697ms
  E0420 15:45:18.808213      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:45:19.294: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 20 15:45:19.294: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Apr 20 15:45:19.305: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"71562"},"items":null}

  Apr 20 15:45:19.318: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"71563"},"items":null}

  Apr 20 15:45:19.363: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-4074" for this suite. @ 04/20/24 15:45:19.378
• [3.969 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:714
  STEP: Creating a kubernetes client @ 04/20/24 15:45:19.398
  Apr 20 15:45:19.398: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename gc @ 04/20/24 15:45:19.402
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:45:19.442
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:45:19.448
  STEP: create the rc1 @ 04/20/24 15:45:19.465
  STEP: create the rc2 @ 04/20/24 15:45:19.484
  E0420 15:45:19.808380      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:45:20.809703      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:45:21.810460      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:45:22.811570      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:45:23.812138      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:45:24.813127      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 04/20/24 15:45:25.548
  E0420 15:45:25.814128      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:45:26.814209      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:45:27.815202      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:45:28.815498      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc simpletest-rc-to-be-deleted @ 04/20/24 15:45:29.085
  STEP: wait for the rc to be deleted @ 04/20/24 15:45:29.129
  E0420 15:45:29.817021      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:45:30.817771      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:45:31.817918      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:45:32.818307      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:45:33.820326      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:45:34.510: INFO: 70 pods remaining
  Apr 20 15:45:34.510: INFO: 70 pods has nil DeletionTimestamp
  Apr 20 15:45:34.510: INFO: 
  E0420 15:45:34.820258      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:45:35.820800      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:45:36.820866      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:45:37.821112      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:45:38.822053      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 04/20/24 15:45:39.188
  Apr 20 15:45:39.550: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Apr 20 15:45:39.550: INFO: Deleting pod "simpletest-rc-to-be-deleted-2hdk9" in namespace "gc-2924"
  Apr 20 15:45:39.589: INFO: Deleting pod "simpletest-rc-to-be-deleted-4dmkw" in namespace "gc-2924"
  Apr 20 15:45:39.633: INFO: Deleting pod "simpletest-rc-to-be-deleted-4g7sm" in namespace "gc-2924"
  Apr 20 15:45:39.735: INFO: Deleting pod "simpletest-rc-to-be-deleted-4zx7n" in namespace "gc-2924"
  E0420 15:45:39.822450      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:45:39.827: INFO: Deleting pod "simpletest-rc-to-be-deleted-55mkx" in namespace "gc-2924"
  Apr 20 15:45:39.901: INFO: Deleting pod "simpletest-rc-to-be-deleted-56gnl" in namespace "gc-2924"
  Apr 20 15:45:39.939: INFO: Deleting pod "simpletest-rc-to-be-deleted-5hg86" in namespace "gc-2924"
  Apr 20 15:45:40.022: INFO: Deleting pod "simpletest-rc-to-be-deleted-5hrrh" in namespace "gc-2924"
  Apr 20 15:45:40.087: INFO: Deleting pod "simpletest-rc-to-be-deleted-5l7hn" in namespace "gc-2924"
  Apr 20 15:45:40.181: INFO: Deleting pod "simpletest-rc-to-be-deleted-5rwks" in namespace "gc-2924"
  Apr 20 15:45:40.234: INFO: Deleting pod "simpletest-rc-to-be-deleted-6tn8f" in namespace "gc-2924"
  Apr 20 15:45:40.313: INFO: Deleting pod "simpletest-rc-to-be-deleted-6xj5p" in namespace "gc-2924"
  Apr 20 15:45:40.410: INFO: Deleting pod "simpletest-rc-to-be-deleted-76cgf" in namespace "gc-2924"
  Apr 20 15:45:40.490: INFO: Deleting pod "simpletest-rc-to-be-deleted-79lh9" in namespace "gc-2924"
  Apr 20 15:45:40.585: INFO: Deleting pod "simpletest-rc-to-be-deleted-7f84t" in namespace "gc-2924"
  Apr 20 15:45:40.662: INFO: Deleting pod "simpletest-rc-to-be-deleted-82x8g" in namespace "gc-2924"
  Apr 20 15:45:40.789: INFO: Deleting pod "simpletest-rc-to-be-deleted-867zf" in namespace "gc-2924"
  E0420 15:45:40.823364      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:45:40.885: INFO: Deleting pod "simpletest-rc-to-be-deleted-8dfps" in namespace "gc-2924"
  Apr 20 15:45:40.972: INFO: Deleting pod "simpletest-rc-to-be-deleted-8fv28" in namespace "gc-2924"
  Apr 20 15:45:41.060: INFO: Deleting pod "simpletest-rc-to-be-deleted-8lcr6" in namespace "gc-2924"
  Apr 20 15:45:41.144: INFO: Deleting pod "simpletest-rc-to-be-deleted-8sdk5" in namespace "gc-2924"
  Apr 20 15:45:41.227: INFO: Deleting pod "simpletest-rc-to-be-deleted-9g2nk" in namespace "gc-2924"
  Apr 20 15:45:41.431: INFO: Deleting pod "simpletest-rc-to-be-deleted-9wt7g" in namespace "gc-2924"
  Apr 20 15:45:41.593: INFO: Deleting pod "simpletest-rc-to-be-deleted-9zv9m" in namespace "gc-2924"
  Apr 20 15:45:41.685: INFO: Deleting pod "simpletest-rc-to-be-deleted-b2lwt" in namespace "gc-2924"
  Apr 20 15:45:41.776: INFO: Deleting pod "simpletest-rc-to-be-deleted-bczgk" in namespace "gc-2924"
  E0420 15:45:41.825360      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:45:41.880: INFO: Deleting pod "simpletest-rc-to-be-deleted-bfrrl" in namespace "gc-2924"
  Apr 20 15:45:42.051: INFO: Deleting pod "simpletest-rc-to-be-deleted-bmbcb" in namespace "gc-2924"
  Apr 20 15:45:42.144: INFO: Deleting pod "simpletest-rc-to-be-deleted-bwbvf" in namespace "gc-2924"
  Apr 20 15:45:42.207: INFO: Deleting pod "simpletest-rc-to-be-deleted-c68dt" in namespace "gc-2924"
  Apr 20 15:45:42.247: INFO: Deleting pod "simpletest-rc-to-be-deleted-c756z" in namespace "gc-2924"
  Apr 20 15:45:42.343: INFO: Deleting pod "simpletest-rc-to-be-deleted-c8t9h" in namespace "gc-2924"
  Apr 20 15:45:42.392: INFO: Deleting pod "simpletest-rc-to-be-deleted-cblbk" in namespace "gc-2924"
  Apr 20 15:45:42.461: INFO: Deleting pod "simpletest-rc-to-be-deleted-cc7qh" in namespace "gc-2924"
  Apr 20 15:45:42.587: INFO: Deleting pod "simpletest-rc-to-be-deleted-ckxtq" in namespace "gc-2924"
  Apr 20 15:45:42.791: INFO: Deleting pod "simpletest-rc-to-be-deleted-cwcps" in namespace "gc-2924"
  E0420 15:45:42.826055      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:45:42.890: INFO: Deleting pod "simpletest-rc-to-be-deleted-czskw" in namespace "gc-2924"
  Apr 20 15:45:42.986: INFO: Deleting pod "simpletest-rc-to-be-deleted-dkggp" in namespace "gc-2924"
  Apr 20 15:45:43.107: INFO: Deleting pod "simpletest-rc-to-be-deleted-dkx4m" in namespace "gc-2924"
  Apr 20 15:45:43.211: INFO: Deleting pod "simpletest-rc-to-be-deleted-dnp7n" in namespace "gc-2924"
  Apr 20 15:45:43.299: INFO: Deleting pod "simpletest-rc-to-be-deleted-dpb6d" in namespace "gc-2924"
  Apr 20 15:45:43.404: INFO: Deleting pod "simpletest-rc-to-be-deleted-f25nb" in namespace "gc-2924"
  Apr 20 15:45:43.503: INFO: Deleting pod "simpletest-rc-to-be-deleted-fcw86" in namespace "gc-2924"
  Apr 20 15:45:43.550: INFO: Deleting pod "simpletest-rc-to-be-deleted-fg9rh" in namespace "gc-2924"
  Apr 20 15:45:43.706: INFO: Deleting pod "simpletest-rc-to-be-deleted-fpwkj" in namespace "gc-2924"
  Apr 20 15:45:43.771: INFO: Deleting pod "simpletest-rc-to-be-deleted-g4vkq" in namespace "gc-2924"
  E0420 15:45:43.826250      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:45:43.857: INFO: Deleting pod "simpletest-rc-to-be-deleted-gk7bj" in namespace "gc-2924"
  Apr 20 15:45:43.906: INFO: Deleting pod "simpletest-rc-to-be-deleted-gsm8q" in namespace "gc-2924"
  Apr 20 15:45:43.961: INFO: Deleting pod "simpletest-rc-to-be-deleted-h7dn4" in namespace "gc-2924"
  Apr 20 15:45:44.019: INFO: Deleting pod "simpletest-rc-to-be-deleted-h8z4p" in namespace "gc-2924"
  Apr 20 15:45:44.141: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-2924" for this suite. @ 04/20/24 15:45:44.164
• [24.796 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 04/20/24 15:45:44.194
  Apr 20 15:45:44.194: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename deployment @ 04/20/24 15:45:44.2
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:45:44.287
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:45:44.295
  Apr 20 15:45:44.304: INFO: Creating simple deployment test-new-deployment
  Apr 20 15:45:44.529: INFO: deployment "test-new-deployment" doesn't have the required revision set
  E0420 15:45:44.826753      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:45:45.827183      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: getting scale subresource @ 04/20/24 15:45:46.603
  STEP: updating a scale subresource @ 04/20/24 15:45:46.616
  STEP: verifying the deployment Spec.Replicas was modified @ 04/20/24 15:45:46.665
  STEP: Patch a scale subresource @ 04/20/24 15:45:46.689
  Apr 20 15:45:46.804: INFO: Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9635",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4e6c0593-7f54-438a-990d-7e247ca20ef4",
      ResourceVersion: (string) (len=5) "72917",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849224744,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224744,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224746,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224746,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224746,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224746,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224744,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-557759b7c7\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  E0420 15:45:46.827580      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:45:46.857: INFO: New ReplicaSet "test-new-deployment-557759b7c7" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9635",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3af0d882-4bdd-4f0c-a35c-4a995ce4f010",
      ResourceVersion: (string) (len=5) "72920",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849224744,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "4",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "5",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "4e6c0593-7f54-438a-990d-7e247ca20ef4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224746,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 34 65 36 63 30 35  39 33 2d 37 66 35 34 2d  |\"4e6c0593-7f54-|
              00000120  34 33 38 61 2d 39 39 30  64 2d 37 65 32 34 37 63  |438a-990d-7e247c|
              00000130  61 32 30 65 66 34 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |a20ef4\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224746,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(4),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 20 15:45:46.985: INFO: Pod "test-new-deployment-557759b7c7-2hb62" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-2hb62",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-9635",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "12d8ac33-8a39-4342-9f90-41b730252141",
      ResourceVersion: (string) (len=5) "72911",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849224744,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "3af0d882-4bdd-4f0c-a35c-4a995ce4f010",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224744,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 61  66 30 64 38 38 32 2d 34  |d\":\"3af0d882-4|
              00000090  62 64 64 2d 34 66 30 63  2d 61 33 35 63 2d 34 61  |bdd-4f0c-a35c-4a|
              000000a0  39 39 35 63 65 34 66 30  31 30 5c 22 7d 22 3a 7b  |995ce4f010\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224746,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 36 2e  31 30 5c 22 7d 22 3a 7b  |.233.66.10\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-26ct7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-26ct7",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "nok4chie7ate-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224746,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224744,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224746,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224746,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224744,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "192.168.121.8",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "192.168.121.8"
        }
      },
      PodIP: (string) (len=12) "10.233.66.10",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.66.10"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849224744,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849224745,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://bdcd0e88838c214f6531313c4f06b948013a456f04c106555ea45e8a6d043bb3",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 15:45:46.997: INFO: Pod "test-new-deployment-557759b7c7-f2ddr" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-f2ddr",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-9635",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7ddeb523-71ab-4a04-94cd-eeba8ea37728",
      ResourceVersion: (string) (len=5) "72922",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849224746,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "3af0d882-4bdd-4f0c-a35c-4a995ce4f010",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224746,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 61  66 30 64 38 38 32 2d 34  |d\":\"3af0d882-4|
              00000090  62 64 64 2d 34 66 30 63  2d 61 33 35 63 2d 34 61  |bdd-4f0c-a35c-4a|
              000000a0  39 39 35 63 65 34 66 30  31 30 5c 22 7d 22 3a 7b  |995ce4f010\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7knzd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7knzd",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "nok4chie7ate-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224746,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 20 15:45:47.002: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9635" for this suite. @ 04/20/24 15:45:47.084
• [2.956 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 04/20/24 15:45:47.155
  Apr 20 15:45:47.155: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename proxy @ 04/20/24 15:45:47.159
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:45:47.402
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:45:47.408
  Apr 20 15:45:47.420: INFO: Creating pod...
  E0420 15:45:47.828564      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:45:48.829896      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:45:49.576: INFO: Creating service...
  Apr 20 15:45:49.770: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-2774/pods/agnhost/proxy?method=DELETE
  E0420 15:45:49.830028      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:45:50.831145      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:45:51.831487      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:45:52.831515      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:45:53.832209      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:45:54.832036      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:45:55.832463      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:45:56.832403      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:45:57.833437      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:45:58.833802      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:45:59.834600      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:00.834796      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:46:01.075: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Apr 20 15:46:01.075: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-2774/pods/agnhost/proxy?method=OPTIONS
  Apr 20 15:46:01.085: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Apr 20 15:46:01.085: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-2774/pods/agnhost/proxy?method=PATCH
  Apr 20 15:46:01.092: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Apr 20 15:46:01.092: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-2774/pods/agnhost/proxy?method=POST
  Apr 20 15:46:01.099: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Apr 20 15:46:01.099: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-2774/pods/agnhost/proxy?method=PUT
  Apr 20 15:46:01.105: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Apr 20 15:46:01.105: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-2774/services/e2e-proxy-test-service/proxy?method=DELETE
  Apr 20 15:46:01.121: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Apr 20 15:46:01.121: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-2774/services/e2e-proxy-test-service/proxy?method=OPTIONS
  Apr 20 15:46:01.130: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Apr 20 15:46:01.131: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-2774/services/e2e-proxy-test-service/proxy?method=PATCH
  Apr 20 15:46:01.139: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Apr 20 15:46:01.139: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-2774/services/e2e-proxy-test-service/proxy?method=POST
  Apr 20 15:46:01.149: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Apr 20 15:46:01.149: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-2774/services/e2e-proxy-test-service/proxy?method=PUT
  Apr 20 15:46:01.158: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Apr 20 15:46:01.158: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-2774/pods/agnhost/proxy?method=GET
  Apr 20 15:46:01.163: INFO: http.Client request:GET StatusCode:301
  Apr 20 15:46:01.163: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-2774/services/e2e-proxy-test-service/proxy?method=GET
  Apr 20 15:46:01.172: INFO: http.Client request:GET StatusCode:301
  Apr 20 15:46:01.172: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-2774/pods/agnhost/proxy?method=HEAD
  Apr 20 15:46:01.177: INFO: http.Client request:HEAD StatusCode:301
  Apr 20 15:46:01.177: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-2774/services/e2e-proxy-test-service/proxy?method=HEAD
  Apr 20 15:46:01.186: INFO: http.Client request:HEAD StatusCode:301
  Apr 20 15:46:01.186: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-2774" for this suite. @ 04/20/24 15:46:01.207
• [14.083 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:408
  STEP: Creating a kubernetes client @ 04/20/24 15:46:01.244
  Apr 20 15:46:01.244: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename job @ 04/20/24 15:46:01.248
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:46:01.293
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:46:01.3
  STEP: Creating Indexed job @ 04/20/24 15:46:01.307
  STEP: Ensuring job reaches completions @ 04/20/24 15:46:01.33
  E0420 15:46:01.835765      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:02.836151      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:03.836747      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:04.837016      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:05.837441      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:06.839137      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:07.839645      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:08.840540      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring pods with index for job exist @ 04/20/24 15:46:09.337
  Apr 20 15:46:09.349: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-8138" for this suite. @ 04/20/24 15:46:09.362
• [8.133 seconds]
------------------------------
SS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:58
  STEP: Creating a kubernetes client @ 04/20/24 15:46:09.378
  Apr 20 15:46:09.378: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename configmap @ 04/20/24 15:46:09.382
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:46:09.43
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:46:09.436
  STEP: Creating configMap with name configmap-test-volume-83f0bc52-664c-4653-a146-e26a3581bcc0 @ 04/20/24 15:46:09.443
  STEP: Creating a pod to test consume configMaps @ 04/20/24 15:46:09.458
  E0420 15:46:09.841226      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:10.841200      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 15:46:11.54
  Apr 20 15:46:11.549: INFO: Trying to get logs from node nok4chie7ate-3 pod pod-configmaps-c651cb5d-5973-4a13-b905-45e86d0fd994 container agnhost-container: <nil>
  STEP: delete the pod @ 04/20/24 15:46:11.57
  Apr 20 15:46:11.600: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4476" for this suite. @ 04/20/24 15:46:11.615
• [2.255 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 04/20/24 15:46:11.633
  Apr 20 15:46:11.633: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename subpath @ 04/20/24 15:46:11.637
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:46:11.678
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:46:11.685
  STEP: Setting up data @ 04/20/24 15:46:11.691
  STEP: Creating pod pod-subpath-test-configmap-fvmk @ 04/20/24 15:46:11.711
  STEP: Creating a pod to test atomic-volume-subpath @ 04/20/24 15:46:11.711
  E0420 15:46:11.842119      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:12.842637      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:13.843627      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:14.843753      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:15.844958      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:16.845006      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:17.845321      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:18.846154      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:19.846452      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:20.847038      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:21.848461      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:22.848023      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:23.848289      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:24.848949      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:25.850226      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:26.851265      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:27.852343      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:28.852865      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:29.853236      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:30.854357      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:31.855001      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:32.855508      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:33.856402      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:34.857066      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:35.857808      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 15:46:35.897
  Apr 20 15:46:35.907: INFO: Trying to get logs from node nok4chie7ate-3 pod pod-subpath-test-configmap-fvmk container test-container-subpath-configmap-fvmk: <nil>
  STEP: delete the pod @ 04/20/24 15:46:35.936
  STEP: Deleting pod pod-subpath-test-configmap-fvmk @ 04/20/24 15:46:35.981
  Apr 20 15:46:35.981: INFO: Deleting pod "pod-subpath-test-configmap-fvmk" in namespace "subpath-8542"
  Apr 20 15:46:35.989: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-8542" for this suite. @ 04/20/24 15:46:35.998
• [24.381 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:641
  STEP: Creating a kubernetes client @ 04/20/24 15:46:36.015
  Apr 20 15:46:36.015: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename statefulset @ 04/20/24 15:46:36.018
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:46:36.053
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:46:36.058
  STEP: Creating service test in namespace statefulset-788 @ 04/20/24 15:46:36.063
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 04/20/24 15:46:36.075
  STEP: Creating stateful set ss in namespace statefulset-788 @ 04/20/24 15:46:36.085
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-788 @ 04/20/24 15:46:36.099
  Apr 20 15:46:36.106: INFO: Found 0 stateful pods, waiting for 1
  E0420 15:46:36.857949      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:37.859267      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:38.860642      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:39.861063      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:40.860638      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:41.861099      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:42.861400      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:43.862747      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:44.862801      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:45.864867      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:46:46.111: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 04/20/24 15:46:46.111
  Apr 20 15:46:46.119: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=statefulset-788 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Apr 20 15:46:46.423: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Apr 20 15:46:46.423: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Apr 20 15:46:46.423: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Apr 20 15:46:46.433: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0420 15:46:46.865111      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:47.865522      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:48.865919      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:49.866812      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:50.867587      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:51.868471      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:52.868898      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:53.868973      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:54.869310      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:55.870119      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:46:56.438: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Apr 20 15:46:56.438: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Apr 20 15:46:56.509: INFO: Verifying statefulset ss doesn't scale past 1 for another 9.999999234s
  E0420 15:46:56.871100      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:46:57.525: INFO: Verifying statefulset ss doesn't scale past 1 for another 8.974313787s
  E0420 15:46:57.871948      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:46:58.540: INFO: Verifying statefulset ss doesn't scale past 1 for another 7.956924031s
  E0420 15:46:58.872228      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:46:59.561: INFO: Verifying statefulset ss doesn't scale past 1 for another 6.941750175s
  E0420 15:46:59.873020      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:47:00.569: INFO: Verifying statefulset ss doesn't scale past 1 for another 5.921943954s
  E0420 15:47:00.873242      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:47:01.580: INFO: Verifying statefulset ss doesn't scale past 1 for another 4.913905499s
  E0420 15:47:01.874027      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:47:02.592: INFO: Verifying statefulset ss doesn't scale past 1 for another 3.902990856s
  E0420 15:47:02.874169      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:47:03.604: INFO: Verifying statefulset ss doesn't scale past 1 for another 2.891307757s
  E0420 15:47:03.875016      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:47:04.614: INFO: Verifying statefulset ss doesn't scale past 1 for another 1.879046951s
  E0420 15:47:04.875860      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:47:05.624: INFO: Verifying statefulset ss doesn't scale past 1 for another 869.20867ms
  E0420 15:47:05.876488      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-788 @ 04/20/24 15:47:06.624
  Apr 20 15:47:06.633: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=statefulset-788 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E0420 15:47:06.880171      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:47:06.914: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Apr 20 15:47:06.914: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Apr 20 15:47:06.914: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Apr 20 15:47:06.923: INFO: Found 1 stateful pods, waiting for 3
  E0420 15:47:07.879193      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:08.879610      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:09.880742      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:10.880521      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:11.880614      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:12.881240      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:13.881093      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:14.881775      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:15.882079      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:16.882276      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:47:16.923: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Apr 20 15:47:16.923: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Apr 20 15:47:16.923: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 04/20/24 15:47:16.923
  STEP: Scale down will halt with unhealthy stateful pod @ 04/20/24 15:47:16.923
  Apr 20 15:47:16.941: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=statefulset-788 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Apr 20 15:47:17.255: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Apr 20 15:47:17.255: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Apr 20 15:47:17.256: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Apr 20 15:47:17.256: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=statefulset-788 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Apr 20 15:47:17.571: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Apr 20 15:47:17.571: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Apr 20 15:47:17.571: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Apr 20 15:47:17.571: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=statefulset-788 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Apr 20 15:47:17.850: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Apr 20 15:47:17.850: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Apr 20 15:47:17.850: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Apr 20 15:47:17.851: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Apr 20 15:47:17.857: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 2
  E0420 15:47:17.882812      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:18.883813      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:19.883826      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:20.884017      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:21.884565      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:22.885052      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:23.885775      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:24.886926      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:25.887025      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:26.887366      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:47:27.870: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Apr 20 15:47:27.870: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  Apr 20 15:47:27.870: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  E0420 15:47:27.888111      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:47:27.901: INFO: Verifying statefulset ss doesn't scale past 3 for another 9.999998936s
  E0420 15:47:28.888558      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:47:28.913: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.98929314s
  E0420 15:47:29.889424      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:47:29.926: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.977497167s
  E0420 15:47:30.889475      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:47:30.961: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.963538282s
  E0420 15:47:31.889904      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:47:31.971: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.929228157s
  E0420 15:47:32.890128      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:47:32.981: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.91988556s
  E0420 15:47:33.890917      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:47:33.991: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.909280344s
  E0420 15:47:34.892094      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:47:35.003: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.899738674s
  E0420 15:47:35.892318      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:47:36.013: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.887650115s
  E0420 15:47:36.892910      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:47:37.029: INFO: Verifying statefulset ss doesn't scale past 3 for another 878.146478ms
  E0420 15:47:37.893033      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-788 @ 04/20/24 15:47:38.03
  Apr 20 15:47:38.041: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=statefulset-788 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Apr 20 15:47:38.328: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Apr 20 15:47:38.328: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Apr 20 15:47:38.328: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Apr 20 15:47:38.329: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=statefulset-788 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Apr 20 15:47:38.651: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Apr 20 15:47:38.652: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Apr 20 15:47:38.652: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Apr 20 15:47:38.652: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=statefulset-788 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E0420 15:47:38.894277      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:47:38.936: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Apr 20 15:47:38.936: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Apr 20 15:47:38.937: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Apr 20 15:47:38.937: INFO: Scaling statefulset ss to 0
  E0420 15:47:39.894552      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:40.894554      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:41.894911      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:42.894958      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:43.895210      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:44.896056      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:45.896617      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:46.897047      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:47.897506      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:48.898415      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 04/20/24 15:47:48.964
  Apr 20 15:47:48.964: INFO: Deleting all statefulset in ns statefulset-788
  Apr 20 15:47:48.974: INFO: Scaling statefulset ss to 0
  Apr 20 15:47:49.001: INFO: Waiting for statefulset status.replicas updated to 0
  Apr 20 15:47:49.007: INFO: Deleting statefulset ss
  Apr 20 15:47:49.034: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-788" for this suite. @ 04/20/24 15:47:49.045
• [73.050 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:55
  STEP: Creating a kubernetes client @ 04/20/24 15:47:49.065
  Apr 20 15:47:49.065: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename projected @ 04/20/24 15:47:49.069
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:47:49.118
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:47:49.122
  STEP: Creating a pod to test downward API volume plugin @ 04/20/24 15:47:49.132
  E0420 15:47:49.898487      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:50.899524      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:51.900374      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:52.901343      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 15:47:53.168
  Apr 20 15:47:53.175: INFO: Trying to get logs from node nok4chie7ate-3 pod downwardapi-volume-21e3905b-59ec-46b0-8e90-3bd0871b8f41 container client-container: <nil>
  STEP: delete the pod @ 04/20/24 15:47:53.197
  Apr 20 15:47:53.232: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8828" for this suite. @ 04/20/24 15:47:53.241
• [4.190 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1838
  STEP: Creating a kubernetes client @ 04/20/24 15:47:53.258
  Apr 20 15:47:53.258: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename kubectl @ 04/20/24 15:47:53.262
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:47:53.31
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:47:53.316
  STEP: starting the proxy server @ 04/20/24 15:47:53.322
  Apr 20 15:47:53.323: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-5220 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 04/20/24 15:47:53.463
  Apr 20 15:47:53.492: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5220" for this suite. @ 04/20/24 15:47:53.504
• [0.259 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:514
  STEP: Creating a kubernetes client @ 04/20/24 15:47:53.517
  Apr 20 15:47:53.517: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename apf @ 04/20/24 15:47:53.523
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:47:53.552
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:47:53.558
  STEP: getting /apis @ 04/20/24 15:47:53.565
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 04/20/24 15:47:53.575
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 04/20/24 15:47:53.577
  STEP: creating @ 04/20/24 15:47:53.581
  STEP: getting @ 04/20/24 15:47:53.614
  STEP: listing @ 04/20/24 15:47:53.619
  STEP: watching @ 04/20/24 15:47:53.626
  Apr 20 15:47:53.626: INFO: starting watch
  STEP: patching @ 04/20/24 15:47:53.629
  STEP: updating @ 04/20/24 15:47:53.642
  Apr 20 15:47:53.659: INFO: waiting for watch events with expected annotations
  STEP: getting /status @ 04/20/24 15:47:53.659
  STEP: patching /status @ 04/20/24 15:47:53.666
  STEP: updating /status @ 04/20/24 15:47:53.675
  STEP: deleting @ 04/20/24 15:47:53.693
  STEP: deleting a collection @ 04/20/24 15:47:53.718
  Apr 20 15:47:53.754: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-2809" for this suite. @ 04/20/24 15:47:53.761
• [0.254 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:161
  STEP: Creating a kubernetes client @ 04/20/24 15:47:53.772
  Apr 20 15:47:53.772: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename cronjob @ 04/20/24 15:47:53.774
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:47:53.809
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:47:53.814
  STEP: Creating a ReplaceConcurrent cronjob @ 04/20/24 15:47:53.819
  STEP: Ensuring a job is scheduled @ 04/20/24 15:47:53.832
  E0420 15:47:53.902331      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:54.902392      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:55.903145      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:56.903754      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:57.904785      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:58.905021      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:59.906259      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:00.906758      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 04/20/24 15:48:01.841
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 04/20/24 15:48:01.848
  STEP: Ensuring the job is replaced with a new one @ 04/20/24 15:48:01.859
  E0420 15:48:01.907115      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:02.907198      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:03.908300      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:04.909869      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:05.910167      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:06.910860      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:07.912153      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:08.913049      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:09.913844      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:10.914013      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:11.915193      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:12.916530      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:13.916964      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:14.918004      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:15.918495      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:16.919256      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:17.919446      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:18.920023      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:19.920425      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:20.922163      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:21.922057      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:22.923145      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:23.923767      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:24.924072      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:25.924573      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:26.925338      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:27.926962      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:28.927093      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:29.927718      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:30.928344      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:31.928588      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:32.929268      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:33.929821      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:34.930969      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:35.931775      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:36.931964      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:37.932997      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:38.933633      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:39.934346      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:40.935289      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:41.935694      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:42.936411      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:43.938080      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:44.939234      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:45.939255      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:46.940116      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:47.940583      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:48.940869      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:49.941451      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:50.942257      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:51.942757      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:52.948822      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:53.944028      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:54.945201      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:55.945902      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:56.946625      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:57.947055      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:58.947760      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:59.948157      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:00.948525      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing cronjob @ 04/20/24 15:49:01.87
  Apr 20 15:49:01.883: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-5932" for this suite. @ 04/20/24 15:49:01.892
• [68.136 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:144
  STEP: Creating a kubernetes client @ 04/20/24 15:49:01.91
  Apr 20 15:49:01.910: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename chunking @ 04/20/24 15:49:01.915
  E0420 15:49:01.948547      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:49:01.958
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:49:01.963
  STEP: creating a large number of resources @ 04/20/24 15:49:01.968
  E0420 15:49:02.948973      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:03.950104      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:04.950441      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:05.951349      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:06.952186      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:07.952282      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:08.953413      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:09.953392      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:10.953859      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:11.954521      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:12.955439      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:13.956109      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:14.957055      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:15.958032      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:16.958095      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:17.958364      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:18.958866      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the first page @ 04/20/24 15:49:19.63
  Apr 20 15:49:19.679: INFO: Retrieved 40/40 results with rv 74714 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzQ3MTQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page until the token expires @ 04/20/24 15:49:19.679
  E0420 15:49:19.959631      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:20.960562      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:21.960354      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:22.961013      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:23.961081      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:24.962289      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:25.962430      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:26.962928      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:27.963968      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:28.964941      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:29.964866      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:30.964785      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:31.965157      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:32.965151      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:33.966255      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:34.965881      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:35.966151      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:36.967136      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:37.968086      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:38.968772      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:49:39.698: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzQ3MTQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0420 15:49:39.969530      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:40.969886      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:41.970095      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:42.970861      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:43.971551      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:44.972448      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:45.973190      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:46.973796      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:47.973869      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:48.973962      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:49.975033      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:50.975921      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:51.976380      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:52.976861      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:53.977139      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:54.977400      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:55.977950      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:56.978907      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:57.979774      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:58.980491      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:49:59.694: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzQ3MTQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0420 15:49:59.980999      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:00.981225      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:01.981579      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:02.981861      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:03.982055      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:04.984253      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:05.984079      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:06.984321      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:07.984741      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:08.985150      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:09.985875      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:10.986284      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:11.986838      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:12.987437      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:13.987897      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:14.988018      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:15.988283      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:16.988595      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:17.989271      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:18.990000      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:50:19.697: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzQ3MTQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0420 15:50:19.991125      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:20.992050      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:21.992610      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:22.992870      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:23.993535      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:24.994606      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:25.995199      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:26.995945      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:27.997078      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:28.997329      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:29.997397      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:30.997550      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:31.998689      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:32.998152      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:33.998985      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:34.998816      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:35.999179      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:36.999574      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:37.999470      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:38.999590      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:50:39.698: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzQ3MTQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0420 15:50:40.000304      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:41.000414      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:42.001369      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:43.001441      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:44.001718      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:45.002174      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:46.003382      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:47.005192      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:48.004117      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:49.004784      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:50.005051      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:51.005306      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:52.006076      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:53.006240      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:54.010035      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:55.009344      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:56.008106      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:57.009155      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:58.010102      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:59.011107      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:50:59.696: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzQ3MTQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0420 15:51:00.012305      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:01.013243      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:02.013293      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:03.013590      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:04.015379      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:05.015289      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:06.016173      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:07.015975      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:08.016383      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:09.017316      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:10.017078      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:11.017215      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:12.017590      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:13.017940      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:14.018091      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:15.020416      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:16.020801      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:17.021315      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:18.021515      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:19.021577      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:51:19.705: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzQ3MTQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0420 15:51:20.021842      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:21.022595      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:22.022927      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:23.023492      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:24.023598      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:25.024537      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:26.025063      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:27.025200      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:28.026041      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:29.026197      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:30.027092      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:31.027526      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:32.027911      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:33.028317      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:34.028768      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:35.029801      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:36.030396      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:37.030799      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:38.031033      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:39.031512      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:51:39.694: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzQ3MTQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0420 15:51:40.031553      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:41.032099      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:42.032368      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:43.034834      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:44.035340      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:45.035913      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:46.036389      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:47.036784      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:48.037416      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:49.037482      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:50.038299      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:51.038819      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:52.038939      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:53.039167      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:54.039399      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:55.039615      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:56.040463      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:57.040312      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:58.041403      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:59.041559      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:51:59.692: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzQ3MTQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0420 15:52:00.042038      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:01.042232      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:02.042818      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:03.043075      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:04.043504      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:05.044034      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:06.044609      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:07.044966      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:08.046223      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:09.046940      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:10.046979      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:11.047455      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:12.047852      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:13.048771      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:14.048869      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:15.050341      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:16.050047      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:17.050272      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:18.050509      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:19.050795      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:52:19.694: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzQ3MTQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0420 15:52:20.051074      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:21.052064      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:22.052154      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:23.052481      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:24.052817      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:25.053479      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:26.054170      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:27.054840      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:28.055190      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:29.055153      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:30.056236      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:31.056437      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:32.056950      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:33.057698      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:34.057941      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:35.059077      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:36.059358      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:37.059913      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:38.061028      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:39.061555      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:52:39.694: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzQ3MTQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0420 15:52:40.061889      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:41.062097      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:42.062857      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:43.063770      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:44.063995      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:45.064206      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:46.064450      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:47.065270      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:48.065573      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:49.065950      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:50.066212      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:51.066481      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:52.067199      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:53.067617      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:54.068005      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:55.069042      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:56.070073      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:57.070427      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:58.071389      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:59.071937      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:52:59.694: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzQ3MTQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0420 15:53:00.072752      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:01.073938      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:02.073816      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:03.074520      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:04.075409      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:05.075356      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:06.075569      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:07.076074      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:08.076937      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:09.077122      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:10.077201      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:11.077538      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:12.077637      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:13.078289      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:14.078616      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:15.078864      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:16.079193      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:17.079967      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:18.081029      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:19.081272      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:53:19.701: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzQ3MTQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0420 15:53:20.082360      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:21.083268      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:22.083401      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:23.083980      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:24.084170      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:25.085187      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:26.085451      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:27.085882      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:28.086896      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:29.087087      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:30.088236      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:31.088522      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:32.088939      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:33.089809      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:34.090117      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:35.091327      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:36.091474      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:37.092733      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:38.092640      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:39.093318      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:53:39.696: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzQ3MTQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0420 15:53:40.094128      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:41.094928      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:42.095786      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:43.096089      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:44.098439      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:45.098835      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:46.099050      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:47.099478      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:48.099309      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:49.099948      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:50.099742      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:51.100371      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:52.100384      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:53.101304      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:54.100947      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:55.102331      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:56.102386      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:57.102935      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:58.103276      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:59.104277      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:53:59.693: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzQ3MTQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0420 15:54:00.104709      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:01.104867      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:02.105055      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:03.105432      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:04.105845      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:05.105839      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:06.106523      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:07.106858      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:08.107958      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:09.108052      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:10.108192      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:11.108571      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:12.109451      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:13.109130      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:14.109819      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:15.110194      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:16.110236      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:17.110719      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:18.111884      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:19.112621      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:54:19.708: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzQ3MTQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0420 15:54:20.113170      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:21.113807      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:22.114084      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:23.114396      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:24.114797      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:25.115707      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:26.116356      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:27.116594      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:28.117726      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:29.117730      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:30.118050      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:31.118903      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:32.119437      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:33.119766      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:34.119878      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:35.121163      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:36.121723      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:37.122192      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:38.123217      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:39.123848      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:54:39.699: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzQ3MTQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0420 15:54:40.124795      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:41.125086      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:42.125296      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:43.126172      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:44.125899      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:45.126139      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:46.126414      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:47.127064      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:48.127094      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:49.127494      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:50.128323      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:51.128754      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:52.128996      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:53.129382      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:54.129664      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:55.130098      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:56.130375      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:57.130739      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:58.131913      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:59.131965      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:54:59.693: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzQ3MTQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0420 15:55:00.133328      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:01.133508      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:02.134124      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:03.134440      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:04.135588      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:05.136302      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:06.136087      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:07.136878      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:08.137901      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:09.138089      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:10.139108      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:11.139875      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:12.139856      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:13.140110      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:14.142037      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:15.142625      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:16.143180      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:17.143495      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:18.143794      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:19.144276      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:55:19.699: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzQ3MTQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0420 15:55:20.145209      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:21.145437      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:22.145869      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:23.146230      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:24.146344      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:25.146638      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:26.147362      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:27.147797      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:28.147912      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:29.148596      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:30.148854      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:31.149577      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:32.150741      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:33.150745      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:34.151403      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:35.151908      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:36.152908      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:37.153127      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:38.156586      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:39.156579      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:55:39.708: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzQ3MTQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0420 15:55:40.157471      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:41.158281      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:42.158349      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:43.158971      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:44.159433      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:45.160951      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:46.160820      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:47.161355      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:48.162358      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:49.162971      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:50.163165      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:51.163434      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:52.164394      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:53.164189      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:54.165020      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:55.164952      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:56.165586      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:57.166754      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:58.167830      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:59.168748      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:55:59.695: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzQ3MTQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0420 15:56:00.169372      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:01.170014      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:02.170055      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:03.171266      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:04.171168      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:05.172300      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:06.173237      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:07.173194      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:08.173534      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:09.174332      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:10.175138      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:11.175766      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:12.175563      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:13.176892      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:14.176570      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:15.177643      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:16.178326      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:17.178461      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:18.178523      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:19.179254      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:56:19.692: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzQ3MTQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0420 15:56:20.180266      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:21.181110      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:22.181145      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:23.181532      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:24.182292      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:25.182386      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:26.182505      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:27.183214      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:28.183663      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:29.184460      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:30.185327      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:31.186829      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:32.186998      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:33.187467      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:34.187953      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:35.188177      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:36.189048      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:37.188857      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:38.189872      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:39.190029      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:56:39.695: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzQ3MTQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0420 15:56:40.190419      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:41.191334      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:42.192203      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:43.192964      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:44.192950      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:45.193069      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:46.193874      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:47.194164      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:48.194586      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:49.194888      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:50.195098      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:51.195515      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:52.195940      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:53.195972      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:54.197008      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:55.198229      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:56.199314      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:57.200052      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:58.200944      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:59.201861      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:56:59.696: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzQ3MTQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0420 15:57:00.202930      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:01.203232      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:02.203468      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:03.204196      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:04.204448      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:05.205631      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:06.206030      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:07.207779      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:08.208184      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:09.208914      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:10.208934      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:11.209284      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:12.210023      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:13.210012      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:14.210509      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:15.210850      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:16.211362      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:17.212190      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:18.212858      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:19.213099      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:57:19.698: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzQ3MTQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0420 15:57:20.214021      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:21.214623      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:22.215014      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:23.215362      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:24.215421      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:25.216180      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:26.217484      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:27.217483      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:28.217797      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:29.218050      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:30.218281      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:31.218534      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:32.219197      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:33.219098      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:34.220280      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:35.220333      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:36.221310      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:37.221841      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:38.221815      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:39.221887      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:57:39.701: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzQ3MTQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0420 15:57:40.222300      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:41.223050      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:42.223385      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:43.223826      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:44.224250      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:45.224420      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:46.225050      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:47.225627      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:48.226717      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:49.227277      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:50.228055      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:51.228414      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:52.228750      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:53.228920      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:54.229121      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:55.230386      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:56.231173      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:57.231334      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:58.232407      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:59.232646      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:57:59.698: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzQ3MTQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0420 15:58:00.233914      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:01.234546      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:02.234741      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:03.235998      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:04.236217      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:05.236757      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:06.237059      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:07.237638      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:08.238715      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:09.239164      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:10.240319      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:11.240630      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:12.240738      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:13.241154      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:14.241291      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:15.241605      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:16.242446      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:17.243371      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:18.243467      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:19.244207      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:58:19.690: INFO: got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  Apr 20 15:58:19.690: INFO: Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 04/20/24 15:58:19.69
  STEP: retrieving all remaining pages @ 04/20/24 15:58:19.706
  Apr 20 15:58:19.720: INFO: Retrieved 40/40 results with rv 75637 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzU2MzcsInN0YXJ0IjoidGVtcGxhdGUtMDExOVx1MDAwMCJ9
  Apr 20 15:58:19.733: INFO: Retrieved 40/40 results with rv 75637 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzU2MzcsInN0YXJ0IjoidGVtcGxhdGUtMDE1OVx1MDAwMCJ9
  Apr 20 15:58:19.748: INFO: Retrieved 40/40 results with rv 75637 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzU2MzcsInN0YXJ0IjoidGVtcGxhdGUtMDE5OVx1MDAwMCJ9
  Apr 20 15:58:19.763: INFO: Retrieved 40/40 results with rv 75637 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzU2MzcsInN0YXJ0IjoidGVtcGxhdGUtMDIzOVx1MDAwMCJ9
  Apr 20 15:58:19.776: INFO: Retrieved 40/40 results with rv 75637 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzU2MzcsInN0YXJ0IjoidGVtcGxhdGUtMDI3OVx1MDAwMCJ9
  Apr 20 15:58:19.793: INFO: Retrieved 40/40 results with rv 75637 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzU2MzcsInN0YXJ0IjoidGVtcGxhdGUtMDMxOVx1MDAwMCJ9
  Apr 20 15:58:19.805: INFO: Retrieved 40/40 results with rv 75637 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzU2MzcsInN0YXJ0IjoidGVtcGxhdGUtMDM1OVx1MDAwMCJ9
  Apr 20 15:58:19.819: INFO: Retrieved 40/40 results with rv 75637 and continue 
  Apr 20 15:58:19.820: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-1680" for this suite. @ 04/20/24 15:58:19.832
• [557.939 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:195
  STEP: Creating a kubernetes client @ 04/20/24 15:58:19.85
  Apr 20 15:58:19.850: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename projected @ 04/20/24 15:58:19.855
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:58:19.894
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:58:19.901
  STEP: Creating a pod to test downward API volume plugin @ 04/20/24 15:58:19.908
  E0420 15:58:20.244896      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:21.245008      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:22.248104      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:23.249900      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 15:58:23.967
  Apr 20 15:58:23.978: INFO: Trying to get logs from node nok4chie7ate-3 pod downwardapi-volume-706e87ed-45fa-4139-beb5-15a2e9610f4f container client-container: <nil>
  STEP: delete the pod @ 04/20/24 15:58:24.025
  Apr 20 15:58:24.054: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9245" for this suite. @ 04/20/24 15:58:24.065
• [4.230 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:189
  STEP: Creating a kubernetes client @ 04/20/24 15:58:24.08
  Apr 20 15:58:24.080: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename var-expansion @ 04/20/24 15:58:24.084
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:58:24.124
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:58:24.131
  E0420 15:58:24.249943      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:25.250152      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:58:26.189: INFO: Deleting pod "var-expansion-2501c4b8-ac6c-4895-8da0-18b613f2dbec" in namespace "var-expansion-9052"
  Apr 20 15:58:26.205: INFO: Wait up to 5m0s for pod "var-expansion-2501c4b8-ac6c-4895-8da0-18b613f2dbec" to be fully deleted
  E0420 15:58:26.250506      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:27.250818      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:58:28.220: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9052" for this suite. @ 04/20/24 15:58:28.229
• [4.161 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 04/20/24 15:58:28.241
  Apr 20 15:58:28.241: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename watch @ 04/20/24 15:58:28.245
  E0420 15:58:28.251804      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:58:28.274
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:58:28.278
  STEP: creating a watch on configmaps with a certain label @ 04/20/24 15:58:28.284
  STEP: creating a new configmap @ 04/20/24 15:58:28.287
  STEP: modifying the configmap once @ 04/20/24 15:58:28.295
  STEP: changing the label value of the configmap @ 04/20/24 15:58:28.314
  STEP: Expecting to observe a delete notification for the watched object @ 04/20/24 15:58:28.328
  Apr 20 15:58:28.329: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-9548  ed6bae79-38dc-4a2b-9c3d-a0ae00be3d17 76082 0 2024-04-20 15:58:28 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-04-20 15:58:28 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 20 15:58:28.330: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-9548  ed6bae79-38dc-4a2b-9c3d-a0ae00be3d17 76085 0 2024-04-20 15:58:28 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-04-20 15:58:28 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 20 15:58:28.331: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-9548  ed6bae79-38dc-4a2b-9c3d-a0ae00be3d17 76088 0 2024-04-20 15:58:28 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-04-20 15:58:28 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 04/20/24 15:58:28.331
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 04/20/24 15:58:28.348
  E0420 15:58:29.252197      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:30.252261      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:31.252834      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:32.252974      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:33.253815      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:34.254468      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:35.254532      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:36.255320      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:37.256053      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:38.257073      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: changing the label value of the configmap back @ 04/20/24 15:58:38.349
  STEP: modifying the configmap a third time @ 04/20/24 15:58:38.372
  STEP: deleting the configmap @ 04/20/24 15:58:38.391
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 04/20/24 15:58:38.404
  Apr 20 15:58:38.405: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-9548  ed6bae79-38dc-4a2b-9c3d-a0ae00be3d17 76136 0 2024-04-20 15:58:28 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-04-20 15:58:38 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 20 15:58:38.405: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-9548  ed6bae79-38dc-4a2b-9c3d-a0ae00be3d17 76137 0 2024-04-20 15:58:28 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-04-20 15:58:38 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 20 15:58:38.406: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-9548  ed6bae79-38dc-4a2b-9c3d-a0ae00be3d17 76138 0 2024-04-20 15:58:28 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-04-20 15:58:38 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 20 15:58:38.406: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-9548" for this suite. @ 04/20/24 15:58:38.421
• [10.199 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 04/20/24 15:58:38.442
  Apr 20 15:58:38.442: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename init-container @ 04/20/24 15:58:38.452
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:58:38.495
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:58:38.501
  STEP: creating the pod @ 04/20/24 15:58:38.507
  Apr 20 15:58:38.507: INFO: PodSpec: initContainers in spec.initContainers
  E0420 15:58:39.257238      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:40.257958      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:41.258596      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:58:41.727: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-5101" for this suite. @ 04/20/24 15:58:41.736
• [3.306 seconds]
------------------------------
SSSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1632
  STEP: Creating a kubernetes client @ 04/20/24 15:58:41.751
  Apr 20 15:58:41.751: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename kubectl @ 04/20/24 15:58:41.755
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:58:41.787
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:58:41.791
  STEP: creating the pod @ 04/20/24 15:58:41.796
  Apr 20 15:58:41.796: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-6218 create -f -'
  Apr 20 15:58:42.152: INFO: stderr: ""
  Apr 20 15:58:42.152: INFO: stdout: "pod/pause created\n"
  E0420 15:58:42.258893      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:43.259160      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 04/20/24 15:58:44.174
  Apr 20 15:58:44.175: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-6218 label pods pause testing-label=testing-label-value'
  E0420 15:58:44.259569      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:58:44.405: INFO: stderr: ""
  Apr 20 15:58:44.405: INFO: stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 04/20/24 15:58:44.405
  Apr 20 15:58:44.405: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-6218 get pod pause -L testing-label'
  Apr 20 15:58:44.607: INFO: stderr: ""
  Apr 20 15:58:44.607: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 04/20/24 15:58:44.608
  Apr 20 15:58:44.608: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-6218 label pods pause testing-label-'
  Apr 20 15:58:44.792: INFO: stderr: ""
  Apr 20 15:58:44.792: INFO: stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 04/20/24 15:58:44.792
  Apr 20 15:58:44.792: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-6218 get pod pause -L testing-label'
  Apr 20 15:58:44.946: INFO: stderr: ""
  Apr 20 15:58:44.946: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    \n"
  STEP: using delete to clean up resources @ 04/20/24 15:58:44.947
  Apr 20 15:58:44.947: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-6218 delete --grace-period=0 --force -f -'
  Apr 20 15:58:45.130: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Apr 20 15:58:45.130: INFO: stdout: "pod \"pause\" force deleted\n"
  Apr 20 15:58:45.131: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-6218 get rc,svc -l name=pause --no-headers'
  E0420 15:58:45.262514      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:58:45.332: INFO: stderr: "No resources found in kubectl-6218 namespace.\n"
  Apr 20 15:58:45.333: INFO: stdout: ""
  Apr 20 15:58:45.333: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-6218 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Apr 20 15:58:45.496: INFO: stderr: ""
  Apr 20 15:58:45.497: INFO: stdout: ""
  Apr 20 15:58:45.497: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6218" for this suite. @ 04/20/24 15:58:45.541
• [3.803 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 04/20/24 15:58:45.555
  Apr 20 15:58:45.555: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename hostport @ 04/20/24 15:58:45.56
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:58:45.6
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:58:45.608
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 04/20/24 15:58:45.634
  E0420 15:58:46.262799      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:47.263288      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 192.168.121.193 on the node which pod1 resides and expect scheduled @ 04/20/24 15:58:47.677
  E0420 15:58:48.263412      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:49.264371      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:50.264612      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:51.265337      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 192.168.121.193 but use UDP protocol on the node which pod2 resides @ 04/20/24 15:58:51.724
  E0420 15:58:52.266119      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:53.266515      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:54.267263      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:55.268004      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 04/20/24 15:58:55.812
  Apr 20 15:58:55.812: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 192.168.121.193 http://127.0.0.1:54323/hostname] Namespace:hostport-4376 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 20 15:58:55.812: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  Apr 20 15:58:55.815: INFO: ExecWithOptions: Clientset creation
  Apr 20 15:58:55.815: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/hostport-4376/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+192.168.121.193+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 192.168.121.193, port: 54323 @ 04/20/24 15:58:55.996
  Apr 20 15:58:55.997: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://192.168.121.193:54323/hostname] Namespace:hostport-4376 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 20 15:58:55.997: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  Apr 20 15:58:55.999: INFO: ExecWithOptions: Clientset creation
  Apr 20 15:58:55.999: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/hostport-4376/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F192.168.121.193%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 192.168.121.193, port: 54323 UDP @ 04/20/24 15:58:56.111
  Apr 20 15:58:56.111: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 192.168.121.193 54323] Namespace:hostport-4376 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 20 15:58:56.111: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  Apr 20 15:58:56.114: INFO: ExecWithOptions: Clientset creation
  Apr 20 15:58:56.114: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/hostport-4376/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+192.168.121.193+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  E0420 15:58:56.267824      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:57.268860      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:58.269052      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:59.269733      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:00.270274      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:59:01.225: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-4376" for this suite. @ 04/20/24 15:59:01.237
• [15.692 seconds]
------------------------------
SS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 04/20/24 15:59:01.247
  Apr 20 15:59:01.247: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename pods @ 04/20/24 15:59:01.25
  E0420 15:59:01.270490      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:59:01.28
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:59:01.284
  STEP: Create set of pods @ 04/20/24 15:59:01.288
  Apr 20 15:59:01.303: INFO: created test-pod-1
  Apr 20 15:59:01.312: INFO: created test-pod-2
  Apr 20 15:59:01.326: INFO: created test-pod-3
  STEP: waiting for all 3 pods to be running @ 04/20/24 15:59:01.326
  E0420 15:59:02.274125      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:03.272752      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting for all pods to be deleted @ 04/20/24 15:59:03.42
  Apr 20 15:59:03.427: INFO: Pod quantity 3 is different from expected quantity 0
  E0420 15:59:04.273027      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:59:04.435: INFO: Pod quantity 3 is different from expected quantity 0
  E0420 15:59:05.274198      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:59:05.431: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5737" for this suite. @ 04/20/24 15:59:05.444
• [4.217 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:453
  STEP: Creating a kubernetes client @ 04/20/24 15:59:05.467
  Apr 20 15:59:05.467: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename resourcequota @ 04/20/24 15:59:05.473
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:59:05.541
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:59:05.547
  STEP: Counting existing ResourceQuota @ 04/20/24 15:59:05.554
  E0420 15:59:06.275201      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:07.276202      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:08.276491      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:09.277266      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:10.277414      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 04/20/24 15:59:10.567
  STEP: Ensuring resource quota status is calculated @ 04/20/24 15:59:10.589
  E0420 15:59:11.277838      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:12.278112      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ReplicaSet @ 04/20/24 15:59:12.604
  STEP: Ensuring resource quota status captures replicaset creation @ 04/20/24 15:59:12.641
  E0420 15:59:13.278892      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:14.278997      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicaSet @ 04/20/24 15:59:14.653
  STEP: Ensuring resource quota status released usage @ 04/20/24 15:59:14.671
  E0420 15:59:15.279337      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:16.280308      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:59:16.683: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1991" for this suite. @ 04/20/24 15:59:16.705
• [11.258 seconds]
------------------------------
SS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:125
  STEP: Creating a kubernetes client @ 04/20/24 15:59:16.725
  Apr 20 15:59:16.726: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename sysctl @ 04/20/24 15:59:16.732
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:59:16.773
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:59:16.783
  STEP: Creating a pod with one valid and two invalid sysctls @ 04/20/24 15:59:16.791
  Apr 20 15:59:16.804: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-1599" for this suite. @ 04/20/24 15:59:16.816
• [0.109 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1731
  STEP: Creating a kubernetes client @ 04/20/24 15:59:16.836
  Apr 20 15:59:16.836: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename kubectl @ 04/20/24 15:59:16.84
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:59:16.876
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:59:16.882
  Apr 20 15:59:16.888: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-2479 version'
  Apr 20 15:59:17.041: INFO: stderr: ""
  Apr 20 15:59:17.041: INFO: stdout: "Client Version: v1.29.4\nKustomize Version: v5.0.4-0.20230601165947-6ce0bf390ce3\nServer Version: v1.29.4\n"
  Apr 20 15:59:17.042: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2479" for this suite. @ 04/20/24 15:59:17.052
• [0.237 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 04/20/24 15:59:17.076
  Apr 20 15:59:17.076: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename subpath @ 04/20/24 15:59:17.081
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:59:17.115
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:59:17.12
  STEP: Setting up data @ 04/20/24 15:59:17.126
  STEP: Creating pod pod-subpath-test-projected-s52g @ 04/20/24 15:59:17.145
  STEP: Creating a pod to test atomic-volume-subpath @ 04/20/24 15:59:17.145
  E0420 15:59:17.280602      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:18.281530      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:19.282585      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:20.283091      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:21.283819      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:22.284790      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:23.285862      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:24.286466      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:25.287138      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:26.287235      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:27.287467      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:28.287976      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:29.288832      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:30.289538      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:31.290452      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:32.290859      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:33.291077      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:34.291774      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:35.292800      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:36.293551      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:37.294095      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:38.295010      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 15:59:39.278
  Apr 20 15:59:39.286: INFO: Trying to get logs from node nok4chie7ate-3 pod pod-subpath-test-projected-s52g container test-container-subpath-projected-s52g: <nil>
  E0420 15:59:39.295043      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod @ 04/20/24 15:59:39.304
  STEP: Deleting pod pod-subpath-test-projected-s52g @ 04/20/24 15:59:39.329
  Apr 20 15:59:39.329: INFO: Deleting pod "pod-subpath-test-projected-s52g" in namespace "subpath-3239"
  Apr 20 15:59:39.335: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-3239" for this suite. @ 04/20/24 15:59:39.344
• [22.280 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:948
  STEP: Creating a kubernetes client @ 04/20/24 15:59:39.359
  Apr 20 15:59:39.359: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename resourcequota @ 04/20/24 15:59:39.362
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:59:39.394
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:59:39.399
  STEP: Creating a ResourceQuota @ 04/20/24 15:59:39.404
  STEP: Getting a ResourceQuota @ 04/20/24 15:59:39.412
  STEP: Listing all ResourceQuotas with LabelSelector @ 04/20/24 15:59:39.418
  STEP: Patching the ResourceQuota @ 04/20/24 15:59:39.431
  STEP: Deleting a Collection of ResourceQuotas @ 04/20/24 15:59:39.445
  STEP: Verifying the deleted ResourceQuota @ 04/20/24 15:59:39.465
  Apr 20 15:59:39.470: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8208" for this suite. @ 04/20/24 15:59:39.478
• [0.134 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csistoragecapacity.go:50
  STEP: Creating a kubernetes client @ 04/20/24 15:59:39.494
  Apr 20 15:59:39.494: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename csistoragecapacity @ 04/20/24 15:59:39.499
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:59:39.537
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:59:39.543
  STEP: getting /apis @ 04/20/24 15:59:39.548
  STEP: getting /apis/storage.k8s.io @ 04/20/24 15:59:39.557
  STEP: getting /apis/storage.k8s.io/v1 @ 04/20/24 15:59:39.56
  STEP: creating @ 04/20/24 15:59:39.562
  STEP: watching @ 04/20/24 15:59:39.597
  Apr 20 15:59:39.597: INFO: starting watch
  STEP: getting @ 04/20/24 15:59:39.608
  STEP: listing in namespace @ 04/20/24 15:59:39.614
  STEP: listing across namespaces @ 04/20/24 15:59:39.62
  STEP: patching @ 04/20/24 15:59:39.625
  STEP: updating @ 04/20/24 15:59:39.643
  Apr 20 15:59:39.653: INFO: waiting for watch events with expected annotations in namespace
  Apr 20 15:59:39.653: INFO: waiting for watch events with expected annotations across namespace
  STEP: deleting @ 04/20/24 15:59:39.653
  STEP: deleting a collection @ 04/20/24 15:59:39.677
  Apr 20 15:59:39.706: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-2375" for this suite. @ 04/20/24 15:59:39.713
• [0.229 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:120
  STEP: Creating a kubernetes client @ 04/20/24 15:59:39.725
  Apr 20 15:59:39.725: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename emptydir @ 04/20/24 15:59:39.729
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:59:39.765
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:59:39.77
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 04/20/24 15:59:39.776
  E0420 15:59:40.296074      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:41.296759      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:42.297200      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:43.298279      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 15:59:43.823
  Apr 20 15:59:43.830: INFO: Trying to get logs from node nok4chie7ate-3 pod pod-c7df5fc7-48ab-49b3-b0e0-8a01bbffa45c container test-container: <nil>
  STEP: delete the pod @ 04/20/24 15:59:43.849
  Apr 20 15:59:43.891: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1944" for this suite. @ 04/20/24 15:59:43.902
• [4.190 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 04/20/24 15:59:43.919
  Apr 20 15:59:43.919: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename pods @ 04/20/24 15:59:43.922
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:59:43.966
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:59:43.971
  STEP: creating pod @ 04/20/24 15:59:43.976
  E0420 15:59:44.298948      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:45.298983      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:59:46.029: INFO: Pod pod-hostip-7a0dee12-e394-4f1a-9788-00995adfcd3b has hostIP: 192.168.121.8
  Apr 20 15:59:46.030: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4379" for this suite. @ 04/20/24 15:59:46.041
• [2.135 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:220
  STEP: Creating a kubernetes client @ 04/20/24 15:59:46.056
  Apr 20 15:59:46.056: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename emptydir @ 04/20/24 15:59:46.06
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:59:46.094
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:59:46.102
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 04/20/24 15:59:46.109
  E0420 15:59:46.300321      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:47.300607      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 15:59:48.156
  Apr 20 15:59:48.162: INFO: Trying to get logs from node nok4chie7ate-3 pod pod-d82d1c2d-c059-4f45-b04f-6f00be8fcef5 container test-container: <nil>
  STEP: delete the pod @ 04/20/24 15:59:48.181
  Apr 20 15:59:48.228: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5244" for this suite. @ 04/20/24 15:59:48.24
• [2.200 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 04/20/24 15:59:48.256
  Apr 20 15:59:48.256: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename daemonsets @ 04/20/24 15:59:48.259
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:59:48.289
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:59:48.294
  E0420 15:59:48.300247      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:59:48.340: INFO: Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 04/20/24 15:59:48.351
  Apr 20 15:59:48.365: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 20 15:59:48.365: INFO: Node nok4chie7ate-1 is running 0 daemon pod, expected 1
  E0420 15:59:49.300610      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:59:49.379: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 20 15:59:49.379: INFO: Node nok4chie7ate-1 is running 0 daemon pod, expected 1
  E0420 15:59:50.301343      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:59:50.377: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Apr 20 15:59:50.378: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Update daemon pods image. @ 04/20/24 15:59:50.429
  STEP: Check that daemon pods images are updated. @ 04/20/24 15:59:50.457
  Apr 20 15:59:50.465: INFO: Wrong image for pod: daemon-set-2mfrt. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Apr 20 15:59:50.467: INFO: Wrong image for pod: daemon-set-q9crk. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Apr 20 15:59:50.468: INFO: Wrong image for pod: daemon-set-zwg8b. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  E0420 15:59:51.302041      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:59:51.467: INFO: Wrong image for pod: daemon-set-2mfrt. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Apr 20 15:59:51.467: INFO: Wrong image for pod: daemon-set-q9crk. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  E0420 15:59:52.302442      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:59:52.467: INFO: Wrong image for pod: daemon-set-2mfrt. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Apr 20 15:59:52.467: INFO: Wrong image for pod: daemon-set-q9crk. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  E0420 15:59:53.302538      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:59:53.476: INFO: Wrong image for pod: daemon-set-2mfrt. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Apr 20 15:59:53.477: INFO: Wrong image for pod: daemon-set-q9crk. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Apr 20 15:59:53.477: INFO: Pod daemon-set-twkbz is not available
  E0420 15:59:54.303505      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:59:54.467: INFO: Wrong image for pod: daemon-set-2mfrt. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  E0420 15:59:55.305076      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:59:55.468: INFO: Wrong image for pod: daemon-set-2mfrt. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Apr 20 15:59:55.468: INFO: Pod daemon-set-psknv is not available
  E0420 15:59:56.304988      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:59:56.469: INFO: Pod daemon-set-4dmjm is not available
  STEP: Check that daemon pods are still running on every node of the cluster. @ 04/20/24 15:59:56.479
  Apr 20 15:59:56.512: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Apr 20 15:59:56.513: INFO: Node nok4chie7ate-2 is running 0 daemon pod, expected 1
  E0420 15:59:57.305647      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:59:57.522: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Apr 20 15:59:57.522: INFO: Node nok4chie7ate-2 is running 0 daemon pod, expected 1
  E0420 15:59:58.306514      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:59:58.499: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Apr 20 15:59:58.499: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 04/20/24 15:59:58.543
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4050, will wait for the garbage collector to delete the pods @ 04/20/24 15:59:58.543
  Apr 20 15:59:58.619: INFO: Deleting DaemonSet.extensions daemon-set took: 17.990291ms
  Apr 20 15:59:58.720: INFO: Terminating DaemonSet.extensions daemon-set pods took: 101.276984ms
  E0420 15:59:59.308176      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 15:59:59.929: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 20 15:59:59.929: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Apr 20 15:59:59.935: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"76745"},"items":null}

  Apr 20 15:59:59.942: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"76745"},"items":null}

  Apr 20 15:59:59.978: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-4050" for this suite. @ 04/20/24 15:59:59.992
• [11.751 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3129
  STEP: Creating a kubernetes client @ 04/20/24 16:00:00.012
  Apr 20 16:00:00.012: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename services @ 04/20/24 16:00:00.015
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 16:00:00.053
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 16:00:00.059
  STEP: fetching services @ 04/20/24 16:00:00.064
  Apr 20 16:00:00.072: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4816" for this suite. @ 04/20/24 16:00:00.081
• [0.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:70
  STEP: Creating a kubernetes client @ 04/20/24 16:00:00.099
  Apr 20 16:00:00.100: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename projected @ 04/20/24 16:00:00.105
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 16:00:00.139
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 16:00:00.144
  STEP: Creating a pod to test downward API volume plugin @ 04/20/24 16:00:00.149
  E0420 16:00:00.308388      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:01.308778      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:02.308834      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:03.309144      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 16:00:04.189
  Apr 20 16:00:04.196: INFO: Trying to get logs from node nok4chie7ate-3 pod downwardapi-volume-820496c3-9169-400c-bb23-6b51b02140e5 container client-container: <nil>
  STEP: delete the pod @ 04/20/24 16:00:04.208
  Apr 20 16:00:04.242: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7707" for this suite. @ 04/20/24 16:00:04.253
• [4.170 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 04/20/24 16:00:04.271
  Apr 20 16:00:04.272: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename pods @ 04/20/24 16:00:04.275
  E0420 16:00:04.309257      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 16:00:04.313
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 16:00:04.318
  STEP: creating the pod @ 04/20/24 16:00:04.325
  STEP: submitting the pod to kubernetes @ 04/20/24 16:00:04.325
  E0420 16:00:05.309372      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:06.311037      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 04/20/24 16:00:06.377
  STEP: updating the pod @ 04/20/24 16:00:06.387
  Apr 20 16:00:06.944: INFO: Successfully updated pod "pod-update-eb8305dd-c6e4-4a41-8a77-5f248033207c"
  STEP: verifying the updated pod is in kubernetes @ 04/20/24 16:00:06.953
  Apr 20 16:00:06.961: INFO: Pod update OK
  Apr 20 16:00:06.961: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3087" for this suite. @ 04/20/24 16:00:06.97
• [2.711 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:142
  STEP: Creating a kubernetes client @ 04/20/24 16:00:06.982
  Apr 20 16:00:06.982: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename crd-webhook @ 04/20/24 16:00:06.986
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 16:00:07.016
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 16:00:07.022
  STEP: Setting up server cert @ 04/20/24 16:00:07.028
  E0420 16:00:07.310928      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 04/20/24 16:00:07.98
  STEP: Deploying the custom resource conversion webhook pod @ 04/20/24 16:00:07.998
  STEP: Wait for the deployment to be ready @ 04/20/24 16:00:08.02
  Apr 20 16:00:08.040: INFO: new replicaset for deployment "sample-crd-conversion-webhook-deployment" is yet to be created
  E0420 16:00:08.311253      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:09.312179      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/20/24 16:00:10.07
  STEP: Verifying the service has paired with the endpoint @ 04/20/24 16:00:10.09
  E0420 16:00:10.312929      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 16:00:11.091: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Apr 20 16:00:11.112: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  E0420 16:00:11.313149      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:12.313766      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:13.315018      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 04/20/24 16:00:14.078
  STEP: v2 custom resource should be converted @ 04/20/24 16:00:14.092
  E0420 16:00:14.315369      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 16:00:14.723: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-2979" for this suite. @ 04/20/24 16:00:14.74
• [7.778 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3338
  STEP: Creating a kubernetes client @ 04/20/24 16:00:14.761
  Apr 20 16:00:14.761: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename services @ 04/20/24 16:00:14.771
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 16:00:14.804
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 16:00:14.809
  STEP: creating a Service @ 04/20/24 16:00:14.82
  STEP: watching for the Service to be added @ 04/20/24 16:00:14.855
  Apr 20 16:00:14.859: INFO: Found Service test-service-wh2tn in namespace services-4724 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 31506}]
  Apr 20 16:00:14.859: INFO: Service test-service-wh2tn created
  STEP: Getting /status @ 04/20/24 16:00:14.859
  Apr 20 16:00:14.882: INFO: Service test-service-wh2tn has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 04/20/24 16:00:14.882
  STEP: watching for the Service to be patched @ 04/20/24 16:00:14.896
  Apr 20 16:00:14.898: INFO: observed Service test-service-wh2tn in namespace services-4724 with annotations: map[] & LoadBalancer: {[]}
  Apr 20 16:00:14.898: INFO: Found Service test-service-wh2tn in namespace services-4724 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  <nil> []}]}
  Apr 20 16:00:14.898: INFO: Service test-service-wh2tn has service status patched
  STEP: updating the ServiceStatus @ 04/20/24 16:00:14.898
  Apr 20 16:00:14.924: INFO: updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 04/20/24 16:00:14.925
  Apr 20 16:00:14.930: INFO: Observed Service test-service-wh2tn in namespace services-4724 with annotations: map[] & Conditions: {[]}
  Apr 20 16:00:14.930: INFO: Observed event: &Service{ObjectMeta:{test-service-wh2tn  services-4724  5fe9a0c3-3acf-4321-a864-81fa4e5e8719 76932 0 2024-04-20 16:00:14 +0000 UTC <nil> <nil> map[test-service-static:true] map[patchedstatus:true] [] [] [{e2e.test Update v1 2024-04-20 16:00:14 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:test-service-static":{}}},"f:spec":{"f:allocateLoadBalancerNodePorts":{},"f:externalTrafficPolicy":{},"f:internalTrafficPolicy":{},"f:loadBalancerClass":{},"f:ports":{".":{},"k:{\"port\":80,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:sessionAffinity":{},"f:type":{}}} } {e2e.test Update v1 2024-04-20 16:00:14 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:patchedstatus":{}}},"f:status":{"f:loadBalancer":{"f:ingress":{}}}} status}]},Spec:ServiceSpec{Ports:[]ServicePort{ServicePort{Name:http,Protocol:TCP,Port:80,TargetPort:{0 80 },NodePort:31506,AppProtocol:nil,},},Selector:map[string]string{},ClusterIP:10.233.19.174,Type:LoadBalancer,ExternalIPs:[],SessionAffinity:None,LoadBalancerIP:,LoadBalancerSourceRanges:[],ExternalName:,ExternalTrafficPolicy:Cluster,HealthCheckNodePort:0,PublishNotReadyAddresses:false,SessionAffinityConfig:nil,IPFamilyPolicy:*SingleStack,ClusterIPs:[10.233.19.174],IPFamilies:[IPv4],AllocateLoadBalancerNodePorts:*true,LoadBalancerClass:*example.com/internal-vip,InternalTrafficPolicy:*Cluster,},Status:ServiceStatus{LoadBalancer:LoadBalancerStatus{Ingress:[]LoadBalancerIngress{LoadBalancerIngress{IP:203.0.113.1,Hostname:,IPMode:nil,Ports:[]PortStatus{},},},},Conditions:[]Condition{},},}
  Apr 20 16:00:14.930: INFO: Found Service test-service-wh2tn in namespace services-4724 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Apr 20 16:00:14.930: INFO: Service test-service-wh2tn has service status updated
  STEP: patching the service @ 04/20/24 16:00:14.93
  STEP: watching for the Service to be patched @ 04/20/24 16:00:14.954
  Apr 20 16:00:14.958: INFO: observed Service test-service-wh2tn in namespace services-4724 with labels: map[test-service-static:true]
  Apr 20 16:00:14.958: INFO: observed Service test-service-wh2tn in namespace services-4724 with labels: map[test-service-static:true]
  Apr 20 16:00:14.958: INFO: observed Service test-service-wh2tn in namespace services-4724 with labels: map[test-service-static:true]
  Apr 20 16:00:14.959: INFO: Found Service test-service-wh2tn in namespace services-4724 with labels: map[test-service:patched test-service-static:true]
  Apr 20 16:00:14.959: INFO: Service test-service-wh2tn patched
  STEP: deleting the service @ 04/20/24 16:00:14.959
  STEP: watching for the Service to be deleted @ 04/20/24 16:00:14.987
  Apr 20 16:00:14.989: INFO: Observed event: ADDED
  Apr 20 16:00:14.990: INFO: Observed event: MODIFIED
  Apr 20 16:00:14.990: INFO: Observed event: MODIFIED
  Apr 20 16:00:14.990: INFO: Observed event: MODIFIED
  Apr 20 16:00:14.991: INFO: Found Service test-service-wh2tn in namespace services-4724 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  Apr 20 16:00:14.991: INFO: Service test-service-wh2tn deleted
  Apr 20 16:00:14.992: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4724" for this suite. @ 04/20/24 16:00:15
• [0.249 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:71
  STEP: Creating a kubernetes client @ 04/20/24 16:00:15.011
  Apr 20 16:00:15.011: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename container-probe @ 04/20/24 16:00:15.014
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 16:00:15.039
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 16:00:15.046
  E0420 16:00:15.315592      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:16.315826      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:17.316049      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:18.316391      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:19.317281      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:20.318261      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:21.319262      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:22.320153      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:23.320750      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:24.320939      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:25.321110      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:26.323152      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:27.321563      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:28.321861      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:29.322383      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:30.323061      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:31.323012      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:32.323275      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:33.324433      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:34.325286      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:35.325896      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:36.326039      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 16:00:37.223: INFO: Container started at 2024-04-20 16:00:15 +0000 UTC, pod became ready at 2024-04-20 16:00:35 +0000 UTC
  Apr 20 16:00:37.224: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-326" for this suite. @ 04/20/24 16:00:37.24
• [22.247 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:695
  STEP: Creating a kubernetes client @ 04/20/24 16:00:37.259
  Apr 20 16:00:37.259: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename resourcequota @ 04/20/24 16:00:37.265
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 16:00:37.318
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 16:00:37.326
  E0420 16:00:37.327257      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with terminating scope @ 04/20/24 16:00:37.336
  STEP: Ensuring ResourceQuota status is calculated @ 04/20/24 16:00:37.358
  E0420 16:00:38.329924      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:39.329473      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not terminating scope @ 04/20/24 16:00:39.371
  STEP: Ensuring ResourceQuota status is calculated @ 04/20/24 16:00:39.381
  E0420 16:00:40.329237      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:41.329617      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a long running pod @ 04/20/24 16:00:41.393
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 04/20/24 16:00:41.435
  E0420 16:00:42.334755      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:43.330713      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 04/20/24 16:00:43.444
  E0420 16:00:44.331276      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:45.332730      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 04/20/24 16:00:45.455
  STEP: Ensuring resource quota status released the pod usage @ 04/20/24 16:00:45.488
  E0420 16:00:46.332623      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:47.332600      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a terminating pod @ 04/20/24 16:00:47.504
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 04/20/24 16:00:47.54
  E0420 16:00:48.333342      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:49.334224      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 04/20/24 16:00:49.551
  E0420 16:00:50.334444      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:51.335147      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 04/20/24 16:00:51.564
  STEP: Ensuring resource quota status released the pod usage @ 04/20/24 16:00:51.587
  E0420 16:00:52.340520      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:53.337332      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 16:00:53.600: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8421" for this suite. @ 04/20/24 16:00:53.621
• [16.382 seconds]
------------------------------
SSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1084
  STEP: Creating a kubernetes client @ 04/20/24 16:00:53.643
  Apr 20 16:00:53.643: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename kubectl @ 04/20/24 16:00:53.662
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 16:00:53.699
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 16:00:53.705
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 04/20/24 16:00:53.712
  Apr 20 16:00:53.713: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-4106 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  Apr 20 16:00:53.946: INFO: stderr: ""
  Apr 20 16:00:53.947: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 04/20/24 16:00:53.947
  Apr 20 16:00:53.948: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-4106 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.36.1-1"}]}} --dry-run=server'
  Apr 20 16:00:54.179: INFO: stderr: ""
  Apr 20 16:00:54.179: INFO: stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 04/20/24 16:00:54.179
  Apr 20 16:00:54.186: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-4106 delete pods e2e-test-httpd-pod'
  E0420 16:00:54.336336      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:55.336801      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:56.337446      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 16:00:56.549: INFO: stderr: ""
  Apr 20 16:00:56.549: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Apr 20 16:00:56.550: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4106" for this suite. @ 04/20/24 16:00:56.561
• [2.930 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:241
  STEP: Creating a kubernetes client @ 04/20/24 16:00:56.575
  Apr 20 16:00:56.575: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename configmap @ 04/20/24 16:00:56.578
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 16:00:56.61
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 16:00:56.617
  STEP: Creating configMap with name cm-test-opt-del-3e99de13-f989-40ac-a16b-6303ac2c8215 @ 04/20/24 16:00:56.632
  STEP: Creating configMap with name cm-test-opt-upd-ae28dc5b-5e93-4367-ac4f-763c56635d72 @ 04/20/24 16:00:56.643
  STEP: Creating the pod @ 04/20/24 16:00:56.651
  E0420 16:00:57.337964      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:58.339287      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-3e99de13-f989-40ac-a16b-6303ac2c8215 @ 04/20/24 16:00:58.786
  STEP: Updating configmap cm-test-opt-upd-ae28dc5b-5e93-4367-ac4f-763c56635d72 @ 04/20/24 16:00:58.801
  STEP: Creating configMap with name cm-test-opt-create-8d0f9216-f367-4c5f-96ac-8d0b014768cc @ 04/20/24 16:00:58.811
  STEP: waiting to observe update in volume @ 04/20/24 16:00:58.821
  E0420 16:00:59.339608      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:00.339748      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 16:01:00.887: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9670" for this suite. @ 04/20/24 16:01:00.901
• [4.344 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:425
  STEP: Creating a kubernetes client @ 04/20/24 16:01:00.927
  Apr 20 16:01:00.927: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename replication-controller @ 04/20/24 16:01:00.932
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 16:01:00.967
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 16:01:00.975
  STEP: Creating ReplicationController "e2e-rc-vzk6t" @ 04/20/24 16:01:00.984
  Apr 20 16:01:01.002: INFO: Get Replication Controller "e2e-rc-vzk6t" to confirm replicas
  E0420 16:01:01.339893      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 16:01:02.003: INFO: Get Replication Controller "e2e-rc-vzk6t" to confirm replicas
  Apr 20 16:01:02.011: INFO: Found 1 replicas for "e2e-rc-vzk6t" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-vzk6t" @ 04/20/24 16:01:02.011
  STEP: Updating a scale subresource @ 04/20/24 16:01:02.018
  STEP: Verifying replicas where modified for replication controller "e2e-rc-vzk6t" @ 04/20/24 16:01:02.027
  Apr 20 16:01:02.027: INFO: Get Replication Controller "e2e-rc-vzk6t" to confirm replicas
  E0420 16:01:02.340537      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 16:01:03.028: INFO: Get Replication Controller "e2e-rc-vzk6t" to confirm replicas
  Apr 20 16:01:03.035: INFO: Found 2 replicas for "e2e-rc-vzk6t" replication controller
  Apr 20 16:01:03.035: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-1678" for this suite. @ 04/20/24 16:01:03.044
• [2.132 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:646
  STEP: Creating a kubernetes client @ 04/20/24 16:01:03.059
  Apr 20 16:01:03.059: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename webhook @ 04/20/24 16:01:03.064
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 16:01:03.093
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 16:01:03.101
  STEP: Setting up server cert @ 04/20/24 16:01:03.148
  E0420 16:01:03.341130      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/20/24 16:01:03.992
  STEP: Deploying the webhook pod @ 04/20/24 16:01:04.014
  STEP: Wait for the deployment to be ready @ 04/20/24 16:01:04.044
  Apr 20 16:01:04.069: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0420 16:01:04.341378      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:05.341543      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/20/24 16:01:06.104
  STEP: Verifying the service has paired with the endpoint @ 04/20/24 16:01:06.126
  E0420 16:01:06.341750      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 16:01:07.127: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 04/20/24 16:01:07.249
  STEP: Creating a configMap that should be mutated @ 04/20/24 16:01:07.292
  E0420 16:01:07.345217      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the collection of validation webhooks @ 04/20/24 16:01:07.366
  STEP: Creating a configMap that should not be mutated @ 04/20/24 16:01:07.448
  Apr 20 16:01:07.548: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8545" for this suite. @ 04/20/24 16:01:07.558
  STEP: Destroying namespace "webhook-markers-112" for this suite. @ 04/20/24 16:01:07.571
• [4.524 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:270
  STEP: Creating a kubernetes client @ 04/20/24 16:01:07.594
  Apr 20 16:01:07.594: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename custom-resource-definition @ 04/20/24 16:01:07.598
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 16:01:07.629
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 16:01:07.634
  Apr 20 16:01:07.639: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  E0420 16:01:08.344446      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:09.344874      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:10.346720      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 16:01:11.130: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-9999" for this suite. @ 04/20/24 16:01:11.141
• [3.563 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:109
  STEP: Creating a kubernetes client @ 04/20/24 16:01:11.161
  Apr 20 16:01:11.161: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename kubelet-test @ 04/20/24 16:01:11.165
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 16:01:11.205
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 16:01:11.21
  E0420 16:01:11.346401      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:12.347189      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:13.347549      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:14.348111      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 16:01:15.248: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-6026" for this suite. @ 04/20/24 16:01:15.257
• [4.110 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:70
  STEP: Creating a kubernetes client @ 04/20/24 16:01:15.274
  Apr 20 16:01:15.274: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename downward-api @ 04/20/24 16:01:15.278
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 16:01:15.327
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 16:01:15.343
  E0420 16:01:15.348225      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a pod to test downward API volume plugin @ 04/20/24 16:01:15.352
  E0420 16:01:16.348633      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:17.349136      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:18.350222      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:19.350964      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 16:01:19.418
  Apr 20 16:01:19.430: INFO: Trying to get logs from node nok4chie7ate-3 pod downwardapi-volume-072852c5-a75e-45fe-81f1-1d9626a52f7c container client-container: <nil>
  STEP: delete the pod @ 04/20/24 16:01:19.458
  Apr 20 16:01:19.495: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9815" for this suite. @ 04/20/24 16:01:19.51
• [4.252 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:86
  STEP: Creating a kubernetes client @ 04/20/24 16:01:19.53
  Apr 20 16:01:19.530: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename replication-controller @ 04/20/24 16:01:19.54
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 16:01:19.575
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 16:01:19.581
  Apr 20 16:01:19.588: INFO: Creating quota "condition-test" that allows only two pods to run in the current namespace
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 04/20/24 16:01:19.614
  STEP: Checking rc "condition-test" has the desired failure condition set @ 04/20/24 16:01:19.629
  E0420 16:01:20.351058      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 04/20/24 16:01:20.649
  Apr 20 16:01:20.678: INFO: Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 04/20/24 16:01:20.679
  Apr 20 16:01:20.693: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-8660" for this suite. @ 04/20/24 16:01:20.703
• [1.195 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:48
  STEP: Creating a kubernetes client @ 04/20/24 16:01:20.725
  Apr 20 16:01:20.725: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename projected @ 04/20/24 16:01:20.729
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 16:01:20.783
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 16:01:20.788
  STEP: Creating configMap with name projected-configmap-test-volume-d38eac52-1562-4fa2-a04f-d0a20b73211e @ 04/20/24 16:01:20.795
  STEP: Creating a pod to test consume configMaps @ 04/20/24 16:01:20.808
  E0420 16:01:21.352048      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:22.352339      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 16:01:22.846
  Apr 20 16:01:22.854: INFO: Trying to get logs from node nok4chie7ate-3 pod pod-projected-configmaps-be9380ba-fb39-4a1e-a5ff-355f8affd439 container agnhost-container: <nil>
  STEP: delete the pod @ 04/20/24 16:01:22.872
  Apr 20 16:01:22.912: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4443" for this suite. @ 04/20/24 16:01:22.923
• [2.241 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 04/20/24 16:01:22.966
  Apr 20 16:01:22.966: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename projected @ 04/20/24 16:01:22.969
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 16:01:23.008
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 16:01:23.013
  STEP: Creating projection with secret that has name projected-secret-test-7ceaf46d-50a4-4960-a243-acde88f61735 @ 04/20/24 16:01:23.018
  STEP: Creating a pod to test consume secrets @ 04/20/24 16:01:23.029
  E0420 16:01:23.353503      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:24.353534      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:25.353860      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:26.354136      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 16:01:27.073
  Apr 20 16:01:27.082: INFO: Trying to get logs from node nok4chie7ate-3 pod pod-projected-secrets-c7290c62-2348-427b-a74e-87d54282374d container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 04/20/24 16:01:27.096
  Apr 20 16:01:27.121: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3020" for this suite. @ 04/20/24 16:01:27.129
• [4.179 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet_etc_hosts.go:64
  STEP: Creating a kubernetes client @ 04/20/24 16:01:27.146
  Apr 20 16:01:27.146: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 04/20/24 16:01:27.149
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 16:01:27.188
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 16:01:27.193
  STEP: Setting up the test @ 04/20/24 16:01:27.198
  STEP: Creating hostNetwork=false pod @ 04/20/24 16:01:27.198
  E0420 16:01:27.355124      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:28.355361      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating hostNetwork=true pod @ 04/20/24 16:01:29.247
  E0420 16:01:29.356371      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:30.360369      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Running the test @ 04/20/24 16:01:31.294
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 04/20/24 16:01:31.294
  Apr 20 16:01:31.294: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-9272 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 20 16:01:31.295: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  Apr 20 16:01:31.299: INFO: ExecWithOptions: Clientset creation
  Apr 20 16:01:31.300: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9272/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  E0420 16:01:31.359309      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 16:01:31.460: INFO: Exec stderr: ""
  Apr 20 16:01:31.460: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-9272 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 20 16:01:31.461: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  Apr 20 16:01:31.463: INFO: ExecWithOptions: Clientset creation
  Apr 20 16:01:31.463: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9272/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Apr 20 16:01:31.565: INFO: Exec stderr: ""
  Apr 20 16:01:31.565: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-9272 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 20 16:01:31.565: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  Apr 20 16:01:31.568: INFO: ExecWithOptions: Clientset creation
  Apr 20 16:01:31.569: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9272/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Apr 20 16:01:31.702: INFO: Exec stderr: ""
  Apr 20 16:01:31.702: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-9272 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 20 16:01:31.702: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  Apr 20 16:01:31.706: INFO: ExecWithOptions: Clientset creation
  Apr 20 16:01:31.707: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9272/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Apr 20 16:01:31.834: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 04/20/24 16:01:31.834
  Apr 20 16:01:31.834: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-9272 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 20 16:01:31.834: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  Apr 20 16:01:31.839: INFO: ExecWithOptions: Clientset creation
  Apr 20 16:01:31.839: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9272/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  Apr 20 16:01:31.973: INFO: Exec stderr: ""
  Apr 20 16:01:31.973: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-9272 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 20 16:01:31.973: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  Apr 20 16:01:31.975: INFO: ExecWithOptions: Clientset creation
  Apr 20 16:01:31.975: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9272/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  Apr 20 16:01:32.065: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 04/20/24 16:01:32.066
  Apr 20 16:01:32.066: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-9272 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 20 16:01:32.066: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  Apr 20 16:01:32.068: INFO: ExecWithOptions: Clientset creation
  Apr 20 16:01:32.068: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9272/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Apr 20 16:01:32.173: INFO: Exec stderr: ""
  Apr 20 16:01:32.173: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-9272 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 20 16:01:32.173: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  Apr 20 16:01:32.175: INFO: ExecWithOptions: Clientset creation
  Apr 20 16:01:32.176: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9272/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Apr 20 16:01:32.283: INFO: Exec stderr: ""
  Apr 20 16:01:32.283: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-9272 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 20 16:01:32.283: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  Apr 20 16:01:32.286: INFO: ExecWithOptions: Clientset creation
  Apr 20 16:01:32.286: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9272/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  E0420 16:01:32.359267      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 16:01:32.403: INFO: Exec stderr: ""
  Apr 20 16:01:32.403: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-9272 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 20 16:01:32.403: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  Apr 20 16:01:32.406: INFO: ExecWithOptions: Clientset creation
  Apr 20 16:01:32.406: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-9272/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Apr 20 16:01:32.535: INFO: Exec stderr: ""
  Apr 20 16:01:32.536: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-9272" for this suite. @ 04/20/24 16:01:32.548
• [5.422 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:96
  STEP: Creating a kubernetes client @ 04/20/24 16:01:32.575
  Apr 20 16:01:32.575: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename secrets @ 04/20/24 16:01:32.578
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 16:01:32.622
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 16:01:32.628
  STEP: creating secret secrets-2944/secret-test-7c1974ff-85b3-4437-baf5-6842f23e60ee @ 04/20/24 16:01:32.633
  STEP: Creating a pod to test consume secrets @ 04/20/24 16:01:32.65
  E0420 16:01:33.359488      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:34.360296      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:35.361146      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:36.367807      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 16:01:36.701
  Apr 20 16:01:36.709: INFO: Trying to get logs from node nok4chie7ate-3 pod pod-configmaps-c7737e1e-f105-4cc8-9f2e-659447ba60c6 container env-test: <nil>
  STEP: delete the pod @ 04/20/24 16:01:36.728
  Apr 20 16:01:36.769: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2944" for this suite. @ 04/20/24 16:01:36.782
• [4.219 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:209
  STEP: Creating a kubernetes client @ 04/20/24 16:01:36.796
  Apr 20 16:01:36.796: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename projected @ 04/20/24 16:01:36.801
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 16:01:36.831
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 16:01:36.835
  STEP: Creating a pod to test downward API volume plugin @ 04/20/24 16:01:36.84
  E0420 16:01:37.362970      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:38.366019      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:39.365234      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:40.364321      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 16:01:40.902
  Apr 20 16:01:40.910: INFO: Trying to get logs from node nok4chie7ate-3 pod downwardapi-volume-5dd9fe5b-7b6f-48d6-833b-f52b5932d358 container client-container: <nil>
  STEP: delete the pod @ 04/20/24 16:01:40.923
  Apr 20 16:01:40.949: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4813" for this suite. @ 04/20/24 16:01:40.958
• [4.175 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 04/20/24 16:01:40.976
  Apr 20 16:01:40.976: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename projected @ 04/20/24 16:01:40.98
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 16:01:41.009
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 16:01:41.015
  STEP: Creating configMap with name configmap-projected-all-test-volume-ad5d918b-73c7-49ad-9835-5d51eec140ea @ 04/20/24 16:01:41.021
  STEP: Creating secret with name secret-projected-all-test-volume-145f44c6-f581-46be-aa2c-b1476a167ffe @ 04/20/24 16:01:41.031
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 04/20/24 16:01:41.038
  E0420 16:01:41.365072      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:42.365053      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:43.365980      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:44.366250      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 16:01:45.094
  Apr 20 16:01:45.101: INFO: Trying to get logs from node nok4chie7ate-3 pod projected-volume-073dca04-10d2-441c-a06c-385e679a5d1f container projected-all-volume-test: <nil>
  STEP: delete the pod @ 04/20/24 16:01:45.116
  Apr 20 16:01:45.142: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9634" for this suite. @ 04/20/24 16:01:45.151
• [4.188 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 04/20/24 16:01:45.165
  Apr 20 16:01:45.165: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename emptydir-wrapper @ 04/20/24 16:01:45.168
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 16:01:45.208
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 16:01:45.215
  STEP: Creating 50 configmaps @ 04/20/24 16:01:45.221
  E0420 16:01:45.366424      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating RC which spawns configmap-volume pods @ 04/20/24 16:01:45.654
  Apr 20 16:01:45.682: INFO: Pod name wrapped-volume-race-7d7add8a-7026-401f-927b-289b8b8c1039: Found 0 pods out of 5
  E0420 16:01:46.366573      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:47.369162      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:48.367369      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:49.368006      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:50.368317      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 16:01:50.710: INFO: Pod name wrapped-volume-race-7d7add8a-7026-401f-927b-289b8b8c1039: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 04/20/24 16:01:50.711
  STEP: Creating RC which spawns configmap-volume pods @ 04/20/24 16:01:50.765
  Apr 20 16:01:50.799: INFO: Pod name wrapped-volume-race-4839d43c-2353-4e5e-af8d-f8481cc6316f: Found 0 pods out of 5
  E0420 16:01:51.369383      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:52.370352      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:53.372017      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:54.373098      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:55.373205      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 16:01:55.837: INFO: Pod name wrapped-volume-race-4839d43c-2353-4e5e-af8d-f8481cc6316f: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 04/20/24 16:01:55.837
  STEP: Creating RC which spawns configmap-volume pods @ 04/20/24 16:01:55.915
  Apr 20 16:01:56.006: INFO: Pod name wrapped-volume-race-07590364-7681-45cb-ab26-59700c522c64: Found 0 pods out of 5
  E0420 16:01:56.373347      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:57.373879      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:58.373987      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:59.374369      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:02:00.374638      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 16:02:01.043: INFO: Pod name wrapped-volume-race-07590364-7681-45cb-ab26-59700c522c64: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 04/20/24 16:02:01.043
  STEP: deleting ReplicationController wrapped-volume-race-07590364-7681-45cb-ab26-59700c522c64 in namespace emptydir-wrapper-5597, will wait for the garbage collector to delete the pods @ 04/20/24 16:02:01.093
  Apr 20 16:02:01.169: INFO: Deleting ReplicationController wrapped-volume-race-07590364-7681-45cb-ab26-59700c522c64 took: 17.318873ms
  Apr 20 16:02:01.269: INFO: Terminating ReplicationController wrapped-volume-race-07590364-7681-45cb-ab26-59700c522c64 pods took: 100.803131ms
  E0420 16:02:01.374829      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:02:02.374988      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-4839d43c-2353-4e5e-af8d-f8481cc6316f in namespace emptydir-wrapper-5597, will wait for the garbage collector to delete the pods @ 04/20/24 16:02:03.371
  E0420 16:02:03.375887      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 16:02:03.452: INFO: Deleting ReplicationController wrapped-volume-race-4839d43c-2353-4e5e-af8d-f8481cc6316f took: 20.085331ms
  Apr 20 16:02:03.553: INFO: Terminating ReplicationController wrapped-volume-race-4839d43c-2353-4e5e-af8d-f8481cc6316f pods took: 101.243821ms
  E0420 16:02:04.377099      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-7d7add8a-7026-401f-927b-289b8b8c1039 in namespace emptydir-wrapper-5597, will wait for the garbage collector to delete the pods @ 04/20/24 16:02:05.355
  E0420 16:02:05.377055      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 16:02:05.426: INFO: Deleting ReplicationController wrapped-volume-race-7d7add8a-7026-401f-927b-289b8b8c1039 took: 13.973295ms
  Apr 20 16:02:05.527: INFO: Terminating ReplicationController wrapped-volume-race-7d7add8a-7026-401f-927b-289b8b8c1039 pods took: 101.02864ms
  E0420 16:02:06.378000      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Cleaning up the configMaps @ 04/20/24 16:02:06.829
  Apr 20 16:02:07.316: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-5597" for this suite. @ 04/20/24 16:02:07.325
• [22.170 seconds]
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:79
  STEP: Creating a kubernetes client @ 04/20/24 16:02:07.335
  Apr 20 16:02:07.335: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename sysctl @ 04/20/24 16:02:07.338
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 16:02:07.372
  E0420 16:02:07.377947      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 16:02:07.378
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 04/20/24 16:02:07.384
  STEP: Watching for error events or started pod @ 04/20/24 16:02:07.401
  E0420 16:02:08.378390      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:02:09.378546      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for pod completion @ 04/20/24 16:02:09.411
  E0420 16:02:10.379653      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:02:11.379978      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Checking that the pod succeeded @ 04/20/24 16:02:11.433
  STEP: Getting logs from the pod @ 04/20/24 16:02:11.433
  STEP: Checking that the sysctl is actually updated @ 04/20/24 16:02:11.451
  Apr 20 16:02:11.451: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-9056" for this suite. @ 04/20/24 16:02:11.463
• [4.147 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:223
  STEP: Creating a kubernetes client @ 04/20/24 16:02:11.486
  Apr 20 16:02:11.486: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename projected @ 04/20/24 16:02:11.49
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 16:02:11.527
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 16:02:11.534
  STEP: Creating a pod to test downward API volume plugin @ 04/20/24 16:02:11.541
  E0420 16:02:12.380839      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:02:13.380526      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 16:02:13.588
  Apr 20 16:02:13.592: INFO: Trying to get logs from node nok4chie7ate-3 pod downwardapi-volume-8c8ef41d-f8c5-4cb0-a942-a21b843a0a63 container client-container: <nil>
  STEP: delete the pod @ 04/20/24 16:02:13.603
  Apr 20 16:02:13.631: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2508" for this suite. @ 04/20/24 16:02:13.639
• [2.168 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:95
  STEP: Creating a kubernetes client @ 04/20/24 16:02:13.656
  Apr 20 16:02:13.656: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename replication-controller @ 04/20/24 16:02:13.659
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 16:02:13.689
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 16:02:13.693
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 04/20/24 16:02:13.698
  E0420 16:02:14.380698      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:02:15.381084      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: When a replication controller with a matching selector is created @ 04/20/24 16:02:15.766
  STEP: Then the orphan pod is adopted @ 04/20/24 16:02:15.786
  E0420 16:02:16.381458      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 16:02:16.808: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-9617" for this suite. @ 04/20/24 16:02:16.825
• [3.186 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:251
  STEP: Creating a kubernetes client @ 04/20/24 16:02:16.843
  Apr 20 16:02:16.843: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename projected @ 04/20/24 16:02:16.848
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 16:02:16.881
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 16:02:16.886
  STEP: Creating a pod to test downward API volume plugin @ 04/20/24 16:02:16.891
  E0420 16:02:17.382324      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:02:18.382824      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:02:19.383353      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:02:20.383200      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 16:02:20.927
  Apr 20 16:02:20.939: INFO: Trying to get logs from node nok4chie7ate-3 pod downwardapi-volume-923a5ca9-49d3-405b-b0e0-966f8fe64189 container client-container: <nil>
  STEP: delete the pod @ 04/20/24 16:02:20.967
  Apr 20 16:02:21.006: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7282" for this suite. @ 04/20/24 16:02:21.018
• [4.197 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
k8s.io/kubernetes/test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 04/20/24 16:02:21.041
  Apr 20 16:02:21.041: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename conformance-tests @ 04/20/24 16:02:21.046
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 16:02:21.085
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 16:02:21.091
  STEP: Getting node addresses @ 04/20/24 16:02:21.099
  Apr 20 16:02:21.099: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  Apr 20 16:02:21.114: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-3638" for this suite. @ 04/20/24 16:02:21.125
• [0.099 seconds]
------------------------------
SSSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:277
  STEP: Creating a kubernetes client @ 04/20/24 16:02:21.141
  Apr 20 16:02:21.141: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename svcaccounts @ 04/20/24 16:02:21.145
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 16:02:21.182
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 16:02:21.19
  STEP: Creating a pod to test service account token:  @ 04/20/24 16:02:21.196
  E0420 16:02:21.383917      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:02:22.384528      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:02:23.385014      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:02:24.385436      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 16:02:25.244
  Apr 20 16:02:25.252: INFO: Trying to get logs from node nok4chie7ate-3 pod test-pod-b56e2995-f5a4-4ecd-be7d-ebce99605b83 container agnhost-container: <nil>
  STEP: delete the pod @ 04/20/24 16:02:25.269
  Apr 20 16:02:25.295: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-3064" for this suite. @ 04/20/24 16:02:25.306
• [4.176 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/logs.go:114
  STEP: Creating a kubernetes client @ 04/20/24 16:02:25.318
  Apr 20 16:02:25.318: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename kubectl-logs @ 04/20/24 16:02:25.323
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 16:02:25.353
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 16:02:25.357
  STEP: creating an pod @ 04/20/24 16:02:25.361
  Apr 20 16:02:25.362: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-logs-5092 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.47 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  E0420 16:02:25.385711      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 16:02:25.570: INFO: stderr: ""
  Apr 20 16:02:25.570: INFO: stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 04/20/24 16:02:25.57
  Apr 20 16:02:25.570: INFO: Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  E0420 16:02:26.386284      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:02:27.386780      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 16:02:27.593: INFO: Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 04/20/24 16:02:27.594
  Apr 20 16:02:27.596: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-logs-5092 logs logs-generator logs-generator'
  Apr 20 16:02:27.834: INFO: stderr: ""
  Apr 20 16:02:27.834: INFO: stdout: "I0420 16:02:26.311467       1 logs_generator.go:76] 0 POST /api/v1/namespaces/ns/pods/mzq 507\nI0420 16:02:26.509914       1 logs_generator.go:76] 1 POST /api/v1/namespaces/ns/pods/w2b 477\nI0420 16:02:26.710311       1 logs_generator.go:76] 2 GET /api/v1/namespaces/kube-system/pods/r5p 201\nI0420 16:02:26.909918       1 logs_generator.go:76] 3 PUT /api/v1/namespaces/ns/pods/j44 356\nI0420 16:02:27.109449       1 logs_generator.go:76] 4 GET /api/v1/namespaces/kube-system/pods/2cs 444\nI0420 16:02:27.310249       1 logs_generator.go:76] 5 POST /api/v1/namespaces/default/pods/v59s 277\nI0420 16:02:27.510121       1 logs_generator.go:76] 6 POST /api/v1/namespaces/kube-system/pods/tq8p 576\nI0420 16:02:27.709428       1 logs_generator.go:76] 7 POST /api/v1/namespaces/default/pods/4jnl 258\n"
  STEP: limiting log lines @ 04/20/24 16:02:27.834
  Apr 20 16:02:27.835: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-logs-5092 logs logs-generator logs-generator --tail=1'
  Apr 20 16:02:28.047: INFO: stderr: ""
  Apr 20 16:02:28.047: INFO: stdout: "I0420 16:02:27.910342       1 logs_generator.go:76] 8 GET /api/v1/namespaces/ns/pods/b49 290\n"
  Apr 20 16:02:28.047: INFO: got output "I0420 16:02:27.910342       1 logs_generator.go:76] 8 GET /api/v1/namespaces/ns/pods/b49 290\n"
  STEP: limiting log bytes @ 04/20/24 16:02:28.048
  Apr 20 16:02:28.048: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-logs-5092 logs logs-generator logs-generator --limit-bytes=1'
  Apr 20 16:02:28.218: INFO: stderr: ""
  Apr 20 16:02:28.218: INFO: stdout: "I"
  Apr 20 16:02:28.218: INFO: got output "I"
  STEP: exposing timestamps @ 04/20/24 16:02:28.218
  Apr 20 16:02:28.219: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-logs-5092 logs logs-generator logs-generator --tail=1 --timestamps'
  E0420 16:02:28.387956      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 16:02:28.396: INFO: stderr: ""
  Apr 20 16:02:28.396: INFO: stdout: "2024-04-20T16:02:28.309493084Z I0420 16:02:28.309403       1 logs_generator.go:76] 10 GET /api/v1/namespaces/kube-system/pods/ftm 335\n"
  Apr 20 16:02:28.396: INFO: got output "2024-04-20T16:02:28.309493084Z I0420 16:02:28.309403       1 logs_generator.go:76] 10 GET /api/v1/namespaces/kube-system/pods/ftm 335\n"
  STEP: restricting to a time range @ 04/20/24 16:02:28.396
  E0420 16:02:29.388925      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:02:30.389192      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 16:02:30.897: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-logs-5092 logs logs-generator logs-generator --since=1s'
  Apr 20 16:02:31.103: INFO: stderr: ""
  Apr 20 16:02:31.103: INFO: stdout: "I0420 16:02:30.110133       1 logs_generator.go:76] 19 POST /api/v1/namespaces/default/pods/jflp 536\nI0420 16:02:30.309447       1 logs_generator.go:76] 20 GET /api/v1/namespaces/default/pods/76q 385\nI0420 16:02:30.509917       1 logs_generator.go:76] 21 POST /api/v1/namespaces/ns/pods/jcr 350\nI0420 16:02:30.710394       1 logs_generator.go:76] 22 GET /api/v1/namespaces/default/pods/w626 408\nI0420 16:02:30.910475       1 logs_generator.go:76] 23 POST /api/v1/namespaces/kube-system/pods/hxs 213\n"
  Apr 20 16:02:31.104: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-logs-5092 logs logs-generator logs-generator --since=24h'
  Apr 20 16:02:31.274: INFO: stderr: ""
  Apr 20 16:02:31.274: INFO: stdout: "I0420 16:02:26.311467       1 logs_generator.go:76] 0 POST /api/v1/namespaces/ns/pods/mzq 507\nI0420 16:02:26.509914       1 logs_generator.go:76] 1 POST /api/v1/namespaces/ns/pods/w2b 477\nI0420 16:02:26.710311       1 logs_generator.go:76] 2 GET /api/v1/namespaces/kube-system/pods/r5p 201\nI0420 16:02:26.909918       1 logs_generator.go:76] 3 PUT /api/v1/namespaces/ns/pods/j44 356\nI0420 16:02:27.109449       1 logs_generator.go:76] 4 GET /api/v1/namespaces/kube-system/pods/2cs 444\nI0420 16:02:27.310249       1 logs_generator.go:76] 5 POST /api/v1/namespaces/default/pods/v59s 277\nI0420 16:02:27.510121       1 logs_generator.go:76] 6 POST /api/v1/namespaces/kube-system/pods/tq8p 576\nI0420 16:02:27.709428       1 logs_generator.go:76] 7 POST /api/v1/namespaces/default/pods/4jnl 258\nI0420 16:02:27.910342       1 logs_generator.go:76] 8 GET /api/v1/namespaces/ns/pods/b49 290\nI0420 16:02:28.109761       1 logs_generator.go:76] 9 GET /api/v1/namespaces/ns/pods/jht 472\nI0420 16:02:28.309403       1 logs_generator.go:76] 10 GET /api/v1/namespaces/kube-system/pods/ftm 335\nI0420 16:02:28.509757       1 logs_generator.go:76] 11 PUT /api/v1/namespaces/default/pods/wt4k 569\nI0420 16:02:28.710282       1 logs_generator.go:76] 12 PUT /api/v1/namespaces/ns/pods/c92 420\nI0420 16:02:28.910004       1 logs_generator.go:76] 13 PUT /api/v1/namespaces/kube-system/pods/vm6c 251\nI0420 16:02:29.109369       1 logs_generator.go:76] 14 POST /api/v1/namespaces/default/pods/dj4 417\nI0420 16:02:29.310028       1 logs_generator.go:76] 15 GET /api/v1/namespaces/ns/pods/4jl 513\nI0420 16:02:29.509415       1 logs_generator.go:76] 16 GET /api/v1/namespaces/default/pods/xlq 565\nI0420 16:02:29.710258       1 logs_generator.go:76] 17 POST /api/v1/namespaces/default/pods/7vdq 339\nI0420 16:02:29.909610       1 logs_generator.go:76] 18 POST /api/v1/namespaces/default/pods/htp9 218\nI0420 16:02:30.110133       1 logs_generator.go:76] 19 POST /api/v1/namespaces/default/pods/jflp 536\nI0420 16:02:30.309447       1 logs_generator.go:76] 20 GET /api/v1/namespaces/default/pods/76q 385\nI0420 16:02:30.509917       1 logs_generator.go:76] 21 POST /api/v1/namespaces/ns/pods/jcr 350\nI0420 16:02:30.710394       1 logs_generator.go:76] 22 GET /api/v1/namespaces/default/pods/w626 408\nI0420 16:02:30.910475       1 logs_generator.go:76] 23 POST /api/v1/namespaces/kube-system/pods/hxs 213\nI0420 16:02:31.109403       1 logs_generator.go:76] 24 PUT /api/v1/namespaces/kube-system/pods/mfg8 358\n"
  Apr 20 16:02:31.275: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3670386335 --namespace=kubectl-logs-5092 delete pod logs-generator'
  E0420 16:02:31.389425      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:02:32.389891      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 16:02:32.719: INFO: stderr: ""
  Apr 20 16:02:32.720: INFO: stdout: "pod \"logs-generator\" deleted\n"
  Apr 20 16:02:32.720: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-5092" for this suite. @ 04/20/24 16:02:32.735
• [7.437 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:376
  STEP: Creating a kubernetes client @ 04/20/24 16:02:32.756
  Apr 20 16:02:32.756: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename projected @ 04/20/24 16:02:32.763
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 16:02:32.8
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 16:02:32.808
  STEP: Creating configMap with name projected-configmap-test-volume-26ba5789-91c9-4472-9708-b9b661ea02ab @ 04/20/24 16:02:32.815
  STEP: Creating a pod to test consume configMaps @ 04/20/24 16:02:32.823
  E0420 16:02:33.391549      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:02:34.391391      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 16:02:34.859
  Apr 20 16:02:34.872: INFO: Trying to get logs from node nok4chie7ate-3 pod pod-projected-configmaps-6bc832c6-783e-4620-bf8c-e1648a06349a container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 04/20/24 16:02:34.89
  Apr 20 16:02:34.934: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2856" for this suite. @ 04/20/24 16:02:34.945
• [2.209 seconds]
------------------------------
SSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:450
  STEP: Creating a kubernetes client @ 04/20/24 16:02:34.965
  Apr 20 16:02:34.965: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename taint-multiple-pods @ 04/20/24 16:02:34.969
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 16:02:34.998
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 16:02:35.003
  Apr 20 16:02:35.007: INFO: Waiting up to 1m0s for all nodes to be ready
  E0420 16:02:35.391835      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:02:36.392901      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:02:37.393104      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:02:38.393893      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:02:39.394397      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:02:40.394593      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:02:41.395896      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:02:42.396205      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:02:43.396784      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:02:44.396817      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:02:45.397950      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:02:46.398740      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:02:47.400971      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:02:48.401512      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:02:49.402533      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:02:50.402870      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:02:51.403250      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:02:52.404147      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:02:53.404469      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:02:54.405521      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:02:55.406229      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:02:56.406752      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:02:57.407520      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:02:58.408321      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:02:59.408441      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:03:00.408753      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:03:01.409032      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:03:02.409925      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:03:03.410089      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:03:04.411509      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:03:05.411962      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:03:06.412783      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:03:07.413834      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:03:08.414123      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:03:09.415203      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:03:10.415448      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:03:11.415892      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:03:12.416188      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:03:13.416772      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:03:14.417630      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:03:15.417928      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:03:16.418258      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:03:17.418551      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:03:18.418988      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:03:19.419781      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:03:20.420031      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:03:21.420324      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:03:22.421889      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:03:23.422503      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:03:24.422955      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:03:25.423965      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:03:26.424292      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:03:27.425370      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:03:28.425591      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:03:29.426006      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:03:30.426291      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:03:31.427123      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:03:32.427929      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:03:33.428253      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:03:34.428478      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 16:03:35.009: INFO: Waiting for terminating namespaces to be deleted...
  Apr 20 16:03:35.017: INFO: Starting informer...
  STEP: Starting pods... @ 04/20/24 16:03:35.017
  Apr 20 16:03:35.255: INFO: Pod1 is running on nok4chie7ate-3. Tainting Node
  E0420 16:03:35.429260      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:03:36.429978      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:03:37.430959      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 16:03:37.499: INFO: Pod2 is running on nok4chie7ate-3. Tainting Node
  STEP: Trying to apply a taint on the Node @ 04/20/24 16:03:37.499
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 04/20/24 16:03:37.542
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 04/20/24 16:03:37.577
  E0420 16:03:38.431122      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:03:39.431830      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:03:40.432163      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:03:41.432787      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:03:42.433813      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 16:03:43.078: INFO: Noticed Pod "taint-eviction-b1" gets evicted.
  E0420 16:03:43.434210      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:03:44.434227      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:03:45.434798      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:03:46.435399      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:03:47.436256      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:03:48.436972      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:03:49.437302      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:03:50.438495      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:03:51.439996      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:03:52.440189      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:03:53.441588      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:03:54.441636      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:03:55.441967      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:03:56.442844      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:03:57.443179      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:03:58.444322      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:03:59.444562      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:04:00.445551      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:04:01.446179      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:04:02.447008      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 16:04:03.175: INFO: Noticed Pod "taint-eviction-b2" gets evicted.
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 04/20/24 16:04:03.208
  Apr 20 16:04:03.218: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-5858" for this suite. @ 04/20/24 16:04:03.233
• [88.290 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 04/20/24 16:04:03.257
  Apr 20 16:04:03.257: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename container-runtime @ 04/20/24 16:04:03.262
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 16:04:03.33
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 16:04:03.335
  STEP: create the container @ 04/20/24 16:04:03.34
  W0420 16:04:03.358480      13 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 04/20/24 16:04:03.358
  E0420 16:04:03.447723      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:04:04.448742      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 04/20/24 16:04:05.385
  STEP: the container should be terminated @ 04/20/24 16:04:05.392
  STEP: the termination message should be set @ 04/20/24 16:04:05.392
  Apr 20 16:04:05.392: INFO: Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 04/20/24 16:04:05.392
  Apr 20 16:04:05.420: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-1113" for this suite. @ 04/20/24 16:04:05.43
• [2.187 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1015
  STEP: Creating a kubernetes client @ 04/20/24 16:04:05.443
  Apr 20 16:04:05.443: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  E0420 16:04:05.449025      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Building a namespace api object, basename resourcequota @ 04/20/24 16:04:05.481
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 16:04:05.575
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 16:04:05.582
  STEP: Creating resourceQuota "e2e-rq-status-wsxft" @ 04/20/24 16:04:05.595
  Apr 20 16:04:05.609: INFO: Resource quota "e2e-rq-status-wsxft" reports spec: hard cpu limit of 500m
  Apr 20 16:04:05.609: INFO: Resource quota "e2e-rq-status-wsxft" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-wsxft" /status @ 04/20/24 16:04:05.61
  STEP: Confirm /status for "e2e-rq-status-wsxft" resourceQuota via watch @ 04/20/24 16:04:05.629
  Apr 20 16:04:05.631: INFO: observed resourceQuota "e2e-rq-status-wsxft" in namespace "resourcequota-2819" with hard status: v1.ResourceList(nil)
  Apr 20 16:04:05.632: INFO: Found resourceQuota "e2e-rq-status-wsxft" in namespace "resourcequota-2819" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  Apr 20 16:04:05.632: INFO: ResourceQuota "e2e-rq-status-wsxft" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 04/20/24 16:04:05.637
  Apr 20 16:04:05.657: INFO: Resource quota "e2e-rq-status-wsxft" reports spec: hard cpu limit of 1
  Apr 20 16:04:05.657: INFO: Resource quota "e2e-rq-status-wsxft" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-wsxft" /status @ 04/20/24 16:04:05.657
  STEP: Confirm /status for "e2e-rq-status-wsxft" resourceQuota via watch @ 04/20/24 16:04:05.667
  Apr 20 16:04:05.670: INFO: observed resourceQuota "e2e-rq-status-wsxft" in namespace "resourcequota-2819" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  Apr 20 16:04:05.670: INFO: Found resourceQuota "e2e-rq-status-wsxft" in namespace "resourcequota-2819" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  Apr 20 16:04:05.670: INFO: ResourceQuota "e2e-rq-status-wsxft" /status was patched
  STEP: Get "e2e-rq-status-wsxft" /status @ 04/20/24 16:04:05.67
  Apr 20 16:04:05.679: INFO: Resourcequota "e2e-rq-status-wsxft" reports status: hard cpu of 1
  Apr 20 16:04:05.679: INFO: Resourcequota "e2e-rq-status-wsxft" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-wsxft" /status before checking Spec is unchanged @ 04/20/24 16:04:05.686
  Apr 20 16:04:05.694: INFO: Resourcequota "e2e-rq-status-wsxft" reports status: hard cpu of 2
  Apr 20 16:04:05.695: INFO: Resourcequota "e2e-rq-status-wsxft" reports status: hard memory of 2Gi
  Apr 20 16:04:05.697: INFO: Found resourceQuota "e2e-rq-status-wsxft" in namespace "resourcequota-2819" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  Apr 20 16:04:05.702: INFO: ResourceQuota "e2e-rq-status-wsxft" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wsxft", GenerateName:"", Namespace:"resourcequota-2819", SelfLink:"", UID:"b9fd4aac-a4d1-4b48-9ee3-5bc8958922d9", ResourceVersion:"78670", Generation:0, CreationTimestamp:time.Date(2024, time.April, 20, 16, 4, 5, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wsxft"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 16, 4, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040e6768), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 16, 4, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040e6798), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 16, 4, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040e67c8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0420 16:04:06.450276      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:04:07.450979      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:04:08.451861      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:04:09.454193      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:04:10.453245      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 16:04:10.707: INFO: ResourceQuota "e2e-rq-status-wsxft" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wsxft", GenerateName:"", Namespace:"resourcequota-2819", SelfLink:"", UID:"b9fd4aac-a4d1-4b48-9ee3-5bc8958922d9", ResourceVersion:"78670", Generation:0, CreationTimestamp:time.Date(2024, time.April, 20, 16, 4, 5, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wsxft"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 16, 4, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040e6b40), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 16, 4, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040e6ba0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 16, 4, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040e6be8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0420 16:04:11.453497      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:04:12.454282      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:04:13.455305      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:04:14.455003      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:04:15.455616      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 16:04:15.710: INFO: ResourceQuota "e2e-rq-status-wsxft" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wsxft", GenerateName:"", Namespace:"resourcequota-2819", SelfLink:"", UID:"b9fd4aac-a4d1-4b48-9ee3-5bc8958922d9", ResourceVersion:"78670", Generation:0, CreationTimestamp:time.Date(2024, time.April, 20, 16, 4, 5, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wsxft"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 16, 4, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040e6f60), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 16, 4, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040e6fa8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 16, 4, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040e6fd8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0420 16:04:16.456216      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:04:17.456822      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:04:18.457195      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:04:19.458064      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:04:20.458305      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 16:04:20.711: INFO: ResourceQuota "e2e-rq-status-wsxft" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wsxft", GenerateName:"", Namespace:"resourcequota-2819", SelfLink:"", UID:"b9fd4aac-a4d1-4b48-9ee3-5bc8958922d9", ResourceVersion:"78670", Generation:0, CreationTimestamp:time.Date(2024, time.April, 20, 16, 4, 5, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wsxft"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 16, 4, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040e73c8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 16, 4, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040e7410), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 16, 4, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040e7440), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0420 16:04:21.459044      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:04:22.459543      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:04:23.460266      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:04:24.460339      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:04:25.461088      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 16:04:25.709: INFO: ResourceQuota "e2e-rq-status-wsxft" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wsxft", GenerateName:"", Namespace:"resourcequota-2819", SelfLink:"", UID:"b9fd4aac-a4d1-4b48-9ee3-5bc8958922d9", ResourceVersion:"78670", Generation:0, CreationTimestamp:time.Date(2024, time.April, 20, 16, 4, 5, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wsxft"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 16, 4, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000dc9a40), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 16, 4, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000dc9a70), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 16, 4, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000dc9aa0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0420 16:04:26.462426      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:04:27.463329      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:04:28.463507      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:04:29.464904      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:04:30.464212      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 16:04:30.711: INFO: ResourceQuota "e2e-rq-status-wsxft" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wsxft", GenerateName:"", Namespace:"resourcequota-2819", SelfLink:"", UID:"b9fd4aac-a4d1-4b48-9ee3-5bc8958922d9", ResourceVersion:"78670", Generation:0, CreationTimestamp:time.Date(2024, time.April, 20, 16, 4, 5, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wsxft"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 16, 4, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000dc9e30), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 16, 4, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000dc9e90), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 16, 4, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000dc9ed8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0420 16:04:31.465071      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:04:32.465832      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:04:33.466528      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:04:34.466410      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:04:35.466624      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 16:04:35.706: INFO: ResourceQuota "e2e-rq-status-wsxft" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wsxft", GenerateName:"", Namespace:"resourcequota-2819", SelfLink:"", UID:"b9fd4aac-a4d1-4b48-9ee3-5bc8958922d9", ResourceVersion:"78670", Generation:0, CreationTimestamp:time.Date(2024, time.April, 20, 16, 4, 5, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wsxft"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 16, 4, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040e7998), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 16, 4, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040e79c8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 16, 4, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040e79f8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0420 16:04:36.467343      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:04:37.467423      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:04:38.467821      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:04:39.469412      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:04:40.470163      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 16:04:40.709: INFO: ResourceQuota "e2e-rq-status-wsxft" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wsxft", GenerateName:"", Namespace:"resourcequota-2819", SelfLink:"", UID:"b9fd4aac-a4d1-4b48-9ee3-5bc8958922d9", ResourceVersion:"78670", Generation:0, CreationTimestamp:time.Date(2024, time.April, 20, 16, 4, 5, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wsxft"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 16, 4, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040e7c20), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 16, 4, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040e7c50), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 16, 4, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0040e7c80), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0420 16:04:41.470448      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:04:42.472507      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:04:43.471532      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:04:44.473212      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:04:45.473199      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 16:04:45.710: INFO: ResourceQuota "e2e-rq-status-wsxft" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wsxft", GenerateName:"", Namespace:"resourcequota-2819", SelfLink:"", UID:"b9fd4aac-a4d1-4b48-9ee3-5bc8958922d9", ResourceVersion:"78670", Generation:0, CreationTimestamp:time.Date(2024, time.April, 20, 16, 4, 5, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wsxft"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 16, 4, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c10000), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 16, 4, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c10168), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 16, 4, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c101b0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0420 16:04:46.473966      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:04:47.473790      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:04:48.474021      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:04:49.474203      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:04:50.474500      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 16:04:50.705: INFO: ResourceQuota "e2e-rq-status-wsxft" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wsxft", GenerateName:"", Namespace:"resourcequota-2819", SelfLink:"", UID:"b9fd4aac-a4d1-4b48-9ee3-5bc8958922d9", ResourceVersion:"78670", Generation:0, CreationTimestamp:time.Date(2024, time.April, 20, 16, 4, 5, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wsxft"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 16, 4, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c105e8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 16, 4, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c10648), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 16, 4, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c106c0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0420 16:04:51.474980      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:04:52.475275      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:04:53.476266      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:04:54.476627      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:04:55.477253      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 16:04:55.711: INFO: ResourceQuota "e2e-rq-status-wsxft" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wsxft", GenerateName:"", Namespace:"resourcequota-2819", SelfLink:"", UID:"b9fd4aac-a4d1-4b48-9ee3-5bc8958922d9", ResourceVersion:"78670", Generation:0, CreationTimestamp:time.Date(2024, time.April, 20, 16, 4, 5, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wsxft"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 16, 4, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c10b58), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 16, 4, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c10bd0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 16, 4, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c10c60), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0420 16:04:56.478189      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:04:57.480186      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:04:58.479218      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:04:59.479735      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:05:00.480193      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 16:05:00.708: INFO: ResourceQuota "e2e-rq-status-wsxft" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wsxft", GenerateName:"", Namespace:"resourcequota-2819", SelfLink:"", UID:"b9fd4aac-a4d1-4b48-9ee3-5bc8958922d9", ResourceVersion:"78670", Generation:0, CreationTimestamp:time.Date(2024, time.April, 20, 16, 4, 5, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wsxft"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 16, 4, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c111e8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 16, 4, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c11230), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 16, 4, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c11260), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0420 16:05:01.480500      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:05:02.481266      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:05:03.482237      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:05:04.482401      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:05:05.482483      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 16:05:05.707: INFO: ResourceQuota "e2e-rq-status-wsxft" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wsxft", GenerateName:"", Namespace:"resourcequota-2819", SelfLink:"", UID:"b9fd4aac-a4d1-4b48-9ee3-5bc8958922d9", ResourceVersion:"78670", Generation:0, CreationTimestamp:time.Date(2024, time.April, 20, 16, 4, 5, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wsxft"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 16, 4, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c117b8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 16, 4, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c11800), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 16, 4, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c11830), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0420 16:05:06.482940      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:05:07.483128      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:05:08.483286      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:05:09.484203      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:05:10.484532      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 16:05:10.711: INFO: ResourceQuota "e2e-rq-status-wsxft" Spec was unchanged and /status reset
  Apr 20 16:05:10.711: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2819" for this suite. @ 04/20/24 16:05:10.725
• [65.296 seconds]
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:237
  STEP: Creating a kubernetes client @ 04/20/24 16:05:10.741
  Apr 20 16:05:10.741: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename downward-api @ 04/20/24 16:05:10.747
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 16:05:10.792
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 16:05:10.798
  STEP: Creating a pod to test downward API volume plugin @ 04/20/24 16:05:10.806
  E0420 16:05:11.485333      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:05:12.485721      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:05:13.490311      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:05:14.491099      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 16:05:14.855
  Apr 20 16:05:14.877: INFO: Trying to get logs from node nok4chie7ate-3 pod downwardapi-volume-fc2af34e-6d4e-4392-babe-c5b9c0d31310 container client-container: <nil>
  STEP: delete the pod @ 04/20/24 16:05:14.923
  Apr 20 16:05:14.955: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6182" for this suite. @ 04/20/24 16:05:14.963
• [4.234 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:199
  STEP: Creating a kubernetes client @ 04/20/24 16:05:14.975
  Apr 20 16:05:14.975: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename custom-resource-definition @ 04/20/24 16:05:14.978
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 16:05:15.008
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 16:05:15.014
  STEP: fetching the /apis discovery document @ 04/20/24 16:05:15.018
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 04/20/24 16:05:15.02
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 04/20/24 16:05:15.02
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 04/20/24 16:05:15.02
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 04/20/24 16:05:15.022
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 04/20/24 16:05:15.022
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 04/20/24 16:05:15.024
  Apr 20 16:05:15.024: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-7918" for this suite. @ 04/20/24 16:05:15.033
• [0.068 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:100
  STEP: Creating a kubernetes client @ 04/20/24 16:05:15.044
  Apr 20 16:05:15.044: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename emptydir @ 04/20/24 16:05:15.047
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 16:05:15.082
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 16:05:15.088
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 04/20/24 16:05:15.092
  E0420 16:05:15.490725      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:05:16.491006      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:05:17.491864      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:05:18.492757      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 16:05:19.137
  Apr 20 16:05:19.145: INFO: Trying to get logs from node nok4chie7ate-3 pod pod-77cd3079-a639-4fe2-897b-15f15bfb29a4 container test-container: <nil>
  STEP: delete the pod @ 04/20/24 16:05:19.166
  Apr 20 16:05:19.209: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3509" for this suite. @ 04/20/24 16:05:19.222
• [4.198 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:962
  STEP: Creating a kubernetes client @ 04/20/24 16:05:19.243
  Apr 20 16:05:19.243: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename statefulset @ 04/20/24 16:05:19.247
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 16:05:19.293
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 16:05:19.3
  STEP: Creating service test in namespace statefulset-8957 @ 04/20/24 16:05:19.306
  Apr 20 16:05:19.345: INFO: Found 0 stateful pods, waiting for 1
  E0420 16:05:19.493612      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:05:20.493942      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:05:21.494183      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:05:22.495060      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:05:23.494833      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:05:24.495368      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:05:25.495845      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:05:26.496016      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:05:27.496371      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:05:28.496576      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 16:05:29.354: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 04/20/24 16:05:29.371
  W0420 16:05:29.405057      13 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
  Apr 20 16:05:29.428: INFO: Found 1 stateful pods, waiting for 2
  E0420 16:05:29.496802      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:05:30.497197      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:05:31.498164      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:05:32.498476      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:05:33.499030      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:05:34.500606      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:05:35.500120      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:05:36.500834      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:05:37.501245      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:05:38.501507      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 16:05:39.430: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Apr 20 16:05:39.430: INFO: Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 04/20/24 16:05:39.447
  STEP: Delete all of the StatefulSets @ 04/20/24 16:05:39.459
  STEP: Verify that StatefulSets have been deleted @ 04/20/24 16:05:39.481
  Apr 20 16:05:39.493: INFO: Deleting all statefulset in ns statefulset-8957
  E0420 16:05:39.501935      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 16:05:39.520: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-8957" for this suite. @ 04/20/24 16:05:39.532
• [20.320 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 04/20/24 16:05:39.564
  Apr 20 16:05:39.564: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename certificates @ 04/20/24 16:05:39.59
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 16:05:39.661
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 16:05:39.666
  E0420 16:05:40.503037      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: getting /apis @ 04/20/24 16:05:41.054
  STEP: getting /apis/certificates.k8s.io @ 04/20/24 16:05:41.065
  STEP: getting /apis/certificates.k8s.io/v1 @ 04/20/24 16:05:41.068
  STEP: creating @ 04/20/24 16:05:41.07
  STEP: getting @ 04/20/24 16:05:41.106
  STEP: listing @ 04/20/24 16:05:41.112
  STEP: watching @ 04/20/24 16:05:41.119
  Apr 20 16:05:41.119: INFO: starting watch
  STEP: patching @ 04/20/24 16:05:41.122
  STEP: updating @ 04/20/24 16:05:41.135
  Apr 20 16:05:41.145: INFO: waiting for watch events with expected annotations
  Apr 20 16:05:41.146: INFO: saw patched and updated annotations
  STEP: getting /approval @ 04/20/24 16:05:41.147
  STEP: patching /approval @ 04/20/24 16:05:41.155
  STEP: updating /approval @ 04/20/24 16:05:41.169
  STEP: getting /status @ 04/20/24 16:05:41.181
  STEP: patching /status @ 04/20/24 16:05:41.187
  STEP: updating /status @ 04/20/24 16:05:41.205
  STEP: deleting @ 04/20/24 16:05:41.223
  STEP: deleting a collection @ 04/20/24 16:05:41.247
  Apr 20 16:05:41.279: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-4374" for this suite. @ 04/20/24 16:05:41.286
• [1.734 seconds]
------------------------------
SS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:531
  STEP: Creating a kubernetes client @ 04/20/24 16:05:41.298
  Apr 20 16:05:41.298: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename svcaccounts @ 04/20/24 16:05:41.301
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 16:05:41.334
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 16:05:41.339
  Apr 20 16:05:41.372: INFO: created pod
  E0420 16:05:41.504139      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:05:42.504897      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:05:43.505491      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:05:44.507244      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 16:05:45.4
  E0420 16:05:45.507326      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:05:46.508158      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:05:47.514819      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:05:48.510625      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:05:49.516213      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:05:50.514534      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:05:51.514961      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:05:52.514900      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:05:53.515858      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:05:54.516208      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:05:55.516793      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:05:56.517143      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:05:57.517504      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:05:58.517943      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:05:59.518069      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:06:00.518405      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:06:01.518746      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:06:02.518788      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:06:03.519000      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:06:04.518968      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:06:05.520161      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:06:06.521184      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:06:07.521414      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:06:08.522251      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:06:09.522488      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:06:10.522864      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:06:11.523218      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:06:12.523427      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:06:13.523887      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:06:14.525080      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 16:06:15.402: INFO: polling logs
  Apr 20 16:06:15.426: INFO: Pod logs: 
  I0420 16:05:42.093429       1 log.go:245] OK: Got token
  I0420 16:05:42.095575       1 log.go:245] validating with in-cluster discovery
  I0420 16:05:42.098607       1 log.go:245] OK: got issuer https://kubernetes.default.svc.cluster.local
  I0420 16:05:42.098698       1 log.go:245] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-5824:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000297990), NotBefore:(*jwt.NumericDate)(0xc000297a78), IssuedAt:(*jwt.NumericDate)(0xc0002979a0), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-5824", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"1f41ac8d-7c62-4f50-bbf6-a7f7330a9375"}}}
  I0420 16:05:42.137000       1 log.go:245] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc.cluster.local
  I0420 16:05:42.153932       1 log.go:245] OK: Validated signature on JWT
  I0420 16:05:42.154296       1 log.go:245] OK: Got valid claims from token!
  I0420 16:05:42.154793       1 log.go:245] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-5824:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc0000b9720), NotBefore:(*jwt.NumericDate)(0xc0000b9758), IssuedAt:(*jwt.NumericDate)(0xc0000b9728), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-5824", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"1f41ac8d-7c62-4f50-bbf6-a7f7330a9375"}}}

  Apr 20 16:06:15.427: INFO: completed pod
  Apr 20 16:06:15.445: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-5824" for this suite. @ 04/20/24 16:06:15.461
• [34.180 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:115
  STEP: Creating a kubernetes client @ 04/20/24 16:06:15.482
  Apr 20 16:06:15.482: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename var-expansion @ 04/20/24 16:06:15.49
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 16:06:15.518
  E0420 16:06:15.524487      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 16:06:15.524
  STEP: Creating a pod to test substitution in volume subpath @ 04/20/24 16:06:15.532
  E0420 16:06:16.525276      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:06:17.525213      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:06:18.525430      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:06:19.526028      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 16:06:19.583
  Apr 20 16:06:19.592: INFO: Trying to get logs from node nok4chie7ate-3 pod var-expansion-6e88cc72-abf3-4e4c-899d-22e3d5ac1f59 container dapi-container: <nil>
  STEP: delete the pod @ 04/20/24 16:06:19.607
  Apr 20 16:06:19.650: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-4859" for this suite. @ 04/20/24 16:06:19.665
• [4.198 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 04/20/24 16:06:19.681
  Apr 20 16:06:19.681: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename daemonsets @ 04/20/24 16:06:19.684
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 16:06:19.715
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 16:06:19.722
  STEP: Creating simple DaemonSet "daemon-set" @ 04/20/24 16:06:19.777
  STEP: Check that daemon pods launch on every node of the cluster. @ 04/20/24 16:06:19.789
  Apr 20 16:06:19.810: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 20 16:06:19.810: INFO: Node nok4chie7ate-1 is running 0 daemon pod, expected 1
  E0420 16:06:20.526213      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 16:06:20.805: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 20 16:06:20.805: INFO: Node nok4chie7ate-1 is running 0 daemon pod, expected 1
  E0420 16:06:21.526528      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 16:06:21.814: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Apr 20 16:06:21.814: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 04/20/24 16:06:21.825
  Apr 20 16:06:21.891: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Apr 20 16:06:21.891: INFO: Node nok4chie7ate-2 is running 0 daemon pod, expected 1
  E0420 16:06:22.527937      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 16:06:22.894: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Apr 20 16:06:22.895: INFO: Node nok4chie7ate-2 is running 0 daemon pod, expected 1
  E0420 16:06:23.529108      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 16:06:23.878: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Apr 20 16:06:23.878: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 04/20/24 16:06:23.891
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4793, will wait for the garbage collector to delete the pods @ 04/20/24 16:06:23.891
  Apr 20 16:06:23.962: INFO: Deleting DaemonSet.extensions daemon-set took: 12.482651ms
  Apr 20 16:06:24.064: INFO: Terminating DaemonSet.extensions daemon-set pods took: 101.762201ms
  E0420 16:06:24.529388      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 16:06:25.374: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 20 16:06:25.374: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Apr 20 16:06:25.381: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"79269"},"items":null}

  Apr 20 16:06:25.388: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"79269"},"items":null}

  Apr 20 16:06:25.419: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-4793" for this suite. @ 04/20/24 16:06:25.429
• [5.760 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:106
  STEP: Creating a kubernetes client @ 04/20/24 16:06:25.446
  Apr 20 16:06:25.446: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename runtimeclass @ 04/20/24 16:06:25.453
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 16:06:25.52
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 16:06:25.526
  E0420 16:06:25.529453      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:06:26.530030      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:06:27.531348      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 16:06:27.595: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-9360" for this suite. @ 04/20/24 16:06:27.608
• [2.179 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:160
  STEP: Creating a kubernetes client @ 04/20/24 16:06:27.681
  Apr 20 16:06:27.681: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename emptydir @ 04/20/24 16:06:27.684
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 16:06:27.719
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 16:06:27.725
  STEP: Creating a pod to test emptydir volume type on node default medium @ 04/20/24 16:06:27.73
  E0420 16:06:28.531389      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:06:29.531892      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:06:30.532327      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:06:31.532185      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 16:06:31.769
  Apr 20 16:06:31.777: INFO: Trying to get logs from node nok4chie7ate-3 pod pod-a9ee8365-d7da-460f-b905-feeabc373c5f container test-container: <nil>
  STEP: delete the pod @ 04/20/24 16:06:31.793
  Apr 20 16:06:31.824: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1253" for this suite. @ 04/20/24 16:06:31.835
• [4.170 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:134
  STEP: Creating a kubernetes client @ 04/20/24 16:06:31.852
  Apr 20 16:06:31.852: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename kubelet-test @ 04/20/24 16:06:31.855
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 16:06:31.895
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 16:06:31.903
  Apr 20 16:06:31.948: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-1735" for this suite. @ 04/20/24 16:06:31.959
• [0.122 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 04/20/24 16:06:31.975
  Apr 20 16:06:31.975: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename secrets @ 04/20/24 16:06:31.978
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 16:06:32.048
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 16:06:32.053
  STEP: Creating secret with name secret-test-d8c62133-6d1c-4de9-a784-48bb76160b98 @ 04/20/24 16:06:32.105
  STEP: Creating a pod to test consume secrets @ 04/20/24 16:06:32.113
  E0420 16:06:32.533159      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:06:33.534007      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:06:34.534993      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:06:35.536407      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 16:06:36.158
  Apr 20 16:06:36.168: INFO: Trying to get logs from node nok4chie7ate-3 pod pod-secrets-41fa7df6-7fbb-47fb-b8d7-573d05c1fa16 container secret-volume-test: <nil>
  STEP: delete the pod @ 04/20/24 16:06:36.187
  Apr 20 16:06:36.224: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6528" for this suite. @ 04/20/24 16:06:36.234
  STEP: Destroying namespace "secret-namespace-6210" for this suite. @ 04/20/24 16:06:36.248
• [4.285 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 04/20/24 16:06:36.261
  Apr 20 16:06:36.261: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename pods @ 04/20/24 16:06:36.263
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 16:06:36.295
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 16:06:36.299
  STEP: creating the pod @ 04/20/24 16:06:36.304
  STEP: setting up watch @ 04/20/24 16:06:36.305
  STEP: submitting the pod to kubernetes @ 04/20/24 16:06:36.412
  STEP: verifying the pod is in kubernetes @ 04/20/24 16:06:36.434
  STEP: verifying pod creation was observed @ 04/20/24 16:06:36.445
  E0420 16:06:36.537328      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:06:37.538120      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 04/20/24 16:06:38.474
  STEP: verifying pod deletion was observed @ 04/20/24 16:06:38.49
  E0420 16:06:38.538444      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:06:39.538847      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 16:06:40.045: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1260" for this suite. @ 04/20/24 16:06:40.053
• [3.805 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/controller_revision.go:126
  STEP: Creating a kubernetes client @ 04/20/24 16:06:40.067
  Apr 20 16:06:40.067: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename controllerrevisions @ 04/20/24 16:06:40.07
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 16:06:40.105
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 16:06:40.109
  STEP: Creating DaemonSet "e2e-cvjkl-daemon-set" @ 04/20/24 16:06:40.152
  STEP: Check that daemon pods launch on every node of the cluster. @ 04/20/24 16:06:40.164
  Apr 20 16:06:40.177: INFO: Number of nodes with available pods controlled by daemonset e2e-cvjkl-daemon-set: 0
  Apr 20 16:06:40.177: INFO: Node nok4chie7ate-1 is running 0 daemon pod, expected 1
  E0420 16:06:40.539477      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 16:06:41.183: INFO: Number of nodes with available pods controlled by daemonset e2e-cvjkl-daemon-set: 2
  Apr 20 16:06:41.183: INFO: Node nok4chie7ate-2 is running 0 daemon pod, expected 1
  E0420 16:06:41.540438      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 16:06:42.183: INFO: Number of nodes with available pods controlled by daemonset e2e-cvjkl-daemon-set: 3
  Apr 20 16:06:42.183: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset e2e-cvjkl-daemon-set
  STEP: Confirm DaemonSet "e2e-cvjkl-daemon-set" successfully created with "daemonset-name=e2e-cvjkl-daemon-set" label @ 04/20/24 16:06:42.189
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-cvjkl-daemon-set" @ 04/20/24 16:06:42.203
  Apr 20 16:06:42.211: INFO: Located ControllerRevision: "e2e-cvjkl-daemon-set-79cdc8d685"
  STEP: Patching ControllerRevision "e2e-cvjkl-daemon-set-79cdc8d685" @ 04/20/24 16:06:42.22
  Apr 20 16:06:42.243: INFO: e2e-cvjkl-daemon-set-79cdc8d685 has been patched
  STEP: Create a new ControllerRevision @ 04/20/24 16:06:42.243
  Apr 20 16:06:42.256: INFO: Created ControllerRevision: e2e-cvjkl-daemon-set-5c647b7b8f
  STEP: Confirm that there are two ControllerRevisions @ 04/20/24 16:06:42.256
  Apr 20 16:06:42.257: INFO: Requesting list of ControllerRevisions to confirm quantity
  Apr 20 16:06:42.264: INFO: Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-cvjkl-daemon-set-79cdc8d685" @ 04/20/24 16:06:42.265
  STEP: Confirm that there is only one ControllerRevision @ 04/20/24 16:06:42.28
  Apr 20 16:06:42.280: INFO: Requesting list of ControllerRevisions to confirm quantity
  Apr 20 16:06:42.288: INFO: Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-cvjkl-daemon-set-5c647b7b8f" @ 04/20/24 16:06:42.295
  Apr 20 16:06:42.314: INFO: e2e-cvjkl-daemon-set-5c647b7b8f has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 04/20/24 16:06:42.314
  W0420 16:06:42.330127      13 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 04/20/24 16:06:42.33
  Apr 20 16:06:42.330: INFO: Requesting list of ControllerRevisions to confirm quantity
  E0420 16:06:42.540461      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 16:06:43.331: INFO: Requesting list of ControllerRevisions to confirm quantity
  Apr 20 16:06:43.340: INFO: Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-cvjkl-daemon-set-5c647b7b8f=updated" @ 04/20/24 16:06:43.341
  STEP: Confirm that there is only one ControllerRevision @ 04/20/24 16:06:43.361
  Apr 20 16:06:43.361: INFO: Requesting list of ControllerRevisions to confirm quantity
  Apr 20 16:06:43.366: INFO: Found 1 ControllerRevisions
  Apr 20 16:06:43.376: INFO: ControllerRevision "e2e-cvjkl-daemon-set-778f954cd8" has revision 3
  STEP: Deleting DaemonSet "e2e-cvjkl-daemon-set" @ 04/20/24 16:06:43.384
  STEP: deleting DaemonSet.extensions e2e-cvjkl-daemon-set in namespace controllerrevisions-574, will wait for the garbage collector to delete the pods @ 04/20/24 16:06:43.384
  Apr 20 16:06:43.452: INFO: Deleting DaemonSet.extensions e2e-cvjkl-daemon-set took: 12.288811ms
  E0420 16:06:43.541585      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 16:06:43.552: INFO: Terminating DaemonSet.extensions e2e-cvjkl-daemon-set pods took: 100.41907ms
  E0420 16:06:44.542404      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:06:45.543380      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 16:06:46.461: INFO: Number of nodes with available pods controlled by daemonset e2e-cvjkl-daemon-set: 0
  Apr 20 16:06:46.461: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset e2e-cvjkl-daemon-set
  Apr 20 16:06:46.466: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"79539"},"items":null}

  Apr 20 16:06:46.471: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"79539"},"items":null}

  Apr 20 16:06:46.497: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-574" for this suite. @ 04/20/24 16:06:46.504
• [6.450 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:153
  STEP: Creating a kubernetes client @ 04/20/24 16:06:46.518
  Apr 20 16:06:46.518: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 04/20/24 16:06:46.521
  E0420 16:06:46.544080      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 16:06:46.553
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 16:06:46.559
  STEP: create the container to handle the HTTPGet hook request. @ 04/20/24 16:06:46.573
  E0420 16:06:47.544514      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:06:48.544980      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 04/20/24 16:06:48.617
  E0420 16:06:49.545141      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:06:50.546746      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 04/20/24 16:06:50.66
  E0420 16:06:51.546484      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:06:52.546744      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 04/20/24 16:06:52.694
  Apr 20 16:06:52.754: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-8330" for this suite. @ 04/20/24 16:06:52.765
• [6.262 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:330
  STEP: Creating a kubernetes client @ 04/20/24 16:06:52.782
  Apr 20 16:06:52.782: INFO: >>> kubeConfig: /tmp/kubeconfig-3670386335
  STEP: Building a namespace api object, basename resourcequota @ 04/20/24 16:06:52.787
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 16:06:52.827
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 16:06:52.834
  E0420 16:06:53.547255      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:06:54.547464      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:06:55.548119      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:06:56.549113      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:06:57.548924      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:06:58.549951      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:06:59.550883      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:07:00.551040      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:07:01.552324      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:07:02.552933      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:07:03.556311      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:07:04.556930      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:07:05.557157      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:07:06.559720      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:07:07.558426      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:07:08.559193      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:07:09.560515      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 04/20/24 16:07:09.852
  E0420 16:07:10.560819      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:07:11.561231      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:07:12.563263      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:07:13.563782      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:07:14.563884      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 04/20/24 16:07:14.872
  STEP: Ensuring resource quota status is calculated @ 04/20/24 16:07:14.896
  E0420 16:07:15.564628      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:07:16.565498      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ConfigMap @ 04/20/24 16:07:16.91
  STEP: Ensuring resource quota status captures configMap creation @ 04/20/24 16:07:16.945
  E0420 16:07:17.566651      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:07:18.567135      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ConfigMap @ 04/20/24 16:07:18.96
  STEP: Ensuring resource quota status released usage @ 04/20/24 16:07:18.977
  E0420 16:07:19.567393      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:07:20.569929      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 20 16:07:20.991: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8026" for this suite. @ 04/20/24 16:07:21.009
• [28.244 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:88
  Apr 20 16:07:21.030: INFO: Running AfterSuite actions on node 1
  Apr 20 16:07:21.030: INFO: Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
k8s.io/kubernetes/test/e2e/e2e_test.go:161
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
k8s.io/kubernetes/test/e2e/framework/test_context.go:621
[ReportAfterSuite] PASSED [0.161 seconds]
------------------------------

Ran 388 of 7407 Specs in 6870.968 seconds
SUCCESS! -- 388 Passed | 0 Failed | 0 Pending | 7019 Skipped
PASS

Ginkgo ran 1 suite in 1h54m33.70975037s
Test Suite Passed
